/*
 *     Generated by class-dump 3.3.3 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "IMFoundation.h"

#pragma mark Named Structures

struct _FZChatRoomValidity {
    int _field1;
    unsigned short _field2;
};

#pragma mark -

/*
 * File: IMCore
 * UUID: 0A4267B7-D92F-33DA-9B09-1995221A0831
 * Arch: Intel x86-64 (x86_64)
 *       Current version: 800.0.0, Compatibility version: 1.0.0
 *       Minimum Mac OS X version: 10.7.0
 *
 *       Objective-C Garbage Collection: Supported
 */

@class IMServiceImpl, IMPeople, IMHandle, IMMessage, IMDaemonListener, IMPerson;

@protocol IMDaemonListenerProtocol <NSObject>
- (void)setupComplete:(BOOL)arg1 info:(id)arg2;
- (void)setupComplete;
- (void)pendingVCRequestComplete;
- (void)vcCapabilitiesChanged:(unsigned long long)arg1;
- (void)defaultsChanged:(id)arg1 forService:(id)arg2;
- (void)activeAccountsChanged:(id)arg1 forService:(id)arg2;
- (void)account:(id)arg1 defaults:(id)arg2 blockList:(id)arg3 allowList:(id)arg4 blockingMode:(unsigned int)arg5 blockIdleStatus:(BOOL)arg6 status:(id)arg7 capabilities:(unsigned long long)arg8 serviceLoginStatus:(unsigned int)arg9 loginStatusMessage:(id)arg10;
- (void)account:(id)arg1 loginStatusChanged:(unsigned int)arg2 message:(id)arg3 reason:(unsigned int)arg4 properties:(id)arg5;
- (void)account:(id)arg1 defaultsChanged:(id)arg2;
- (void)account:(id)arg1 capabilitiesChanged:(unsigned long long)arg2;
- (void)accountAdded:(id)arg1 defaults:(id)arg2 service:(id)arg3;
- (void)accountRemoved:(id)arg1;
- (void)account:(id)arg1 buddyPropertiesChanged:(id)arg2;
- (void)account:(id)arg1 blockListChanged:(id)arg2;
- (void)account:(id)arg1 allowListChanged:(id)arg2;
- (void)account:(id)arg1 blockingModeChanged:(unsigned int)arg2;
- (void)account:(id)arg1 blockIdleStatusChanged:(BOOL)arg2;
- (void)account:(id)arg1 buddyPictureChanged:(id)arg2 imageData:(id)arg3 imageHash:(id)arg4;
- (void)account:(id)arg1 groupsChanged:(id)arg2 error:(id)arg3;
- (void)account:(id)arg1 buddyProperties:(id)arg2 buddyPictures:(id)arg3;
- (void)account:(id)arg1 handleSubscriptionRequestFrom:(id)arg2 withMessage:(id)arg3;
- (void)account:(id)arg1 buddyInfo:(id)arg2 dataReceived:(id)arg3;
- (void)account:(id)arg1 buddyInfo:(id)arg2 commandReceived:(id)arg3 properties:(id)arg4;
- (void)account:(id)arg1 buddyInfo:(id)arg2 commandDelivered:(id)arg3 properties:(id)arg4;
- (void)chat:(id)arg1 propertiesUpdated:(id)arg2;
- (void)leftChat:(id)arg1;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 invitationReceived:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 updateProperties:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messageSent:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messageCancelled:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messageReceived:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messageUpdated:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messagesUpdated:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 error:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 statusChanged:(int)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 member:(id)arg5 statusChanged:(int)arg6;
- (void)historyQuery:(id)arg1 chatID:(id)arg2 finishedWithResult:(id)arg3;
- (void)historicalMessageGUIDsDeleted:(id)arg1 queryID:(id)arg2;
- (void)standaloneFileTransferRegistered:(id)arg1;
- (void)fileTransfer:(id)arg1 createdWithProperties:(id)arg2;
- (void)fileTransfer:(id)arg1 updatedWithProperties:(id)arg2;
- (void)fileTransfer:(id)arg1 updatedWithCurrentBytes:(unsigned long long)arg2 totalBytes:(unsigned long long)arg3 averageTransferRate:(unsigned long long)arg4;
- (void)account:(id)arg1 conference:(id)arg2 requestInvitationWithBuddy:(id)arg3;
- (void)account:(id)arg1 conference:(id)arg2 cancelRequestInvitationWithBuddy:(id)arg3;
- (void)account:(id)arg1 conference:(id)arg2 notifyMissedInvitationWithBuddy:(id)arg3;
- (void)account:(id)arg1 conference:(id)arg2 requestSendResponseWithResult:(long long)arg3 toPerson:(id)arg4;
- (void)account:(id)arg1 conference:(id)arg2 receivedInvitationFrom:(id)arg3 properties:(id)arg4;
- (void)account:(id)arg1 conference:(id)arg2 receivedResponseToInvitationFrom:(id)arg3 properties:(id)arg4;
- (void)account:(id)arg1 conference:(id)arg2 receivedCancelInvitationFrom:(id)arg3 properties:(id)arg4;
- (void)account:(id)arg1 conference:(id)arg2 receivedCounterProposalFrom:(id)arg3 properties:(id)arg4;
- (void)account:(id)arg1 conference:(id)arg2 receivedUpdateFrom:(id)arg3 data:(id)arg4;
- (void)account:(id)arg1 conference:(id)arg2 receivedAVMessage:(unsigned int)arg3 from:(id)arg4 sessionID:(unsigned int)arg5 userInfo:(id)arg6;
- (void)account:(id)arg1 conference:(id)arg2 changedToNewConferenceID:(id)arg3;
- (void)account:(id)arg1 conference:(id)arg2 peerIDChangedFromID:(id)arg3 toID:(id)arg4;
- (void)account:(id)arg1 conference:(id)arg2 peerID:(id)arg3 propertiesUpdated:(id)arg4;
- (void)showInvalidCertNotificationForAccount:(id)arg1;
- (void)showForgotPasswordNotificationForAccount:(id)arg1;
- (void)property:(id)arg1 changedTo:(id)arg2 from:(id)arg3;
- (void)persistentProperty:(id)arg1 changedTo:(id)arg2 from:(id)arg3;
- (void)account:(id)arg1 statusChanged:(id)arg2;
- (void)account:(id)arg1 postedError:(id)arg2;
- (void)account:(id)arg1 relay:(id)arg2 handleInitate:(id)arg3 fromPerson:(id)arg4;
- (void)account:(id)arg1 relay:(id)arg2 handleUpdate:(id)arg3 fromPerson:(id)arg4;
- (void)account:(id)arg1 relay:(id)arg2 handleCancel:(id)arg3 fromPerson:(id)arg4;
- (void)currentAVChatInfoRequestedWithTransactionID:(unsigned int)arg1;
- (void)audioReflectorRequested:(BOOL)arg1 transactionID:(unsigned int)arg2;
- (void)videoStillForPersonRequested:(id)arg1 withTransactionID:(unsigned int)arg2;
- (void)currentAVChatInfoProvided:(id)arg1 result:(unsigned int)arg2 responseID:(id)arg3;
- (void)videoStill:(id)arg1 providedForPerson:(id)arg2 result:(unsigned int)arg3 responseID:(id)arg4;
- (void)setAVManagerRequested:(BOOL)arg1 URLToShare:(id)arg2;
- (void)databaseUpdated;
@end

@protocol IMServiceSessionProtocol
- (void)autoLogin;
- (void)autoReconnect;
- (void)login;
- (void)logout;
- (void)holdBuddyUpdates;
- (void)resumeBuddyUpdates;
- (void)registerAccount;
- (void)unregisterAccount;
- (void)updateAuthorization;
- (void)requestGroups;
- (void)changeGroups:(id)arg1;
- (void)changeGroup:(id)arg1 changes:(id)arg2;
- (void)renameGroup:(id)arg1 to:(id)arg2;
- (void)acceptSubscriptionRequest:(BOOL)arg1 from:(id)arg2;
- (void)requestSubscriptionTo:(id)arg1;
- (void)startWatchingBuddy:(id)arg1;
- (void)stopWatchingBuddy:(id)arg1;
- (void)requestProperty:(id)arg1 ofPerson:(id)arg2;
- (void)setValue:(id)arg1 ofProperty:(id)arg2 ofPerson:(id)arg3;
- (void)joinChat:(id)arg1 style:(unsigned char)arg2 joinProperties:(id)arg3;
- (void)leaveChat:(id)arg1 style:(unsigned char)arg2;
- (void)invitePerson:(id)arg1 withMessage:(id)arg2 toChat:(id)arg3 style:(unsigned char)arg4;
- (void)declineInvitationToChat:(id)arg1 style:(unsigned char)arg2;
- (void)cancelMessage:(id)arg1 toChat:(id)arg2 style:(unsigned char)arg3;
- (void)sendMessage:(id)arg1 toChat:(id)arg2 style:(unsigned char)arg3;
- (void)sendReadReceiptForMessage:(id)arg1 toChat:(id)arg2 style:(unsigned char)arg3;
- (void)setProperties:(id)arg1 ofParticipant:(id)arg2 inChat:(id)arg3 style:(unsigned char)arg4;
- (void)setBlockingMode:(unsigned int)arg1;
- (void)setAllowList:(id)arg1;
- (void)setBlockList:(id)arg1;
- (void)setBlockIdleStatus:(BOOL)arg1;
- (void)passwordUpdated;
- (void)sendFileTransfer:(id)arg1 toPerson:(id)arg2;
- (void)sendData:(id)arg1 toPerson:(id)arg2;
- (void)sendCommand:(id)arg1 withProperties:(id)arg2 toPerson:(id)arg3;
- (void)requestVCWithPerson:(id)arg1 properties:(id)arg2 conference:(id)arg3;
- (void)respondToVCInvitationWithPerson:(id)arg1 properties:(id)arg2 conference:(id)arg3;
- (void)cancelVCRequestWithPerson:(id)arg1 properties:(id)arg2 conference:(id)arg3;
- (void)sendCounterProposalToPerson:(id)arg1 properties:(id)arg2 conference:(id)arg3;
- (void)sendVCUpdate:(id)arg1 toPerson:(id)arg2 conference:(id)arg3;
- (void)sendAVMessageToPerson:(id)arg1 sessionID:(unsigned int)arg2 type:(unsigned int)arg3 userInfo:(id)arg4 conference:(id)arg5;
- (void)relay:(id)arg1 sendInitateRequest:(id)arg2 toPerson:(id)arg3;
- (void)relay:(id)arg1 sendUpdate:(id)arg2 toPerson:(id)arg3;
- (void)relay:(id)arg1 sendCancel:(id)arg2 toPerson:(id)arg3;
- (void)addAlias:(id)arg1;
- (void)removeAlias:(id)arg1;
- (void)validateAlias:(id)arg1;
- (void)validateProfile;
@end

@interface IMAccount : NSObject <IMSystemMonitorListener>
{
    IMRemoteProxy<IMServiceSessionProtocol> *_remoteSession;
    IMServiceImpl *_service;
    IMPeople *_buddyList;
    NSMutableDictionary *_imHandles;
    NSMutableDictionary *_inlineTransfers;
    IMHandle *_loginIMHandle;
    NSArray *_cachedAllowList;
    NSArray *_cachedBlockList;
    NSString *_loginID;
    NSString *_displayName;
    NSString *_uniqueID;
    NSDictionary *_data;
    NSMutableDictionary *_dataChanges;
    NSDictionary *_profile;
    NSMutableDictionary *_profileChanges;
    NSDictionary *_accountPreferences;
    NSMutableDictionary *_accountPreferencesChanges;
    NSDictionary *_accountPersistentProperties;
    NSMutableDictionary *_accountPersistentPropertiesChanges;
    NSArray *_groups;
    NSMutableDictionary *_sortOrders;
    NSDictionary *_members;
    NSMutableDictionary *_coalescedChanges;
    NSArray *_targetGroupState;
    NSArray *_lastReceivedGroupState;
    NSDictionary *_subtypeInfo;
    unsigned long long _myStatus;
    NSMutableDictionary *_currentAccountStatus;
    NSString *_myStatusMessage;
    NSDictionary *_myNowPlaying;
    NSDate *_myIdleSince;
    NSData *_myPictureData;
    NSData *_accountImageData;
    unsigned long long _capabilities;
    NSAttributedString *_myProfile;
    long long _registrationStatus;
    long long _registrationFailureReason;
    NSDictionary *_registrationAlertInfo;
    unsigned long long _loginStatus;
    BOOL _isActive;
    BOOL _justLoggedIn;
    BOOL _useMeCardName;
    unsigned int _cachedBlockingMode;
    BOOL _blockIdleStatus;
    BOOL _syncedWithRemoteBuddyList;
    BOOL _hasReceivedSync;
    int _numHolding;
    int _coalesceCount;
    BOOL _needToCheckForWatchedIMHandles;
    BOOL _iconChecked;
    BOOL _hasBeenRemoved;
    NSImage *_smallImage;
    NSImage *_accountImage;
    BOOL _asleep;
}

+ (id)passwordForAccount:(id)arg1 forServiceName:(id)arg2;
+ (void)setPassword:(id)arg1 forAccount:(id)arg2 forServiceName:(id)arg3;
+ (void)removePasswordForAccount:(id)arg1 forServiceName:(id)arg2;
+ (id)_groupSummaryFromGroupList:(id)arg1;
+ (id)nameOfLoginStatus:(unsigned long long)arg1;
+ (id)arrayOfAllIMHandles;
+ (id)allBuddyListIMHandles;
- (void)finalize;
- (void)dealloc;
- (void)clearServiceCaches;
- (id)initWithService:(id)arg1;
- (id)initWithUniqueID:(id)arg1 service:(id)arg2;
- (void)_loginWithAutoLogin:(BOOL)arg1;
- (void)autoLoginAccount;
- (void)loginAccount;
- (void)logoutAccount;
- (void)loginStatusChanged:(unsigned int)arg1 message:(id)arg2 reason:(unsigned int)arg3 properties:(id)arg4;
- (void)_updateLogin:(id)arg1;
@property(retain, nonatomic) NSString *login; // @synthesize login=_loginID;
@property(readonly, nonatomic) long long accountType;
- (void)_updateMyStatus:(unsigned long long)arg1 message:(id)arg2;
- (void)setCurrentAccountStatus:(id)arg1;
@property(readonly, nonatomic) NSString *myNowPlayingString;
@property(readonly, nonatomic) NSString *uniqueID;
- (void)setUniqueID:(id)arg1;
@property(readonly, nonatomic) NSString *shortName;
@property(readonly, nonatomic) NSString *internalName;
@property(readonly, nonatomic) NSString *name;
@property(readonly, nonatomic) NSString *serviceName;
@property(readonly, nonatomic) NSData *accountImageData;
- (id)canonicalFormOfID:(id)arg1;
- (BOOL)equalID:(id)arg1 andID:(id)arg2;
- (void)writeSettings;
- (void)resetToDefaults;
- (BOOL)emailAddressIsID:(id)arg1;
- (long long)compareLoginStatus:(id)arg1;
- (long long)compareAccountNames:(id)arg1;
- (long long)compareStatus:(id)arg1;
- (long long)compareIDs:(id)arg1;
- (long long)compareServices:(id)arg1;
- (BOOL)hasCapability:(unsigned long long)arg1;
- (void)updateCapabilities:(unsigned long long)arg1;
@property(readonly, nonatomic) BOOL handlesChatInvites;
@property(readonly, nonatomic) NSString *password;
- (void)setPassword:(id)arg1;
- (void)removePassword;
@property(nonatomic, getter=isInvisible) BOOL invisible;
@property(retain, nonatomic) NSString *accountDescription;
@property(readonly, nonatomic) BOOL hasCustomDescription;
@property(nonatomic) BOOL autoLogin;
@property(readonly, nonatomic) BOOL useSSL;
- (id)description;
- (id)_serverWithSSL:(BOOL)arg1;
@property(readonly, nonatomic) NSString *server;
@property(readonly, nonatomic) int port;
@property(nonatomic) BOOL goIdle;
@property(nonatomic) BOOL allowsVCRelay;
@property(readonly, nonatomic) BOOL canActivate;
@property(readonly, nonatomic) BOOL validLogin;
@property(readonly, nonatomic) BOOL validPort;
@property(readonly, nonatomic) BOOL validServer;
@property(readonly, nonatomic) BOOL isManaged;
@property(readonly, nonatomic) long long invalidSettings;
- (void)requestProperty:(id)arg1 ofIMHandle:(id)arg2;
- (void)setValue:(id)arg1 ofExtraProperty:(id)arg2 ofIMHandle:(id)arg3;
- (void)_loadFromDictionary:(id)arg1 force:(BOOL)arg2;
- (void)loadFromDictionary:(id)arg1;
@property(readonly, nonatomic) NSDictionary *dictionary;
@property(readonly, nonatomic) NSArray *addressBookProperties;
@property(readonly, nonatomic) NSString *addressBookProperty;
@property(readonly, nonatomic) NSArray *emailDomains;
- (void)setCachedAllowList:(id)arg1;
- (void)setCachedBlockList:(id)arg1;
- (void)setCachedBlockingMode:(unsigned int)arg1;
- (void)setCachedBlockIdleStatus:(BOOL)arg1;
- (void)blockMessages:(BOOL)arg1 fromID:(id)arg2;
@property(retain, nonatomic) NSArray *blockList;
@property(retain, nonatomic) NSArray *allowList;
@property(nonatomic) unsigned int blockingMode; // @synthesize blockingMode=_cachedBlockingMode;
@property(nonatomic) BOOL blockIdleStatus; // @synthesize blockIdleStatus=_blockIdleStatus;
@property(nonatomic) BOOL blockOtherAddresses;
- (void)clearTargetState;
@property(readonly, nonatomic) BOOL isAwaitingTargetGroupState;
@property(readonly, nonatomic) BOOL hasTargetGroupStateBeenMet;
- (void)targetGroupStateTimeout;
- (void)setWaitForTargetState;
- (void)updateWithTargetGroups;
- (void)setTargetGroupsState:(id)arg1;
- (void)_applyChangesToTemporaryCache:(id)arg1;
- (void)beginChanges;
- (void)hookupToDaemon;
- (void)requestGroups;
@property(readonly, nonatomic) BOOL hasSyncedWithRemoteBuddies;
- (void)_markHasSyncedWithRemoteBuddies;
- (void)syncWithRemoteBuddies;
- (void)_ensureGroupsExists:(id)arg1;
- (BOOL)addPeople:(id)arg1 toGroups:(id)arg2 atLocation:(long long)arg3;
- (BOOL)removePeople:(id)arg1 fromGroups:(id)arg2;
- (BOOL)addIMHandle:(id)arg1 toGroups:(id)arg2 atLocation:(long long)arg3;
- (BOOL)removeIMHandle:(id)arg1 fromGroups:(id)arg2;
- (void)addBuddyToBuddyList:(id)arg1;
- (void)changeBuddyList:(id)arg1 add:(BOOL)arg2 groups:(id)arg3 atLocation:(int)arg4;
- (void)renameGroup:(id)arg1 to:(id)arg2;
- (void)reorderGroup:(id)arg1 order:(id)arg2;
- (void)reorderGroups:(id)arg1;
- (id)propertiesForGroup:(id)arg1;
- (id)groupMembers:(id)arg1;
@property(readonly, nonatomic) NSArray *groupList;
- (id)memberGroups:(id)arg1;
- (void)endChanges;
@property(readonly, nonatomic) BOOL makingChanges;
- (void)holdBuddyUpdates;
- (void)_resumeBuddyUpdatesNow;
- (void)resumeBuddyUpdates;
- (void)buddyPropertiesChanged:(id)arg1;
- (void)buddyPictureChanged:(id)arg1 imageData:(id)arg2 imageHash:(id)arg3;
- (void)setBuddyProperties:(id)arg1 buddyPictures:(id)arg2;
- (void)_serviceDidConnect:(id)arg1;
- (void)_serviceDidReconnect:(id)arg1;
- (void)_serviceDidDisconnect:(id)arg1;
- (void)accountWillBeRemoved;
- (void)accountDidBecomeActive;
- (void)accountDidDeactivate;
@property(readonly, nonatomic) BOOL supportsRegistration;
- (void)_updateRegistrationStatus:(int)arg1 error:(int)arg2 info:(id)arg3;
@property(readonly, nonatomic) long long registrationStatus;
@property(readonly, nonatomic) long long registrationFailureReason;
- (BOOL)registerAccount;
- (BOOL)unregisterAccount;
- (void)_notJustLoggedIn;
@property(readonly, nonatomic) NSString *loginStatusMessage;
@property(readonly, nonatomic) BOOL isConnecting;
@property(readonly, nonatomic) BOOL isConnected;
- (void)setIsActive:(BOOL)arg1;
- (void)setIMAccountLoginStatus:(unsigned long long)arg1;
- (void)setIMAccountLoginStatus:(unsigned long long)arg1 errorMessage:(id)arg2;
- (void)setIMAccountLoginStatus:(unsigned long long)arg1 errorMessage:(id)arg2 reason:(unsigned int)arg3;
- (void)_syncWithRemoteBuddies;
- (void)groupsChanged:(id)arg1 error:(id)arg2;
- (long long)compareNames:(id)arg1;
- (id)recalculatedSubtypeInfo;
- (void)_clearImageCache;
- (void)recalculateSubtypeInfo;
@property(readonly, nonatomic) NSArray *arrayOfAllIMHandles;
- (Class)imHandleClass;
- (id)imHandleWithInfo:(id)arg1;
- (id)existingIMHandleWithInfo:(id)arg1;
- (id)imHandleWithInfo:(id)arg1 alreadyCanonical:(BOOL)arg2;
- (id)existingIMHandleWithInfo:(id)arg1 alreadyCanonical:(BOOL)arg2;
- (id)existingIMHandleWithID:(id)arg1 alreadyCanonical:(BOOL)arg2;
- (id)existingIMHandleWithID:(id)arg1;
- (unsigned long long)defaultHandleCapabilities;
- (id)imHandleWithID:(id)arg1 alreadyCanonical:(BOOL)arg2;
- (id)imHandleWithID:(id)arg1;
- (id)personForIMHandle:(id)arg1;
- (id)personForIMHandle:(id)arg1 identifier:(int *)arg2;
- (id)personSibsForIMHandle:(id)arg1;
- (unsigned long long)sortOrderForIMHandle:(id)arg1 inGroup:(id)arg2;
- (void)setBuddyListAuthorization:(BOOL)arg1 forIMHandle:(id)arg2;
- (void)requestBuddyListAuthorizationFromIMHandle:(id)arg1;
- (id)imHandlesForIMPerson:(id)arg1;
- (BOOL)addIMHandle:(id)arg1 toIMPerson:(id)arg2;
- (BOOL)removeIMHandle:(id)arg1 fromIMPerson:(id)arg2;
- (void)_watchBuddiesIfNecessary;
- (void)watchBuddiesIfNecessary;
- (void)startWatchingIMHandle:(id)arg1;
- (void)stopWatchingIMHandle:(id)arg1;
- (void)forgetAllWatches;
- (void)_refreshLoginIMHandle;
- (void)registerIMHandle:(id)arg1;
- (void)unregisterIMHandle:(id)arg1;
- (void)disconnectAllIMHandles;
- (void)imHandle:(id)arg1 buddyStatusChanged:(BOOL)arg2;
- (void)handleSubscriptionRequestFrom:(id)arg1 withMessage:(id)arg2;
- (void)nowLoggedIn;
- (void)nowLoggedOut;
- (id)chatIDForRoomName:(id)arg1;
- (id)defaultChatSuffix;
- (struct _FZChatRoomValidity)validityOfChatRoomName:(id)arg1;
@property(readonly, nonatomic) BOOL supportsAuthorization;
@property(readonly, nonatomic) NSString *authorizationID;
@property(readonly, nonatomic) NSString *authorizationToken;
- (BOOL)requestNewAuthorizationCredentials;
@property(readonly, nonatomic) NSDictionary *profileInfo;
- (id)profileValueForKey:(id)arg1;
- (id)profileStringForKey:(id)arg1;
- (BOOL)removeProfileValueForKey:(id)arg1;
- (BOOL)setProfileValue:(id)arg1 forKey:(id)arg2;
- (BOOL)setProfileString:(id)arg1 forKey:(id)arg2;
- (BOOL)validateProfile;
- (long long)profileValidationStatus;
- (long long)profileValidationErrorReason;
- (void)_updateProfileInfo:(id)arg1;
- (id)_aliases;
- (id)_aliasInfoForAlias:(id)arg1;
- (id)_statuses;
@property(readonly, nonatomic) NSArray *aliases;
- (BOOL)hasAlias:(id)arg1;
- (BOOL)hasAlias:(id)arg1 type:(long long)arg2;
- (id)aliasesForType:(long long)arg1;
- (BOOL)addAlias:(id)arg1;
- (BOOL)addAlias:(id)arg1 type:(long long)arg2;
- (BOOL)removeAlias:(id)arg1;
- (BOOL)removeAlias:(id)arg1 type:(long long)arg2;
- (long long)typeForAlias:(id)arg1;
- (BOOL)validateAlias:(id)arg1;
- (BOOL)validateAlias:(id)arg1 type:(long long)arg2;
- (long long)validationStatusForAlias:(id)arg1;
- (long long)validationStatusForAlias:(id)arg1 type:(long long)arg2;
- (long long)validationErrorReasonForAlias:(id)arg1;
- (long long)validationErrorReasonForAlias:(id)arg1 type:(long long)arg2;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)removeObjectForKey:(id)arg1;
- (void)setDictionaryData:(id)arg1 forKey:(id)arg2;
- (id)dictionaryDataForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (BOOL)boolForKey:(id)arg1;
- (void)setBool:(BOOL)arg1 forKey:(id)arg2;
- (int)integerForKey:(id)arg1;
- (void)setInteger:(int)arg1 forKey:(id)arg2;
- (void)systemDidWake;
- (void)systemWillSleep;
@property(readonly, nonatomic) BOOL isAsleep;
@property(readonly, nonatomic) NSDictionary *_persistentProperties;
- (id)_persistentPropertyForKey:(id)arg1;
- (void)_setPersistentPropertyObject:(id)arg1 forKey:(id)arg2;
- (void)_removePersistentPropertyForKey:(id)arg1;
@property(readonly, nonatomic) NSDictionary *accountPreferences;
- (id)objectForPreferenceKey:(id)arg1;
- (void)setObject:(id)arg1 forPreferenceKey:(id)arg2;
- (void)removeObjectForPreferenceKey:(id)arg1;
- (void)setDictionaryData:(id)arg1 forPreferenceKey:(id)arg2;
- (id)dictionaryDataForPreferenceKey:(id)arg1;
- (id)stringForPreferenceKey:(id)arg1;
- (void)setString:(id)arg1 forPreferenceKey:(id)arg2;
- (BOOL)boolForPreferenceKey:(id)arg1;
- (void)setBool:(BOOL)arg1 forPreferenceKey:(id)arg2;
- (int)integerForPreferenceKey:(id)arg1;
- (void)setInteger:(int)arg1 forPreferenceKey:(id)arg2;
@property(copy, nonatomic) NSString *displayName;
- (BOOL)_updateDisplayName:(id)arg1;
- (void)_handleIncomingData:(id)arg1 fromBuddyInfo:(id)arg2;
- (void)_handleDeliveredCommand:(id)arg1 withProperties:(id)arg2 fromBuddyInfo:(id)arg3;
- (void)_handleIncomingCommand:(id)arg1 withProperties:(id)arg2 fromBuddyInfo:(id)arg3;
- (id)_remoteSession;
@property(readonly, nonatomic) BOOL justLoggedIn; // @synthesize justLoggedIn=_justLoggedIn;
@property(readonly, nonatomic) IMPeople *buddyList; // @synthesize buddyList=_buddyList;
@property(readonly, nonatomic) id loginIMHandle; // @synthesize loginIMHandle=_loginIMHandle;
@property(readonly, nonatomic) NSDictionary *accountSubtypeInfo; // @synthesize accountSubtypeInfo=_subtypeInfo;
@property(readonly, nonatomic) BOOL isActive; // @synthesize isActive=_isActive;
@property(readonly, nonatomic) unsigned long long loginStatus; // @synthesize loginStatus=_loginStatus;
@property(readonly, nonatomic) unsigned long long capabilities; // @synthesize capabilities=_capabilities;
@property(readonly, nonatomic) NSDate *myIdleSince; // @synthesize myIdleSince=_myIdleSince;
@property(readonly, nonatomic) NSData *myPictureData; // @synthesize myPictureData=_myPictureData;
@property(readonly, nonatomic) NSString *myStatusMessage; // @synthesize myStatusMessage=_myStatusMessage;
@property(readonly, nonatomic) unsigned long long myStatus; // @synthesize myStatus=_myStatus;
@property(readonly, nonatomic) NSAttributedString *myProfile; // @synthesize myProfile=_myProfile;
@property(readonly, nonatomic) NSDictionary *myStatusDictionary; // @synthesize myStatusDictionary=_currentAccountStatus;
@property(readonly, nonatomic) IMServiceImpl *service; // @synthesize service=_service;

@end

@interface IMAccountController : NSObject
{
    NSMutableArray *_accounts;
    NSMutableDictionary *_accountMap;
    BOOL _isReadOnly;
}

+ (id)sharedInstance;
+ (id)bestAccountFromAccounts:(id)arg1;
- (void)release;
- (unsigned long long)retainCount;
- (id)autorelease;
- (void)autoLogin;
- (id)init;
- (void)dealloc;
- (id)accountForUniqueID:(id)arg1;
- (id)accountAtIndex:(int)arg1;
@property(readonly, nonatomic) int numberOfAccounts;
@property(readonly, nonatomic) NSMutableArray *_accounts;
@property(readonly, nonatomic) NSArray *activeAccounts;
@property(readonly, nonatomic) NSArray *connectedAccounts;
- (id)accountsForService:(id)arg1;
- (id)activeAccountsForService:(id)arg1;
- (id)connectedAccountsForService:(id)arg1;
- (id)accountsWithCapability:(unsigned long long)arg1;
- (id)connectedAccountsWithCapability:(unsigned long long)arg1;
- (BOOL)canDeleteAccount:(id)arg1;
- (BOOL)accountActive:(id)arg1;
- (BOOL)readOnly;
- (void)setReadOnly:(BOOL)arg1;
- (void)_activeAccountChanged:(id)arg1;
- (BOOL)addAccount:(id)arg1;
- (BOOL)addAccount:(id)arg1 locally:(BOOL)arg2;
- (BOOL)addAccount:(id)arg1 atIndex:(int)arg2;
- (BOOL)addAccount:(id)arg1 atIndex:(int)arg2 locally:(BOOL)arg3;
- (BOOL)deleteAccount:(id)arg1;
- (BOOL)deleteAccount:(id)arg1 locally:(BOOL)arg2;
- (BOOL)deactivateAccount:(id)arg1;
- (BOOL)deactivateAccount:(id)arg1 withDisable:(BOOL)arg2;
- (BOOL)activateAccount:(id)arg1 locally:(BOOL)arg2;
- (BOOL)activateAccount:(id)arg1;
- (BOOL)activateAccount:(id)arg1 force:(BOOL)arg2;
- (BOOL)activateAccount:(id)arg1 force:(BOOL)arg2 locally:(BOOL)arg3;
- (BOOL)activateAndHandleReconnectAccount:(id)arg1;
- (BOOL)accountConnecting:(id)arg1;
- (BOOL)accountConnected:(id)arg1;
- (BOOL)canActivateAccount:(id)arg1;
@property(readonly, nonatomic) id bestAccountForStatus;
@property(readonly, nonatomic) NSArray *accounts; // @synthesize accounts=_accounts;
- (id)anyAccountForService:(id)arg1 withLogin:(id)arg2;
- (id)anyActiveAccountForService:(id)arg1 withLogin:(id)arg2;
- (id)anyConnectedAccountForService:(id)arg1 withLogin:(id)arg2;
- (id)anyAccountForService:(id)arg1;
- (id)anyActiveAccountForService:(id)arg1;
- (id)anyConnectedAccountForService:(id)arg1;
@property(readonly, nonatomic) id mostLoggedInAccount;
@property(readonly, nonatomic) id aimAccount;
@property(readonly, nonatomic) id jabberAccount;

@end

@interface IMActionsController : NSObject
{
    NSMutableArray *_handlers;
}

+ (id)actionsController;
- (void)release;
- (unsigned long long)retainCount;
- (id)autorelease;
- (void)dealloc;
- (void)addHandler:(id)arg1;
- (void)removeHandler:(id)arg1;
- (id)performActionsForEvent:(int)arg1 withIMHandle:(id)arg2;
- (id)performActionsForEvent:(int)arg1 withIMHandle:(id)arg2 withObject:(id)arg3;
- (id)performActionsForEvent:(int)arg1 withIMHandle:(id)arg2 withObject:(id)arg3 withChat:(id)arg4 silent:(BOOL)arg5;

@end

@interface IMAddressBook : NSObject
{
}

+ (id)abAddressBook;
+ (void *)abAddressBookRef;

@end

@interface IMChat : NSObject
{
    NSString *_guid;
    NSString *_currentQuery;
    IMAccount *_account;
    NSString *_roomName;
    NSString *_roomNameWithoutSuffix;
    NSDate *_dateCreated;
    NSDate *_dateModified;
    NSMutableArray *_chatItems;
    NSMutableDictionary *_unfinishedChatItemMap;
    NSMutableArray *_participants;
    NSMutableDictionary *_participantStates;
    id _typingIndicatorTimer;
    IMMessage *_invitationForPendingParticipants;
    NSMutableArray *_messagesPendingJoin;
    NSMutableDictionary *_chatItemsChanged;
    NSMutableDictionary *_messageMap;
    NSMutableDictionary *_chatProperties;
    NSMutableDictionary *_participantProperties;
    unsigned long long _overallChatStatus;
    long long _joinState;
    unsigned char _style;
    unsigned long long _numberOfMessagesToKeepLoaded;
    double _joinedTimeInterval;
    unsigned long long _chatItemChangeCount;
    unsigned long long _cachedUnreadCount;
    unsigned long long _cachedFailureCount;
    BOOL _isFirstMessageInvitation;
    BOOL _wasInvitationHandled;
    BOOL _didSendAFinishedMessage;
    BOOL _shouldPostIndividualItemChanges;
    BOOL _shouldAnnouncePeopleJoin;
}

- (id)_initWithGUID:(id)arg1 account:(id)arg2 style:(unsigned char)arg3 roomName:(id)arg4 chatItems:(id)arg5 participants:(id)arg6;
- (id)init;
- (void)dealloc;
@property(readonly, nonatomic) BOOL _shouldRegisterChat;
- (void)_mapChatItem:(id)arg1;
- (void)_unmapChatItem:(id)arg1;
- (void)_updateFailedCount;
- (void)_clearUnreadCount;
- (void)_updateUnreadCount;
- (void)_beginChatItemChanges;
- (void)_endChatItemChanges;
- (BOOL)_shouldAnnouncePeopleJoin;
- (BOOL)_shouldDisplayInitialTypingIndicator;
- (id)_newInitialTypingIndicatorChatItem;
- (id)_dateStampForChatItem:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)_timeStampForChatItem:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_postChatItem:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_replaceChatItem:(id)arg1 withChatItem:(id)arg2;
- (unsigned long long)_insertChatItem:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_replaceChatItem:(id)arg1 andTimestamp:(BOOL)arg2 withChatItem:(id)arg3;
- (void)_removeChatItem:(id)arg1 andTimestamp:(BOOL)arg2;
- (void)_appendChatItem:(id)arg1;
- (id)_newHeaderChatItemWithDate:(id)arg1;
- (void)_updateHeaderChatItem;
- (void)_buildInitialChatItems:(id)arg1;
- (void)_buildChatItemForDisconnectOrLogout;
- (void)_buildChatItemForDecidingHandleWentOffline:(id)arg1;
- (void)_buildChatItemForOverallChatStatusFrom:(unsigned long long)arg1 to:(unsigned long long)arg2;
- (void)_buildChatItemForParticipantState:(unsigned long long)arg1 handle:(id)arg2;
- (void)_buildChatItemForNewRecipient:(id)arg1 isNewAccount:(BOOL)arg2;
- (void)_buildChatItemForErrorMessage:(id)arg1;
- (void)_removeInitialTypingIndicator;
- (void)_insertHistoricalChatItems:(id)arg1 queryID:(id)arg2;
- (void)_insertArchivedChatItems:(id)arg1;
- (BOOL)shouldInsertChatItem:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)shouldAppendTimestampAfterChatItem:(id)arg1 andBeforeChatItem:(id)arg2;
- (BOOL)shouldAppendDatestampAfterChatItem:(id)arg1 andBeforeChatItem:(id)arg2;
- (void)processChatItem:(id)arg1;
- (id)messageForGUID:(id)arg1;
- (id)_chatItemForGUID:(id)arg1;
- (id)chatItemForMessage:(id)arg1;
@property(readonly, nonatomic) IMMessage *lastFinishedMessage;
@property(readonly, nonatomic) IMMessage *lastMessage;
@property(readonly, nonatomic) unsigned long long messageCount;
- (unsigned long long)_unreadMessageCount;
@property(readonly, nonatomic) unsigned long long unreadMessageCount;
- (unsigned long long)_messageFailureCount;
@property(readonly, nonatomic) unsigned long long messageFailureCount;
- (BOOL)canDeleteChatItem:(id)arg1;
- (BOOL)deleteChatItem:(id)arg1;
- (BOOL)deleteChatItems:(id)arg1;
- (BOOL)deleteAllHistory;
- (void)clear;
- (void)mark;
- (void)_recomputeOverallChatStatusQuietly:(BOOL)arg1;
- (void)_handleHandleStatusChanged:(id)arg1;
- (void)_watchHandleStatusChangedForHandle:(id)arg1;
- (void)_unwatchHandleStatusChangedForHandle:(id)arg1;
- (void)_accountLoggedOut:(id)arg1;
- (void)_postNotification:(id)arg1 userInfo:(id)arg2;
- (void)_setParticipantState:(unsigned long long)arg1 forHandle:(id)arg2;
- (void)_handleMessageGUIDDeletions:(id)arg1;
- (void)_handleCancelledMessage:(id)arg1;
- (void)_handleIncomingMessage:(id)arg1;
- (void)_setJoinState:(long long)arg1;
- (void)_participant:(id)arg1 statusChanged:(int)arg2;
- (void)_showErrorMessage:(id)arg1;
- (void)_remapHandle:(id)arg1 toHandle:(id)arg2;
- (void)_fixLastStatusMessageIfNecessary;
- (id)participantsWithState:(unsigned long long)arg1;
- (unsigned long long)stateForParticipant:(id)arg1;
@property(readonly, nonatomic) NSString *chatIdentifier;
- (id)convertToChatStyle:(unsigned char)arg1;
@property(readonly, nonatomic) BOOL canHaveMultipleParticipants;
@property(readonly, nonatomic) unsigned long long overallChatStatus;
@property(readonly, retain, nonatomic) NSString *persistentID;
@property(readonly, nonatomic) NSString *roomNameWithoutSuffix;
@property(readonly, nonatomic) BOOL hasUnhandledInvitation;
- (void)acceptInvitation;
- (void)declineInvitation;
- (void)cancelMessage:(id)arg1;
- (void)sendMessage:(id)arg1;
- (void)_markMessagesAsRead:(id)arg1;
- (void)markMessageAsRead:(id)arg1;
- (void)markMessagesAsRead:(id)arg1;
- (void)markAllMessagesAsRead;
- (id)_lastMessageChatItem;
- (id)_messageChatItems;
- (BOOL)_isDuplicate:(id)arg1;
- (void)_setChatProperties:(id)arg1;
- (id)allChatProperties;
- (id)valueForChatProperty:(id)arg1;
- (void)setValue:(id)arg1 forChatProperty:(id)arg2;
- (id)allPropertiesOfParticipant:(id)arg1;
- (id)valueForProperty:(id)arg1 ofParticipant:(id)arg2;
- (void)setValue:(id)arg1 forProperty:(id)arg2 ofParticipant:(id)arg3;
@property(retain, nonatomic) IMHandle *recipient;
- (void)join;
- (void)leave;
- (void)_addParticipant:(id)arg1;
- (void)inviteParticipants:(id)arg1 reason:(id)arg2;
- (void)removeParticipants:(id)arg1 reason:(id)arg2;
- (void)addPendingParticipants:(id)arg1;
- (void)_sanityCheckAccounts;
- (void)_accountControllerUpdated:(id)arg1;
- (void)_daemonAlive:(id)arg1;
- (void)_daemonDied:(id)arg1;
- (id)description;
- (id)_initWithDictionaryRepresentation:(id)arg1 initialItems:(id)arg2;
@property(retain, nonatomic) IMMessage *invitationForPendingParticipants; // @synthesize invitationForPendingParticipants=_invitationForPendingParticipants;
@property(readonly, nonatomic) long long joinState; // @synthesize joinState=_joinState;
@property(readonly, nonatomic) NSDate *dateModified; // @synthesize dateModified=_dateModified;
@property(readonly, nonatomic) NSDate *dateCreated; // @synthesize dateCreated=_dateCreated;
@property(readonly, nonatomic) NSString *roomName; // @synthesize roomName=_roomName;
@property(readonly, nonatomic) unsigned char chatStyle; // @synthesize chatStyle=_style;
@property(readonly, nonatomic) NSArray *participants; // @synthesize participants=_participants;
@property(readonly, nonatomic) IMAccount *account; // @synthesize account=_account;
@property(readonly, nonatomic) NSString *guid; // @synthesize guid=_guid;
@property(readonly, nonatomic) NSArray *chatItems; // @synthesize chatItems=_chatItems;
@property(nonatomic, setter=_setShouldPostIndividualItemChanges:) BOOL _shouldPostIndividualItemChanges; // @synthesize _shouldPostIndividualItemChanges;
- (void)_updateTypingIndicatorTimeout;
- (void)_clearTypingIndicatorTimeout;
- (void)_clearIncomingTypingIndicators;
- (void)_typingIndicatorTimedOut:(id)arg1;
- (void)_setTypingIndicatorTimeout;
- (void)_handleDeliveredCommand:(id)arg1;
- (void)_handleIncomingCommand:(id)arg1;
- (BOOL)sendDowngradeNotificationTo:(id)arg1;
- (void)_trimMessagesLeavingNumber:(unsigned long long)arg1;
- (void)_trimMessagesAsNeeded;
@property(nonatomic) unsigned long long numberOfMessagesToKeepLoaded;
- (id)_buildLoadQueryForSynchronize;
- (id)loadMessagesWithGUIDs:(id)arg1;
- (id)loadMessagesBeforeDate:(id)arg1 limit:(unsigned long long)arg2;
- (id)loadMessagesBeforeDate:(id)arg1 limit:(unsigned long long)arg2 loadImmediately:(BOOL)arg3;

@end

@interface IMChatItem : NSObject
{
    NSDate *_date;
    id _datum1;
    id _datum2;
    id _datum3;
    BOOL _isFromArchive;
    NSString *_guid;
}

- (id)_initWithGUID:(id)arg1 date:(id)arg2 datum1:(id)arg3 datum2:(id)arg4 datum3:(id)arg5;
- (void)dealloc;
@property(readonly, retain, nonatomic) NSString *stringValue;
@property(readonly, retain, nonatomic) IMMessage *message;
- (void)_setIsFromArchive:(BOOL)arg1;
@property(readonly, nonatomic) BOOL isFromArchive;
@property(readonly, retain, nonatomic) NSDate *date; // @synthesize date=_date;
@property(retain, nonatomic) NSString *guid; // @synthesize guid=_guid;

@end

@interface IMChatRegistry : NSObject
{
    NSMutableArray *_allChats;
    NSString *_historyModificationStamp;
    BOOL _daemonHadTerminated;
    BOOL _firstLoad;
    unsigned long long _defaultNumberOfMessagesToLoad;
    NSMutableDictionary *_chatGUIDToCurrentThreadMap;
    NSMutableDictionary *_threadNameToChatMap;
    NSMutableArray *_pendingQueries;
    NSMutableArray *_waitingForQueries;
    BOOL _loading;
    BOOL _postMessageSentNotifications;
}

+ (id)sharedInstance;
+ (void)setChatRegistryClass:(Class)arg1;
+ (Class)chatRegistryClass;
+ (void)setChatClass:(Class)arg1;
+ (Class)chatClass;
+ (void)setMessageClass:(Class)arg1;
+ (Class)messageClass;
- (void)_noteChatInit:(id)arg1;
- (void)_noteChatDealloc:(id)arg1;
- (id)_chatInstanceForGUID:(id)arg1;
- (id)init;
- (void)dealloc;
- (id)_copyThreadNameForChat:(id)arg1 style:(unsigned char)arg2 account:(id)arg3;
- (void)_registerChat:(id)arg1 isIncoming:(BOOL)arg2;
- (void)unregisterChat:(id)arg1;
- (void)unregisterChatWithGUID:(id)arg1;
- (id)chatForIMHandle:(id)arg1;
- (id)chatForIMHandles:(id)arg1;
- (id)chatForIMHandles:(id)arg1 chatName:(id)arg2;
- (id)chatForRoom:(id)arg1 onAccount:(id)arg2;
- (id)_allCreatedChats;
- (id)_createdChatWithIdentifier:(id)arg1 style:(unsigned char)arg2 account:(id)arg3;
- (id)_createdChatForIMHandle:(id)arg1;
- (id)_createdChatForIMHandles:(id)arg1;
- (id)_createdChatForRoom:(id)arg1 onAccount:(id)arg2;
@property(readonly, nonatomic) NSArray *allExistingChats;
- (id)_existingChatWithIdentifier:(id)arg1 style:(unsigned char)arg2 account:(id)arg3;
- (id)existingChatWithPersistentID:(id)arg1;
- (id)existingChatWithChatIdentifier:(id)arg1;
- (id)existingChatWithGUID:(id)arg1;
- (id)existingChatForIMHandle:(id)arg1;
- (id)existingChatForIMHandles:(id)arg1;
- (id)existingChatForRoom:(id)arg1 onAccount:(id)arg2;
- (void)handleIMChatParticipantsDidChange:(id)arg1;
- (void)_daemonAlive:(id)arg1;
- (void)_daemonReallyDied:(id)arg1;
- (id)_chatWithMessage:(id)arg1;
- (void)_chat:(id)arg1 sendReadReceiptForMessages:(id)arg2;
- (void)_chat_sendReadReceiptForAllMessages:(id)arg1;
- (void)_chat:(id)arg1 sendMessage:(id)arg2;
- (void)_chat:(id)arg1 sendCancelMessage:(id)arg2;
- (void)_chat:(id)arg1 inviteParticipants:(id)arg2 reason:(id)arg3;
- (void)_chat:(id)arg1 removeParticipants:(id)arg2 reason:(id)arg3;
- (void)_chat:(id)arg1 joinWithProperties:(id)arg2;
- (void)_chat_leave:(id)arg1;
- (void)_chat_declineInvitation:(id)arg1;
- (void)_chat:(id)arg1 setProperties:(id)arg2 ofParticipant:(id)arg3;
- (void)_chat:(id)arg1 setValue:(id)arg2 forChatProperty:(id)arg3;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messagesUpdated:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messageUpdated:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messageCancelled:(id)arg5;
- (void)_processMessageForAccount:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 message:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messageSent:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messageReceived:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 invitationReceived:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 updateProperties:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 error:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 statusChanged:(int)arg5;
- (void)leftChat:(id)arg1;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 member:(id)arg5 statusChanged:(int)arg6;
- (void)chat:(id)arg1 propertiesUpdated:(id)arg2;
- (void)historicalMessageGUIDsDeleted:(id)arg1 queryID:(id)arg2;
- (void)historyQuery:(id)arg1 chatID:(id)arg2 finishedWithResult:(id)arg3;
- (void)__blockUntilQueriesComplete;
- (void)_blockUntilQueriesComplete:(id)arg1;
- (void)_handleChatReconstructions:(id)arg1;
@property(nonatomic, setter=_setPostMessageSentNotifications:) BOOL _postMessageSentNotifications; // @synthesize _postMessageSentNotifications;
@property BOOL _loading; // @synthesize _loading;
@property(retain) NSMutableArray *_waitingForQueries; // @synthesize _waitingForQueries;
@property(retain) NSMutableArray *_pendingQueries; // @synthesize _pendingQueries;
@property(retain) NSMutableDictionary *_threadNameToChatMap; // @synthesize _threadNameToChatMap;
@property(retain) NSMutableDictionary *_chatGUIDToCurrentThreadMap; // @synthesize _chatGUIDToCurrentThreadMap;
@property(nonatomic, setter=_setDefaultNumberOfMessagesToLoad:) unsigned long long _defaultNumberOfMessagesToLoad; // @synthesize _defaultNumberOfMessagesToLoad;
@property BOOL _firstLoad; // @synthesize _firstLoad;
@property BOOL _daemonHadTerminated; // @synthesize _daemonHadTerminated;
@property(retain) NSString *_historyModificationStamp; // @synthesize _historyModificationStamp;
@property(retain) NSMutableArray *_allChats; // @synthesize _allChats;

@end

@interface IMDaemonController : NSObject
{
    id _delegate;
    IMRemoteObject<FZDaemon> *_remoteObject;
    NSMutableDictionary *_listenerMap;
    IMLocalObject *_localObject;
    IMDaemonListener *_daemonListener;
    NSMutableArray *_services;
    NSProtocolChecker *_protocol;
    NSString *_listenerID;
    struct dispatch_queue_s *_listenerLockQueue;
    struct dispatch_queue_s *_remoteDaemonLockQueue;
    struct dispatch_queue_s *_remoteMessageQueue;
    NSRecursiveLock *_connectionLock;
    NSArray *_servicesToAllow;
    NSArray *_servicesToDeny;
    NSLock *_blockingLock;
    BOOL _hasCheckedForDaemon;
    BOOL _preventReconnect;
    BOOL _inBlockingConnect;
    BOOL _autoReconnect;
    BOOL _blocksConnectionAtResume;
    BOOL _hasBeenSuspended;
    unsigned int _gMyFZListenerCapabilities;
    unsigned int _cachedCapabilities;
}

+ (id)sharedController;
+ (BOOL)_applicationWillTerminate;
+ (void)_blockUntilSendQueueIsEmpty;
+ (void)_setApplicationWillTerminate;
- (void)release;
- (unsigned long long)retainCount;
- (id)autorelease;
- (id)init;
- (void)dealloc;
- (void)_agentDidLaunchNotification:(id)arg1;
- (void)_handleDaemonException:(id)arg1;
- (void)_makeConnectionWithLaunch:(BOOL)arg1;
- (void)disconnectFromDaemonWithForce:(BOOL)arg1;
- (void)disconnectFromDaemon;
- (BOOL)_connectToDaemonWithLaunch:(BOOL)arg1 capabilities:(unsigned long long)arg2;
- (BOOL)connectToDaemonWithLaunch:(BOOL)arg1;
- (BOOL)connectToDaemon;
- (BOOL)connectToDaemonWithLaunch:(BOOL)arg1 capabilities:(unsigned int)arg2 blockUntilConnected:(BOOL)arg3;
- (void)sendABInformationToDaemon;
- (void)_listenerSetUpdated;
- (BOOL)addListenerID:(id)arg1 capabilities:(unsigned int)arg2;
- (BOOL)hasListenerForID:(id)arg1;
- (BOOL)removeListenerID:(id)arg1;
- (unsigned int)capabilitiesForListenerID:(id)arg1;
- (BOOL)setCapabilities:(unsigned int)arg1 forListenerID:(id)arg2;
- (id)_remoteObject;
- (void)setMyPicture:(id)arg1 smallPictureData:(id)arg2;
- (void)setMyProfile:(id)arg1;
- (void)setMyStatus:(unsigned long long)arg1 message:(id)arg2;
- (void)setMyStatus:(unsigned long long)arg1 message:(id)arg2 forAccount:(id)arg3;
- (void)setPresenceValue:(id)arg1 forKey:(id)arg2 forAccount:(id)arg3;
- (void)_addressBookChanged:(id)arg1;
@property(nonatomic, setter=_setBlocksConnectionAtResume:) BOOL _blocksConnectionAtResume; // @synthesize _blocksConnectionAtResume;
@property(readonly, nonatomic) BOOL isConnecting;
@property(readonly, nonatomic) BOOL isConnected;
- (void)blockUntilConnected;
- (void)listener:(id)arg1 setListenerCapabilities:(unsigned int)arg2;
@property(readonly, nonatomic) unsigned int capabilities;
- (void)_setCapabilities:(unsigned int)arg1;
- (void)_localObjectDiedNotification:(id)arg1;
- (void)_remoteObjectDiedNotification:(id)arg1;
- (void)localObjectDiedNotification:(id)arg1;
- (void)remoteObjectDiedNotification:(id)arg1;
- (void)listener:(id)arg1 setValue:(id)arg2 ofProperty:(id)arg3;
- (void)setValue:(id)arg1 ofProperty:(id)arg2;
- (void)listener:(id)arg1 setValue:(id)arg2 ofPersistentProperty:(id)arg3;
- (void)setValue:(id)arg1 ofPersistentProperty:(id)arg2;
- (void)addListener:(id)arg1 withListenerID:(id)arg2 capabilities:(unsigned int)arg3 allowServices:(id)arg4 denyServices:(id)arg5;
- (void)setDaemonTerminatesWithoutListeners:(BOOL)arg1;
- (void)setDaemonLogsOutWithoutStatusListeners:(BOOL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (void)setVCCapabilities:(unsigned long long)arg1;
- (void)systemApplicationDidSuspend;
- (void)systemApplicationDidEnterBackground;
- (void)systemApplicationWillEnterForeground;
- (void)systemApplicationDidResume;
@property(readonly, nonatomic) struct dispatch_queue_s *_remoteMessageQueue; // @synthesize _remoteMessageQueue;
@property(retain, setter=_setServicesToDeny:) NSArray *_servicesToDeny; // @synthesize _servicesToDeny;
@property(retain, setter=_setServicesToAllow:) NSArray *_servicesToAllow; // @synthesize _servicesToAllow;
@property(setter=__setCapabilities:) unsigned int _capabilities; // @synthesize _capabilities=_gMyFZListenerCapabilities;
@property(setter=_setAutoReconnect:) BOOL _autoReconnect; // @synthesize _autoReconnect;
@property(retain, nonatomic, setter=_setListenerID:) NSString *_listenerID; // @synthesize _listenerID;
@property(nonatomic, assign) id delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) IMDaemonListener *listener; // @synthesize listener=_daemonListener;

@end

@interface IMDaemonListener : NSObject
{
    NSMutableDictionary *_properties;
    NSMutableDictionary *_persistentProperties;
    NSMutableArray *_deferredChatMessages;
    NSMutableArray *_handlers;
    NSProtocolChecker *_protocol;
    NSMutableDictionary *_services;
    NSDate *_myIdleSince;
    NSData *_myPicture;
    NSMutableDictionary *_contexts;
    NSString *_myStatusMessage;
    NSString *_myNowPlayingString;
    unsigned long long _myStatus;
    unsigned long long _vcCapabilities;
    BOOL _setupComplete;
    BOOL _postedSetupComplete;
    BOOL _holdingChatMessages;
    BOOL _hidingDisconnect;
}

- (id)init;
- (void)dealloc;
- (void)_noteDisconnected;
- (void)addHandler:(id)arg1;
- (void)removeHandler:(id)arg1;
@property(readonly, nonatomic) NSArray *allServices;
- (id)serviceWithName:(id)arg1;
- (void)_reallyProcessMyStatusChanged;
- (void)_processMyStatusChanged;
@property(readonly, nonatomic) unsigned long long myStatus;
@property(readonly, nonatomic) unsigned int myIdleTime;
- (void)_processDeferredInvitationDictionary:(id)arg1;
- (void)_deferNotification:(id)arg1;
@property(readonly, nonatomic) BOOL isHoldingChatMessages;
- (void)holdChatMessages;
- (void)releaseHeldChatMessages;
- (void)defaultsChanged:(id)arg1 forService:(id)arg2;
- (void)activeAccountsChanged:(id)arg1 forService:(id)arg2;
- (void)account:(id)arg1 defaultsChanged:(id)arg2;
- (void)accountAdded:(id)arg1 defaults:(id)arg2 service:(id)arg3;
- (void)accountRemoved:(id)arg1;
- (void)account:(id)arg1 loginStatusChanged:(unsigned int)arg2 message:(id)arg3 reason:(unsigned int)arg4 properties:(id)arg5;
- (void)account:(id)arg1 statusChanged:(id)arg2;
- (void)account:(id)arg1 capabilitiesChanged:(unsigned long long)arg2;
- (void)vcCapabilitiesChanged:(unsigned long long)arg1;
- (void)account:(id)arg1 buddyPropertiesChanged:(id)arg2;
- (void)account:(id)arg1 buddyPictureChanged:(id)arg2 imageData:(id)arg3 imageHash:(id)arg4;
- (void)account:(id)arg1 buddyProperties:(id)arg2 buddyPictures:(id)arg3;
- (void)account:(id)arg1 buddyInfo:(id)arg2 dataReceived:(id)arg3;
- (void)account:(id)arg1 buddyInfo:(id)arg2 commandReceived:(id)arg3 properties:(id)arg4;
- (void)account:(id)arg1 buddyInfo:(id)arg2 commandDelivered:(id)arg3 properties:(id)arg4;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 invitationReceived:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messageReceived:(id)arg5;
- (void)standaloneFileTransferRegistered:(id)arg1;
- (void)fileTransfer:(id)arg1 createdWithProperties:(id)arg2;
- (void)fileTransfer:(id)arg1 updatedWithProperties:(id)arg2;
- (void)fileTransfer:(id)arg1 updatedWithCurrentBytes:(unsigned long long)arg2 totalBytes:(unsigned long long)arg3 averageTransferRate:(unsigned long long)arg4;
- (void)account:(id)arg1 groupsChanged:(id)arg2 error:(id)arg3;
- (void)account:(id)arg1 handleSubscriptionRequestFrom:(id)arg2 withMessage:(id)arg3;
- (void)account:(id)arg1 blockListChanged:(id)arg2;
- (void)account:(id)arg1 allowListChanged:(id)arg2;
- (void)account:(id)arg1 blockingModeChanged:(unsigned int)arg2;
- (void)account:(id)arg1 blockIdleStatusChanged:(BOOL)arg2;
- (void)account:(id)arg1 postedError:(id)arg2;
- (void)_setStamp:(id)arg1 forContext:(id)arg2;
- (id)_stampForContext:(id)arg1;
- (id)valueOfProperty:(id)arg1;
- (void)_cacheValue:(id)arg1 forProperty:(id)arg2;
- (void)property:(id)arg1 changedTo:(id)arg2 from:(id)arg3;
- (id)valueOfPersistentProperty:(id)arg1;
- (void)_cacheValue:(id)arg1 forPersistentProperty:(id)arg2;
- (void)persistentProperty:(id)arg1 changedTo:(id)arg2 from:(id)arg3;
- (void)account:(id)arg1 status:(id)arg2 capabilities:(unsigned long long)arg3 serviceLoginStatus:(unsigned int)arg4 loginStatusMessage:(id)arg5;
- (void)services:(id)arg1 properties:(id)arg2 persistentProperties:(id)arg3;
- (void)service:(id)arg1 properties:(id)arg2 defaults:(id)arg3 defaultAccountSettings:(id)arg4 allAccounts:(id)arg5 activeAccounts:(id)arg6;
- (void)account:(id)arg1 defaults:(id)arg2 blockList:(id)arg3 allowList:(id)arg4 blockingMode:(unsigned int)arg5 blockIdleStatus:(BOOL)arg6 status:(id)arg7 capabilities:(unsigned long long)arg8 serviceLoginStatus:(unsigned int)arg9 loginStatusMessage:(id)arg10;
- (void)setupComplete:(BOOL)arg1 info:(id)arg2;
- (void)_deferredSetup:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
@property(readonly, nonatomic) NSDictionary *persistentProperties; // @synthesize persistentProperties=_persistentProperties;
@property(readonly, nonatomic) NSDictionary *properties; // @synthesize properties=_properties;
@property(readonly, nonatomic) BOOL hasPostedSetupComplete; // @synthesize hasPostedSetupComplete=_postedSetupComplete;
@property(readonly, nonatomic) BOOL shouldHoldChatMessages; // @synthesize shouldHoldChatMessages=_holdingChatMessages;
@property(readonly, nonatomic) unsigned long long vcCapabilities; // @synthesize vcCapabilities=_vcCapabilities;
@property(readonly, nonatomic) NSString *myStatusMessage; // @synthesize myStatusMessage=_myStatusMessage;
@property(readonly, nonatomic) BOOL isSetupComplete; // @synthesize isSetupComplete=_setupComplete;
@property(readonly, nonatomic) NSArray *handlers; // @synthesize handlers=_handlers;
@property(nonatomic, setter=_setHidingDisconnect:) BOOL _hidingDisconnect; // @synthesize _hidingDisconnect;
@property(readonly, retain, nonatomic) NSMutableDictionary *_contexts; // @synthesize _contexts;

@end

@interface IMDatestampChatItem : IMChatItem
{
}

- (id)initWithDate:(id)arg1;
- (id)description;

@end

@interface IMFileTransferCenter : NSObject
{
    NSMutableDictionary *_guidToTransferMap;
    NSMutableDictionary *_guidToRemovedTransferMap;
    NSMutableDictionary *_accountIDToTransferGUIDsMap;
    NSMutableArray *_preauthorizedInfos;
    NSMutableArray *_preauthorizedGUIDs;
    NSMutableSet *_activeTransfers;
    NSMutableSet *_pendingTransfers;
}

+ (id)sharedInstance;
+ (void)setTransferCenterClass:(Class)arg1;
+ (Class)transferCenterClass;
+ (Class)fileTransferClass;
- (void)dealloc;
@property(readonly, nonatomic) BOOL hasPendingFileTransfers;
- (void)_addPendingTransfer:(id)arg1;
- (void)_removePendingTransfer:(id)arg1;
- (void)acknowledgePendingTransfer:(id)arg1;
- (void)acknowledgeAllPendingTransfers;
@property(readonly, nonatomic) BOOL hasActiveFileTransfers;
- (void)_addActiveTransfer:(id)arg1;
- (void)_removeActiveTransfer:(id)arg1;
- (void)_removeAllActiveTransfers;
- (void)_clearTransfers;
- (void)_addTransfer:(id)arg1 toAccount:(id)arg2;
- (void)_addTransfer:(id)arg1;
- (BOOL)doesLocalURLRequireArchiving:(id)arg1 toHandle:(id)arg2;
- (id)guidForNewOutgoingTransferWithLocalURL:(id)arg1;
- (void)assignTransfer:(id)arg1 toMessage:(id)arg2 account:(id)arg3;
- (void)assignTransfer:(id)arg1 toHandle:(id)arg2;
- (id)transferForGUID:(id)arg1;
- (id)transferForGUID:(id)arg1 includeRemoved:(BOOL)arg2;
- (void)sendTransfer:(id)arg1;
- (void)acceptTransfer:(id)arg1 withPath:(id)arg2 autoRename:(BOOL)arg3 overwrite:(BOOL)arg4;
- (void)stopTransfer:(id)arg1;
- (void)removeTransfer:(id)arg1;
- (void)retargetTransfer:(id)arg1 toPath:(id)arg2;
- (id)transfersForAccount:(id)arg1;
@property(readonly, nonatomic) NSDictionary *activeTransfers;
@property(readonly, nonatomic) NSArray *orderedTransfers;
- (BOOL)isFileTransfer:(id)arg1 preauthorizedWithDictionary:(id)arg2;
- (void)preauthorizeFileTransferFromOtherPerson:(id)arg1 account:(id)arg2 filename:(id)arg3 saveToPath:(id)arg4;
- (BOOL)wasFileTransferPreauthorized:(id)arg1;
- (void)acceptFileTransferIfPreauthorzed:(id)arg1;
- (void)_handleStandaloneFileTransferRegistered:(id)arg1;
- (void)_handleAllFileTransfers:(id)arg1;
- (void)_handleFileTransfer:(id)arg1 createdWithProperties:(id)arg2;
- (void)_handleFileTransfer:(id)arg1 updatedWithProperties:(id)arg2;
- (void)_handleFileTransfer:(id)arg1 updatedWithCurrentBytes:(unsigned long long)arg2 totalBytes:(unsigned long long)arg3 averageTransferRate:(unsigned long long)arg4;

@end

@interface IMHandle : IMDirectlyObservableObject <NSCoding>
{
    NSString *_guid;
    IMAccount *_account;
    NSString *_id;
    NSDictionary *_otherServiceIDs;
    NSDate *_idleSince;
    NSDate *_feedUpdatedDate;
    NSDictionary *_presenceProps;
    NSDictionary *_extraProps;
    NSDictionary *_certs;
    NSSet *_groups;
    IMPerson *_person;
    NSString *_abFirstName;
    NSString *_abLastName;
    NSString *_abFullName;
    NSString *_abNickname;
    NSArray *_abEmails;
    NSString *_displayID;
    NSString *_firstName;
    NSString *_lastName;
    NSString *_fullName;
    NSString *_nickname;
    NSArray *_emails;
    NSString *_normalizedFormOfID;
    NSString *_IDWithoutResource;
    NSString *_IDWithTrimmedServer;
    NSString *_uniqueName;
    NSData *_pictureData;
    NSString *_statusMsg;
    NSString *_processedStatusMsg;
    NSAttributedString *_richStatusMsg;
    NSDate *_whenWentOffline;
    NSDate *_whenStatusChanged;
    NSString *_prevStatusMsg;
    NSMutableArray *_notificationNameQueue;
    NSMutableArray *_notificationQueue;
    NSURL *_statusURL;
    struct __CFPhoneNumber *_phoneNumberRef;
    NSString *_formattedNumber;
    BOOL _hasCheckedPhoneNumber;
    unsigned long long _status;
    unsigned long long _prevStatus;
    unsigned long long _capabilities;
    unsigned int _authRequestStatus;
    unsigned long long _resourceIndex;
    long long _IDStatus;
    BOOL _isRetainingAccount;
    BOOL _blockNotifications;
    BOOL _hasTemporaryWatch;
    BOOL _isMobile;
    BOOL _isBot;
    BOOL _isAnonymous;
    BOOL _beingTornDown;
    BOOL _willUpdateIdleTime;
    BOOL _hasCheckedCardMap;
    int _priority;
    int _addressBookIdentifier;
    int _notificationQueueCount;
    NSURL *_statusMessageURL;
}

+ (void)setNotificationsEnabled:(BOOL)arg1;
+ (BOOL)notificationsEnabled;
+ (void)_loadStatusNames;
+ (id)nameOfStatus:(unsigned long long)arg1;
+ (id)imHandlesForIMPerson:(id)arg1;
+ (id)bestIMHandleInArray:(id)arg1;
+ (id)filterIMHandlesForAccountSiblings:(id)arg1 onAccount:(id)arg2;
+ (id)filterIMHandlesForBestAccountSiblings:(id)arg1;
- (void)_unregisterFromIMPerson;
- (void)_registerForIMPerson;
- (id)init;
- (id)initWithAccount:(id)arg1 ID:(id)arg2;
- (oneway void)release;
- (void)finalize;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) BOOL canBeDeleted;
- (id)imHandleForOtherAccount:(id)arg1;
@property(readonly, retain, nonatomic) NSArray *groupsArray;
@property(readonly, retain, nonatomic) NSSet *groups;
- (void)setAnonymous:(BOOL)arg1;
@property(readonly, nonatomic) BOOL isAnonymous;
- (void)_registerForNotifications;
- (void)_postNotification:(id)arg1;
- (void)_postNotificationName:(id)arg1 userInfo:(id)arg2;
- (void)postNotificationName:(id)arg1;
- (void)setUniqueName:(id)arg1;
@property(readonly, retain, nonatomic) NSString *nameAndEmail;
@property(readonly, retain, nonatomic) IMServiceImpl *service;
- (unsigned long long)hash;
- (void)clearABPerson;
- (BOOL)resetABPerson;
- (id)_abPersonCreateIfNeeded;
@property(readonly, nonatomic) BOOL areABPropertiesRecent;
- (void)_clearABProperties;
- (void)resetABProperties;
@property(retain, nonatomic, setter=setIMPerson:) IMPerson *person; // @synthesize person=_person;
- (id)_IDWithTrimmedServer;
- (BOOL)_hasServiceNameProperties;
- (BOOL)_hasABName;
- (id)_nameUsingUnique:(BOOL)arg1;
@property(readonly, retain, nonatomic) NSString *displayID;
@property(readonly, retain, nonatomic) NSString *normalizedID;
@property(readonly, retain, nonatomic) NSString *name;
@property(readonly, retain, nonatomic) NSString *fullName;
@property(readonly, retain, nonatomic) NSString *nameAndID;
- (void)resetUniqueName;
@property(readonly, nonatomic) BOOL hasName;
@property(readonly, retain, nonatomic) NSString *nickname;
@property(readonly, retain, nonatomic) NSString *firstName;
@property(readonly, retain, nonatomic) NSString *lastName;
- (void)_setABPersonFirstName:(id)arg1 lastName:(id)arg2;
- (void)_setBaseFirstName:(id)arg1 lastName:(id)arg2 fullName:(id)arg3;
- (void)setImageData:(id)arg1;
- (void)setLocalNickname:(id)arg1;
- (void)setFirstName:(id)arg1 lastName:(id)arg2 fullName:(id)arg3 andUpdateABPerson:(BOOL)arg4;
- (void)setEmail:(id)arg1 andUpdateABPerson:(BOOL)arg2;
@property(readonly, retain, nonatomic) NSString *email;
- (void)setEmails:(id)arg1 andUpdateABPerson:(BOOL)arg2;
@property(readonly, retain, nonatomic) NSArray *emails;
- (void)setFirstName:(id)arg1 lastName:(id)arg2;
- (void)setEmail:(id)arg1;
- (void)setEmails:(id)arg1;
@property(readonly, nonatomic) BOOL canBeAdded;
@property(readonly, nonatomic) BOOL isSystemUser;
- (void)setIsMobile:(BOOL)arg1;
- (void)setIsBot:(BOOL)arg1;
@property(readonly, retain, nonatomic) NSString *mobileDeviceName;
@property(readonly, nonatomic) BOOL hasServer;
@property(readonly, nonatomic) BOOL hasLocation;
@property(readonly, nonatomic) BOOL hasResource;
@property(readonly, retain, nonatomic) NSString *server;
@property(readonly, nonatomic) BOOL isBuddy;
@property(readonly, nonatomic) BOOL isLoginIMHandleForAnyAccount;
@property(readonly, nonatomic) BOOL isLoginIMHandle;
- (void)_createPhoneNumberRefIfNeeded;
- (struct __CFPhoneNumber *)phoneNumberRef;
- (id)_formattedPhoneNumber;
- (void)requestValueOfProperty:(id)arg1;
- (void)setValue:(id)arg1 ofExtraProperty:(id)arg2;
@property(readonly, nonatomic) BOOL watchingIMHandle;
- (void)setHasTemporaryWatch:(BOOL)arg1;
- (BOOL)isBetterThanIMHandle:(id)arg1;
- (id)bestIMHandleForService:(id)arg1;
- (id)bestIMHandleForAccount:(id)arg1;
@property(readonly, retain, nonatomic) id bestAccountSibling;
- (id)bestIMHandleForAccount:(id)arg1 onService:(id)arg2 inGroup:(id)arg3 otherThan:(id)arg4;
- (id)bestSiblingInGroup:(id)arg1 otherThan:(id)arg2;
- (id)bestSiblingInGroup:(id)arg1;
@property(readonly, nonatomic) id bestSibling;
- (void)setPresenceProperties:(id)arg1;
- (void)_setExtraProperties:(id)arg1;
- (void)propertiesChanged:(id)arg1;
- (BOOL)_isMyIDInList:(id)arg1;
@property(readonly, nonatomic) BOOL isVisiblyBlocked;
@property(readonly, nonatomic) BOOL isBlocked;
- (void)setBlocked:(BOOL)arg1;
- (unsigned int)sortOrderInGroup:(id)arg1;
@property(readonly, retain, nonatomic) NSString *accountTypeName;
@property(readonly, retain, nonatomic) NSString *resource;
@property(readonly, retain, nonatomic) NSString *IDWithoutResource;
@property(readonly, nonatomic) id imHandleWithoutResource;
@property(readonly, nonatomic) id existingIMHandleWithoutResource;
@property(readonly, nonatomic) NSArray *dependentIMHandles;
- (void)_removeAccountReference:(id)arg1;
- (void)_stopRetainingAccount:(id)arg1;
- (void)_updateStatusBasedOnAuthRequestStatus;
- (void)setAuthRequestStatus:(unsigned int)arg1;
@property(readonly, nonatomic) unsigned long long status;
- (void)setPersonStatus:(unsigned long long)arg1;
- (void)statusChanged:(unsigned long long)arg1 message:(id)arg2;
- (void)statusMessageChanged:(id)arg1;
- (void)statusChanged:(unsigned long long)arg1;
@property(readonly, retain, nonatomic) NSString *nameOfStatus;
@property(readonly, nonatomic) double idleTime;
- (void)requestIDStatus;
@property(nonatomic) long long IDStatus; // @synthesize IDStatus=_IDStatus;
- (void)setIdleSince:(id)arg1;
- (void)setFeedUpdatedDate:(id)arg1;
- (void)setStatusURLFromString:(id)arg1;
@property(readonly, retain, nonatomic) NSString *offlineString;
@property(readonly, retain, nonatomic) NSString *idleString;
- (void)_filterStatusMessage;
@property(readonly, retain, nonatomic) NSString *statusMessage;
- (void)_clearStatusMessageURLCache;
- (void)_scheduleIdleTimeUpdate;
- (void)_updateIdleTime;
- (void)_updateIdleTimer;
- (void)setStatus:(unsigned long long)arg1 message:(id)arg2 richMessage:(id)arg3;
@property(readonly, nonatomic) double timeSinceWentOffline;
@property(readonly, nonatomic) double timeSinceStatusChanged;
- (id)_nameForComparisonPreferFirst:(BOOL)arg1;
- (long long)compareFirstNames:(id)arg1;
- (long long)compareLastNames:(id)arg1;
- (long long)compareStatus:(id)arg1;
- (long long)compareIDs:(id)arg1;
- (long long)compareNormalizedIDs:(id)arg1;
- (long long)compareAccountNames:(id)arg1;
- (BOOL)matchesIMHandle:(id)arg1;
@property(readonly, nonatomic) BOOL hasOtherSiblings;
@property(readonly, retain, nonatomic) NSArray *siblingsArray;
@property(readonly, retain, nonatomic) NSArray *existingAccountSiblingsArray;
@property(readonly, retain, nonatomic) NSArray *accountSiblingsArray;
@property(readonly, retain, nonatomic) NSSet *siblings;
- (BOOL)isAccountSiblingOf:(id)arg1;
- (BOOL)isSiblingOf:(id)arg1;
- (BOOL)_isChatSiblingOf:(id)arg1;
- (id)_chatSiblings;
- (id)_bestChatSibling;
@property(readonly, nonatomic) unsigned long long capabilities;
- (void)setCapabilities:(unsigned long long)arg1;
- (BOOL)hasCapability:(unsigned long long)arg1;
@property(readonly, nonatomic) BOOL supportsARDMuxing;
@property(readonly, nonatomic) BOOL hasConferencing;
@property(readonly, nonatomic) BOOL isConferenceAvailable;
@property(readonly, nonatomic) BOOL hasVideo;
@property(readonly, nonatomic) BOOL hasMultiwayVideo;
@property(readonly, nonatomic) BOOL hasAudio;
@property(readonly, nonatomic) BOOL hasMultiwayAudio;
- (void)_sendData:(id)arg1;
- (void)_imPersonPictureChanged:(id)arg1;
- (void)customPictureDataChanged:(id)arg1 key:(id)arg2;
@property(retain, nonatomic) NSData *customPictureData;
- (void)setCustomPictureData:(id)arg1 key:(id)arg2;
- (id)description;
- (void)sendNotificationABPersonChanged;
@property(readonly, nonatomic) int addressBookIdentifier; // @synthesize addressBookIdentifier=_addressBookIdentifier;
@property(retain, nonatomic) NSURL *statusMessageAsURL; // @synthesize statusMessageAsURL=_statusMessageURL;
@property(readonly, nonatomic) BOOL isBot; // @synthesize isBot=_isBot;
@property(readonly, nonatomic) BOOL isMobile; // @synthesize isMobile=_isMobile;
@property(retain, nonatomic) NSDictionary *otherServiceIDs; // @synthesize otherServiceIDs=_otherServiceIDs;
@property(nonatomic) int priority; // @synthesize priority=_priority;
@property(readonly, retain, nonatomic) NSString *guid; // @synthesize guid=_guid;
@property(readonly, retain, nonatomic) IMAccount *account; // @synthesize account=_account;
@property(readonly, retain, nonatomic) NSString *uniqueName; // @synthesize uniqueName=_uniqueName;
@property(readonly, retain, nonatomic) NSString *ID; // @synthesize ID=_id;
@property(readonly, retain, nonatomic) NSData *pictureData; // @synthesize pictureData=_pictureData;
@property(readonly, retain, nonatomic) NSAttributedString *richStatusMessage; // @synthesize richStatusMessage=_richStatusMsg;
@property(readonly, retain, nonatomic) NSString *previousStatusMessage; // @synthesize previousStatusMessage=_prevStatusMsg;
@property(readonly, retain, nonatomic) NSDate *feedUpdatedDate; // @synthesize feedUpdatedDate=_feedUpdatedDate;
@property(readonly, nonatomic) unsigned long long previousStatus; // @synthesize previousStatus=_prevStatus;
@property(readonly, nonatomic) unsigned int authRequestStatus; // @synthesize authRequestStatus=_authRequestStatus;
@property(readonly, retain, nonatomic) NSDictionary *presenceProperties; // @synthesize presenceProperties=_presenceProps;
@property(readonly, retain, nonatomic) NSDictionary *extraProperties; // @synthesize extraProperties=_extraProps;
@property(readonly, retain, nonatomic) NSURL *statusURL; // @synthesize statusURL=_statusURL;
- (id)publicAPIPropertiesDictionary;
- (BOOL)shouldQueueNotifications;
- (void)beginNotificationQueue;
- (void)releaseNotificationQueue;
- (id)imHandleRegistrarGUID;

@end

@interface IMHandleRegistrar : NSObject
{
    id _internal;
}

+ (id)sharedInstance;
- (void)addressBookChanged:(id)arg1;
- (void)release;
- (unsigned long long)retainCount;
- (id)autorelease;
- (id)init;
- (void)dealloc;
@property(nonatomic) long long nameStyle;
- (void)_emptySiblingCacheForIMHandleGUID:(id)arg1;
- (void)_buildSiblingsForIMHandle:(id)arg1;
- (void)_clearSiblingsCacheForIMHandle:(id)arg1 rebuildAfter:(BOOL)arg2;
- (void)registerIMHandle:(id)arg1;
- (void)clearNameReservationsForObject:(id)arg1;
- (void)unregisterIMHandle:(id)arg1;
- (void)clearSiblingCacheForIMHandle:(id)arg1;
- (id)siblingsForIMHandle:(id)arg1;
- (id)allIMHandles;
- (id)candidateUniqueNamesForIMHandle:(id)arg1;
- (void)reassessIMHandleForUniqueName:(id)arg1 rebuild:(BOOL)arg2;
- (void)reassessIMHandleForUniqueName:(id)arg1;
- (void)_rebuildUniqueNameMapWithStyleChange:(BOOL)arg1;
- (void)rebuildUniqueNameMap;
- (void)imHandleInfoChanged:(id)arg1;
- (void)_dumpOutAllIMHandles;
- (void)_dumpOutAllIMHandlesForAccount:(id)arg1;

@end

@interface IMHandleRegistrarInternal : NSObject
{
    NSMutableDictionary *_siblingsMap;
    NSMutableArray *_allIMHandles;
    NSMutableDictionary *_candidateNamesMap;
    NSMutableDictionary *_usedUniqueNames;
    NSMutableSet *_knownConflictingNames;
    long long _nameStyle;
}

- (void)dealloc;

@end

@interface IMHeaderChatItem : IMChatItem
{
}

- (id)initWithString:(id)arg1 date:(id)arg2;
@property(readonly, retain, nonatomic) NSString *stringValue;
- (id)description;

@end

@interface IMMarkChatItem : IMChatItem
{
}

- (id)initWithDate:(id)arg1;
- (id)description;

@end

@interface IMMe : NSObject
{
    IMPerson *_person;
    NSString *_abNickname;
    NSString *_abFirstName;
    NSString *_abFullName;
    NSString *_abLastName;
    NSArray *_abEmails;
    NSMutableArray *_abIMHandles;
    NSMutableArray *_loginIMHandles;
}

+ (id)fallbackUserName;
+ (id)me;
+ (id)imHandleForService:(id)arg1;
- (id)init;
@property(readonly, nonatomic) NSString *guid;
- (void)dealloc;
- (id)_imHandlesWithIDs:(id)arg1 onAccount:(id)arg2;
- (void)rebuildIMHandles;
- (void)resetABPerson;
- (void)setIMPerson:(id)arg1;
@property(readonly, nonatomic) IMPerson *person;
- (BOOL)addLoginIMHandle:(id)arg1;
- (BOOL)removeLoginIMHandle:(id)arg1;
- (id)loginIMHandles;
- (BOOL)addIMHandle:(id)arg1;
- (BOOL)isIMHandleLoginIMHandle:(id)arg1;
- (BOOL)removeIMHandle:(id)arg1;
- (void)setFirstName:(id)arg1 lastName:(id)arg2;
@property(readonly, nonatomic) NSString *nickname;
@property(readonly, nonatomic) NSString *firstName;
@property(readonly, nonatomic) NSArray *emails;
@property(readonly, nonatomic) NSString *email;
@property(readonly, nonatomic) NSString *lastName;
@property(readonly, nonatomic) NSString *fullName;
@property(readonly, nonatomic) IMHandle *bestIMHandle;
@property(readonly, nonatomic) NSArray *imHandles;
- (void)myPictureChanged;

@end

@interface IMMessage : NSObject
{
    IMHandle *_sender;
    IMHandle *_subject;
    NSAttributedString *_text;
    NSString *_plainBody;
    NSDate *_time;
    NSDate *_timeDelivered;
    NSDate *_timeRead;
    NSString *_guid;
    NSAttributedString *_messageSubject;
    NSArray *_fileTransferGUIDs;
    NSError *_error;
    unsigned long long _flags;
    BOOL _isInvitationMessage;
    long long _messageID;
}

+ (id)defaultInvitationMessageFromSender:(id)arg1 flags:(unsigned long long)arg2;
+ (id)instantMessageWithText:(id)arg1 flags:(unsigned long long)arg2;
+ (id)instantMessageWithText:(id)arg1 messageSubject:(id)arg2 flags:(unsigned long long)arg3;
+ (id)fromMeIMHandle:(id)arg1 withText:(id)arg2 fileTransferGUIDs:(id)arg3 flags:(unsigned long long)arg4;
+ (id)messageFromFZMessage:(id)arg1 sender:(id)arg2;
- (id)_initWithSender:(id)arg1 time:(id)arg2 timeRead:(id)arg3 timeDelivered:(id)arg4 text:(id)arg5 messageSubject:(id)arg6 fileTransferGUIDs:(id)arg7 flags:(unsigned long long)arg8 error:(id)arg9 guid:(id)arg10 messageID:(long long)arg11 subject:(id)arg12;
- (id)initWithSender:(id)arg1 time:(id)arg2 text:(id)arg3 messageSubject:(id)arg4 fileTransferGUIDs:(id)arg5 flags:(unsigned long long)arg6 error:(id)arg7 guid:(id)arg8 subject:(id)arg9;
- (id)initWithSender:(id)arg1 time:(id)arg2 text:(id)arg3 fileTransferGUIDs:(id)arg4 flags:(unsigned long long)arg5 error:(id)arg6 guid:(id)arg7 subject:(id)arg8;
- (id)initWithSender:(id)arg1 fileTransfer:(id)arg2;
- (void)dealloc;
@property(readonly, retain, nonatomic) NSString *plainBody;
@property(readonly, retain, nonatomic) NSString *senderName;
@property(readonly, retain, nonatomic) NSString *summaryString;
@property(readonly, nonatomic) BOOL isFinished;
@property(readonly, nonatomic) BOOL isSent;
@property(readonly, nonatomic) BOOL finished;
@property(readonly, nonatomic) BOOL hasInlineAttachments;
@property(readonly, retain, nonatomic) NSArray *inlineAttachmentAttributesArray;
@property(readonly, nonatomic) BOOL isEmote;
@property(readonly, nonatomic) BOOL fromMe;
@property(readonly, nonatomic) BOOL isFromMe;
@property(readonly, nonatomic) BOOL isEmpty;
@property(readonly, nonatomic) BOOL isDelayed;
@property(readonly, nonatomic) BOOL isAutoReply;
@property(readonly, nonatomic) BOOL isDelivered;
@property(readonly, nonatomic) BOOL isRead;
@property(readonly, nonatomic) BOOL isSystemMessage;
- (void)setIsAddressedToMe:(BOOL)arg1;
@property(readonly, nonatomic) BOOL isAddressedToMe;
@property(readonly, nonatomic) BOOL isAlert;
- (long long)_compareIMMessageGUIDs:(id)arg1;
- (long long)_compareIMMessageDates:(id)arg1;
- (long long)_compareIMMessageIDs:(id)arg1;
- (long long)compare:(id)arg1;
- (long long)compare:(id)arg1 comparisonType:(long long)arg2;
@property(readonly, retain, nonatomic) FZMessage *_fzMessage;
- (BOOL)isEqual:(id)arg1;
- (id)description;
@property(retain, nonatomic, setter=_updateTimeRead:) NSDate *timeRead; // @synthesize timeRead=_timeRead;
@property(retain, nonatomic, setter=_updateTimeDelivered:) NSDate *timeDelivered; // @synthesize timeDelivered=_timeDelivered;
@property(readonly, copy, nonatomic) NSArray *fileTransferGUIDs; // @synthesize fileTransferGUIDs=_fileTransferGUIDs;
@property(nonatomic) BOOL isInvitationMessage; // @synthesize isInvitationMessage=_isInvitationMessage;
@property(retain, nonatomic, setter=_updateError:) NSError *error; // @synthesize error=_error;
@property(nonatomic, setter=_updateFlags:) unsigned long long flags; // @synthesize flags=_flags;
@property(readonly, nonatomic) long long messageID; // @synthesize messageID=_messageID;
@property(readonly, retain, nonatomic) NSString *guid; // @synthesize guid=_guid;
@property(readonly, retain, nonatomic) NSAttributedString *text; // @synthesize text=_text;
@property(retain, nonatomic, setter=_updateTime:) NSDate *time; // @synthesize time=_time;
@property(readonly, retain, nonatomic) NSAttributedString *messageSubject; // @synthesize messageSubject=_messageSubject;
@property(readonly, retain, nonatomic) IMHandle *subject; // @synthesize subject=_subject;
@property(retain, nonatomic, setter=_updateSender:) IMHandle *sender; // @synthesize sender=_sender;

@end

@interface IMMessageChatItem : IMChatItem
{
}

- (id)initWithMessage:(id)arg1;
@property(readonly, retain, nonatomic) IMMessage *message;
- (void)_setMessage:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)description;

@end

@interface IMParentalControls : NSObject
{
    BOOL _shouldPostNotifications;
    BOOL _active;
    NSMutableDictionary *_parentalControls;
    BOOL _disableAV;
    BOOL _forceChatLogging;
}

+ (id)objectForKey:(id)arg1;
+ (id)standardControls;
- (id)init;
- (void)dealloc;
- (id)_serviceWithName:(id)arg1;
- (void)_updateParentalSettings;
- (void)_managedPrefsNotification:(id)arg1;
- (void)release;
- (unsigned long long)retainCount;
- (id)autorelease;
@property(readonly, nonatomic) BOOL disableAV;
@property(readonly, nonatomic) BOOL forceChatLogging;
- (BOOL)disableService:(id)arg1;
- (BOOL)disableAccount:(id)arg1;
- (id)whitelistForService:(id)arg1;
- (BOOL)forceWhitelistForService:(id)arg1;
- (id)whitelistForAccount:(id)arg1;
- (BOOL)forceWhitelistForAccount:(id)arg1;
- (BOOL)okToConnectAccount:(id)arg1;
- (BOOL)accountIsEnabled:(id)arg1;
- (BOOL)accountHasWhitelist:(id)arg1;
@property(readonly, nonatomic) BOOL _forceChatLogging; // @synthesize _forceChatLogging;
@property(readonly, nonatomic) BOOL _disableAV; // @synthesize _disableAV;
@property(readonly, retain, nonatomic) NSMutableDictionary *_parentalControls; // @synthesize _parentalControls;
@property(readonly, nonatomic) BOOL active; // @synthesize active=_active;
@property(nonatomic) BOOL shouldPostNotifications; // @synthesize shouldPostNotifications=_shouldPostNotifications;

@end

@interface IMParentalControlsService : NSObject
{
    BOOL _disableService;
    BOOL _forceWhiteList;
    NSSet *_whitelist;
    NSString *_name;
}

- (void)dealloc;
@property(retain) NSString *name; // @synthesize name=_name;
@property(retain) NSSet *whitelist; // @synthesize whitelist=_whitelist;
@property BOOL forceWhiteList; // @synthesize forceWhiteList=_forceWhiteList;
@property BOOL disableService; // @synthesize disableService=_disableService;

@end

@interface IMPeople : NSObject
{
    NSMutableArray *_people;
    int _coalesceCount;
    BOOL _hidePeople;
}

- (void)dealloc;
@property(nonatomic, setter=setShouldHidePeople:) BOOL hidePeople; // @synthesize hidePeople=_hidePeople;
- (void)removeNotificationObserver:(id)arg1;
- (void)addNotificationObserver:(id)arg1 selector:(SEL)arg2;
@property(readonly, nonatomic) unsigned long long count;
- (BOOL)containsIMHandle:(id)arg1;
@property(readonly, nonatomic) NSArray *groups;
@property(readonly, nonatomic) NSArray *people;
- (void)addedIMHandle:(id)arg1;
- (void)_addedPeople:(id)arg1;
- (void)removedIMHandle:(id)arg1;
- (void)beginCoalescedChanges;
- (void)endCoalescedChanges;
@property(readonly, nonatomic) BOOL coalescingChanges;
- (BOOL)addIMHandle:(id)arg1;
- (BOOL)removeIMHandle:(id)arg1;
- (BOOL)removePeopleFromArray:(id)arg1;
- (BOOL)addPeopleFromArray:(id)arg1 skipMe:(BOOL)arg2;
- (BOOL)addPeopleFromArray:(id)arg1;
- (void)imHandle:(id)arg1 buddyStatusChanged:(BOOL)arg2;

@end

@interface IMPeopleCollection : IMPeople
{
    NSMutableArray *_collectedPeople;
}

- (id)init;
- (void)dealloc;
@property(readonly, nonatomic) NSArray *collectedIMPeople;
- (BOOL)collectsIMPeople:(id)arg1;
- (void)addIMPeople:(id)arg1;
- (void)removeIMPeople:(id)arg1;
- (void)_collectionNotification:(id)arg1;
- (id)people;
- (id)groups;
- (BOOL)containsPerson:(id)arg1;
@property(nonatomic, assign) NSMutableArray *_collectedPeople; // @synthesize _collectedPeople;

@end

@interface IMPerson : NSObject
{
    ABPerson *_abPerson;
    NSData *_customPictureData;
    long long _loadTag;
    ABAddressBook *_customBook;
    NSString *_uniqueID;
    BOOL _registered;
    BOOL _beingTornDown;
}

+ (id)personWithABPerson:(id)arg1;
+ (id)_initialABPropertyLabelForProperty:(id)arg1;
+ (id)allPeople;
+ (id)existingABPersonWithFirstName:(id)arg1 lastName:(id)arg2;
+ (id)existingABPersonWithFirstName:(id)arg1 andLastName:(id)arg2 orEmail:(id)arg3;
+ (id)existingABPersonForPerson:(id)arg1;
+ (id)existingABPersonWithFirstName:(id)arg1 andLastName:(id)arg2 orEmail:(id)arg3 orNumber:(id)arg4;
+ (id)existingABPersonWithFirstName:(id)arg1 andLastName:(id)arg2 andNickName:(id)arg3 orEmail:(id)arg4 orNumber:(id)arg5 identifier:(int *)arg6;
+ (id)existingABPersonWithFirstName:(id)arg1 andLastName:(id)arg2 andNickName:(id)arg3 orEmail:(id)arg4 orNumber:(id)arg5;
- (id)init;
- (id)initWithABPerson:(id)arg1;
@property(readonly, nonatomic) ABPerson *abPerson;
- (void)release;
- (void)finalize;
- (void)dealloc;
@property(readonly, nonatomic) BOOL isCompany;
@property(readonly, nonatomic) NSString *companyName;
@property(copy, nonatomic) NSString *nickname;
@property(readonly, retain, nonatomic) NSString *displayName;
@property(readonly, retain, nonatomic) NSString *fullName;
@property(copy, nonatomic) NSString *firstName;
@property(copy, nonatomic) NSString *lastName;
- (void)setFirstName:(id)arg1 lastName:(id)arg2;
- (id)emailHandlesForService:(id)arg1 includeBaseEmail:(BOOL)arg2;
- (id)emailHandlesForService:(id)arg1;
@property(copy, nonatomic) NSArray *emails;
@property(readonly, nonatomic) NSArray *allEmails;
@property(readonly, nonatomic) BOOL isInAddressBook;
- (id)valuesForIMProperty:(id)arg1;
- (id)_valuesAndLabelsForProperty:(id)arg1;
- (id)valuesForProperty:(id)arg1;
- (void)setValues:(id)arg1 forIMProperty:(id)arg2;
- (void)setValues:(id)arg1 forProperty:(id)arg2;
- (id)allHandlesForProperty:(id)arg1;
@property(readonly, nonatomic) NSArray *phoneNumbers;
@property(readonly, nonatomic) NSArray *mobileNumbers;
- (void)save;
- (void)appendID:(id)arg1 toProperty:(id)arg2;
- (BOOL)containsHandle:(id)arg1 forServiceProperty:(id)arg2;
@property(retain, nonatomic, setter=_setUniqueID:) NSString *uniqueID; // @synthesize uniqueID=_uniqueID;
- (BOOL)isEqualToIMPerson:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)description;
@property(retain, nonatomic) NSData *imageData;
@property(readonly, retain, nonatomic) NSArray *groups;
- (void)_abPersonChanged:(id)arg1;
- (void)consumeImageData:(id)arg1 forTag:(long long)arg2;
@property(readonly, nonatomic) NSData *imageDataWithoutLoading;
@property(readonly, nonatomic) unsigned long long status;
- (unsigned long long)hash;
@property(readonly, nonatomic) BOOL _beingTornDown; // @synthesize _beingTornDown;
@property(readonly, nonatomic) BOOL _registered; // @synthesize _registered;
@property(retain, nonatomic, setter=_setCustomBook:) ABAddressBook *_customBook; // @synthesize _customBook;
@property(nonatomic) long long _loadTag; // @synthesize _loadTag;
@property(readonly, retain, nonatomic) NSData *_customPictureData; // @synthesize _customPictureData;
@property(readonly, retain, nonatomic) ABPerson *_abPerson; // @synthesize _abPerson;
- (id)imHandleRegistrarGUID;

@end

@interface IMPersonRegistrar : NSObject
{
    NSMutableDictionary *_personMap;
}

+ (id)sharedInstance;
- (void)release;
- (unsigned long long)retainCount;
- (id)autorelease;
- (void)dealloc;
- (void)registerPerson:(id)arg1;
- (void)unregisterPerson:(id)arg1;
- (id)personForUniqueID:(id)arg1;
- (void)_dumpAllPersons;
@property(retain) NSMutableDictionary *_personMap; // @synthesize _personMap;

@end

@interface IMServiceAgent : NSObject
{
    NSDictionary *_currentAVChatInfo;
}

+ (void)setServiceAgentCapabilities:(long long)arg1;
+ (long long)serviceAgentCapabilities;
+ (id)sharedAgent;
+ (id)imageURLForStatus:(unsigned long long)arg1;
+ (id)imageNameForStatus:(unsigned long long)arg1;
+ (void)forgetStatusImageAppearance;
+ (id)notificationCenter;
- (id)serviceWithName:(id)arg1;
- (id)serviceWithNameNonBlocking:(id)arg1;
- (id)notificationCenter;
- (void)setMyStatus:(unsigned long long)arg1 message:(id)arg2;
@property(retain, nonatomic) NSArray *myAvailableMessages;
@property(retain, nonatomic) NSArray *myAwayMessages;
@property(readonly, nonatomic) NSDictionary *currentAVChatInfo;
@property(readonly, nonatomic) unsigned long long requestAudioReflectorStart;
@property(readonly, nonatomic) unsigned long long requestAudioReflectorStop;
- (unsigned long long)requestVideoStillForPerson:(id)arg1;
@property(readonly, nonatomic) unsigned long long vcCapabilities;
- (void)launchIfNecessary;
- (id)myPictureData;
- (void)dealloc;

@end

@interface IMServiceAgentCenter : NSNotificationCenter
{
    id _delegate;
}

- (void)dealloc;
- (void)finalize;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)addObserver:(id)arg1 selector:(SEL)arg2 name:(id)arg3 object:(id)arg4;
- (void)removeObserver:(id)arg1 name:(id)arg2 object:(id)arg3;
- (void)__postNotification:(id)arg1;
- (void)_postNotificationOnMainThread:(id)arg1;
- (void)postNotification:(id)arg1;
- (void)postNotificationName:(id)arg1 object:(id)arg2;
- (void)postNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;

@end

@interface IMServiceAgentImpl : IMServiceAgent
{
    IMServiceAgentCenter *_notifCenter;
    BOOL _anyAccountsConnected;
}

+ (id)sharedAgent;
+ (void)initialize;
+ (id)notificationCenter;
+ (void)forgetStatusImageAppearance;
+ (void)_statusImageAppearanceChanged:(id)arg1;
+ (void)_determineStatusImageAppearance;
+ (id)imageNameForStatus:(unsigned long long)arg1;
+ (id)imageURLForStatus:(unsigned long long)arg1;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)_daemonConnected:(id)arg1;
- (void)_daemonDisconnected:(id)arg1;
- (void)launchIfNecessary;
- (id)serviceWithNameNonBlocking:(id)arg1;
- (id)serviceWithName:(id)arg1;
- (void)centerWillAddObserver;
- (void)centerDidRemoveObserver;
- (id)notificationCenter;
- (void)_statusImageAppearanceChanged:(id)arg1;
- (void)setMyStatus:(unsigned long long)arg1 message:(id)arg2;
- (void)_customMessagesChanged:(id)arg1;
- (id)myAvailableMessages;
- (id)myAwayMessages;
- (void)setMyAvailableMessages:(id)arg1;
- (void)setMyAwayMessages:(id)arg1;
- (void)imHandleStatusChangedNotification:(id)arg1;
- (void)imHandleInfoChangedNotification:(id)arg1;
- (void)_processAccountStatusChange;
- (void)account:(id)arg1 loginStatusChanged:(unsigned int)arg2 message:(id)arg3 reason:(unsigned int)arg4 properties:(id)arg5;
- (void)activeAccountsChanged:(id)arg1 forService:(id)arg2;
- (void)setupComplete;
- (void)vcCapabilitiesChanged:(unsigned long long)arg1;
- (unsigned long long)vcCapabilities;

@end

@interface IMServiceImpl : IMService
{
    NSString *_name;
    NSString *_localizedName;
    NSString *_localizedShortName;
    NSMutableDictionary *_cardMap;
    NSDictionary *_personToIDMap;
    IMAccount *_bestAccount;
    NSDictionary *_serviceDefaults;
    NSDictionary *_serviceProps;
    NSDictionary *_defaultSettings;
    NSData *_imageData;
    NSImage *_icon;
    NSArray *_abProperties;
    NSArray *_emailDomains;
    unsigned int _screenNameSensitivity;
    BOOL _handlesChatInvites;
    BOOL _supportsSMS;
    BOOL _supportsPhoneNumberMapping;
    BOOL _iconChecked;
}

+ (Class)serviceClass;
+ (void)setServiceClass:(Class)arg1;
+ (id)serviceWithInternalName:(id)arg1;
+ (id)supportedCountryCodes;
+ (BOOL)systemSupportsSMSSending;
- (id)initWithName:(id)arg1;
- (void)dealloc;
- (void)_syncWithRemoteBuddies;
- (void)_calculateBestAccount;
- (void)accountInitialSyncPerformed:(id)arg1;
- (BOOL)initialSyncPerformed;
- (void)doneSetup;
- (void)disconnect;
- (void)statusChangedForAccount:(id)arg1 from:(unsigned long long)arg2 to:(unsigned long long)arg3;
- (BOOL)equalID:(id)arg1 andID:(id)arg2;
- (id)normalizedFormOfID:(id)arg1;
- (id)canonicalFormOfID:(id)arg1;
- (long long)compareNames:(id)arg1;
- (void)_blockUntilInitialSyncPerformed;
- (unsigned long long)status;
- (id)infoForScreenName:(id)arg1;
- (id)infoForAllScreenNames;
- (id)infoForPreferredScreenNames;
- (id)myScreenNames;
- (id)_abPropertiesBySanitizingABProperties:(id)arg1;
@property(retain, nonatomic) NSDictionary *serviceProperties;
- (id)subtypeInformationForAccount:(id)arg1;
@property(readonly, retain, nonatomic) NSData *serviceImageData;
@property(readonly, nonatomic) BOOL supportsIDNormalization;
@property(readonly, nonatomic) BOOL supportsAuthorization;
@property(readonly, nonatomic) BOOL supportsRegistration;
@property(readonly, nonatomic) BOOL supportsAdding;
@property(readonly, nonatomic) BOOL isPersistent;
@property(readonly, nonatomic) BOOL isPlugInService;
- (BOOL)isEnabled;
@property(readonly, nonatomic) BOOL handlesChatInvites;
- (id)localizedName;
- (id)localizedShortName;
@property(readonly, retain, nonatomic) NSString *addressBookProperty;
@property(readonly, retain, nonatomic) NSString *internalName;
@property(readonly, nonatomic) BOOL allowsMultipleConnections;
@property(readonly, nonatomic) long long buddyNotesMaxByteLength;
@property(readonly, retain, nonatomic) NSArray *accountIDs;
@property(readonly, retain, nonatomic) NSString *description;
- (id)_IDsToMapForIMPerson:(id)arg1;
- (void)_addAddressBookCards:(id)arg1 toMap:(id)arg2;
- (void)_dumpCardMap;
- (id)_newIDToCardMap;
- (void)updateIDToCardMapWithNotification:(id)arg1;
- (void)clearIDToCardMap;
@property(readonly, retain, nonatomic) NSDictionary *cardMap;
- (id)imABPeopleWithScreenName:(id)arg1 identifier:(int *)arg2;
- (id)imABPeopleWithScreenName:(id)arg1;
- (id)peopleWithScreenName:(id)arg1;
- (id)_personToIDMap;
- (id)screenNamesForIMPerson:(id)arg1;
- (id)screenNamesForPerson:(id)arg1;
- (void)defaultsChanged:(id)arg1;
- (void)activeAccountsChanged:(id)arg1;
@property(readonly, nonatomic) Class accountClass;
@property(readonly, retain, nonatomic) NSString *shortName; // @synthesize shortName=_localizedShortName;
@property(readonly, retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, retain, nonatomic) NSArray *emailDomains; // @synthesize emailDomains=_emailDomains;
@property(readonly, retain, nonatomic) NSArray *addressBookProperties; // @synthesize addressBookProperties=_abProperties;
@property(readonly, nonatomic) unsigned int IDSensitivity; // @synthesize IDSensitivity=_screenNameSensitivity;
@property(readonly, nonatomic) BOOL supportsPhoneNumberMapping; // @synthesize supportsPhoneNumberMapping=_supportsPhoneNumberMapping;
@property(retain, nonatomic) NSDictionary *defaultAccountSettings; // @synthesize defaultAccountSettings=_defaultSettings;
@property(retain, nonatomic) NSDictionary *serviceDefaults; // @synthesize serviceDefaults=_serviceDefaults;

@end

@interface IMStatusChatItem : IMChatItem
{
}

- (id)initWithString:(id)arg1 date:(id)arg2 statusType:(int)arg3;
- (id)initWithFormat:(id)arg1 handles:(id)arg2 date:(id)arg3 statusType:(int)arg4;
@property(readonly, retain, nonatomic) NSString *stringValue;
@property(readonly, retain, nonatomic) NSString *formatString;
@property(readonly, retain, nonatomic) NSArray *handles;
- (id)description;
@property(readonly, nonatomic) long long statusType;

@end

@interface IMTimestampChatItem : IMChatItem
{
}

- (id)initWithDate:(id)arg1;
- (id)description;

@end

