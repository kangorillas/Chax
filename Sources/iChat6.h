/*
 *     Generated by class-dump 3.3.3 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <Cocoa/Cocoa.h>
#import <AddressBook/AddressBook.h>
#import <InstantMessage/IMService.h>
#import <QuartzCore/QuartzCore.h>
#import <WebKit/WebKit.h>
#import <Quartz/Quartz.h>
#import "IMCore.h"
#import "IMAVCore.h"
#import "NSPreferences.h"
#import "IMRenderingFoundation.h"

#pragma mark Named Structures

struct AudioBuffer {
    unsigned int mNumberChannels;
    unsigned int mDataByteSize;
    void *mData;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioChannelDescription {
    unsigned int mChannelLabel;
    unsigned int mChannelFlags;
    float mCoordinates[3];
};

struct AudioChannelLayout {
    unsigned int mChannelLayoutTag;
    unsigned int mChannelBitmap;
    unsigned int mNumberChannelDescriptions;
    struct AudioChannelDescription mChannelDescriptions[1];
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct SSPoint {
    long long _field1;
    long long _field2;
};

struct SSSize {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _CGLContextObject {
    struct __GLIContextRec *_field1;
    struct __GLIFunctionDispatchRec {
        void *accum;
        void *alpha_func;
        void *are_textures_resident;
        void *array_element;
        void *begin;
        void *bind_texture;
        void *bitmap;
        void *blend_func;
        void *call_list;
        void *call_lists;
        void *clear;
        void *clear_accum;
        void *clear_color;
        void *clear_depth;
        void *clear_index;
        void *clear_stencil;
        void *clip_plane;
        void *color3b;
        void *color3bv;
        void *color3d;
        void *color3dv;
        void *color3f;
        void *color3fv;
        void *color3i;
        void *color3iv;
        void *color3s;
        void *color3sv;
        void *color3ub;
        void *color3ubv;
        void *color3ui;
        void *color3uiv;
        void *color3us;
        void *color3usv;
        void *color4b;
        void *color4bv;
        void *color4d;
        void *color4dv;
        void *color4f;
        void *color4fv;
        void *color4i;
        void *color4iv;
        void *color4s;
        void *color4sv;
        void *color4ub;
        void *color4ubv;
        void *color4ui;
        void *color4uiv;
        void *color4us;
        void *color4usv;
        void *color_mask;
        void *color_material;
        void *color_pointer;
        void *copy_pixels;
        void *copy_tex_image1D;
        void *copy_tex_image2D;
        void *copy_tex_sub_image1D;
        void *copy_tex_sub_image2D;
        void *cull_face;
        void *delete_lists;
        void *delete_textures;
        void *depth_func;
        void *depth_mask;
        void *depth_range;
        void *disable;
        void *disable_client_state;
        void *draw_arrays;
        void *draw_buffer;
        void *draw_elements;
        void *draw_pixels;
        void *edge_flag;
        void *edge_flag_pointer;
        void *edge_flagv;
        void *enable;
        void *enable_client_state;
        void *end;
        void *end_list;
        void *eval_coord1d;
        void *eval_coord1dv;
        void *eval_coord1f;
        void *eval_coord1fv;
        void *eval_coord2d;
        void *eval_coord2dv;
        void *eval_coord2f;
        void *eval_coord2fv;
        void *eval_mesh1;
        void *eval_mesh2;
        void *eval_point1;
        void *eval_point2;
        void *feedback_buffer;
        void *finish;
        void *flush;
        void *fogf;
        void *fogfv;
        void *fogi;
        void *fogiv;
        void *front_face;
        void *frustum;
        void *gen_lists;
        void *gen_textures;
        void *get_booleanv;
        void *get_clip_plane;
        void *get_doublev;
        void *get_error;
        void *get_floatv;
        void *get_integerv;
        void *get_lightfv;
        void *get_lightiv;
        void *get_mapdv;
        void *get_mapfv;
        void *get_mapiv;
        void *get_materialfv;
        void *get_materialiv;
        void *get_pixel_mapfv;
        void *get_pixel_mapuiv;
        void *get_pixel_mapusv;
        void *get_pointerv;
        void *get_polygon_stipple;
        void *get_string;
        void *get_tex_envfv;
        void *get_tex_enviv;
        void *get_tex_gendv;
        void *get_tex_genfv;
        void *get_tex_geniv;
        void *get_tex_image;
        void *get_tex_level_parameterfv;
        void *get_tex_level_parameteriv;
        void *get_tex_parameterfv;
        void *get_tex_parameteriv;
        void *hint;
        void *index_mask;
        void *index_pointer;
        void *indexd;
        void *indexdv;
        void *indexf;
        void *indexfv;
        void *indexi;
        void *indexiv;
        void *indexs;
        void *indexsv;
        void *indexub;
        void *indexubv;
        void *init_names;
        void *interleaved_arrays;
        void *is_enabled;
        void *is_list;
        void *is_texture;
        void *light_modelf;
        void *light_modelfv;
        void *light_modeli;
        void *light_modeliv;
        void *lightf;
        void *lightfv;
        void *lighti;
        void *lightiv;
        void *line_stipple;
        void *line_width;
        void *list_base;
        void *load_identity;
        void *load_matrixd;
        void *load_matrixf;
        void *load_name;
        void *logic_op;
        void *map1d;
        void *map1f;
        void *map2d;
        void *map2f;
        void *map_grid1d;
        void *map_grid1f;
        void *map_grid2d;
        void *map_grid2f;
        void *materialf;
        void *materialfv;
        void *materiali;
        void *materialiv;
        void *matrix_mode;
        void *mult_matrixd;
        void *mult_matrixf;
        void *new_list;
        void *normal3b;
        void *normal3bv;
        void *normal3d;
        void *normal3dv;
        void *normal3f;
        void *normal3fv;
        void *normal3i;
        void *normal3iv;
        void *normal3s;
        void *normal3sv;
        void *normal_pointer;
        void *ortho;
        void *pass_through;
        void *pixel_mapfv;
        void *pixel_mapuiv;
        void *pixel_mapusv;
        void *pixel_storef;
        void *pixel_storei;
        void *pixel_transferf;
        void *pixel_transferi;
        void *pixel_zoom;
        void *point_size;
        void *polygon_mode;
        void *polygon_offset;
        void *polygon_stipple;
        void *pop_attrib;
        void *pop_client_attrib;
        void *pop_matrix;
        void *pop_name;
        void *prioritize_textures;
        void *push_attrib;
        void *push_client_attrib;
        void *push_matrix;
        void *push_name;
        void *raster_pos2d;
        void *raster_pos2dv;
        void *raster_pos2f;
        void *raster_pos2fv;
        void *raster_pos2i;
        void *raster_pos2iv;
        void *raster_pos2s;
        void *raster_pos2sv;
        void *raster_pos3d;
        void *raster_pos3dv;
        void *raster_pos3f;
        void *raster_pos3fv;
        void *raster_pos3i;
        void *raster_pos3iv;
        void *raster_pos3s;
        void *raster_pos3sv;
        void *raster_pos4d;
        void *raster_pos4dv;
        void *raster_pos4f;
        void *raster_pos4fv;
        void *raster_pos4i;
        void *raster_pos4iv;
        void *raster_pos4s;
        void *raster_pos4sv;
        void *read_buffer;
        void *read_pixels;
        void *rectd;
        void *rectdv;
        void *rectf;
        void *rectfv;
        void *recti;
        void *rectiv;
        void *rects;
        void *rectsv;
        void *render_mode;
        void *rotated;
        void *rotatef;
        void *scaled;
        void *scalef;
        void *scissor;
        void *select_buffer;
        void *shade_model;
        void *stencil_func;
        void *stencil_mask;
        void *stencil_op;
        void *tex_coord1d;
        void *tex_coord1dv;
        void *tex_coord1f;
        void *tex_coord1fv;
        void *tex_coord1i;
        void *tex_coord1iv;
        void *tex_coord1s;
        void *tex_coord1sv;
        void *tex_coord2d;
        void *tex_coord2dv;
        void *tex_coord2f;
        void *tex_coord2fv;
        void *tex_coord2i;
        void *tex_coord2iv;
        void *tex_coord2s;
        void *tex_coord2sv;
        void *tex_coord3d;
        void *tex_coord3dv;
        void *tex_coord3f;
        void *tex_coord3fv;
        void *tex_coord3i;
        void *tex_coord3iv;
        void *tex_coord3s;
        void *tex_coord3sv;
        void *tex_coord4d;
        void *tex_coord4dv;
        void *tex_coord4f;
        void *tex_coord4fv;
        void *tex_coord4i;
        void *tex_coord4iv;
        void *tex_coord4s;
        void *tex_coord4sv;
        void *tex_coord_pointer;
        void *tex_envf;
        void *tex_envfv;
        void *tex_envi;
        void *tex_enviv;
        void *tex_gend;
        void *tex_gendv;
        void *tex_genf;
        void *tex_genfv;
        void *tex_geni;
        void *tex_geniv;
        void *tex_image1D;
        void *tex_image2D;
        void *tex_parameterf;
        void *tex_parameterfv;
        void *tex_parameteri;
        void *tex_parameteriv;
        void *tex_sub_image1D;
        void *tex_sub_image2D;
        void *translated;
        void *translatef;
        void *vertex2d;
        void *vertex2dv;
        void *vertex2f;
        void *vertex2fv;
        void *vertex2i;
        void *vertex2iv;
        void *vertex2s;
        void *vertex2sv;
        void *vertex3d;
        void *vertex3dv;
        void *vertex3f;
        void *vertex3fv;
        void *vertex3i;
        void *vertex3iv;
        void *vertex3s;
        void *vertex3sv;
        void *vertex4d;
        void *vertex4dv;
        void *vertex4f;
        void *vertex4fv;
        void *vertex4i;
        void *vertex4iv;
        void *vertex4s;
        void *vertex4sv;
        void *vertex_pointer;
        void *viewport;
        void *blend_func_separate;
        void *blend_color;
        void *blend_equation;
        void *lock_arrays_EXT;
        void *unlock_arrays_EXT;
        void *client_active_texture;
        void *active_texture;
        void *multi_tex_coord1d;
        void *multi_tex_coord1dv;
        void *multi_tex_coord1f;
        void *multi_tex_coord1fv;
        void *multi_tex_coord1i;
        void *multi_tex_coord1iv;
        void *multi_tex_coord1s;
        void *multi_tex_coord1sv;
        void *multi_tex_coord2d;
        void *multi_tex_coord2dv;
        void *multi_tex_coord2f;
        void *multi_tex_coord2fv;
        void *multi_tex_coord2i;
        void *multi_tex_coord2iv;
        void *multi_tex_coord2s;
        void *multi_tex_coord2sv;
        void *multi_tex_coord3d;
        void *multi_tex_coord3dv;
        void *multi_tex_coord3f;
        void *multi_tex_coord3fv;
        void *multi_tex_coord3i;
        void *multi_tex_coord3iv;
        void *multi_tex_coord3s;
        void *multi_tex_coord3sv;
        void *multi_tex_coord4d;
        void *multi_tex_coord4dv;
        void *multi_tex_coord4f;
        void *multi_tex_coord4fv;
        void *multi_tex_coord4i;
        void *multi_tex_coord4iv;
        void *multi_tex_coord4s;
        void *multi_tex_coord4sv;
        void *load_transpose_matrixd;
        void *load_transpose_matrixf;
        void *mult_transpose_matrixd;
        void *mult_transpose_matrixf;
        void *compressed_tex_image3D;
        void *compressed_tex_image2D;
        void *compressed_tex_image1D;
        void *compressed_tex_sub_image3D;
        void *compressed_tex_sub_image2D;
        void *compressed_tex_sub_image1D;
        void *get_compressed_tex_image;
        void *secondary_color3b;
        void *secondary_color3bv;
        void *secondary_color3d;
        void *secondary_color3dv;
        void *secondary_color3f;
        void *secondary_color3fv;
        void *secondary_color3i;
        void *secondary_color3iv;
        void *secondary_color3s;
        void *secondary_color3sv;
        void *secondary_color3ub;
        void *secondary_color3ubv;
        void *secondary_color3ui;
        void *secondary_color3uiv;
        void *secondary_color3us;
        void *secondary_color3usv;
        void *secondary_color_pointer;
        void *vertex_array_range_EXT;
        void *flush_vertex_array_range_EXT;
        void *draw_range_elements;
        void *color_table;
        void *color_table_parameterfv;
        void *color_table_parameteriv;
        void *copy_color_table;
        void *get_color_table;
        void *get_color_table_parameterfv;
        void *get_color_table_parameteriv;
        void *color_sub_table;
        void *copy_color_sub_table;
        void *convolution_filter1D;
        void *convolution_filter2D;
        void *convolution_parameterf;
        void *convolution_parameterfv;
        void *convolution_parameteri;
        void *convolution_parameteriv;
        void *copy_convolution_filter1D;
        void *copy_convolution_filter2D;
        void *get_convolution_filter;
        void *get_convolution_parameterfv;
        void *get_convolution_parameteriv;
        void *get_separable_filter;
        void *separable_filter2D;
        void *get_histogram;
        void *get_histogram_parameterfv;
        void *get_histogram_parameteriv;
        void *get_minmax;
        void *get_minmax_parameterfv;
        void *get_minmax_parameteriv;
        void *histogram;
        void *minmax;
        void *reset_histogram;
        void *reset_minmax;
        void *tex_image3D;
        void *tex_sub_image3D;
        void *copy_tex_sub_image3D;
        void *get_uniform_indices;
        void *get_active_uniformsiv;
        void *get_active_uniform_name;
        void *get_uniform_block_index;
        void *get_active_uniform_blockiv;
        void *get_active_uniform_block_name;
        void *uniform_block_binding;
        void *get_combiner_input_parameterfv_NV;
        void *get_combiner_input_parameteriv_NV;
        void *get_combiner_output_parameterfv_NV;
        void *get_combiner_output_parameteriv_NV;
        void *get_final_combiner_input_parameterfv_NV;
        void *get_final_combiner_input_parameteriv_NV;
        void *combiner_stage_parameterfv_NV;
        void *get_combiner_stage_parameterfv_NV;
        void *texture_range_APPLE;
        void *get_tex_parameter_pointerv_APPLE;
        void *blend_equation_separate_EXT;
        void *sample_coverage;
        void *sample_pass;
        void *pn_trianglesi_ATI;
        void *pn_trianglesf_ATI;
        void *gen_fences_APPLE;
        void *delete_fences_APPLE;
        void *set_fence_APPLE;
        void *is_fence_APPLE;
        void *test_fence_APPLE;
        void *finish_fence_APPLE;
        void *test_object_APPLE;
        void *finish_object_APPLE;
        void *bind_program_ARB;
        void *delete_programs_ARB;
        void *gen_programs_ARB;
        void *is_program_ARB;
        void *vertex_attrib1s_ARB;
        void *vertex_attrib1f_ARB;
        void *vertex_attrib1d_ARB;
        void *vertex_attrib2s_ARB;
        void *vertex_attrib2f_ARB;
        void *vertex_attrib2d_ARB;
        void *vertex_attrib3s_ARB;
        void *vertex_attrib3f_ARB;
        void *vertex_attrib3d_ARB;
        void *vertex_attrib4s_ARB;
        void *vertex_attrib4f_ARB;
        void *vertex_attrib4d_ARB;
        void *vertex_attrib4Nub_ARB;
        void *vertex_attrib1sv_ARB;
        void *vertex_attrib1fv_ARB;
        void *vertex_attrib1dv_ARB;
        void *vertex_attrib2sv_ARB;
        void *vertex_attrib2fv_ARB;
        void *vertex_attrib2dv_ARB;
        void *vertex_attrib3sv_ARB;
        void *vertex_attrib3fv_ARB;
        void *vertex_attrib3dv_ARB;
        void *vertex_attrib4bv_ARB;
        void *vertex_attrib4sv_ARB;
        void *vertex_attrib4iv_ARB;
        void *vertex_attrib4ubv_ARB;
        void *vertex_attrib4usv_ARB;
        void *vertex_attrib4uiv_ARB;
        void *vertex_attrib4fv_ARB;
        void *vertex_attrib4dv_ARB;
        void *vertex_attrib4Nbv_ARB;
        void *vertex_attrib4Nsv_ARB;
        void *vertex_attrib4Niv_ARB;
        void *vertex_attrib4Nubv_ARB;
        void *vertex_attrib4Nusv_ARB;
        void *vertex_attrib4Nuiv_ARB;
        void *vertex_attrib_pointer_ARB;
        void *enable_vertex_attrib_array_ARB;
        void *disable_vertex_attrib_array_ARB;
        void *get_vertex_attribdv_ARB;
        void *get_vertex_attribfv_ARB;
        void *get_vertex_attribiv_ARB;
        void *get_vertex_attrib_pointerv_ARB;
        void *program_env_parameter4d_ARB;
        void *program_env_parameter4dv_ARB;
        void *program_env_parameter4f_ARB;
        void *program_env_parameter4fv_ARB;
        void *program_local_parameter4d_ARB;
        void *program_local_parameter4dv_ARB;
        void *program_local_parameter4f_ARB;
        void *program_local_parameter4fv_ARB;
        void *get_program_env_parameterdv_ARB;
        void *get_program_env_parameterfv_ARB;
        void *get_program_local_parameterdv_ARB;
        void *get_program_local_parameterfv_ARB;
        void *program_string_ARB;
        void *get_program_string_ARB;
        void *get_programiv_ARB;
        void *enable_vertex_attrib_ARB;
        void *disable_vertex_attrib_ARB;
        void *is_vertex_attrib_enabled_ARB;
        void *map_vertex_attrib1d_ARB;
        void *map_vertex_attrib1f_ARB;
        void *map_vertex_attrib2d_ARB;
        void *map_vertex_attrib2f_ARB;
        void *point_parameterf;
        void *point_parameterfv;
        void *point_parameteri;
        void *point_parameteriv;
        void *fog_coordf;
        void *fog_coordfv;
        void *fog_coordd;
        void *fog_coorddv;
        void *fog_coord_pointer;
        void *vertex_array_parameteri_EXT;
        void *bind_vertex_array_EXT;
        void *delete_vertex_arrays_EXT;
        void *gen_vertex_arrays_EXT;
        void *is_vertex_array_EXT;
        void *element_pointer_APPLE;
        void *draw_element_array_APPLE;
        void *draw_range_element_array_APPLE;
        void *weightbv_ARB;
        void *weightsv_ARB;
        void *weightiv_ARB;
        void *weightfv_ARB;
        void *weightdv_ARB;
        void *weightubv_ARB;
        void *weightusv_ARB;
        void *weightuiv_ARB;
        void *weight_pointer_ARB;
        void *vertex_blend_ARB;
        void *multi_draw_arrays;
        void *multi_draw_elements;
        void *window_pos2d;
        void *window_pos2dv;
        void *window_pos2f;
        void *window_pos2fv;
        void *window_pos2i;
        void *window_pos2iv;
        void *window_pos2s;
        void *window_pos2sv;
        void *window_pos3d;
        void *window_pos3dv;
        void *window_pos3f;
        void *window_pos3fv;
        void *window_pos3i;
        void *window_pos3iv;
        void *window_pos3s;
        void *window_pos3sv;
        void *active_stencil_face_EXT;
        void *stencil_op_separate_ATI;
        void *stencil_func_separate_ATI;
        void *flush_render_APPLE;
        void *finish_render_APPLE;
        void *swap_APPLE;
        void *delete_object_ARB;
        void *get_handle_ARB;
        void *detach_object_ARB;
        void *create_shader_object_ARB;
        void *shader_source_ARB;
        void *compile_shader_ARB;
        void *create_program_object_ARB;
        void *attach_object_ARB;
        void *link_program_ARB;
        void *use_program_object_ARB;
        void *validate_program_ARB;
        void *uniform1f_ARB;
        void *uniform2f_ARB;
        void *uniform3f_ARB;
        void *uniform4f_ARB;
        void *uniform1i_ARB;
        void *uniform2i_ARB;
        void *uniform3i_ARB;
        void *uniform4i_ARB;
        void *uniform1fv_ARB;
        void *uniform2fv_ARB;
        void *uniform3fv_ARB;
        void *uniform4fv_ARB;
        void *uniform1iv_ARB;
        void *uniform2iv_ARB;
        void *uniform3iv_ARB;
        void *uniform4iv_ARB;
        void *uniform_matrix2fv_ARB;
        void *uniform_matrix3fv_ARB;
        void *uniform_matrix4fv_ARB;
        void *get_object_parameterfv_ARB;
        void *get_object_parameteriv_ARB;
        void *get_info_log_ARB;
        void *get_attached_objects_ARB;
        void *get_uniform_location_ARB;
        void *get_active_uniform_ARB;
        void *get_uniformfv_ARB;
        void *get_uniformiv_ARB;
        void *get_shader_source_ARB;
        void *bind_attrib_location_ARB;
        void *get_active_attrib_ARB;
        void *get_attrib_location_ARB;
        void *clamp_color_ARB;
        void *gen_queries;
        void *delete_queries;
        void *is_query;
        void *begin_query;
        void *end_query;
        void *get_queryiv;
        void *get_query_objectiv;
        void *get_query_objectuiv;
        void *bind_buffer;
        void *delete_buffers;
        void *gen_buffers;
        void *is_buffer;
        void *buffer_data;
        void *buffer_sub_data;
        void *get_buffer_sub_data;
        void *map_buffer;
        void *unmap_buffer;
        void *get_buffer_parameteriv;
        void *get_buffer_pointerv;
        void *depth_bounds_EXT;
        void *draw_buffers_ARB;
        void *is_shader;
        void *is_program;
        void *get_shaderiv;
        void *get_programiv;
        void *get_shader_info_log;
        void *get_program_info_log;
        void *stencil_func_separate;
        void *stencil_mask_separate;
        void *multi_draw_element_array_APPLE;
        void *multi_draw_range_element_array_APPLE;
        void *is_renderbuffer_EXT;
        void *bind_renderbuffer_EXT;
        void *delete_renderbuffers_EXT;
        void *gen_renderbuffers_EXT;
        void *renderbuffer_storage_EXT;
        void *get_renderbuffer_parameteriv_EXT;
        void *is_framebuffer_EXT;
        void *bind_framebuffer_EXT;
        void *delete_framebuffers_EXT;
        void *gen_framebuffers_EXT;
        void *check_framebuffer_status_EXT;
        void *framebuffer_texture1D_EXT;
        void *framebuffer_texture2D_EXT;
        void *framebuffer_texture3D_EXT;
        void *framebuffer_renderbuffer_EXT;
        void *get_framebuffer_attachment_parameteriv_EXT;
        void *generate_mipmap_EXT;
        void *buffer_parameteri_APPLE;
        void *flush_mapped_buffer_range_APPLE;
        void *program_env_parameters4fv_EXT;
        void *program_local_parameters4fv_EXT;
        void *object_purgeable_APPLE;
        void *object_unpurgeable_APPLE;
        void *get_object_parameteriv_APPLE;
        void *program_parameteri_EXT;
        void *framebuffer_texture_EXT;
        void *framebuffer_texture_layer_EXT;
        void *framebuffer_texture_face_EXT;
        void *bind_buffer_range_EXT;
        void *bind_buffer_offset_EXT;
        void *bind_buffer_base_EXT;
        void *begin_transform_feedback_EXT;
        void *end_transform_feedback_EXT;
        void *transform_feedback_varyings_EXT;
        void *get_transform_feedback_varying_EXT;
        void *get_integer_indexedv_EXT;
        void *get_boolean_indexedv_EXT;
        void *uniform_buffer_EXT;
        void *get_uniform_buffer_size_EXT;
        void *get_uniform_buffer_offset_EXT;
        void *clear_colorIi_EXT;
        void *clear_colorIui_EXT;
        void *tex_parameterIiv_EXT;
        void *tex_parameterIuiv_EXT;
        void *get_tex_parameterIiv_EXT;
        void *get_tex_parameterIuiv_EXT;
        void *vertex_attribI1i_EXT;
        void *vertex_attribI2i_EXT;
        void *vertex_attribI3i_EXT;
        void *vertex_attribI4i_EXT;
        void *vertex_attribI1ui_EXT;
        void *vertex_attribI2ui_EXT;
        void *vertex_attribI3ui_EXT;
        void *vertex_attribI4ui_EXT;
        void *vertex_attribI1iv_EXT;
        void *vertex_attribI2iv_EXT;
        void *vertex_attribI3iv_EXT;
        void *vertex_attribI4iv_EXT;
        void *vertex_attribI1uiv_EXT;
        void *vertex_attribI2uiv_EXT;
        void *vertex_attribI3uiv_EXT;
        void *vertex_attribI4uiv_EXT;
        void *vertex_attribI4bv_EXT;
        void *vertex_attribI4sv_EXT;
        void *vertex_attribI4ubv_EXT;
        void *vertex_attribI4usv_EXT;
        void *vertex_attribI_pointer_EXT;
        void *get_vertex_attribIiv_EXT;
        void *get_vertex_attribIuiv_EXT;
        void *uniform1ui_EXT;
        void *uniform2ui_EXT;
        void *uniform3ui_EXT;
        void *uniform4ui_EXT;
        void *uniform1uiv_EXT;
        void *uniform2uiv_EXT;
        void *uniform3uiv_EXT;
        void *uniform4uiv_EXT;
        void *get_uniformuiv_EXT;
        void *bind_frag_data_location_EXT;
        void *get_frag_data_location_EXT;
        void *color_mask_indexed_EXT;
        void *enable_indexed_EXT;
        void *disable_indexed_EXT;
        void *is_enabled_indexed_EXT;
        void *uniform_matrix2x3fv;
        void *uniform_matrix3x2fv;
        void *uniform_matrix2x4fv;
        void *uniform_matrix4x2fv;
        void *uniform_matrix3x4fv;
        void *uniform_matrix4x3fv;
        void *blit_framebuffer_EXT;
        void *renderbuffer_storage_multisample_EXT;
        void *begin_conditional_render_NV;
        void *end_conditional_render_NV;
        void *get_attached_shaders;
        void *provoking_vertex_EXT;
        void *vertex_attrib_divisor;
        void *draw_arrays_instanced;
        void *draw_elements_instanced;
        void *draw_elements_base_vertex;
        void *draw_range_elements_base_vertex;
        void *draw_elements_instanced_base_vertex;
        void *multi_draw_elements_base_vertex;
        void *bind_vertex_array_ARB;
        void *delete_vertex_arrays_ARB;
        void *gen_vertex_arrays_ARB;
        void *is_vertex_array_ARB;
        void *point_size_pointer;
        void *vertex_point_sizef_APPLE;
        void *clear_bufferiv;
        void *clear_bufferuiv;
        void *clear_bufferfv;
        void *clear_bufferfi;
        void *get_stringi;
        void *fence_sync;
        void *is_sync;
        void *delete_sync;
        void *client_wait_sync;
        void *wait_sync;
        void *get_integer64v_sync;
        void *get_synciv;
        void *tex_image2D_multisample;
        void *tex_image3D_multisample;
        void *get_multisamplefv;
        void *sample_maski;
        void *tex_buffer;
        void *copy_buffer_sub_data;
        void *primitive_restart_index;
        void *get_query_objecti64v;
        void *get_query_objectui64v;
        void *map_buffer_range;
        void *flush_mapped_buffer_range;
        void *query_counter;
        void *get_integer64i_v;
        void *get_buffer_parameteri64v;
        void *gen_samplers;
        void *delete_samplers;
        void *is_sampler;
        void *bind_sampler;
        void *sampler_parameteri;
        void *sampler_parameteriv;
        void *sampler_parameterf;
        void *sampler_parameterfv;
        void *sampler_parameterIiv;
        void *sampler_parameterIuiv;
        void *get_sampler_parameteriv;
        void *get_sampler_parameterfv;
        void *get_sampler_parameterIiv;
        void *get_sampler_parameterIuiv;
    } _field2;
    struct _CGLPrivateObject *_field3;
    void *_field4;
};

struct _CGLPrivateObject;

struct _RectPosition {
    int horiz;
    int vert;
};

#pragma mark Typedef'd Structures

typedef struct {
    long long _field1[3];
    int _field2;
    char _field3;
} CDStruct_7495ffd8;

typedef struct {
    float frustum[6];
    float cameraHeight;
    float cameraDistance;
} CDStruct_82b9310e;

typedef struct {
    char *_field1;
    char _field2;
    char _field3;
    char _field4;
    char _field5;
    void *_field6;
} CDStruct_8a8b3360;

typedef struct {
    char _field1;
    char _field2;
    char _field3;
    char _field4;
} CDStruct_b2f7276a;

typedef struct {
    float left;
    float right;
    float leftBottom;
    float rightBottom;
    float leftTop;
    float rightTop;
} CDStruct_ddd3e379;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    int _field1;
    int _field2[2];
} CDStruct_f46c0635;

typedef struct {
    int contourType;
    int intParam1;
    int intParam2;
    float floatParam1;
    float floatParam2;
} CDStruct_5a7f87b4;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    //struct *_field5;
} CDStruct_75a3e9f3;

typedef struct {
    CDStruct_82b9310e _field1;
    int _field2;
    CDStruct_818bb265 _field3[3];
    struct CGSize _field4;
} CDStruct_f8cc2bb8;

#pragma mark -

/*
 * File: Contents/MacOS/iChat
 * UUID: EED6FEAC-960E-305B-AAE5-C0ACF0D24AFE
 * Arch: Intel x86-64 (x86_64)
 *       Minimum Mac OS X version: 10.7.0
 *
 *       Objective-C Garbage Collection: Unsupported
 */

@class SFCertificateTrustPanel, DotMacCaps, IMHandle, AVChatWindow, AnimatingTabView, VolumeIndicator, AVSegmentedControl, StretchyImageView;
@class VCNotifier, IMAVChat, Chat, VCChannelNegotiation, FezAVRecorder, VideoRecordingAdapter, AudioRecordingAdapter, FZLargeTypeController;
@class AbbreviatingTextField, ARDWarningView, AudioConferenceView, ARDHUDPanel, ARDPIPButton, SSSession;
@class ARDImageView, ShadowView, ARDLocalDesktopImage, NSExtendedBox, GradientView, IMAVChatParticipant, FileTransfer, Animator, MultiBuddyImageView, ColoredSpinner;
@class PeopleListController, NSSoundPopUpButton, InstantMessage, FezCellTipWindow;
@class CollapseView, ServicePopUp, ExtendedComboBox, ABPeoplePickerView, StatusTokenFieldController, PeoplePicker, EffectView, FezCellTipView, Tooltip;
@class CustomWindow, AuthorizationRequestController, QLAuxVideoReceiver, RemoteAuxVideoReceiver, AuxVideoReceiver, VideoProcessor, IMSharedPixelBufferPool;
@class FezImageView, NSDataRetainingImage, PeopleList, OpenGLLayerModel, OpenGLVideoConferenceLayer, MyNameControl, ExtendedSplitViewGrabber, ChatInputLine, WindowDraggingTabView;
@class ChatViewController, ChatFieldEditor, ChooseBuddyButton, ChatNotifier, ChatMiniwindowController, QLPreviewPanel, LinkSheetController, ChatWindowController, FezWebView;
@class ChatViewDragDestinationHelper, ChatViewTimeFormatHelper, ChatViewDDHelper, ChatViewQLHelper, ChatViewFileTransferHelper, TranscriptStyleController;
@class RemoteAuxVideoMuxer, ChatViewScrollHelper, DDHighlightsView, BaseInstantMessage, ExtendedSplitView, MenuButton, DragWindowAnimation, QCCompositionPickerPanel, Texture, ErrorImageButtonCell;
@class FZLargeTypeView, ABPhoneFormatter, FezMPEG4AACAudioRecorder, FezH264VideoRecorder, VCChannel, VCChannelNegotiation, IMAVMicrophone, AVConference;
@class FrameReader, FezPeopleListItem, FezServicePeopleListGroup, StatusController, FileTransferRequest, DOMDocumentFragment, DOMNode, ViewTable, GLFBO, GLSLProgram, QCView;
@class Prefs_MsgCompose, NSExtendedImageView, OpenGLNSViewLayerWindow, PresenceTooltip, SearchBackgroundView, Service;
@class QLPreviewView, QLPreviewSlideshow, IMAuxVideoProvider, QCImage, VCInfoTable, VideoConferenceLayerView, VideoControlsOverlay, QCRenderer, QCPatchController, QCComposition, ILMediaBrowserView;

@protocol TranscriptFragmentProvider, IMAVChatDelegate, IKPictureTakerVideoReceiver;

@protocol AVChatARDFeatureDelegate
- (BOOL)avFeature:(id)arg1 startARDClientToParticipant:(id)arg2;
@end

@protocol AccountBuddyListProtocol
- (unsigned long long)sortOrderForIMHandle:(id)arg1 inGroup:(id)arg2;
- (id)buddyList;
@end

@protocol AccountChatProtocol
- (struct _FZChatRoomValidity)validityOfChatRoomName:(id)arg1;
- (BOOL)validateChatRoomName:(id)arg1 reason:(id *)arg2;
@end

@protocol AccountSessionProtocol
- (void)groupsChanged:(id)arg1 error:(id)arg2;
@end

@protocol AuxVideoFeatureDelegate
- (void)avChat:(id)arg1 participantBeganAuxiliaryInput:(id)arg2;
- (void)avChat:(id)arg1 participantEndedAuxiliaryInput:(id)arg2;
- (void)avChat:(id)arg1 participantBeganAuxiliaryReplacement:(id)arg2;
- (void)avChat:(id)arg1 participantEndedAuxiliaryReplacement:(id)arg2;
@end

@protocol ChatFieldEditorDelegate
- (void)chatFieldEditor:(id)arg1 navigatedToHistory:(id)arg2;
@end

@protocol ChooseBuddyButtonDelegate

@optional
- (BOOL)chooseBuddyButton:(id)arg1 allowIMHandle:(id)arg2;
- (void)chooseBuddySheetCancelled:(id)arg1;
- (id)chooseBuddyButton:(id)arg1 filterIMHandles:(id)arg2;
- (id)extraMenuItemsForChooseBuddyButton:(id)arg1;
- (BOOL)otherMenuItemForChooseBuddyButton:(id)arg1;
@end

@protocol DDHighlightsDataSource <NSObject>
- (id)highlightsViewHighlightObjects:(id)arg1;
- (id)highlightsView:(id)arg1 framesOfHighlightObject:(id)arg2;

@optional
- (BOOL)highlightsView:(id)arg1 allowsHighlightForObject:(id)arg2;
- (unsigned long long)highlightsView:(id)arg1 highlightStyleForObject:(id)arg2;
- (id)highlightsView:(id)arg1 relatedObjectsForObject:(id)arg2;
- (id)highlightsView:(id)arg1 tooltipForObject:(id)arg2;
- (BOOL)highlightsView:(id)arg1 blankAfterObject:(id)arg2;
@end

@protocol FZAuxVideoControllerProtocol
@property(readonly, nonatomic) BOOL hasAudioProvider;
@property(readonly, nonatomic) BOOL hasVideoProvider;
@end

@protocol FZVideoProcessorProtocol
@property(readonly, nonatomic) BOOL auxVideoModeIsReplacement;
@property(readonly, nonatomic) BOOL shouldCPUResize;
@property(readonly, nonatomic) id renderDelegate;
@end

@protocol FezAVRecordingAdapter <NSObject>
- (void)prepare;
- (void)start;
- (void)stop;
@end

@protocol FezAudioRecordingAdapter <FezAVRecordingAdapter>
@end

@protocol FezDDScannerCompletionHandler <NSObject>
- (void)scan:(id)arg1 didFinishWithResults:(id)arg2;
@end

@protocol FezHotKeyHandler
- (void)handleHotKey:(long long)arg1;
@end

@protocol FezVideoRecordingAdapter <FezAVRecordingAdapter>
- (struct CGSize)inputSize;
@end

@protocol FileDragOutViewDelegate <NSObject>
- (BOOL)fileDragOutView:(id)arg1 shouldDragFile:(id)arg2;
- (void)fileDragOutView:(id)arg1 file:(id)arg2 draggedTo:(id)arg3;
- (void)fileDragOutView:(id)arg1 fileDoubleClicked:(id)arg2;
@end

@protocol FileTransferFragmentProvider <TranscriptFragmentProvider>
- (id)fragmentForGUID:(id)arg1 filename:(id)arg2 bookmark:(id)arg3;
- (id)fragmentForGUID:(id)arg1 filename:(id)arg2 width:(double)arg3 height:(double)arg4;
- (void)fileTransferUpdated:(id)arg1;
@end

@protocol FileTransferIconLoaderDelegate
- (void)fileTransferIconDidLoad:(id)arg1;
@end

@protocol FrameListener <NSObject>
- (void)frameNotifier:(id)arg1 postedNewFrame:(id)arg2;
@end

@protocol IKPictureTakerVideoProvider
- (void)startGrabbingForReceiver:(id)arg1;
- (void)stopGrabbing;
- (BOOL)canStartGrabbing;
@end

@protocol IMAVChatLegacyDelegate

@optional
- (id)avChat:(id)arg1 bitmapDataForParticipant:(id)arg2;
@end

@protocol IMAVControllerDelegate
- (void)invitedToIMAVChat:(id)arg1;

@optional
- (void)inviteFailedFromIMHandle:(id)arg1 reason:(long long)arg2;
- (void)incomingNegotiationRequest:(id)arg1;
@end

@protocol IMActionsControllerHandler
- (id)performActionsForEvent:(int)arg1 withIMHandle:(id)arg2 withObject:(id)arg3 withChat:(id)arg4 silent:(BOOL)arg5;
@end

@protocol IMAuxVideoProvider
- (oneway void)provideFrameAtFramerate:(double)arg1;
- (oneway void)setBufferPoolDescription:(id)arg1 audioDeviceUID:(id)arg2 channels:(id)arg3;
- (oneway void)disconnectAndActivate:(BOOL)arg1;
- (oneway void)performActionForControlWithDictionaryRepresentation:(id)arg1;
@end

@protocol IMAuxVideoReceiver
- (oneway void)provider:(id)arg1 bundleID:(id)arg2 connectWithPixelFormat:(unsigned int)arg3 videoStills:(BOOL)arg4 replacement:(BOOL)arg5 audioChannels:(int)arg6 controlsDictionary:(id)arg7;
- (oneway void)provider:(id)arg1 sentBuffer:(int)arg2 withAttachments:(id)arg3;
- (oneway void)provider:(id)arg1 updateControlBarFromDictionaryRepresentation:(id)arg2;
@end

@protocol IMDirectlyObservableObjectObserver
- (void)objectDidPostDirectNotification:(id)arg1;
@end

@protocol IMPreferencePaneControllerProtocol
- (void)updateBottomText;

@optional
- (void)restoreState:(id)arg1;
- (id)encodableState;
@end

@protocol IMPreferencePaneProtocol
- (void)setDelegate:(id)arg1;
- (void)clearWarnings;
- (void)updateAccountActive;
- (void)updateAccountState;
- (void)loadAccount:(id)arg1;
- (id)prefView;

@optional
- (id)currentHelpTag;
- (id)currentBottomText;
- (void)willBeDisplayed;
- (void)wasDisplayed;
- (void)windowBecameMain;
- (void)windowLostFocus;
@end

@protocol IMPreferencePaneUserSetupProtocol
- (id)firstResponderForIdentifier:(id)arg1;
- (id)generateAccountForType:(id)arg1 canContinueSetup:(char *)arg2;
- (id)loadSettings;
- (void)resetAllFields;
- (id)accountTypeIdentifiers;
- (id)accountTypeNames;
- (id)accountTypePanes;

@optional
- (id)currentEditingLoginForIdentifier:(id)arg1;
- (id)currentEditingPasswordForIdentifier:(id)arg1;
@end

@protocol MyStatusControlDelegate
- (void)myStatusControl:(id)arg1 changedStatus:(int)arg2 message:(id)arg3;
- (void)myStatusControl:(id)arg1 addedMessage:(id)arg2 forStatus:(int)arg3;
- (BOOL)usingTemplateMessage;
- (id)nameForStatus:(int)arg1;
- (id)imageForStatus:(int)arg1;
- (id)customMessagesForStatus:(int)arg1;
- (BOOL)validateMessage:(id)arg1 forStatus:(int)arg2;
- (int)currentStatus;
- (int)desiredStatus;
- (BOOL)supportsInvisible;
- (void)setInvisible:(BOOL)arg1;
- (BOOL)isInvisible;
- (id)currentMessage;
- (id)nowPlayingString;
@end

@protocol PeopleListDelegate
- (id)peopleList:(id)arg1 alternateStatusTextForIMHandle:(id)arg2;
- (id)peopleList:(id)arg1 alternateNameTextForIMHandle:(id)arg2;
- (double)peopleList:(id)arg1 alphaForStatus:(unsigned long long)arg2;
- (id)peopleList:(id)arg1 addablePeople:(id)arg2;
- (BOOL)peopleList:(id)arg1 canRemoveRows:(id)arg2;
- (BOOL)canModifyBuddiesInPeopleList:(id)arg1;
- (void)peopleList:(id)arg1 deleteGroup:(id)arg2;
- (id)peopleList:(id)arg1 filterIMHandleFromPasteboard:(id)arg2;
- (void)peopleList:(id)arg1 setGroupsSortOrder:(id)arg2;
- (void)peopleList:(id)arg1 addPersonWithoutID:(id)arg2 toGroup:(id)arg3;
- (BOOL)peopleList:(id)arg1 people:(id)arg2 draggedFromGroups:(id)arg3 toGroup:(id)arg4 atLocation:(unsigned long long)arg5 copying:(BOOL)arg6;
- (BOOL)peopleList:(id)arg1 pastePeople:(id)arg2 intoGroup:(id)arg3 atLocation:(long long)arg4;
- (BOOL)peopleList:(id)arg1 deletePeople:(id)arg2;
- (BOOL)peopleList:(id)arg1 forceDeleteGroup:(id)arg2;
- (id)peopleList:(id)arg1 menuForGroup:(id)arg2;
- (void)peopleListSelectedItemInfoChanged:(id)arg1;

@optional
- (void)peopleList:(id)arg1 tableView:(id)arg2 contentDidResize:(struct CGSize)arg3;
@end

@protocol QLPreviewSlideshowDelegate
- (void)slideshowGoToNextItem:(id)arg1;
@end

@protocol QLPreviewViewDelegate <NSObject>

@optional
- (void)previewView:(id)arg1 willLoadPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 didLoadPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 willShowPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 didShowPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 timedOutLoadingPreviewItem:(id)arg2;
- (BOOL)previewView:(id)arg1 shouldPreviewItem:(id)arg2;
- (id)previewView:(id)arg1 customViewForPreviewItem:(id)arg2;
- (unsigned long long)previewView:(id)arg1 validateDrop:(id)arg2 onPreviewItem:(id)arg3;
- (BOOL)previewView:(id)arg1 acceptDrop:(id)arg2 onPreviewItem:(id)arg3;
- (id)previewView:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forPreviewItem:(id)arg3;
- (BOOL)previewView:(id)arg1 writePreviewItem:(id)arg2 toPasteboard:(id)arg3;
- (unsigned long long)previewView:(id)arg1 draggingSourceOperationMaskForLocal:(BOOL)arg2;
@end

@protocol QLSeamlessOpenerDelegate <NSObject>

@optional
- (id)seamlessOpener:(id)arg1 sourcePreviewViewForPreviewItem:(id)arg2;
- (id)seamlessOpener:(id)arg1 sourceBubbleForPreviewItem:(id)arg2;
- (struct CGRect)seamlessOpener:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (id)seamlessOpener:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3 windowLevel:(long long *)arg4;
- (id)seamlessOpener:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (int)seamlessOpener:(id)arg1 supportForPreviewItem:(id)arg2;
- (id)seamlessOpenerTransientWindow:(id)arg1 level:(long long *)arg2;
- (void)seamlessOpener:(id)arg1 openedItem:(id)arg2 seamlessly:(BOOL)arg3;
- (void)seamlessOpener:(id)arg1 failedToOpenItems:(id)arg2 withError:(id)arg3;
- (id)seamlessOpener:(id)arg1 transientImageAtFrame:(struct CGRect *)arg2 forItem:(id)arg3;
- (id)seamlessOpener:(id)arg1 transientWindowForItem:(id)arg2;
@end

@protocol RecordingFeatureDelegate
- (void)avChat:(id)arg1 participantBeginRecording:(id)arg2;
- (void)avChat:(id)arg1 participantFinishedRecording:(id)arg2;
- (void)avChat:(id)arg1 participantGrantedRecording:(id)arg2;
- (void)avChat:(id)arg1 participantDeniedRecording:(id)arg2;
- (void)avChat:(id)arg1 participantRequestedRecording:(id)arg2;
@end

@protocol RolloverButtonDelegate
- (id)menuForMyRolloverButton:(id)arg1;
@end

@protocol SSFrameBufferViewDelegate
- (void)ssFrameBufferView:(id)arg1 didDropRemotePaths:(id)arg2 atLocalDropDestination:(id)arg3;
@end

@protocol SSSessionDelegate

@optional
- (void)ssSession:(id)arg1 connectDidFail:(int)arg2;
- (void)ssSessionTerminated:(id)arg1;
- (void)ssSession:(id)arg1 wantsCredentialsForAuthenticationTypes:(id)arg2;
- (void)ssSession:(id)arg1 authenticationResult:(int)arg2;
- (void)ssSession:(id)arg1 wantsSessionSelection:(id)arg2 consoleUser:(id)arg3;
- (void)ssSession:(id)arg1 sessionSelectionResult:(int)arg2;
- (void)ssSessionReady:(id)arg1;
- (void)ssSession:(id)arg1 sizeChanged:(struct SSSize)arg2;
- (void)ssSession:(id)arg1 fullScreenUpdateProgress:(double)arg2;
- (void)ssSession:(id)arg1 cursorPositionChanged:(struct SSPoint)arg2;
- (void)ssSessionRemotePasteboardChanged:(id)arg1;
- (void)ssSession:(id)arg1 dragDroppedLocalPaths:(id)arg2 onRemotePath:(id)arg3;
- (void)ssSession:(id)arg1 fileCopyProgressDidUpdate:(id)arg2;
- (void)ssSession:(id)arg1 fileCopyDidComplete:(id)arg2;
- (void)ssSessionBeeped:(id)arg1;
@end

@protocol ServiceFieldControllerDelegate
- (void)handlesFieldDidChange:(id)arg1 service:(id)arg2;
- (id)contextMenuForHandle;
@end

@protocol ServicePopUpDelegate <NSObject>

@optional
- (void)servicePopUpSelectionDidChange:(id)arg1;
@end

@protocol ShowMessagesDelegate
- (void)chatView:(id)arg1 canShowMessages:(BOOL)arg2;
@end

@protocol TranscriptStylePluginProtocol
+ (BOOL)initializeClass:(id)arg1;
+ (void)terminateClass;
@end

@protocol ViewTableDelegate <NSObject>

@optional
- (void)selectionDidChangeForViewTable:(id)arg1;
- (void)openSelectedRowsInViewTable:(id)arg1;
- (void)deleteSelectedRowsInViewTable:(id)arg1;
- (void)quicklookSelectedRowsInViewTable:(id)arg1;
@end

@interface ABPerson (Fez)
+ (id)cardFromPasteboardContent:(id)arg1;
+ (id)cardFromVCardData:(id)arg1;
- (BOOL)mergeVCardWithABPerson:(id)arg1;
- (id)mergedAddressBookMatch;
- (BOOL)openInAddressBookAndEdit:(BOOL)arg1;
- (BOOL)blockingIMHandlePictures;
- (void)setBlockingIMHandlePictures:(BOOL)arg1;
@end

@interface Account : IMAccount <AccountSessionProtocol, AccountBuddyListProtocol, AccountChatProtocol>
{
    BOOL _dontPostNotifications;
    BOOL _needToFlushBuddyList;
    SFCertificateTrustPanel *_trustPanel;
    void *_trustPanelTrust;
    struct __CFArray *_trustPanelCertificates;
}

- (void)clearServiceCaches;
- (void)dealloc;
- (id)_iaPlugin;
- (id)smallImage;
- (id)icon;
- (id)image;
- (void)setSigning:(struct OpaqueSecCertificateRef *)arg1 encryption:(struct OpaqueSecCertificateRef *)arg2;
- (void)showFailedCertificateDialog;
- (void)askAboutEncryptionIfNecessary;
- (void)showForgotPasswordDialog;
- (void)_setTimersForNotJustLoggedIn;
- (void)setIMAccountLoginStatus:(unsigned long long)arg1 errorMessage:(id)arg2 reason:(unsigned int)arg3;
- (void)joinBookmarkedChatRooms;
- (void)nowLoggedIn;
- (void)nowLoggedOut;
- (BOOL)addPeople:(id)arg1 toGroups:(id)arg2 atLocation:(long long)arg3;
- (BOOL)validateChatRoomName:(id)arg1 reason:(id *)arg2;
- (void)certificateTrustSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)loginStatusChanged:(unsigned int)arg1 message:(id)arg2 reason:(unsigned int)arg3 properties:(id)arg4;
- (void)groupsChanged:(id)arg1 error:(id)arg2;
- (Class)imHandleClass;
- (void)loginScriptCommand:(id)arg1;
- (void)logoutScriptCommand:(id)arg1;
- (void)sendScriptCommand:(id)arg1;
- (id)objectSpecifier;
- (void)setScriptName:(id)arg1;
- (id)scriptName;
- (void)setScriptImage:(id)arg1;
- (id)scriptImage;
- (void)setScriptEnabled:(BOOL)arg1;
- (BOOL)scriptEnabled;
- (void)setScriptServiceStatus:(id)arg1;
- (id)scriptServiceStatus;
- (void)setScriptServiceStatusMessage:(id)arg1;
- (id)scriptServiceStatusMessage;
- (id)scriptServiceType;
- (id)scriptConnectionStatus;
- (id)buddies;
- (id)valueInBuddiesWithName:(id)arg1;
- (id)valueInBuddiesWithUniqueID:(id)arg1;
- (id)scriptChats;
- (id)valueInScriptChatsWithUniqueID:(id)arg1;
- (id)valueInScriptChatsWithName:(id)arg1;
- (id)scriptTextChats;
- (id)objectInScriptTextChatsAtIndex:(unsigned long long)arg1;
- (id)valueInScriptTextChatsWithUniqueID:(id)arg1;
- (id)valueInScriptTextChatsWithName:(id)arg1;
- (id)scriptAVChats;
- (id)objectInScriptAVChatsAtIndex:(unsigned long long)arg1;
- (id)valueInScriptAVChatsWithUniqueID:(id)arg1;
- (id)scriptAudioChats;
- (id)objectInScriptAudioChatsAtIndex:(unsigned long long)arg1;
- (id)valueInScriptAudioChatsWithUniqueID:(id)arg1;
- (id)scriptVideoChats;
- (id)objectInScriptVideoChatsAtIndex:(unsigned long long)arg1;
- (id)valueInScriptVideoChatsWithUniqueID:(id)arg1;

@end

@interface AIMAccount : Account
{
    DotMacCaps *_dotMacCaps;
}

- (void)dealloc;
- (void)_unobserveDotMacCaps;
- (void)clearDotMacCaps;
- (void)_finishedGettingDotMacCaps:(id)arg1;
- (id)dotMacCaps;
- (void)showForgotPasswordDialog;

@end

@interface ARDFileTransferButton : NSButton
{
    id _dragDelegate;
    IMHandle *_targetIMHandle;
    BOOL _remote;
    BOOL _dropDestination;
}

- (void)_updateImage;
- (void)awakeFromNib;
- (void)dealloc;
- (void)setDragDelegate:(id)arg1;
- (void)setRemote:(BOOL)arg1;
- (BOOL)isRemote;
- (void)_setDropDestination:(BOOL)arg1;
- (void)setTargetIMHandle:(id)arg1;
- (id)targetIMHandle;
- (void)_doBlink:(BOOL)arg1;
- (void)_blink:(int)arg1;
- (void)_springLoad;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;

@end

@interface AVChatController : NSWindowController <IMAVChatLegacyDelegate, RecordingFeatureDelegate>
{
    AVChatWindow *_avWindow;
    AnimatingTabView *_phaseTab;
    VolumeIndicator *_volumeIndicator;
    AVSegmentedControl *_chatControls;
    NSSlider *_volumeSlider;
    StretchyImageView *_volumeDownIcon;
    StretchyImageView *_volumeUpIcon;
    NSButton *_textReplyButton;
    NSTabView *_invitedPhaseTabView;
    NSTabView *_sourceTabView;
    NSView *_liveSourceView;
    NSTabViewItem *_liveSourceTabViewItem;
    NSAlert *_ardUpgradeCloseAlert;
    VCNotifier *_notifier;
    IMAVChat *_avChat;
    Chat *_textReply;
    NSMutableString *_errorReporterLog;
    NSString *_lastError;
    VCChannelNegotiation *_ardUpgradeNegotiation;
    FezAVRecorder *_avRecorder;
    VideoRecordingAdapter *_videoRecordingAdapter;
    AudioRecordingAdapter *_audioRecordingAdapter;
    NSMutableArray *_recordingFileNames;
    NSMutableArray *_recordingNegotiationQueue;
    NSTimer *_recordingIndicatorTimer;
    NSString *_fileName;
    FZLargeTypeController *_largeTypeController;
    long long _errorCount;
    unsigned int _handledAVShutdown:1;
    unsigned int _windowIsClosing:1;
    unsigned int _displayingPreview:1;
    unsigned int _showedMenuExtra:1;
    unsigned int _recordingIndicatorOn:1;
    unsigned int _isSilent:1;
}

+ (void)closeAllChats;
+ (BOOL)isVideoController;
+ (id)_avChatControllers;
+ (BOOL)_setController:(id)arg1 forAVChat:(id)arg2;
+ (void)_removeControllerForAVChat:(id)arg1;
+ (id)_controllerForChatInitiatedBy:(id)arg1;
+ (id)controllerForAVChat:(id)arg1;
+ (id)_warnTitleVideo:(BOOL)arg1 ARD:(BOOL)arg2;
+ (void)_warnWithReason:(id)arg1 video:(BOOL)arg2 ARD:(BOOL)arg3;
+ (void)_warnMaxVideo:(BOOL)arg1;
+ (void)_warnMultiway:(BOOL)arg1 allPeople:(id)arg2 offenders:(id)arg3 offerText:(BOOL)arg4;
+ (id)_controllerWithAVChat:(id)arg1 ardRequest:(id)arg2 notifier:(id)arg3;
+ (BOOL)isInvitationTo:(id)arg1 anARDUpgrade:(int)arg2;
+ (id)_beginNewInvitationTo:(id)arg1 isVideo:(BOOL)arg2 withARDRole:(int)arg3;
+ (id)initiateInvitationTo:(id)arg1 isVideo:(BOOL)arg2 withARDRole:(int)arg3;
+ (void)_showVideoChatErrorAlert:(id)arg1;
+ (id)buildPersistentInvitationFrom:(id)arg1 isVideo:(BOOL)arg2 notifier:(id)arg3;
+ (id)receiveInvitationFrom:(id)arg1 notifier:(id)arg2;
+ (id)showARDUpgradeRequest:(id)arg1 notifier:(id)arg2;
- (id)description;
- (id)chatControls;
- (void)largeTypeControllerClosing:(id)arg1;
- (void)displayFullScreenString:(id)arg1 forTime:(double)arg2;
- (id)_initWithAVChat:(id)arg1 ardRequest:(id)arg2 notifier:(id)arg3;
- (id)initWithAVChat:(id)arg1;
- (int)effectiveARDRole;
- (void)_vcCapsChanged;
- (void)windowDidLoad;
- (void)sendToItunes:(id)arg1;
- (void)endConferenceEvenWithARDUpgradeSheet:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)addVolumeIndicatorObservers;
- (void)removeVolumeIndicatorObservers;
- (BOOL)windowShouldClose:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)_observeChatNotificationsForAVChat:(id)arg1;
- (void)_unobserveChatNotificationsForAVChat:(id)arg1;
- (void)dealloc;
- (void)windowDidBecomeKeyWindow;
- (void)windowDidResignKeyWindow;
- (id)avChat;
- (id)avWindow;
- (BOOL)isVideo;
- (id)notifier;
- (id)recordingFileNames;
- (id)ardUpgradeNegotiation;
- (void)showSelectedBuddyInfo:(id)arg1;
- (void)showSelectedBuddyProfile:(id)arg1;
- (void)showInAddressBook:(id)arg1;
- (void)addToAddressBook:(id)arg1;
- (void)addABuddy:(id)arg1;
- (void)startChat:(id)arg1;
- (void)sendMessage:(id)arg1;
- (void)composeEMail:(id)arg1;
- (void)sendFile:(id)arg1;
- (id)_buildTextReply;
- (void)textReplyVC:(id)arg1;
- (void)cancelARDSession:(id)arg1;
- (void)inviteToARDAsClient:(id)arg1;
- (void)inviteToARDAsServer:(id)arg1;
- (void)acceptAndClearVCNotifier;
- (void)acceptVC:(id)arg1;
- (void)declineVC:(id)arg1;
- (id)textReply;
- (void)_setTextReply:(id)arg1;
- (void)endConference:(id)arg1;
- (void)updatePhaseTabWithState:(unsigned int)arg1;
- (void)endPreview;
- (void)_scheduleToggleRecordingIndicator:(BOOL)arg1;
- (void)_timerToggleRecordingIndicator;
- (void)showRecordingIndicator:(BOOL)arg1;
- (void)_showRecordingIndicatorOn:(BOOL)arg1;
- (void)_updateLocalUI;
- (void)toggleMute:(id)arg1;
- (void)togglePause:(id)arg1;
- (void)volumeChanged:(id)arg1;
- (void)toggleFullScreen:(id)arg1;
- (id)_remoteIMHandles;
- (void)toggleRecording:(id)arg1;
- (id)layerView;
- (BOOL)isFullScreen;
- (void)_inviteAlertDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)inviteIMHandles:(id)arg1;
- (void)addParticipant:(id)arg1;
- (void)_addiChatTheaterApplications:(id)arg1 toMenu:(id)arg2;
- (id)extraMenuItemsForAVSegmentedControl:(id)arg1;
- (id)extraMenuItemsForChooseBuddyButton:(id)arg1;
- (BOOL)otherMenuItemForChooseBuddyButton:(id)arg1;
- (void)avSegmentedControl:(id)arg1 addIMHandle:(id)arg2;
- (id)_filterIMHandlesForAddButton:(id)arg1;
- (id)avSegmentedControl:(id)arg1 filterIMHandles:(id)arg2;
- (id)chooseBuddyButton:(id)arg1 filterIMHandles:(id)arg2;
- (void)updateAddBuddyButton;
- (void)removeParticipantWithID:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)restoreMenuExtraState;
- (void)postARDNotificationToMenuExtra;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)ARDUpgradeRequestChangedState;
- (void)finishARDUpgrade;
- (id)shortWindowTitle;
- (id)longWindowTitle;
- (void)_updateWindowTitle;
- (void)windowDidResize:(id)arg1;
- (void)windowDidEndLiveResize:(id)arg1;
- (struct CGRect)_textReplyWindowFrame;
- (void)positionARDUpgradeRequestWindow;
- (void)tabView:(id)arg1 willSwitchFromTab:(long long)arg2 toTab:(long long)arg3 effect:(int *)arg4 direction:(int *)arg5;
- (void)_updateAddBuddyButtonState;
- (id)_dragTypes;
- (BOOL)_getInvitablePeople:(id *)arg1 fromPasteboard:(id)arg2;
- (unsigned long long)_operationForDrag:(id)arg1 onPartyID:(id)arg2 isFiles:(char *)arg3;
- (BOOL)_performDragOperation:(id)arg1 onPartyID:(id)arg2 confirmFileSend:(BOOL)arg3;
- (void)_imHandleInfoChanged:(id)arg1;
- (id)_errorLogForNoPackets:(id)arg1 isAudio:(BOOL)arg2;
- (id)_errorLogForDict:(id)arg1 isVideo:(BOOL)arg2;
- (id)_sanitizedErrorLogForDict:(id)arg1;
- (void)_addToErrorReporterLog:(id)arg1;
- (void)_membershipChanged;
- (void)logError:(id)arg1 forParticipant:(id)arg2;
- (BOOL)avChat:(id)arg1 startARDClientToParticipant:(id)arg2;
- (void)avChat:(id)arg1 blockedByFileTransfer:(BOOL)arg2;
- (id)avChat:(id)arg1 bitmapDataForParticipant:(id)arg2;
- (id)errorString;
- (id)errorReporterLog;
- (id)vcErrorReport;
- (void)showErrorReportAndCloseWindowIfNecessaryForChat:(id)arg1;
- (id)_windowForSecurityAlert:(id)arg1;
- (void)handleShutdownAVConference:(id)arg1;
- (void)_showErrorReporterThenInvoke:(id)arg1;
- (void)IMAVChatParticipantAdded:(id)arg1;
- (void)IMAVChatParticipantRemoved:(id)arg1;
- (void)IMAVChatParticipantsWillBeRemoved:(id)arg1;
- (void)IMAVChatStateChanged:(id)arg1;
- (void)IMAVChatParticipantStateChanged:(id)arg1;
- (void)IMAVChatParticipantNetworkStalled:(id)arg1;
- (void)IMAVChatIrisStateChanged:(id)arg1;
- (void)IMAVChatMuteChanged:(id)arg1;
- (void)IMAVChatPauseChanged:(id)arg1;
- (id)defaultSaveName;
- (void)selectPhaseTabWithIdentifier:(id)arg1;
- (BOOL)startAVRecorder;
- (void)_requestRecordingPermissionForParticipant:(id)arg1;
- (void)_recordRequestDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)avChat:(id)arg1 participantRequestedRecording:(id)arg2;
- (void)avChat:(id)arg1 participantGrantedRecording:(id)arg2;
- (void)avChat:(id)arg1 participantDeniedRecording:(id)arg2;
- (void)_recordingFailed;
- (void)avChat:(id)arg1 participantBeginRecording:(id)arg2;
- (void)avChat:(id)arg1 participantFinishedRecording:(id)arg2;
- (void)requestRecording;
- (void)stopRecording;
- (void)clearRecordingFileNames;
- (void)setIsSilent:(BOOL)arg1;
- (void)acceptInvitationScriptCommand:(id)arg1;
- (void)declineInvitationScriptCommand:(id)arg1;

@end

@interface AudioChatController : AVChatController <FezHotKeyHandler, AVChatARDFeatureDelegate>
{
    NSView *_contentContainer;
    NSButton *_recordingButton;
    AbbreviatingTextField *_messageField;
    AbbreviatingTextField *_statusField;
    NSProgressIndicator *_progressIndicator;
    ARDWarningView *_ARDWarningView;
    NSBox *_box;
    AudioConferenceView *_conferenceView;
    BOOL _referToConnectionDoctor;
    BOOL _recordingUnderNegotiation;
    BOOL _recordingNegotiationStatusInConferenceView;
    ARDHUDPanel *_hudPanel;
    ARDPIPButton *_hudPIPButton;
}

- (void)awakeFromNib;
- (void)_positionRecordingButton;
- (id)windowNibName;
- (void)_setupARDWarning:(id)arg1;
- (void)_fixGradient;
- (void)_setupTabForARDChat:(id)arg1;
- (void)_removeContentView;
- (void)windowDidLoad;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (void)windowWillClose:(id)arg1;
- (float)_heightForTab:(id)arg1;
- (void)_setupAutoresizingForTabView:(BOOL)arg1;
- (void)_fitPhaseTab;
- (void)_addParticipantsToConferenceView:(id)arg1;
- (void)selectPhaseTabWithIdentifier:(id)arg1;
- (id)_stringForLocalState:(unsigned int)arg1 reason:(unsigned int)arg2;
- (id)longWindowTitle;
- (struct CGRect)_textReplyWindowFrame;
- (void)showRecordingIndicator:(BOOL)arg1;
- (void)_showRecordingIndicatorOn:(BOOL)arg1;
- (void)_setMessage:(id)arg1;
- (void)showARDWarningHelp:(id)arg1;
- (void)removeParticipantWithID:(id)arg1;
- (void)_ARDServerSessionDidBegin:(BOOL)arg1;
- (void)ARDUpgradeRequestChangedState;
- (void)finishARDUpgrade;
- (void)handleHotKey:(long long)arg1;
- (void)dealloc;
- (void)switchView:(id)arg1;
- (void)logError:(id)arg1 forParticipant:(id)arg2;
- (void)_updatePhaseTabForAVChat:(id)arg1 stateChange:(unsigned int)arg2;
- (void)_clearMessage;
- (void)_informUserRecordingNegotiationBeginning;
- (void)requestRecording;
- (void)avChat:(id)arg1 participantGrantedRecording:(id)arg2;
- (void)avChat:(id)arg1 participantDeniedRecording:(id)arg2;
- (void)stopRecording;
- (BOOL)avFeature:(id)arg1 startARDClientToParticipant:(id)arg2;
- (void)avChat:(id)arg1 participantBeginRecording:(id)arg2;
- (void)IMAVChatParticipantAdded:(id)arg1;
- (void)IMAVChatParticipantStateChanged:(id)arg1;
- (void)IMAVChatStateChanged:(id)arg1;
- (void)IMAVChatIrisStateChanged:(id)arg1;

@end

@interface ARDFullScreenClientController : AudioChatController <AVChatARDFeatureDelegate, SSSessionDelegate, SSFrameBufferViewDelegate>
{
    SSSession *_clientSession;
    unsigned int _clientSessionConnected:1;
    unsigned int _firstUpdate:1;
    struct CGSize _currentRemoteSize;
    NSData *_credentials;
    ARDImageView *_clientView;
    ShadowView *_shadowView;
    NSScrollView *_scrollView;
    unsigned int _hudIsClosing:1;
    unsigned int _endConferenceWhenDone:1;
    unsigned int _inTransition:1;
    unsigned int _sentConnection:1;
    unsigned int _closeWindowAfterTransition:1;
    NSWindow *_mainWindow;
    struct _RectPosition _HUDPosition;
    unsigned long long _HUDScreenIndex;
    float _HUDTitleMargin;
    struct CGRect _cachedLocalVisibleRect;
    ARDLocalDesktopImage *_localDesktop;
    NSTimer *_localSnapshotTimer;
    CAAnimation *_animation;
    int _mainWindowState;
    unsigned int _discreteGPUEnabled:1;
}

- (void)windowDidLoad;
- (void)dealloc;
- (BOOL)isClientConnected;
- (void)_closeHUD;
- (void)_disconnectClient;
- (BOOL)avFeature:(id)arg1 startARDClientToParticipant:(id)arg2;
- (BOOL)isShowingRemoteScreen;
- (long long)_HUDScreenIndex;
- (void)_adjustHudPanelLevelBehindDock:(BOOL)arg1;
- (int)ARDWindowState;
- (void)setARDWindowState:(int)arg1;
- (void)_loadHUDPosition;
- (void)_saveHUDPosition;
- (void)_makeARDViewKey;
- (void)transitionDidFinish:(id)arg1;
- (struct CGRect)_currentHUDContentFrame;
- (struct CGRect)_HUDContentFrameWithImageSize:(struct CGSize)arg1 relativeTo:(struct CGRect)arg2;
- (void)_setHUDContentFrame:(struct CGRect)arg1 animate:(BOOL)arg2;
- (void)_snapHUDPanel;
- (struct CGRect)_clientViewFrame;
- (struct CGImage *)localImageScreenshot;
- (id)remoteImageScreenshot;
- (void)_switchScreenNow:(id)arg1;
- (void)_switchScreen;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)_transitionToRemote:(BOOL)arg1 swap:(BOOL)arg2;
- (void)_startLocalSnapshotTimer;
- (void)_stopLocalSnapshotTimer;
- (void)_localPipImageRefresh:(id)arg1;
- (void)_transitionComplete:(id)arg1;
- (void)_updateControllerState;
- (id)_windowTitleForRemote:(BOOL)arg1;
- (void)_updateControllerStateForRemote:(BOOL)arg1;
- (void)finishARDUpgrade;
- (void)_showControllerAndPrepare;
- (void)_centerRemoteViewInFullScreen;
- (void)transferFile:(id)arg1;
- (void)switchView:(id)arg1;
- (void)showRemoteScreen:(id)arg1;
- (void)showLocalScreen:(id)arg1;
- (void)IMAVChatStateChanged:(id)arg1;
- (void)IMAVChatParticipantStateChanged:(id)arg1;
- (void)endConference:(id)arg1;
- (void)_handleSystemScreenChange:(id)arg1;
- (void)_mainWindowDidBecomeKey:(id)arg1;
- (void)_mainWindowDidResignKey:(id)arg1;
- (void)_ardViewDidResignKey:(id)arg1;
- (void)_hudPanelWillClose:(id)arg1;
- (void)_hudPanelDidMove:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)tabView:(id)arg1 willSwitchFromTab:(long long)arg2 toTab:(long long)arg3 effect:(int *)arg4 direction:(int *)arg5;
- (void)_authorizeFileTransferFrom:(id)arg1 to:(id)arg2 toServer:(BOOL)arg3;
- (BOOL)prepareForDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)ssSession:(id)arg1 connectDidFail:(int)arg2;
- (void)ssSessionTerminated:(id)arg1;
- (void)ssSession:(id)arg1 wantsCredentialsForAuthenticationTypes:(id)arg2;
- (void)ssSession:(id)arg1 authenticationResult:(int)arg2;
- (void)ssSessionReady:(id)arg1;
- (void)ssSession:(id)arg1 sizeChanged:(struct SSSize)arg2;
- (void)ssSession:(id)arg1 fullScreenUpdateProgress:(double)arg2;
- (void)ssSession:(id)arg1 cursorPositionChanged:(struct SSPoint)arg2;
- (void)ssSessionRemotePasteboardChanged:(id)arg1;
- (void)ssSession:(id)arg1 dragDroppedLocalPaths:(id)arg2 onRemotePath:(id)arg3;
- (void)ssFrameBufferView:(id)arg1 didDropRemotePaths:(id)arg2 atLocalDropDestination:(id)arg3;

@end

@interface ARDHUDPanel : NSPanel
{
    BOOL _mouseIsDown;
    BOOL _didPerformMove;
}

- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (double)animationResizeTime:(struct CGRect)arg1;
- (void)_finishWindowDrag;
- (void)sendEvent:(id)arg1;

@end

/*@interface ARDImageView : SSFrameBufferView
{
    BOOL _resigned;
    int _state;
    unsigned long long _options;
    BOOL _mouseIsOverClient;
    BOOL _trackingAreaSet;
    struct CGRect _localDropZone;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
@property BOOL resigned;
- (void)drawRect:(struct CGRect)arg1;
@property int remoteEventState;
- (void)_clearTrackingAreas;
- (void)updateTrackingAreas;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)setLocalDropZone:(struct CGRect)arg1;
- (id)hitTest:(struct CGPoint)arg1;

@end*/

@interface ARDLocalDesktopImage : NSObject
{
    NSSet *_fezWindows;
    unsigned int _fezCID;
    unsigned int _displayID;
}

- (id)init;
- (void)dealloc;
@property unsigned int displayID;
- (void)_setWindowNumbersToIgnore:(id)arg1;
- (struct CGImage *)_captureWindows:(unsigned int *)arg1 count:(long long)arg2;
- (struct CGImage *)snapshotIgnoringWindows:(id)arg1;

@end

@interface ARDOverlayContentView : NSView
{
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface CustomFrameSavingWindow : NSWindow
{
    id _frameSaveDelegate;
    NSString *_autosaveFrameName;
    BOOL _restoringWindowFrame;
    BOOL _registered;
}

+ (struct CGRect)autosavedRectForFrameName:(id)arg1;
+ (void)saveRect:(struct CGRect)arg1 forFrameName:(id)arg2;
- (void)_restoreFrameFromAutosaveName;
- (struct CGRect)savedFrameForName:(id)arg1;
- (struct CGRect)savedFrame;
- (id)targetedFrameAutosaveName;
- (void)dealloc;
- (void)setTargetedFrameAutosaveName:(id)arg1;
- (id)frameSaveDelegate;
- (void)setFrameSaveDelegate:(id)arg1;
- (id)targetView;
- (struct CGRect)rectToSave;
- (void)saveFrameIfNecessary;
- (void)_customWindowDidMoveNotification:(id)arg1;
- (void)_customWindowDidResizeNotification:(id)arg1;

@end

@interface SecureWindow : CustomFrameSavingWindow
{
    BOOL _isCapturingMiniWindowImage;
}

- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;
- (void)dealloc;
- (BOOL)isKeyWindow;
- (BOOL)isMainWindow;
- (void)setIsCapturingMiniWindowImage:(BOOL)arg1;

@end

@interface AVChatWindow : SecureWindow
{
    double _resizeTime;
}

- (void)setConstantAnimationResizeTime:(double)arg1;
- (double)animationResizeTime:(struct CGRect)arg1;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (void)setAlphaValue:(double)arg1;

@end

@interface ARDOverlayWindow : AVChatWindow
{
}

- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (void)setTitle:(id)arg1;
- (void)configureContentView;

@end

@interface ARDPIPButton : NSButton
{
    id _dragDelegate;
    BOOL _remote;
    BOOL _dropDestination;
    NSString *_remoteName;
    NSTrackingArea *_trackingArea;
    NSExtendedBox *_labelBox;
    AbbreviatingTextField *_label;
}

- (void)awakeFromNib;
- (void)dealloc;
- (void)setDragDelegate:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)_updateTracking;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)_setLabelText:(id)arg1;
- (void)_setDropDestination:(BOOL)arg1;
- (void)setRemote:(BOOL)arg1;
- (BOOL)isRemote;
@property(copy) NSString *remoteName;
- (void)_doBlink:(BOOL)arg1;
- (void)_blink:(int)arg1;
- (void)_springLoad;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;

@end

@interface ARDWarningView : NSView
{
    GradientView *_gradientView;
    NSTextField *_message;
    NSImageView *_icon;
    NSButton *_help;
    NSExtendedBox *_box;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (double)autosizeHeight;
- (void)setStringValue:(id)arg1;
- (id)stringValue;

@end

@interface AVChatARDFeature : IMAVChatFeature
{
    AVChatController *_ardUpgradeController;
    CDStruct_f46c0635 *_RFBConnectionResult;
    int _ardRole;
}

- (void)dealloc;
@property(nonatomic, assign) AVChatController *upgradeController;
- (void)delegateChangedTo:(id)arg1;
- (CDStruct_f46c0635 *)connectionResult;
- (void)setConnectionResult:(CDStruct_f46c0635 *)arg1;
- (void)_cleanupARDResult;
- (BOOL)setConnection:(CDStruct_75a3e9f3 *)arg1 withHandle:(id)arg2;
- (unsigned int)addStatusForIMHandle:(id)arg1 asVideo:(BOOL)arg2 ardRole:(int)arg3;
- (void)_updatePeopleListARDStatus;
- (void)participant:(id)arg1 changedFromState:(unsigned int)arg2 toState:(unsigned int)arg3;
- (BOOL)handleGenericAVMessageFromParticipant:(id)arg1 type:(unsigned int)arg2 userInfo:(id)arg3;
- (void)startARDClientToParticipant:(id)arg1;
- (BOOL)hasAddableParticipantsOtherwiseStatus:(unsigned int *)arg1;

@end

@interface AVChatAuxVideoFeature : IMAVChatFeature <FrameListener>
{
    unsigned int _auxVideoRunningOrUnderNegotiation:1;
    unsigned int _auxInputAllowed:1;
    unsigned int _watchingForAuxVideo:1;
}

- (id)initWithAVChat:(id)arg1;
- (void)dealloc;
- (void)participantRemoved:(id)arg1;
- (void)conferenceEndedWithReason:(unsigned int)arg1 andError:(int)arg2;
- (void)participantInvited:(id)arg1;
- (void)participant:(id)arg1 changedFromState:(unsigned int)arg2 toState:(unsigned int)arg3;
- (id)auxVideoFeatureDelegate;
- (BOOL)isAuxVideoRunningOrUnderNegotiation;
- (void)setAuxVideoRunningOrUnderNegotiation:(BOOL)arg1;
- (BOOL)_shouldAllowIncomingAuxVideo;
- (BOOL)_shouldAllowOutgoingAuxVideo;
- (void)_removeAllEndedParticipantsInAuxVideo;
- (void)_startAuxVideo;
- (void)_setupAuxVideo;
- (void)_setWatchForFirstAuxVideoFrame:(BOOL)arg1;
- (void)frameNotifier:(id)arg1 postedNewFrame:(id)arg2;
- (void)_endAuxInput;
- (void)_auxVideoControllerChangedState:(id)arg1;
- (void)_auxVideoControllerChangedReplacementMode:(id)arg1;
- (BOOL)hasAddableParticipantsOtherwiseStatus:(unsigned int *)arg1;

@end

@interface AVCloseButton : NSButton
{
    BOOL _small;
}

- (void)_configureImages;
- (void)awakeFromNib;
- (void)setSmall:(BOOL)arg1;
- (void)setMouseOver:(BOOL)arg1;
- (void)setMouseOver:(BOOL)arg1 down:(BOOL)arg2;
- (void)mouseDown:(id)arg1;

@end

@interface AVParticipantView : NSView
{
    IMAVChatParticipant *_participant;
    BOOL _isLocalParticipant;
    BOOL _invitedByMe;
    BOOL _isNotifier;
    IMHandle *_handle;
    FileTransfer *_fileTransfer;
    VCChannelNegotiation *_ardUpgradeNegotiation;
    BOOL _hasDropHighlight;
    BOOL _whiteText;
    int _stage;
    int _previousStage;
    int _recordingStage;
    NSTimer *_recordingMessageTimer;
    Animator *_animator;
    float _animationDistance;
    int _configurationAt;
    int _configurationTo;
    int _configurationNext;
    long long _viewTag;
    long long _buttonTag;
    NSView *_invitedContainer;
    NSExtendedBox *_invitedBGView;
    AbbreviatingTextField *_invitedNameField;
    AbbreviatingTextField *_invitedStatusField;
    NSView *_connectedContainer;
    NSTabView *_connectedTabView;
    AbbreviatingTextField *_connectedNameField;
    AVCloseButton *_connectedCloseButton;
    VolumeIndicator *_vuMeter;
    NSTextField *_connectedARDField;
    MultiBuddyImageView *_connectedIconView;
    ShadowView *_shadowView;
    NSView *_statusContainer;
    NSExtendedBox *_statusBGView;
    MultiBuddyImageView *_statusIconView;
    AbbreviatingTextField *_statusLine1;
    AbbreviatingTextField *_statusLine2;
    ColoredSpinner *_spinner;
    NSProgressIndicator *_progress;
    AVCloseButton *_closeButton;
    float _statusTextDwForSpinner;
    StretchyImageView *_notifierGreenBGView;
    StretchyImageView *_notifierMediumView;
    NSTextField *_notifierNumberField;
    Animator *_notifierAnimator;
    BOOL _hasShownTimestamp;
}

+ (id)centeredImageFromBaseImageName:(id)arg1 overlayColor:(id)arg2 inRect:(struct CGRect)arg3 maxSize:(struct CGSize)arg4 inView:(id)arg5;
+ (id)bannerCloseImageWithSize:(unsigned long long)arg1 mouseState:(unsigned long long)arg2;
- (void)_removeInvitedContainer;
- (void)_removeConnectedContainer;
- (void)willBeRemoved;
- (id)_notificationString:(id)arg1;
- (void)_setupInvitedContainer;
- (void)_startVUMeter;
- (void)_arrangeAudioOnlyUI;
- (void)_showBuddyPictureShadow:(BOOL)arg1;
- (void)_setupAudioOnlyUI;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)_pictureChanged:(id)arg1;
- (void)_setupConnectedContainer;
- (void)_setStatusTextColor:(id)arg1;
- (void)_setStatusTextAlpha:(float)arg1;
- (void)setStatusText:(id)arg1;
- (void)_insetView:(id)arg1 left:(float)arg2 right:(float)arg3;
- (id)_remoteParticipantNames;
- (void)showTimeField;
- (void)_getEffectiveEndedReason:(unsigned int *)arg1 error:(int *)arg2;
- (id)_callerParticipant;
- (void)_setupStatusContainer;
- (id)_initWithParticipant:(id)arg1 handle:(id)arg2 fileTransfer:(id)arg3 isNotifier:(BOOL)arg4 ardUpgrade:(id)arg5 saveNib:(BOOL)arg6;
- (id)initWithParticipant:(id)arg1 isNotifier:(BOOL)arg2 ardUpgrade:(id)arg3 saveNib:(BOOL)arg4;
- (id)initAsAuthorizationRequest:(id)arg1 isNotifier:(BOOL)arg2;
- (id)initAsFileTransfer:(id)arg1 isNotifier:(BOOL)arg2;
- (void)awakeFromNib;
- (void)dealloc;
- (id)participant;
- (id)handle;
- (void)_handleInfoChanged:(id)arg1;
- (void)_stopNotifierThrob;
- (void)_setupNumberFieldInBGFrame:(struct CGRect)arg1;
- (void)_setupNotifierUIWithNumber:(BOOL)arg1;
- (void)startMultiwayThrob;
- (double)dxToFitText;
- (void)updateNotifierUI;
- (float)bannerHeight;
@property BOOL usesWhiteText;
@property BOOL hasDropHighlight;
- (void)drawRect:(struct CGRect)arg1;
- (void)_updateStatusLineWidths;
- (void)_startSpinner;
- (void)_stopSpinner;
@property double spinnerValue;
- (void)showCloseButtonOver:(BOOL)arg1 down:(BOOL)arg2;
- (void)hideCloseButton;
- (struct CGRect)closeButtonFrame;
- (void)_clearTrackingRects;
- (BOOL)updateMouseTracking:(BOOL)arg1 checkingMouse:(BOOL)arg2 atWindowCoordinates:(struct CGPoint)arg3;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (float)animator:(id)arg1 contourForProgress:(double)arg2;
- (void)_updateNotifierProgress:(float)arg1;
- (void)animator:(id)arg1 doStep:(double)arg2 lastStep:(BOOL)arg3;
- (BOOL)isInvited;
- (void)startConnecting;
- (void)_animateTo:(int)arg1;
- (void)_showStatus;
- (void)_hideStatus;
- (void)_updateConnectedUIConfiguration;
- (void)connect;
- (void)_timedSetRecordingStage:(id)arg1;
- (void)_setRecordingStage:(int)arg1;
- (void)recordingPermissionRequested;
- (void)recordingPermissionGranted;
- (void)recordingPermissionDenied;
- (void)recordingPermissionForgotten;
- (void)finishARDUpgrade;
- (BOOL)isConnected;
- (void)disconnect;
- (BOOL)isDisconnected;
- (void)_mouseUpOutsideCloseButton:(id)arg1;
- (void)closeParticipant:(id)arg1;

@end

@interface AVSegmentedControl : NSSegmentedControl <NSMenuDelegate>
{
    id _avSegmentedControlTarget;
    NSMenu *_addBuddyMenu;
    BOOL _menuIsValid;
    BOOL _registered;
    Account *_account;
    BOOL _muted;
    BOOL _paused;
    BOOL _muteAllowed;
    BOOL _pauseAllowed;
    BOOL _showingPause;
    BOOL _shouldShowPause;
}

+ (Class)cellClass;
- (long long)segmentForTag:(long long)arg1;
- (void)_configureButtons;
- (void)dealloc;
- (void)awakeFromNib;
- (void)_flagsChanged:(id)arg1;
- (void)setFullScreenEnabled:(BOOL)arg1;
- (void)setAddTooltip:(id)arg1;
- (void)setAddEnabled:(BOOL)arg1;
- (BOOL)isAddEnabled;
- (void)setMuted:(BOOL)arg1;
- (BOOL)isMuted;
- (void)setMuteAllowed:(BOOL)arg1;
- (BOOL)isMuteAllowed;
- (void)setPauseAllowed:(BOOL)arg1;
- (BOOL)isPauseAllowed;
- (void)setPaused:(BOOL)arg1;
- (BOOL)isPaused;
- (void)_showPauseUI;
- (void)_showMuteUI;
- (void)setActionTarget:(id)arg1;
- (void)_sendActionForSegmentType:(int)arg1;
- (void)selfAction:(id)arg1;
- (void)_personSelected:(id)arg1;
- (void)_addItemForAccount:(id)arg1 atIndex:(int *)arg2;
- (void)_addItemForIMHandle:(id)arg1 toMenu:(id)arg2 atIndex:(int)arg3 showingDetails:(BOOL)arg4;
- (void)_addItemForEmptyList;
- (void)_registerForNotifications;
- (void)_rebuildMenuIfNecessary;
- (void)menuWillOpen:(id)arg1;
- (void)invalidateAddMenu;
- (void)setAccount:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;

@end

@interface AVSlider : NSControl
{
    id _delegate;
    double _minValue;
    double _maxValue;
    double _leftCapWidth;
    double _rightCapWidth;
    NSImage *_backgroundImage;
    NSImage *_thumbImage;
    BOOL _drawsBorder;
    BOOL _mouseDown;
}

+ (Class)cellClass;
- (void)awakeFromNib;
- (void)_clearImages;
- (void)dealloc;
- (void)_generateBackgroundImage:(struct CGRect)arg1;
- (void)_generateThumbImage:(struct CGRect)arg1;
- (struct CGRect)_thumbRect;
- (void)drawRect:(struct CGRect)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
@property(nonatomic) double minValue;
@property(nonatomic) double maxValue;
- (void)_trackMouseFrom:(struct CGPoint)arg1 trackWidth:(double)arg2;
- (void)mouseDown:(id)arg1;
@property(nonatomic) BOOL drawsBorder; // @synthesize drawsBorder=_drawsBorder;
@property(nonatomic) double rightCapWidth; // @synthesize rightCapWidth=_rightCapWidth;
@property(nonatomic) double leftCapWidth; // @synthesize leftCapWidth=_leftCapWidth;
@property(nonatomic, assign) id delegate; // @synthesize delegate=_delegate;

@end

@interface AVTimeSlider : AVSlider
{
    NSDictionary *_fontAttributes;
}

- (void)awakeFromNib;
- (void)dealloc;
- (id)_attributedStringForTimeInterval:(double)arg1 negative:(BOOL)arg2;
- (void)_drawText;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface AVVolumeSlider : AVSlider
{
    NSButton *_muteButton;
    double _preMuteDoubleValue;
}

- (void)_createMuteButton;
- (void)awakeFromNib;
- (void)dealloc;
- (void)_toggleMute:(id)arg1;
- (void)setDoubleValue:(double)arg1;
- (void)mouseDown:(id)arg1;

@end

@interface AbbreviatingTextField : NSTextField
{
    BOOL _verticallyCentered;
    NSShadow *_shadow;
    BOOL _sendsActionOnClick;
    NSString *_axDescriptionAttribute;
}

- (void)_commonInitForTextField;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)setShadow:(id)arg1;
- (id)shadow;
- (void)_setColor:(id)arg1 offset:(float)arg2 blurRadius:(float)arg3;
- (void)setNoShadow;
- (void)setWhiteBevel;
- (void)setStrongBlackShadow;
- (void)setVerticallyCentered:(BOOL)arg1;
- (BOOL)isVerticallyCentered;
- (void)drawRect:(struct CGRect)arg1;
- (void)setSendsActionOnClick:(BOOL)arg1;
- (BOOL)sendsActionOnClick;
- (void)_sendAction;
- (void)mouseDown:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)performClick:(id)arg1;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityTitleAttribute;
- (id)accessibilityDescriptionAttribute;
- (void)setLocalizedAccessibilityDescriptionAttribute:(id)arg1;

@end

@interface AccessibilityIgnoredButton : NSButton
{
}

- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeNames;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)acceptsFirstResponder;

@end

@interface AccountHeader : NSTableHeaderView
{
}

- (void)mouseDown:(id)arg1;

@end

@interface AccountPreferencesTableCell : NSTextFieldCell
{
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityValueAttribute;

@end

@interface ScrollerStyleScrollView : NSScrollView
{
}

- (void)setScrollerStyle:(long long)arg1;

@end

@interface AccountsScrollView : ScrollerStyleScrollView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface AccountsTableController : NSObject <NSTableViewDelegate, NSTableViewDataSource>
{
    PeopleListController *_peopleListController;
    AccountsScrollView *_accountsScrollView;
    NSTableView *_accountsTable;
    NSArray *_currentAccounts;
    NSArray *_updatedAccounts;
    unsigned int _someAccountsNeedToBeShown:1;
}

- (id)init;
- (void)awakeFromNib;
- (void)dealloc;
- (unsigned long long)maximumNumberOfRowsToDisplay;
- (double)accountsTableHeightForUpdatedAccounts:(BOOL)arg1;
- (void)updateTable;
- (void)_setUpdatedAccounts:(id)arg1;
- (void)updateAccounts;
- (BOOL)someAccountsNeedToBeShown;
- (void)updateRowForAccount:(id)arg1;
- (void)clearAllAccounts;
- (void)layoutRow:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)updateRow:(id)arg1;
- (void)_updateLayoutToMatchScrollerStyle;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)tableView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;

@end

@interface ActionsController : NSObject
{
    NSPopUpButton *_eventsPopUp;
    NSButton *_playSoundCheckbox;
    NSButton *_repeatSoundCheckbox;
    NSButton *_speakCheckbox;
    NSButton *_bounceDockCheckbox;
    NSButton *_repeatBounceCheckbox;
    NSButton *_runAppleScriptCheckbox;
    NSButton *_oneShotCheckbox;
    NSPopUpButton *_appleScriptPopup;
    NSTextField *_oneShotLineTwo;
    NSSoundPopUpButton *_soundsPopUp;
    NSSlider *_volumeSlider;
    IMHandle *_buddy;
    NSMutableDictionary *_actionSet;
    int _eventNumber;
    BOOL _eventActionsChanged;
    BOOL _actionsChanged;
    id _delegate;
    NSArray *_availableScripts;
}

+ (id)localizedTitleForIMEvent:(int)arg1;
+ (void)willSleepNotification:(id)arg1;
+ (void)didWakeNotification:(id)arg1;
+ (void)initialize;
+ (id)_prefsKey:(id)arg1;
+ (id)fullPathOfSoundInActions:(id)arg1;
+ (BOOL)continuousVCRingEnabled;
+ (void)setContinuousVCRingEnabled:(BOOL)arg1;
+ (void)_adjustSpeechVolume;
+ (BOOL)_speakText:(id)arg1;
+ (void)_rebounce:(id)arg1;
+ (void)cancelRebounces;
+ (void)_appDidBecomeActive:(id)arg1;
+ (void)_repeatSound:(id)arg1;
+ (void)_playSoundFromFile:(id)arg1 repeat:(BOOL)arg2;
+ (void)_stopRepeatingSoundFromFile:(id)arg1;
+ (id)_actionsForEvent:(int)arg1 withIMHandle:(id)arg2;
+ (void)_setActions:(id)arg1 forEvent:(int)arg2 withIMHandle:(id)arg3;
+ (void)_announceEvent:(int)arg1 withIMHandle:(id)arg2 withObject:(id)arg3 forChat:(id)arg4;
+ (BOOL)_shouldBeSilentForIMHandle:(id)arg1;
+ (BOOL)executeAppleScriptHandlersForEvent:(int)arg1 withIMHandle:(id)arg2 withObject:(id)arg3;
+ (BOOL)executeAppleScriptHandlersForEvent:(int)arg1 withIMHandle:(id)arg2 withObject:(id)arg3 withChat:(id)arg4;
+ (id)_buildActionsForEvent:(int)arg1 withIMHandle:(id)arg2;
+ (void)_executeAppleScriptHandlersForEventDictionary:(id)arg1;
+ (void)stopEventActions:(id)arg1;
+ (void)failedEventHandlerAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)setDelegate:(id)arg1;
- (void)awakeFromNib;
- (void)dealloc;
- (BOOL)hasChangesPending;
- (void)_rememberEventChanges;
- (void)complete;
- (void)saveChanges;
- (void)loadFromDefaults;
- (void)setBuddy:(id)arg1;
- (void)_actionsDidChange:(id)arg1;
- (id)buddy;
- (void)_updateEventsPopUpIcons;
- (void)_addItemWithTag:(int)arg1;
- (void)_fillEventsPopUpWith:(int)arg1;
- (void)fillEventsPopUp:(BOOL)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)_addScriptsToPopUpFromPath:(id)arg1;
- (void)_fillAppleScriptPopup;
- (void)_enableOneShot:(BOOL)arg1;
- (id)_actionsForEvent:(int)arg1;
- (void)_updateActions;
- (void)eventSelected:(id)arg1;
- (BOOL)_anyActionsChecked;
- (void)_actionsChanged;
- (void)actionChecked:(id)arg1;
- (void)soundSelected:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)volumeChanged:(id)arg1;
- (void)appleScriptSelected:(id)arg1;
- (void)noAvailableScripts:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (id)titleForSoundFile:(id)arg1;
- (void)_createiChatScriptDirectoryIfNecessary;
- (void)_selectScriptWithFilename:(id)arg1;
- (void)_displayAlertForCouldNotCopyScript:(id)arg1;
- (void)_overwriteScriptAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_selectAppleScriptPathDidEnd:(id)arg1 returnCode:(long long)arg2;
- (void)findScriptFile:(id)arg1;
- (void)revealAppleScriptDirectory:(id)arg1;

@end

@interface ActionsControllerHandler : NSObject <IMActionsControllerHandler>
{
    NSDate *_lastLoggedInDate;
}

+ (id)sharedInstance;
- (void)dealloc;
- (id)performActionsForEvent:(int)arg1 withIMHandle:(id)arg2 withObject:(id)arg3 withChat:(id)arg4 silent:(BOOL)arg5;

@end

@interface Chat : IMChat
{
    AVChatController *_pendingVCDecline;
    NSArray *_myAddressableNames;
    NSAttributedString *_savedInputLine;
    NSMutableArray *_recentParticipants;
    NSMutableSet *_allGroupchatHashes;
    unsigned long long _unreadMessageCount;
    double _lastAutoreplyTimeInterval;
    InstantMessage *_invitationReplyMessage;
    unsigned int _isFakeContainerForNotifier:1;
    unsigned int _isSilent:1;
}

+ (id)resurrectChatFromInfoDictionary:(id)arg1;
- (id)_initWithGUID:(id)arg1 account:(id)arg2 style:(unsigned char)arg3 roomName:(id)arg4 chatItems:(id)arg5 participants:(id)arg6;
- (id)_initWithGUID:(id)arg1 account:(id)arg2 style:(unsigned char)arg3 directConnectionStatus:(long long)arg4 roomName:(id)arg5 chatItems:(id)arg6 participants:(id)arg7;
- (id)initFakeChatContainingFirstMessageOfChat:(id)arg1;
- (void)dealloc;
- (id)instantMessageForInputLineString:(id)arg1 baseWritingDirection:(long long)arg2 flags:(unsigned long long)arg3;
- (void)sendMessage:(id)arg1;
- (void)_doPendingVCDecline;
- (int)aggregateChatStyle;
- (BOOL)isActive;
- (BOOL)isSavedChat;
- (id)firstInterestingMessage;
- (id)lastInterestingMessage;
- (id)preferencesKey;
- (BOOL)_isDuplicate:(id)arg1;
- (id)_myAddressableNames;
- (void)_clearMyAddressableNames;
- (void)_scanMessageForMyAddressableNames:(id)arg1;
- (void)_processMessageForActionsIfNeccessary:(id)arg1;
- (void)_sendAutoreplyMessageFor:(id)arg1;
- (void)_autoreplyToMessageIfNecessary:(id)arg1;
- (void)_updateRecentParticipants:(id)arg1;
- (BOOL)shouldInsertChatItem:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)processChatItem:(id)arg1;
- (void)setUnreadMessageCount:(unsigned long long)arg1;
- (unsigned long long)unreadMessageCount;
- (void)incrementUnreadMessageCount;
- (void)markMessagesAsRead;
- (void)showDockNotificationWithMessage:(id)arg1;
- (void)setPendingVCDecline:(id)arg1;
- (id)savedPrefKey;
- (id)_silentPrefKey;
- (void)setSilent:(BOOL)arg1;
- (BOOL)isSilent;
- (void)setInvitationReplyMessage:(id)arg1;
- (id)invitationReplyMessage;
- (void)setSavedInputLine:(id)arg1;
- (id)savedInputLine;
- (id)recentParticipants;
- (id)talIdentifierForKey:(id)arg1;
- (long long)compareChat:(id)arg1;
- (id)persistentChatID;
- (id)persistentChatInfo;
- (id)scriptID;
- (id)scriptService;
- (id)scriptParticipants;
- (id)scriptName;
- (id)scriptInvitationMessage;
- (id)scriptChatType;
- (id)scriptSubject;
- (id)scriptSecure;
- (id)scriptInvitation;
- (id)scriptJoinState;
- (id)scriptActive;
- (id)scriptStarted;
- (id)scriptUpdated;
- (id)objectSpecifier;
- (void)acceptInvitationScriptCommand:(id)arg1;
- (void)declineInvitationScriptCommand:(id)arg1;
- (void)sendInChatScriptCommand:(id)arg1;

@end

@interface ActiveChat : Chat
{
}

@end

@interface AddBuddy : NSObject
{
    NSWindow *_recordWindow;
    NSView *_topReferenceView;
    NSTextField *_addCardTitle;
    CollapseView *_accountsCollapseView;
    ServicePopUp *_toAccountPopup;
    CollapseView *_groupsCollapseView;
    NSPopUpButton *_proposedGroupPopUpButton;
    ExtendedComboBox *_proposedFirstNameTextField;
    ExtendedComboBox *_proposedLastNameTextField;
    NSButton *_disclosure;
    NSView *_pickerArea;
    NSView *_titleView;
    ABPeoplePickerView *_pickerView;
    NSButton *_proposedAddButton;
    StatusTokenFieldController *_proposedAccountNameField;
    PeoplePicker *_picker;
    NSWindow *_buddyWindow;
    IMHandle *_imHandle;
    ABPerson *_abPerson;
    NSArray *_accounts;
    NSString *_targetGroup;
    PeopleListController *_peopleListController;
    NSMutableArray *_abAddressesCache;
    NSMutableArray *_abFirstNameCache;
    NSMutableArray *_abLastNameCache;
    NSMutableDictionary *_abFirstNameToLastNameCache;
    NSMutableDictionary *_abLastNameToFirstNameCache;
    IMHandle *_cachedSelectedIMHandle;
    ABPerson *_cachedSelectedPerson;
    NSString *_cachedKeyName;
    NSArray *_cachedPossibleNames;
    struct CGRect _originalBuddyListFrame;
    struct CGRect _initialSheetBuddyListFrame;
    struct CGRect _smallSheetBuddyListFrame;
    struct CGRect _largeSheetBuddyListFrame;
    struct CGSize _minExpandedSheetSize;
    struct CGSize _collapsedSheetSize;
    struct CGSize _expandedSheetSize;
    unsigned int _lockAccountSelection:1;
}

- (id)_init;
- (id)initWithAccounts:(id)arg1;
- (id)initWithPeopleListController:(id)arg1;
- (void)awakeFromNib;
- (void)dealloc;
- (void)openForABPerson:(id)arg1 groups:(id)arg2 buddyWindow:(id)arg3;
- (void)openForABPerson:(id)arg1 imHandle:(id)arg2 groups:(id)arg3 buddyWindow:(id)arg4;
- (void)openForIMHandle:(id)arg1 groups:(id)arg2 buddyWindow:(id)arg3;
- (void)openForNewIMHandleWithGroups:(id)arg1 buddyWindow:(id)arg2;
- (void)_configureAccountsAndGroups;
- (void)_configureTitleForLockedIMHandle;
- (void)_configurePeoplePickerPaletteForMe;
- (void)_registerForNotifications;
- (void)_rebuildAddressBookInformation;
- (void)_clearFields;
- (void)_setAccountName:(id)arg1 service:(id)arg2 force:(BOOL)arg3;
- (id)_insertHandlesIntoABPerson:(id)arg1;
- (void)_setupNewRecordSheet;
- (void)_recordSheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)_displayRecordSheet;
- (void)dismissRecordSheet:(id)arg1;
- (struct CGRect)rectForRecordSheetResizedTo:(struct CGSize)arg1;
- (void)setIMHandle:(id)arg1;
- (void)setTargetGroup:(id)arg1;
- (void)setAccountSelectionLocked:(BOOL)arg1;
- (void)_setABPerson:(id)arg1;
- (void)_setBuddyWindow:(id)arg1;
- (void)_setGroups:(id)arg1;
- (id)_selectedAccount;
- (id)_selectedService;
- (void)addressBookChanged:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)statusTokenFieldDidChange:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)_controlTextDidChange:(id)arg1;
- (void)comboBoxWillPopUp:(id)arg1;
- (void)comboBoxWillDismiss:(id)arg1;
- (void)comboBoxSelectionDidChange:(id)arg1;
- (void)comboBoxSelectionIsChanging:(id)arg1;
- (void)_peoplePickerValueUpdated:(id)arg1;
- (void)_peoplePickerPaletteUpdated:(id)arg1;
- (void)_peoplePickerPalettePropertyChanged:(id)arg1;
- (void)_accountStatusChanged:(id)arg1;
- (void)_peopleListControllerRepresentedAccountsChanged:(id)arg1;
- (void)_synchronizeDisclosureArea;
- (void)_validateAddButton;
- (id)_selectedGroup;
- (BOOL)_isAccountUserCustomized;
- (BOOL)_firstNameCustomized;
- (BOOL)_lastNameCustomized;
- (BOOL)_firstOrLastNameCustomized;
- (void)_updateFromABPersonForce:(BOOL)arg1 setAsNotAutoFilled:(BOOL)arg2;
- (void)_updateFromABPerson;
- (BOOL)_abPersonAndFieldsAreTheSame;
- (BOOL)isPickerVisible;
- (void)changeToAccount:(id)arg1;
- (void)chooseAccountName:(id)arg1;
- (void)acceptRecord:(id)arg1;
- (void)_acceptEntry;
- (void)extendedComboBoxDidPressEnter:(id)arg1;
- (void)cancelChanges:(id)arg1;
- (void)togglePickerView:(id)arg1;
- (id)_selectedIMHandleForABPerson:(id)arg1;
- (BOOL)_fillAccountInformationIfNecessary;
- (void)nameChanged:(id)arg1;
- (id)_completedFirstName;
- (id)_completedLastName;
- (id)_possibleFirstNames;
- (id)_possibleLastNames;
- (int)numberOfItemsInComboBox:(id)arg1;
- (id)comboBox:(id)arg1 objectValueForItemAtIndex:(int)arg2;
- (unsigned long long)comboBox:(id)arg1 indexOfItemWithStringValue:(id)arg2;
- (id)comboBox:(id)arg1 completedString:(id)arg2;

@end

@interface AnamorphicSampler : CIFilter
{
    CIImage *inputImage;
    CIVector *inputSize;
    CIKernel *_kernelHorizontal;
    CIKernel *_kernelVertical;
}

- (id)scalingTableForSourceSize:(struct CGSize)arg1 destinationSize:(struct CGSize)arg2;
- (struct CGRect)regionOf:(int)arg1 destRect:(struct CGRect)arg2 userInfo:(id)arg3;
- (id)outputImage;

@end

@interface AnimatingTabView : NSTabView
{
    BOOL _transitionsEnabled;
    BOOL _synchronous;
    double _transitionTime;
    BOOL _wantsDrawTickle;
    EffectView *_effectView;
}

- (void)_commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)setTransitionsEnabled:(BOOL)arg1;
- (BOOL)areTransitionsEnabled;
- (void)setSynchronous:(BOOL)arg1;
- (BOOL)isSynchronous;
- (void)setTransitionTime:(double)arg1;
- (double)transitionTime;
- (BOOL)inTransition;
- (id)_imageOfCurrentTabView;
- (void)_notifyDelegate:(SEL)arg1;
- (void)_effectComplete;
- (void)selectTabViewItem:(id)arg1;
- (void)setEffectNeedsDisplay:(BOOL)arg1;
- (void)setOnlyUpdateWhenAsked:(BOOL)arg1;
- (BOOL)onlyUpdateWhenAsked;

@end

@interface FezExtendedTableView : NSTableView
{
    NSTextFieldCell *_messageCell;
    NSButtonCell *_triangleCell;
    NSMutableArray *_rowOrigins;
    NSColor *_customHighlightColor;
    FezCellTipWindow *_cellTipWindow;
    Tooltip *_tooltip;
    NSString *_headerString;
    NSColor *_customMouseOverBaseColor;
    NSColor *_customMouseOverLineColor;
    unsigned int _delegateSelectors;
    BOOL _drawsStripes;
    BOOL _drawingStripes;
    BOOL _hasDropRange;
    struct _NSRange _dropRange;
    int _timerHits;
    NSTimer *_flashTimer;
    BOOL _hasFloatingGroupRows;
    BOOL _smallGroupRows;
    double _normalRowHeight;
    double _groupRowHeight;
    BOOL _groupRowRolloversEnabled;
    BOOL _runningGroupAnimation;
    BOOL _allowsGroupRowDragging;
    BOOL _mouseIsDown;
    BOOL _mouseInside;
    long long _mouseInsideTag;
    int _trackingRow;
    int _clickRow;
    BOOL _mouseDown;
    BOOL _trackingRectsEnabled;
    BOOL _redisplayOnMouseover;
    BOOL _tracksOnlyWhenWindowIsKey;
    BOOL _drawingRowsIntoImage;
    long long _cellTipRow;
    BOOL _enableCellTips;
    BOOL _drawsSelection;
    double _topGap;
    BOOL _refuseResponder;
    BOOL _panelNeedsToBecomeKey;
    BOOL _wasInPreviousButtonRect;
    struct CGPoint _previousPoint;
    long long _previousRow;
    BOOL _drawsRightShadow;
    BOOL _drawAsActive;
    struct CGPoint _tooltipPoint;
    BOOL _tooltipPending;
    BOOL _tooltipBlocked;
    BOOL _celltipBlocked;
    BOOL _allowQuickTooltipPop;
    BOOL _tooltipTracksMouse;
}

+ (struct CGRect)groupDisclosureIndicatorRectInRowRect:(struct CGRect)arg1 isDisclosed:(BOOL)arg2 indicatorImage:(id *)arg3;
- (void)_etvCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)tile;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setDataSource:(id)arg1;
- (id)dataSource;
- (void)setRefusesResponder:(BOOL)arg1;
- (BOOL)refusesResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)keyDown:(id)arg1;
- (void)viewDidMoveToWindow;
- (id)selectedRows;
- (BOOL)validateMenuItem:(id)arg1;
- (void)setRowNeedsDisplay:(unsigned int)arg1;
- (void)cut:(id)arg1;
- (void)copy:(id)arg1;
- (void)paste:(id)arg1;
- (void)delete:(id)arg1;
- (struct CGRect)_dropRect;
- (void)setDropRange:(struct _NSRange)arg1;
- (void)clearDropRange;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)_drawDropHighlightBackgroundForRow:(long long)arg1;
- (void)_drawDropHighlight;
- (void)_flash:(id)arg1;
- (void)_invalidateFlashTimerAndClear:(BOOL)arg1;
- (void)invalidateFlashTimer;
- (void)flashGroup:(id)arg1 inPeopleList:(id)arg2;
- (double)normalRowHeight;
- (void)setRowHeight:(double)arg1;
- (void)setIntercellSpacing:(struct CGSize)arg1;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (void)setCustomHighlightColor:(id)arg1;
- (id)customHighlightColor;
- (void)setCustomMouseOverColor:(id)arg1 lineColor:(id)arg2;
- (id)customMouseOverBaseColor;
- (id)customMouseOverLineColor;
- (void)setAllowsGroupRowDragging:(BOOL)arg1;
- (BOOL)allowsGroupRowDragging;
- (void)setDrawsStripes:(BOOL)arg1;
- (BOOL)drawsStripes;
- (void)_drawStripesInRect:(struct CGRect)arg1 startingAt:(double)arg2 endingAt:(double)arg3;
- (void)_drawStripesInRect:(struct CGRect)arg1;
- (id)_selectionColor;
- (void)setTopGap:(double)arg1;
- (double)topGap;
- (void)_drawCustomSelectionHighlight:(struct CGRect)arg1;
- (void)drawBackgroundInClipRect:(struct CGRect)arg1;
- (void)highlightSelectionInClipRect:(struct CGRect)arg1;
- (void)setDrawsSelection:(BOOL)arg1;
- (BOOL)drawsSelection;
- (void)_hideCellTip;
- (void)_updateCellTipWithRow:(long long)arg1;
- (void)_updateCellTipWithPoint:(struct CGPoint)arg1;
- (void)reloadData;
- (BOOL)showCellTips;
- (void)setShowCellTips:(BOOL)arg1;
- (void)_updateRowOrigins;
- (void)setHasFloatingGroupRows:(BOOL)arg1;
- (BOOL)hasFloatingGroupRows;
- (void)setHasGroupRows:(BOOL)arg1;
- (void)setSmallGroupRows:(BOOL)arg1;
- (BOOL)smallGroupRows;
- (double)groupRowHeight;
- (void)rowHeightsChanged;
- (double)tableHeight;
- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;
- (long long)rowAtPoint:(struct CGPoint)arg1;
- (struct CGRect)rectOfRow:(long long)arg1;
- (long long)numberOfRows;
- (void)noteNumberOfRowsChanged;
- (void)scrollRowToVisible:(long long)arg1;
- (BOOL)hasHeader;
- (void)setHeaderString:(id)arg1;
- (id)headerString;
- (void)drawBackgroundOverhangInRect:(struct CGRect)arg1;
- (void)_drawGroupRowInRect:(struct CGRect)arg1 withTitle:(id)arg2 andNumber:(id)arg3 mouseDown:(BOOL)arg4 rowIndex:(int)arg5 isHeader:(BOOL)arg6;
- (double)_defaultFloaterRowMinY;
- (struct CGRect)_defaultFloaterRowFrame;
- (struct CGRect)_floaterRowFrame;
- (long long)_indexOfFloaterRow;
- (void)_drawFloater;
- (void)drawRect:(struct CGRect)arg1;
- (void)setDrawsRightShadow:(BOOL)arg1;
- (BOOL)drawsRightShadow;
- (BOOL)drawAsActive;
- (void)setDrawAsActive:(BOOL)arg1;
- (void)drawRow:(long long)arg1 clipRect:(struct CGRect)arg2;
- (int)_rowAtEventLocation:(id)arg1;
- (void)_trackMouseDown:(id)arg1 inRow:(int)arg2 allowDrag:(BOOL)arg3;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (id)_menuForEvent:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)setPanelNeedsToBecomeKey:(BOOL)arg1;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)mouseIsDownInView;
- (struct CGRect)visibleRect;
- (id)_imageOfGroupRow:(int)arg1 withNumberString:(id)arg2 drawWhiteBackground:(BOOL)arg3 asFloater:(BOOL)arg4;
- (id)imageOfGroupRow:(int)arg1 drawWhiteBackground:(BOOL)arg2 asFloater:(BOOL)arg3;
- (id)_imageOfGroupRow:(int)arg1 withNumberString:(id)arg2 asFloater:(BOOL)arg3;
- (id)imageOfRows:(struct _NSRange)arg1 fraction:(float)arg2 shadow:(id)arg3;
- (id)_currentImageOfRowAtIndex:(int)arg1 asFloater:(BOOL)arg2;
- (struct CGRect)_rectToMoveWithMinY:(double)arg1 range:(struct _NSRange)arg2 extraRow:(BOOL)arg3;
- (id)_imageOfRect:(struct CGRect)arg1;
- (void)_runAnimationAt:(struct CGPoint)arg1 headerBefore:(id)arg2 headerAfter:(id)arg3 rowsToMove:(id)arg4 howFar:(double)arg5 reveal:(BOOL)arg6 extraMovement:(double)arg7;
- (BOOL)runningGroupAnimation;
- (void)concealRowsInRange:(struct _NSRange)arg1;
- (void)finishConcealRowsInRange:(struct _NSRange)arg1;
- (void)revealRowsInRange:(struct _NSRange)arg1;
- (void)draggingSession:(id)arg1 movedToPoint:(struct CGPoint)arg2;
- (id)dragImageForRowsWithIndexes:(id)arg1 tableColumns:(id)arg2 event:(id)arg3 offset:(struct CGPoint *)arg4;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)tabletPoint:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)otherMouseDown:(id)arg1;
- (void)otherMouseUp:(id)arg1;
- (void)rightMouseDragged:(id)arg1;
- (void)otherMouseDragged:(id)arg1;
- (void)_closeTooltip;
- (void)_abortTooltip;
- (void)cancelCelltips;
- (void)cancelTooltips;
- (void)_makeTooltipVisible;
- (void)_updateTooltip;
- (void)_showTooltip;
- (void)_delayTooltip;
- (void)_updateTooltipPoint:(struct CGPoint)arg1;
- (void)_setMouseInside:(BOOL)arg1;
- (BOOL)mouseInside;
- (int)previousHoveredRow;
- (void)_cancelMouseTracking;
- (void)_updateForMovementAtPoint:(struct CGPoint)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)_windowDidResignKey:(id)arg1;
- (void)_appDidHide:(id)arg1;
- (void)_appResignedActive:(id)arg1;
- (void)_windowDidBecomeKey:(id)arg1;
- (void)_windowWillClose:(id)arg1;
- (void)_boundsChanged:(id)arg1;
- (void)_setTracking:(BOOL)arg1 window:(id)arg2;
- (void)setTracksOnlyWhenWindowIsKey:(BOOL)arg1;
- (BOOL)tracksOnlyWhenWindowIsKey;
- (void)setTrackingRectsEnabled:(BOOL)arg1;
- (BOOL)trackingRectsEnabled;
- (BOOL)redisplayCellsOnMouseover;
- (void)setRedisplayCellsOnMouseover:(BOOL)arg1;

@end

@interface AnimatingTableView : FezExtendedTableView
{
    BOOL _animationEnabled;
    BOOL _drawingRowIntoImageCache;
    NSMutableArray *_originsSnapshot;
    NSMutableArray *_prevRowOrigins;
    NSDate *_startTime;
    double _animationTime;
    struct _NSRange _movementRange;
    struct CGRect _movementRect;
    double _spline;
    NSMutableDictionary *_rowCache;
    NSTimer *_timer;
}

- (void)_clearRowCache;
- (void)removeFromSuperview;
- (void)_finishAnimation;
- (void)dealloc;
- (void)logDebugInfo;
- (struct CGPoint)_animatedRowOrigin:(long long)arg1;
- (BOOL)isAnimating;
- (id)_prevRowOriginsFromSnapshot;
- (void)forgetIndexes;
- (void)rememberIndexes;
- (void)stepAnimation:(id)arg1;
- (void)animateMovementOverTime:(double)arg1;
- (void)setAnimationEnabled:(BOOL)arg1;
- (BOOL)isAnimationEnabled;
- (BOOL)drawsSelection;
- (void)_drawHighlightForRowCacheOfSize:(struct CGSize)arg1;
- (void)drawRow:(long long)arg1 clipRect:(struct CGRect)arg2;
- (struct CGRect)rectOfRow:(long long)arg1;
- (void)setDrawingIntoRowCache:(BOOL)arg1;
- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;
- (struct _NSRange)rowsInRect:(struct CGRect)arg1;
- (long long)numberOfRows;
- (void)tile;
- (void)reloadData;
- (void)rowHeightsChanged;
- (void)concealRowsInRange:(struct _NSRange)arg1;
- (void)revealRowsInRange:(struct _NSRange)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityDescriptionAttribute;

@end

@interface Animator : NSObject
{
    NSTimer *_timer;
    NSDate *_startTime;
    id _target;
    double _animationTime;
    float _fps;
    CDStruct_5a7f87b4 _contour;
    void *_applyContour;
    float _linearProgress;
    float _progress;
    BOOL _reversed;
    BOOL _autoreverses;
}

+ (CDStruct_5a7f87b4)defaultContourForType:(int)arg1;
+ (BOOL)isContourValid:(CDStruct_5a7f87b4)arg1;
+ (float)applySimpleContour:(int)arg1 toValue:(float)arg2;
+ (float)applyContour:(CDStruct_5a7f87b4)arg1 toValue:(float)arg2;
+ (id)linearAnimatorWithTarget:(id)arg1 time:(double)arg2 fps:(float)arg3;
+ (id)easeOutAnimatorWithTarget:(id)arg1 time:(double)arg2 fps:(float)arg3;
+ (id)sineWaveAnimatorWithTarget:(id)arg1 time:(double)arg2 fps:(float)arg3;
- (id)initWithTarget:(id)arg1 time:(double)arg2 fps:(float)arg3 contour:(CDStruct_5a7f87b4)arg4;
- (void)_timerStep:(id)arg1;
- (void)setAutoreverses:(BOOL)arg1;
- (BOOL)autoreverses;
- (void)start;
- (void)startSynchronous;
- (void)reverse;
- (void)stop;
- (void)complete;
- (BOOL)isAnimating;
- (BOOL)isSynchronous;
- (BOOL)isReversed;
- (void)setAnimationTime:(double)arg1;
- (double)animationTime;
- (float)fps;
- (CDStruct_5a7f87b4)contour;
- (double)elapsedTime;
- (float)linearProgress;
- (float)progress;

@end

/*@interface AppKitToSuperParserContext (ImageOptimizationAdditions)
- (void)cacheImage:(id)arg1;
@end*/

@interface AudioConferenceView : NSView
{
    AudioChatController *_acController;
    unsigned long long _audioConferenceMode;
}

- (id)initWithFrame:(struct CGRect)arg1 controller:(id)arg2;
- (void)setAudioConferenceMode:(unsigned long long)arg1;
- (unsigned long long)audioConferenceMode;
- (id)_participantForDragInfo:(id)arg1;
- (void)_highlightParticipant:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)isFlipped;
- (struct CGRect)_frameOfParticipantViewAtIndex:(int)arg1;
- (float)_heightAdjustmentForCount:(int)arg1;
- (void)_createGradient;
- (void)_adjustHeight;
- (void)setSpinnerVisibility:(int)arg1 forParticipant:(id)arg2;
- (void)setSpinnerValue:(double)arg1 forParticipant:(id)arg2;
- (unsigned long long)_subviewIndexOfParticipant:(id)arg1;
- (unsigned long long)_subviewIndexOfParticipantWithID:(id)arg1;
- (id)_viewForParticipant:(id)arg1;
- (void)_addParticipant:(id)arg1 saveNib:(BOOL)arg2;
- (void)addParticipant:(id)arg1;
- (void)addParticipants:(id)arg1;
- (void)removeParticipantWithID:(id)arg1;
- (int)participantCount;
- (BOOL)containsParticipantWithID:(id)arg1;
- (id)participants;
- (void)startConnectingParticipant:(id)arg1;
- (void)connectParticipant:(id)arg1;
- (void)disconnectParticipant:(id)arg1;
- (void)recordingPermissionRequestedForParticipant:(id)arg1;
- (void)recordingPermissionGrantedForParticipant:(id)arg1;
- (void)recordingPermissionDeniedForParticipant:(id)arg1;
- (void)recordingPermissionForgottenForParticipant:(id)arg1;
- (void)finishARDUpgradeForParticipant:(id)arg1;
- (void)_updateMouseTrackingAndRefresh:(BOOL)arg1;
- (void)refreshMouseTracking;
- (void)updateMouseTracking;

@end

@interface AudioRecordingAdapter : NSObject <FezAudioRecordingAdapter>
{
    CDStruct_1b6d18a9 _audioTimestamp;
    IMAVChat *_avChat;
    FezAVRecorder *_avRecorder;
    unsigned int _incomingDeviceID;
    void *_ioProcID;
    struct AudioStreamBasicDescription _incomingStreamDescription;
    NSMutableDictionary *_userIDsToChannels;
    char *_channelsInUse;
    int _channelsInUseCount;
    BOOL _compressingAudio;
    struct _opaque_pthread_t *_audioCompressionThread;
    struct _opaque_pthread_cond_t _inputAudioReadyCondition;
    struct _opaque_pthread_mutex_t _inputAudioReadyMutex;
    struct AudioChannelLayout _outputAudioChannelLayout;
    unsigned int _outputAudioChannelLayoutSize;
    struct AudioBufferList *_inputAudioRingBuffer;
    unsigned int _inputAudioRingBufferPacketLength;
    unsigned int _inputAudioRingBufferLengthInPackets;
    unsigned int _inputAudioRingBufferLengthInBytes;
    unsigned int _inputAudioRingBufferStartPosition;
    unsigned int _inputAudioRingBufferEndPosition;
}

- (id)init;
- (void)_cleanup;
- (void)dealloc;
- (struct AudioStreamBasicDescription)incomingStreamDescription;
- (void)setAVRecorder:(id)arg1;
- (void)setAVChat:(id)arg1;
- (void)prepare;
- (void)start;
- (void)stop;
- (BOOL)removeAudioForParticipant:(id)arg1;
- (BOOL)addAudioForParticipant:(id)arg1;
- (void)recordAudioForAllCurrentParticipants;
- (BOOL)setShouldRecordAudio:(BOOL)arg1 forChannel:(int)arg2;
- (BOOL)setShouldRecordAudio:(BOOL)arg1 forParticipant:(id)arg2;
- (void *)_audioCompressionThreadMethod;

@end

@interface AudioSampler : NSObject
{
    NSMutableSet *_localObservers;
    BOOL _micIrisClosed;
    NSMutableDictionary *_remoteObservers;
    NSTimer *_timer;
    FZVideoConferenceController *_vcc;
}

+ (id)sharedSampler;
- (id)init;
- (void)dealloc;
- (void)_broadcastLevel;
- (void)_startTimerIfNecessary;
- (void)_stopTimerIfPossible;
- (void)_handleMicChangeNotification:(id)arg1;
- (void)addLocalObserver:(id)arg1;
- (void)removeLocalObserver:(id)arg1;
- (void)addRemoteObserver:(id)arg1 forUserID:(id)arg2;
- (void)_clearRemoteObserversIfPossible;
- (void)removeRemoteObserverForUserID:(id)arg1;
- (void)removeRemoteObserver:(id)arg1;

@end

@interface Notifier : NSObject <NSWindowDelegate>
{
    NSWindow *_realWindow;
    CustomWindow *_floaterWindow;
    struct CGPoint _floaterOffset;
    double _prevRealHeight;
    BOOL _canHideShowRealWindow;
    long long _stage;
    BOOL _respondedToInvite;
    int _inviteType;
    struct CGAffineTransform _finalXform;
    NSString *_openNoteID;
    NSDictionary *_eventActions;
    IMHandle *_sender;
    BOOL _beSilent;
    BOOL _forcedOrderFront;
}

+ (void)clearAllWeakReferencesToObject:(id)arg1;
+ (id)floaterBackgroundColor;
+ (void)addItemsToMenu:(id)arg1 atIndex:(unsigned long long)arg2 fromData:(id)arg3 target:(id)arg4 action:(SEL)arg5;
+ (id)notifierWithType:(int)arg1 from:(id)arg2;
+ (id)notifierWithType:(int)arg1 fromID:(id)arg2;
+ (id)allNotifiers;
+ (id)staleNotifiersWithType:(int)arg1 fromID:(id)arg2;
+ (void)orderFrontNotifierWithID:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)installRealWindowNotifications;
- (void)clearWeakReferencesToObject:(id)arg1;
- (BOOL)respondedToInvite;
- (void)setRespondedToInvite:(BOOL)arg1;
- (int)inviteType;
- (void)setInviteType:(int)arg1;
- (BOOL)canHideShowRealWindow;
- (void)setCanHideShowRealWindow:(BOOL)arg1;
- (long long)stage;
- (void)setStage:(long long)arg1;
- (id)sender;
- (void)setSender:(id)arg1;
- (id)openNoteID;
- (void)setOpenNoteID:(id)arg1;
- (struct CGPoint)floaterOffset;
- (void)setFloaterOffset:(struct CGPoint)arg1;
- (void)moveFloaterOffset:(struct CGSize)arg1;
- (double)previousRealHeight;
- (void)setPreviousRealHeight:(double)arg1;
- (BOOL)isActiveNotification;
- (BOOL)isStale;
- (id)floaterWindow;
- (id)realWindow;
- (void)setRealWindow:(id)arg1;
- (BOOL)_collidesWithExistingWindow:(struct CGRect)arg1;
- (void)positionRealWindowInCorner:(BOOL)arg1;
- (void)buildFloaterWindowWithFrame:(struct CGRect)arg1 styleMask:(long long)arg2;
- (void)_updateWindowTitle;
- (void)setAccessibilityDescription:(id)arg1;
- (void)setSilent:(BOOL)arg1;
- (BOOL)silent;
- (void)setEventActions:(id)arg1;
- (void)stopEventActions;
- (void)_addSelfToNotifierList;
- (BOOL)isRealWindowHidden;
- (struct CGAffineTransform)_xformForFloaterScale:(double)arg1;
- (void)_doAnimateFloaterDisplay;
- (void)animateFloaterDisplay;
- (void)_doFrameOfFloaterDisplay:(id)arg1;
- (void)floaterWillBecomeVisible;
- (void)floaterBecomingVisible;
- (void)forceOrderFrontRealWindow;
- (void)orderFrontRealWindow;
- (void)_animateRealDisplay:(id)arg1;
- (void)_doFrameOfRealDisplay:(id)arg1;
- (void)realWindowVisible;
- (BOOL)canShowRealWindow;
- (BOOL)canHideRealWindow;
- (void)_animateRealHiding;
- (void)_doFrameOfRealHiding:(id)arg1;
- (void)realWindowHiding;
- (void)_blockSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_closeDownShop;
- (void)closeDownShop:(BOOL)arg1;
- (void)_rejectNotificationAndCloseRealWindow:(BOOL)arg1;
- (void)rejectNotificationAndCloseRealWindow:(BOOL)arg1;
- (void)acceptNotification;
- (void)blockNotification;
- (void)closeWithoutAcceptingOrRejecting;
- (void)_realWindowDidBecomeKey:(id)arg1;
- (void)_realWindowDidResize:(id)arg1;
- (void)_realWindowWillMiniaturize:(id)arg1;
- (void)_realWindowWillClose:(id)arg1;
- (void)_realWindowResignedMain:(id)arg1;
- (void)_realWindowBeginSheet:(id)arg1;
- (void)_realWindowEndSheet:(id)arg1;
- (void)_appWillHide:(id)arg1;
- (void)_appDidUnhide:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (id)menuItemFormat;

@end

@interface BannerNotifier : Notifier
{
    AVParticipantView *_bannerView;
}

- (BOOL)isActiveNotification;
- (id)bannerView;
- (void)makeFloaterWindow;
- (void)dealloc;

@end

@interface AuthNotifier : BannerNotifier
{
    AuthorizationRequestController *_authRequest;
}

+ (void)openOnRequestFrom:(id)arg1 message:(id)arg2 eventDictionary:(id)arg3;
- (id)bannerView;
- (id)authRequest;
- (id)initWithHandle:(id)arg1 message:(id)arg2 eventDictionary:(id)arg3;
- (void)closeDownShop:(BOOL)arg1;
- (void)dealloc;

@end

@interface AuthorizationRequestController : NSWindowController
{
    NSString *_guid;
    Notifier *_notifier;
    IMHandle *_imHandle;
    NSExtendedBox *_box;
    NSView *_bannerContainer;
    AVParticipantView *_bannerView;
}

+ (id)authorizationRequestControllerWithIMHandle:(id)arg1 notifier:(id)arg2;
- (id)_initWithIMHandle:(id)arg1 notifier:(id)arg2;
- (void)awakeFromNib;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (void)windowDidLoad;
- (void)dealloc;
- (void)acceptButtonPressed:(id)arg1;
- (void)rejectButtonPressed:(id)arg1;
- (void)imHandleInfoUpdated:(id)arg1;
- (void)setNotifier:(id)arg1;
- (id)guid;
- (id)imHandle;
- (id)scriptID;
- (id)scriptBuddy;
- (id)scriptService;
- (void)acceptScriptCommand:(id)arg1;
- (void)declineScriptCommand:(id)arg1;
- (id)objectSpecifier;

@end

@interface AutoAway : NSObject <IMSystemMonitorListener>
{
    NSPanel *_welcomeBackPanel;
    NSTextField *_messageField;
    NSButton *_dontShowAgainCheckbox;
    NSButton *_dontChangeButton;
    NSButton *_changeButton;
    NSTimer *_autoAwayTimer;
    NSMutableDictionary *_welcomeBackAccounts;
    BOOL _welcomeBackPromptActive;
    BOOL _didGoIdle;
}

+ (void)install;
+ (int)welcomeBackMode;
+ (void)setWelcomeBackMode:(int)arg1;
+ (BOOL)autoAwayEnabled;
+ (void)setAutoAwayEnabled:(BOOL)arg1;
+ (double)autoAwayDelay;
+ (void)setAutoAwayDelay:(double)arg1;
+ (void)setAutoReplyEnabled:(BOOL)arg1;
- (id)init;
- (void)dealloc;
- (void)_returnAvailable;
- (void)_welcomeBack;
- (void)_myStatusChanged:(id)arg1;
- (void)_markWelcomeBackAccounts;
- (void)_autoAwayTimerFired;
- (void)_clearAutoAwayTimer;
- (void)_startAutoAwayTimer;
- (void)awakeFromNib;
- (void)goAvailable:(id)arg1;
- (void)dontGoAvailable:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)screenSaverDidStart;
- (void)screenSaverDidStop;
- (void)screenLocked;
- (void)screenUnlocked;

@end

@interface AutoSendTextField : NSTextField
{
    NSDate *_firstKey;
    NSDate *_lastKey;
    NSTimer *_timer;
    unsigned int _nonEmpty:1;
    unsigned int _significantChange:1;
    unsigned int _dirty:1;
    unsigned int _sTermToggled:1;
}

+ (void)initialize;
- (void)prepareToRelease;
- (void)dealloc;
- (BOOL)textChangedSinceSent;
- (void)setDirty:(BOOL)arg1;
- (void)_autoSend:(int)arg1;
- (void)_timerFired;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)textDidChange:(id)arg1;

@end

@interface AuxVideoAlert : NSWindowController
{
}

+ (void)showAlert:(BOOL)arg1;
- (void)windowDidLoad;
- (void)windowWillClose:(id)arg1;
- (void)cancelAuxVideo:(id)arg1;

@end

@interface AuxVideoApps : NSObject
{
}

+ (id)applicationsSupportingAuxVideo;

@end

@interface AuxVideoController : NSObject
{
    BOOL _theaterDisabled;
    QLAuxVideoReceiver *_qlAuxVideoReceiver;
    RemoteAuxVideoMuxer *_remoteAuxVideoMuxer;
    NSMutableArray *_receivers;
    AuxVideoReceiver *_currentReceiver;
    BOOL _setFramerateScheduled;
    BOOL _setVideoSizeScheduled;
    double _frameRate;
    struct CGSize _videoSize;
    VideoProcessor *_videoProcessor;
    unsigned long long _state;
}

+ (void)registerForStateChanges;
+ (void)_auxVideoControllerChangedState:(id)arg1;
+ (BOOL)activeAVChatPreventsTheater;
+ (id)sharedController;
- (id)init;
- (void)dealloc;
- (id)receiverForBundleID:(id)arg1;
- (id)receiverForProviderID:(id)arg1;
- (id)currentReceiver;
- (id)providerBundleID;
- (BOOL)requestedOptimizeVideoStills;
- (BOOL)requestedReplacementMode;
- (unsigned long long)state;
- (BOOL)isTheaterDisabled;
- (double)frameRate;
- (struct CGSize)videoSize;
- (BOOL)hasAudioProvider;
- (BOOL)hasVideoProvider;
- (void)_setFramerate:(id)arg1;
- (void)updateFramerateWith:(id)arg1;
- (void)_setVideoSize:(id)arg1;
- (void)setVideoSize:(struct CGSize)arg1;
- (void)setTheaterDisabled:(BOOL)arg1 forceDisconnect:(BOOL)arg2;
- (void)_setInputState:(unsigned long long)arg1;
- (BOOL)startServerForQuickLookURLs:(id)arg1;
- (BOOL)startServerForProvider:(id)arg1 URL:(id)arg2;
- (void)stopServer;
- (void)beginAuxiliaryInput:(struct CGSize)arg1;
- (void)cancelAuxiliaryInput;
- (void)endAuxiliaryInput;
- (void)removeAuxVideoReceiver:(id)arg1;
- (void)remoteAuxVideoReceivePortDidDie;
- (void)auxVideoReceiverDidConnect:(id)arg1;
- (void)auxVideoReceiverDidDisconnect:(id)arg1;
- (void)auxVideoReceiver:(id)arg1 providedFrame:(struct __CVBuffer *)arg2;
- (void)auxVideoReceiver:(id)arg1 updateControlBarFromDictionaryRepresentation:(id)arg2;
- (id)currentControlBarDictionaryRepresentation;
- (void)performActionForControlWithIdentifier:(id)arg1 control:(id)arg2;
- (void)theaterScrollWheel:(id)arg1 atRelativePoint:(struct CGPoint)arg2;

@end

@interface AuxVideoReceiver : NSObject
{
    AuxVideoController *_auxVideoController;
    NSString *_bundleID;
    NSString *_providerID;
    IMSharedPixelBufferPool *_sharedBufferPool;
    BOOL _receivedFrameFromProvider;
    long long _numAudioChannels;
    unsigned int _providerPixelFormat;
    double _frameRate;
    NSTimer *_activityTimeoutTimer;
    BOOL _requestedReplacementMode;
    BOOL _requestedOptimizeVideoStills;
    NSDictionary *_controls;
}

- (id)initWithAuxVideoController:(id)arg1 bundleID:(id)arg2 URL:(id)arg3;
- (void)_cleanup;
- (void)dealloc;
- (id)bundleID;
- (void)setProviderID:(id)arg1;
- (id)providerID;
- (BOOL)requestedOptimizeVideoStills;
- (BOOL)requestedReplacementMode;
- (long long)numAudioChannels;
- (unsigned int)pixelFormat;
- (double)frameRate;
- (void)setFrameRate:(double)arg1;
- (void)_activityTimeout;
- (void)_registerActivity:(BOOL)arg1;
- (void)activateProvider;
- (void)deactivateProvider;
- (void)provider:(id)arg1 bundleID:(id)arg2 connectWithPixelFormat:(unsigned int)arg3 videoStills:(BOOL)arg4 replacement:(BOOL)arg5 audioChannels:(int)arg6 controlsDictionary:(id)arg7;
- (void)processBuffer:(int)arg1 withAttachments:(id)arg2;
- (void)performActionForControlWithIdentifier:(id)arg1 control:(id)arg2;
- (void)theaterScrollWheel:(id)arg1 atRelativePoint:(struct CGPoint)arg2;
- (id)currentControlBarDictionaryRepresentation;
- (void)setControls:(id)arg1;
- (void)updateControlBarFromDictionaryRepresentation:(id)arg1;

@end

@interface BorderedButton : NSButton
{
}

+ (Class)cellClass;
- (void)_commonInit;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface BorderedButtonCell : NSButtonCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface BorderedProgressIndicator : NSProgressIndicator
{
}

- (void)awakeFromNib;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface BuddyInfo : NSWindowController <ServiceFieldControllerDelegate, NSTokenFieldDelegate>
{
    IMPerson *_person;
    NSArray *_imHandles;
    IMHandle *_initialHandle;
    BOOL _profileViewsLayoutPending;
    BOOL _setFirstNamePending;
    BOOL _setLastNamePending;
    BOOL _setNicknamePending;
    BOOL _tryToMergeABPerson;
    BOOL _updatingUI;
    BOOL _fitProfile;
    ActionsController *_actionsController;
    NSWindow *_infoWindow;
    NSSegmentedControl *_tabControl;
    NSTabView *_tabView;
    NSTabViewItem *_profileTab;
    NSView *_profileContainer;
    NSTabViewItem *_actionsTab;
    NSTabViewItem *_addressCardTab;
    FezImageView *_abPicture;
    NSButton *_abAlwaysUsePictureButton;
    NSTextField *_abAlwaysUsePictureField;
    NSTextField *_abFirstNameField;
    NSTextField *_abLastNameField;
    NSTextField *_abNicknameField;
    NSTokenField *_abEmailField;
    NSButton *_abButton;
    NSMenu *_tokenMenu;
    NSWindow *_peoplePickerSheet;
    PeoplePicker *_peoplePicker;
    NSButton *_chooseCardButton;
    NSCollectionView *_serviceFields;
    BOOL _loadedPeoplePickerNib;
    unsigned int _closing:1;
}

+ (id)buddyInfoForIMHandle:(id)arg1 showProfile:(BOOL)arg2;
+ (id)openForIMHandle:(id)arg1 showProfile:(BOOL)arg2;
+ (id)videoFrameProviderForPictureTaker:(id)arg1;
+ (void)pictureTakerDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
+ (void)openPictureIconWidgetWithImage:(id)arg1 forIMHandle:(id)arg2 allowEditing:(BOOL)arg3;
+ (void)restoreWindowAtLaunch:(id)arg1;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
@property(readonly) NSSegmentedControl *tabControl;
- (void)_setupMetrics;
- (void)_setupServiceFields;
- (void)_tearDownServiceFields;
- (id)_personName;
- (void)_updateWindowTitle;
- (void)windowDidLoad;
- (void)updateWindowForNewTabSize;
- (void)selectTab:(id)arg1;
- (void)actionsControllerChanged:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)dealloc;
- (void)_enumerateServiceFieldControllersWithBlock:(id)arg1;
- (id)_bestCustomPicture;
- (void)_updatePictureUI;
- (void)_updateIMHandlesArrayWithIMPerson:(id)arg1 orIMHandle:(id)arg2;
- (void)_updateUIWithNoBuddyList;
- (void)_updateUIWithABPerson;
- (void)_updateUIWithNoABPerson;
- (void)_updateUI;
- (void)_abDBChanged:(id)arg1;
- (void)_setABPerson:(id)arg1;
- (void)_addIMHandlesToABPerson:(id)arg1 andSave:(BOOL)arg2;
- (void)_setABPerson:(id)arg1 addIMHandle:(BOOL)arg2;
- (id)_existingCardsWithFirstName:(id)arg1 lastName:(id)arg2 nickname:(id)arg3;
- (void)_createCardWithFirstName:(id)arg1 lastName:(id)arg2 nickname:(id)arg3 addIMHandle:(BOOL)arg4;
- (void)_createCardAndAddIMHandle:(BOOL)arg1;
- (void)_updateABPicture;
- (void)setPicture:(id)arg1;
- (void)toggleAlwaysUsePicture:(id)arg1;
- (void)_editPicture:(id)arg1;
- (void)_addEmails:(id)arg1 toABPerson:(id)arg2;
- (void)_mergeWith:(id)arg1;
- (void)_setName;
- (void)_setFirstName;
- (void)_setLastName;
- (void)_setNickname;
- (void)setFirstName:(id)arg1;
- (void)setLastName:(id)arg1;
- (void)setNickname:(id)arg1;
- (void)setEmails:(id)arg1;
- (id)_selectedABPerson;
- (void)_peoplePickerDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)_pickerDoubleClicked;
- (void)dismissPeoplePicker:(id)arg1;
- (void)_peoplePickerValueUpdated:(id)arg1;
- (void)_loadPeoplePickerNibIfNeeded;
- (void)addressBookButton:(id)arg1;
- (BOOL)tokenField:(id)arg1 hasMenuForRepresentedObject:(id)arg2;
- (id)tokenField:(id)arg1 menuForRepresentedObject:(id)arg2;
- (id)tokenField:(id)arg1 shouldAddObjects:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)tokenField:(id)arg1 readFromPasteboard:(id)arg2;
- (void)startChat:(id)arg1;
- (void)inviteToAudioChat:(id)arg1;
- (void)inviteToVideoChat:(id)arg1;
- (void)inviteToARDAsClient:(id)arg1;
- (void)inviteToARDAsServer:(id)arg1;
- (void)sendMessage:(id)arg1;
- (void)composeEMail:(id)arg1;
- (void)sendFile:(id)arg1;
- (void)toggleBuddy:(id)arg1;
- (void)block:(id)arg1;
- (void)requestValidation:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (struct CGSize)_windowSizeForTabSize:(struct CGSize)arg1;
- (double)_profileTabHeight;
- (double)_addressCardTabHeight;
- (struct CGSize)_maxSizeForProfile;
- (struct CGSize)_minSizeForProfile;
- (void)_updateMinMaxSizeForProfile;
- (void)_layoutProfileViews;
- (void)setProfileViewsNeedLayout;
- (void)_createProfileViews;
- (void)windowDidResize:(id)arg1;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (void)handlesFieldDidChange:(id)arg1 service:(id)arg2;
- (id)contextMenuForHandle;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;

@end

@interface BuddyPicture : NSObject <NSDiscardableContent>
{
    NSData *_data;
    NSDataRetainingImage *_image;
    NSMutableDictionary *_frameDelays;
    NSBitmapImageRep *_animatedRep;
    NSTimer *_animationStopTimer;
    NSDate *_lastDrawn;
    NSTimer *_animationTimer;
    NSString *_key;
    NSMutableSet *_cacheKeys;
    struct CGSize _size;
    int _currentframe;
    int _frames;
    unsigned int _animating:1;
    unsigned int _lookedForAnimatedRep:1;
    unsigned int _pictureIsIcon:1;
}

+ (id)buddyPictureStore;
+ (id)keyForData:(id)arg1;
+ (void)rememberBuddyPicture:(id)arg1 withKey:(id)arg2;
+ (void)removeBuddyPicture:(id)arg1;
+ (id)buddyPictureForKey:(id)arg1;
+ (id)buddyPictureWithData:(id)arg1 key:(id)arg2;
+ (id)buddyPictureWithData:(id)arg1;
+ (id)buddyPictureWithImage:(id)arg1;
+ (void)initialize;
+ (void)_postCleanupNotification:(id)arg1;
+ (id)runLoopDrawingModes;
+ (void)_setupFramePulse;
+ (void)_cleanupFrameTimer;
+ (void)buddyPictureTimerFired:(id)arg1;
+ (void)_userSwitchedOut;
+ (void)_userSwitchedIn;
+ (void)enqueueBuddyPicturePost:(id)arg1;
- (void)_registerForPreferenceChanges;
- (id)init;
- (id)initWithData:(id)arg1 key:(id)arg2;
- (id)initWithData:(id)arg1;
- (id)initWithImage:(id)arg1 key:(id)arg2;
- (id)initWithImage:(id)arg1;
- (id)key;
- (void)dealloc;
- (void)_cleanupAnimationIfNecessary:(id)arg1;
- (void)_animationPrefsChanged:(id)arg1;
- (id)description;
- (id)data;
- (struct CGSize)size;
- (void)_cacheImage;
- (void)flushCaches;
- (BOOL)beginContentAccess;
- (void)endContentAccess;
- (void)discardContentIfPossible;
- (BOOL)isContentDiscarded;
- (BOOL)hasNiceAlpha;
- (void)setPictureIsIcon:(BOOL)arg1;
- (BOOL)pictureIsIcon;
- (id)image;
- (void)addToRecentPicturesWithUserInfo:(void *)arg1;
- (void)stopAnimation;
- (void)_noteLastDrawnTime;
- (void)_stepAnimationTimer:(id)arg1;
- (void)_synchronizeFrame:(float)arg1;
- (void)stepAnimation;
- (void)startAnimation;
- (float)nextFrameDelayForFrame:(int)arg1;
- (float)nextFrameDelay;
- (int)frames;
- (id)animatedRepresentation;
- (BOOL)shouldAnimate;
- (id)imageWithMaxSize:(struct CGSize)arg1 frame:(int)arg2;
- (id)imageWithMaxSize:(struct CGSize)arg1;
- (id)imageWithSize:(struct CGSize)arg1;
- (id)_dataRepresentation;
- (id)dataRepresentation;
- (id)TIFFRepresentation;
- (void)drawUncroppedInRect:(struct CGRect)arg1 inView:(id)arg2 operation:(unsigned long long)arg3 fraction:(float)arg4 firstFrameOnly:(BOOL)arg5 scaled:(BOOL)arg6;
- (void)drawInRect:(struct CGRect)arg1 operation:(unsigned long long)arg2 fraction:(float)arg3 firstFrameOnly:(BOOL)arg4 scaled:(BOOL)arg5;
- (void)drawInRect:(struct CGRect)arg1 operation:(unsigned long long)arg2 fraction:(float)arg3 firstFrameOnly:(BOOL)arg4;
- (void)drawInRect:(struct CGRect)arg1 inView:(id)arg2 operation:(unsigned long long)arg3 fraction:(float)arg4 firstFrameOnly:(BOOL)arg5;
- (void)drawInRect:(struct CGRect)arg1 inView:(id)arg2 operation:(unsigned long long)arg3 fraction:(float)arg4 firstFrameOnly:(BOOL)arg5 scaled:(BOOL)arg6;
- (id)dataWithMaxSize:(struct CGSize)arg1 minSize:(struct CGSize)arg2 maxDataSize:(float)arg3 allowAnimated:(BOOL)arg4;
- (id)animatedGIFDataWithSize:(struct CGSize)arg1 minSize:(struct CGSize)arg2 maxDataSize:(float)arg3;

@end

@interface BuddyPictureCell : NSActionCell
{
    PeopleList *_peopleList;
    struct CGSize _iconSize;
    BOOL _usesLegacyScrollers;
}

- (id)initWithPeopleList:(id)arg1;
- (struct CGRect)rectOfPictureWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)setIconSize:(struct CGSize)arg1;
- (struct CGSize)iconSize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)imHandle;
- (id)peopleListItem;
- (void)setUsesLegacyScrollers:(BOOL)arg1;
- (BOOL)shouldAnimate;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (id)accessibilityRoleAttribute;
- (id)accessibilityDescriptionAttribute;
- (id)accessibilityValueAttribute;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1;

@end

@interface OpenGLLayerView : NSOpenGLView
{
    CIContext *_ciContext;
    OpenGLLayerModel *_layerModel;
    NSImage *_offscreenImage;
    float _bgRed;
    float _bgGreen;
    float _bgBlue;
    unsigned int _vramTextureId;
    VideoRecordingAdapter *_videoRecordingAdapter;
    NSTimer *_redrawTimer;
    BOOL _ignoreRedrawTimer;
}

- (id)_initWithFrame:(struct CGRect)arg1 masterContext:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)recreateCIContextFromWindow:(id)arg1;
- (void)windowChangedScreen:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
@property(readonly) CIContext *ciContext;
- (void)setLayerModel:(id)arg1;
- (id)layerModel;
- (void)_updateVirtualScreen;
- (void)handleVirtualScreenChangedNotificiation:(int)arg1;
- (void)viewDidMoveToWindow;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)_setAutoscalesBoundsToPixelUnits:(BOOL)arg1;
- (BOOL)isOpaque;
- (void)draw;
- (id)bitmapImageFromSurfaceInRect:(struct CGRect)arg1;
- (id)bitmapImageFromSurface;
- (void)_recompositeLayers;
- (void)removeFromSuperview;
- (BOOL)ignoresRedrawTimer;
- (void)setIgnoresRedrawTimer:(BOOL)arg1;
- (void)_redrawTimerFired:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)setLayerModelNeedsDisplay;
- (void)reshape;
- (void)update;
- (void)setBackgroundRed:(float)arg1 green:(float)arg2 blue:(float)arg3;
- (void)setBackgroundWhite:(float)arg1;
- (void)setBackgroundColor:(id)arg1;
- (struct CGSize)adjustWindow:(id)arg1 proposedSize:(struct CGSize)arg2 aspectRatio:(double)arg3;
- (struct CGSize)adjustWindow:(id)arg1 proposedSize:(struct CGSize)arg2;
- (BOOL)saveVideoSnapshotToFile:(id)arg1;
- (void)renderIntoContext:(id)arg1 width:(int)arg2 height:(int)arg3;
- (void)setRecordingAdapter:(id)arg1;
- (void)layer:(id)arg1 videoSizeChangedFrom:(struct CGSize)arg2 to:(struct CGSize)arg3;

@end

@interface CameraPreferencesView : OpenGLLayerView
{
    OpenGLVideoConferenceLayer *_layer;
    struct CGRect _oldTrackingRect;
    BOOL _videoCapable;
    BOOL _abortedVideo;
    BOOL _videoIsStarted;
    NSString *_videoErrorMessage;
    BOOL _registeredForNotifications;
    BOOL _videoCapabilityIsKnown;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)videoErrorMessage;
- (void)setVideoErrorMessage:(id)arg1;
- (id)layerName;
- (void)_createLayer;
- (void)clearKnownVideoState;
- (void)_irisStateNotification:(id)arg1;
- (void)_cameraChangedNotification:(id)arg1;
- (BOOL)videoIsStarted;
- (void)_removeCameraPrefsNotifications;
- (BOOL)canStartVideo;
- (void)startVideo;
- (void)restartVideo;
- (void)abortVideo;
- (void)stopVideo;
- (void)mouseDown:(id)arg1;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)setCameraOnState:(BOOL)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)prepareOpenGL;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (void)layer:(id)arg1 videoSizeChangedFrom:(struct CGSize)arg2 to:(struct CGSize)arg3;

@end

@interface CenteredView : NSView
{
    BOOL _horiz;
    BOOL _vert;
    NSView *_leftFitView;
}

- (void)superviewDidResize;
- (void)awakeFromNib;
- (void)dealloc;
- (void)setCenteredHoriz:(BOOL)arg1;
- (void)setCenteredVert:(BOOL)arg1;
- (BOOL)centeredHoriz;
- (BOOL)centeredVert;

@end

@interface ChatController : NSObject <ChatFieldEditorDelegate, PeopleListDelegate, NSAnimationDelegate, NSTextViewDelegate, ChooseBuddyButtonDelegate, RolloverButtonDelegate>
{
    NSImageView *_statusImage;
    AbbreviatingTextField *_statusText;
    NSExtendedBox *_statusArea;
    MyNameControl *_toPopup;
    NSArray *_possibleToParticipants;
    NSArray *_possibleFromParticipants;
    NSArray *_possibleAlternateToParticipants;
    NSArray *_possibleAlternateFromParticipants;
    ExtendedSplitViewGrabber *_inputLineGrabber;
    ExtendedSplitViewGrabber *_rejoinGrabber;
    ExtendedSplitViewGrabber *_emptyGrabber;
    NSTextField *_participantCount;
    NSView *_enclosingView;
    ChatInputLine *_inputLine;
    NSButton *_inviteButton;
    AbbreviatingTextField *_whyIsInputLineGoneField;
    WindowDraggingTabView *_inputLineTabView;
    NSView *_participantsArea;
    PeopleList *_peopleList;
    NSDrawer *_peopleDrawer;
    ChatViewController *_chatViewController;
    NSMenu *_chatContextMenu;
    ChooseBuddyButton *_chooseIDButton;
    NSWindow *_inviteMsgSheet;
    NSTextField *_inviteMsgText;
    NSTextField *_inviteMsgLabel;
    NSString *_inviteMsg;
    NSView *_buttonArea;
    NSButton *_notifyAccept;
    NSButton *_joinAtLogin;
    NSButton *_notifyReject;
    NSButton *_notifyBlock;
    NSString *_origNotifyAcceptTitle;
    NSTabView *_notifyButtonTabView;
    NSButton *_rejoinChatButton;
    NSProgressIndicator *_joiningSpinner;
    NSViewAnimation *_statusViewAnimation;
    ChatFieldEditor *_fieldEditor;
    NSUndoManager *_undoManager;
    Chat *_chat;
    ChatNotifier *_notifier;
    NSTimer *_joiningGroupChatTimer;
    SecureWindow *_window;
    struct CGRect _savedRect;
    double _inputLineRightMargin;
    double _buttonAmountVisible;
    double _initialMinWidth;
    unsigned int _isStatusAreaVisible:1;
    unsigned int _wantsToShowStatusArea:1;
    unsigned int _forceShowStatusArea:1;
    unsigned int _hasAwoken:1;
    unsigned int _inTransition:1;
    unsigned int _pendingShowParticipants:1;
    unsigned int _shouldShowParticipants:1;
    unsigned int _windowClosing:1;
    unsigned int _acceptingNotifier:1;
    unsigned int _participantsWereVisible:1;
    unsigned int _primaryController:1;
    unsigned int _chooseIDMenuIsValid:1;
    unsigned int _isDeciding:1;
    unsigned int _msgsHidden:1;
    unsigned int _finishChatWhenClosed:1;
    unsigned int _inputLineSpacerRemoved:1;
    unsigned int _resizingInputLine:1;
    unsigned int _isInTab:1;
    unsigned int _isResizing:1;
    unsigned int _isInvitingForGroupChat:1;
    unsigned int _isJoiningInvitation:1;
    unsigned int _handlingPersonInfoChanged:1;
    unsigned int _wasJoinedRoomAtQuit:1;
}

+ (id)chatControllerInstalledInView:(id)arg1;
- (void)chatWillBecomeVisibleInWindow:(id)arg1 resizeWindow:(BOOL)arg2;
- (void)chatWillBeRemovedFromWindow:(id)arg1;
- (BOOL)animationShouldStart:(id)arg1;
- (void)animationDidStop:(id)arg1;
- (void)animationDidEnd:(id)arg1;
- (void)_synchonizeStatusAreaItems;
- (BOOL)isStatusAreaVisible;
- (void)setStatusAreaVisible:(BOOL)arg1;
- (BOOL)_canShowStatusArea;
- (void)_showStatusArea;
- (void)_hideStatusArea;
- (void)updateStatusArea;
- (void)_updateStatusGem:(id)arg1;
- (void)_updateStatus:(id)arg1;
- (void)_updatePossibleToFromParticipants;
- (void)_switchToIMHandleFromMenuItem:(id)arg1;
- (void)refresh;
- (BOOL)_shouldShowTOSection;
- (BOOL)_shouldShowFROMSection;
- (id)menuForMyRolloverButton:(id)arg1;
- (void)awakeFromNib;
- (void)setResizersVisible:(BOOL)arg1;
- (BOOL)resizersVisible;
- (void)unhookResizers;
- (void)hookupResizersToSplitView:(id)arg1;
- (void)_hideSpinner;
- (void)_showSpinner;
- (void)_showSpinnerSoon;
- (void)dealloc;
- (void)_windowDidResize:(id)arg1;
- (void)handleChatWindowClosing:(id)arg1;
- (void)leaveChatOnTerminate;
- (void)_clearJoiningGroupChatTimer;
- (void)_clearIsJoiningInvitation:(id)arg1;
- (id)window;
- (id)selectedIMHandles;
- (id)account;
- (id)peopleList;
- (id)chat;
- (double)minWidth;
- (void)_loadRejoinButton;
- (void)setChat:(id)arg1;
- (BOOL)finishesChatWhenClosed;
- (void)setFinishesChatWhenClosed:(BOOL)arg1;
- (id)inputLine;
- (id)fieldEditor;
- (id)undoManager;
- (void)_updateInputLineAttachmentSupport;
- (BOOL)inputLineHasFocus;
- (void)setPrimaryChatController:(BOOL)arg1;
- (id)_activeChatChat;
- (BOOL)_serviceMightChat;
- (id)displayName;
- (id)longDisplayName;
- (void)_postDisplayNameChanged;
- (void)_postPeopleChanged;
- (long long)joinState;
- (int)style;
- (id)people;
- (id)notifier;
- (BOOL)isActive;
- (BOOL)isInTab;
- (void)setIsInTab:(BOOL)arg1;
- (void)_setIsInvitingForGroupChatIfApplicable;
- (void)_setIsInvitingForGroupChat:(BOOL)arg1;
- (void)restoreState:(id)arg1;
- (void)encodeState:(id)arg1;
- (void)restoreSelectionRange:(id)arg1;
- (void)_setShowInviteButton:(BOOL)arg1;
- (void)_updateInviteButton;
- (void)_fixBottomBorderThickness;
- (void)_clearCurrentPosition;
- (void)_saveCurrentPosition;
- (struct CGRect)_rectAdjustingForSavedPositionWithRect:(struct CGRect)arg1;
- (BOOL)isResizing;
- (void)_adjustInputLineHeightBy:(double)arg1 resizeWindow:(BOOL)arg2;
- (void)_setInputLineHeight:(double)arg1 resizeWindow:(BOOL)arg2;
- (void)_showInputLine:(BOOL)arg1;
- (void)_msgStyleChanged:(id)arg1;
- (double)_currentTextHeight;
- (void)controlTextDidChange:(id)arg1;
- (void)_inputLineDidEndLiveResize:(id)arg1;
- (BOOL)resizingInputLine;
- (void)showInputLine:(BOOL)arg1;
- (BOOL)inputLineCanAttachFile;
- (id)enclosingView;
- (id)chatViewController;
- (id)preparedFieldEditor;
- (void)makeInputLineKey;
- (void)insertText:(id)arg1;
- (void)paste:(id)arg1;
- (void)pasteAndMatchStyle:(id)arg1;
- (void)tabView:(id)arg1 willSwitchFromTab:(long long)arg2 toTab:(long long)arg3 effect:(int *)arg4 direction:(int *)arg5;
- (BOOL)isInputLineVisible;
- (void)_setUnjoinedState;
- (void)_setJoiningState;
- (void)_setJoinedState;
- (void)makeInputLineFlushLeft:(BOOL)arg1;
- (void)_accountLoginStatusChanged:(id)arg1;
- (void)_updateInputLineTabView:(id)arg1;
- (BOOL)_canShowParticipants;
- (void)_updateVisibilityOfParticipantsDrawer;
- (BOOL)areParticipantsVisible;
- (void)showParticipants;
- (void)hideParticipants;
- (void)toggleParticipants:(id)arg1;
- (void)personDoubleClicked:(id)arg1;
- (void)drawerDidOpen:(id)arg1;
- (void)drawerWillClose:(id)arg1;
- (void)toggleHidePictures:(id)arg1;
- (void)toggleHideAudioStatus:(id)arg1;
- (void)toggleHideVideoStatus:(id)arg1;
- (void)sortByStatus:(id)arg1;
- (void)sortByName:(id)arg1;
- (void)sortByFirstName:(id)arg1;
- (void)sortByLastName:(id)arg1;
- (void)_updateAddBuddyButtonState;
- (BOOL)addNewIMHandles:(id)arg1;
- (void)addLink:(id)arg1;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)chatFieldEditor:(id)arg1 navigatedToHistory:(id)arg2;
- (void)_sendMessage:(BOOL)arg1 forceEmpty:(BOOL)arg2 forceSend:(BOOL)arg3;
- (void)_clearInputLine;
- (void)joinAtLoginChanged:(id)arg1;
- (void)rejoinChat:(id)arg1;
- (void)cancelMessage:(id)arg1;
- (void)_sendMessage;
- (void)sendMessage:(id)arg1;
- (void)sendPartialMessage:(id)arg1;
- (BOOL)canSendPartialMessage;
- (BOOL)textField:(id)arg1 didChangeSignificantly:(int)arg2;
- (BOOL)control:(id)arg1 textShouldBeginEditing:(id)arg2;
- (void)sendSMS:(id)arg1;
- (void)composeEMail:(id)arg1;
- (void)sendFile:(id)arg1;
- (void)insertSmiley:(id)arg1;
- (void)setTranscriptStyleFromMenuItem:(id)arg1;
- (void)cancelARDSession:(id)arg1;
- (void)inviteToARDAsClient:(id)arg1;
- (void)inviteToARDAsServer:(id)arg1;
- (void)inviteToAudioChat:(id)arg1;
- (void)inviteToVideoChat:(id)arg1;
- (BOOL)canUseInputField;
- (void)clearUnreadMessageIfVisible:(id)arg1;
- (void)_reformatOutgoingColors;
- (void)_reformatOutgoingFonts;
- (void)_reformatOverrideIncoming;
- (void)_reformatOverrideIncomingFont;
- (void)_reformatOverrideIncomingColors;
- (void)_watchMessageAddressingChanged;
- (void)toggleRecipientBar:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)makeTextBigger:(id)arg1;
- (void)makeTextStandardSize:(id)arg1;
- (void)makeTextSmaller:(id)arg1;
- (void)_updateParticipantCount;
- (void)_chatOverallStatusChangedNotification:(id)arg1;
- (void)handleIMChatRecipientDidChange:(id)arg1;
- (void)handleIMChatParticipantStateDidChange:(id)arg1;
- (void)handleIMChatJoinStateDidChange:(id)arg1;
- (void)installInView:(id)arg1;
- (void)finishChat:(id)arg1;
- (void)ignore:(id)arg1;
- (void)toggleQuietMode:(id)arg1;
- (void)showInBuddyList:(id)arg1;
- (void)showSelectedBuddyInfo:(id)arg1;
- (void)showSelectedBuddyProfile:(id)arg1;
- (void)addToAddressBook:(id)arg1;
- (void)showInAddressBook:(id)arg1;
- (void)addABuddy:(id)arg1;
- (void)deleteSelectedBuddies:(id)arg1;
- (void)requestValidation:(id)arg1;
- (void)block:(id)arg1;
- (void)searchInSpotlight:(id)arg1;
- (void)_chatStatusChanged:(id)arg1;
- (void)_chatErrorPosted:(id)arg1;
- (void)_showErrorSheet:(id)arg1;
- (void)_personInfoChanged:(id)arg1;
- (void)buddySelected:(id)arg1;
- (BOOL)chooseBuddyButton:(id)arg1 allowIMHandle:(id)arg2;
- (id)peopleList:(id)arg1 alternateNameTextForIMHandle:(id)arg2;
- (id)peopleList:(id)arg1 alternateStatusTextForIMHandle:(id)arg2;
- (double)peopleList:(id)arg1 alphaForStatus:(unsigned long long)arg2;
- (BOOL)canAddPeople;
- (BOOL)lastMessageIsVisible;
- (id)peopleList:(id)arg1 addablePeople:(id)arg2;
- (void)peopleList:(id)arg1 setGroupsSortOrder:(id)arg2;
- (BOOL)peopleList:(id)arg1 canRemoveRows:(id)arg2;
- (BOOL)peopleList:(id)arg1 forceDeleteGroup:(id)arg2;
- (void)peopleList:(id)arg1 deleteGroup:(id)arg2;
- (BOOL)peopleList:(id)arg1 deletePeople:(id)arg2;
- (void)chatWindowRevealed:(BOOL)arg1;
- (BOOL)peopleList:(id)arg1 pastePeople:(id)arg2 intoGroup:(id)arg3 atLocation:(long long)arg4;
- (void)_peopleChanged;
- (BOOL)peopleListAboutToResort:(id)arg1;
- (id)peopleList:(id)arg1 filterIMHandleFromPasteboard:(id)arg2;
- (void)peopleList:(id)arg1 addPersonWithoutID:(id)arg2 toGroup:(id)arg3;
- (BOOL)peopleList:(id)arg1 people:(id)arg2 draggedFromGroups:(id)arg3 toGroup:(id)arg4 atLocation:(unsigned long long)arg5 copying:(BOOL)arg6;
- (id)peopleList:(id)arg1 menuForGroup:(id)arg2;
- (BOOL)canModifyBuddiesInPeopleList:(id)arg1;
- (void)peopleListSelectedItemInfoChanged:(id)arg1;
- (id)peopleListService:(id)arg1;
- (void)_chatStyleChanged:(id)arg1;
- (BOOL)isAcceptingNotifier;
- (void)setAcceptingNotifier:(BOOL)arg1;
- (BOOL)isInTransition;
- (void)setInTransition:(BOOL)arg1;
- (void)setIsDeciding:(BOOL)arg1 doKnockKnock:(BOOL)arg2 withChatNotifier:(id)arg3;
- (void)forgetNotifier:(id)arg1;
- (BOOL)isDeciding;
- (void)setVisiblePortionOfNotifyButtons:(double)arg1 showInputLine:(BOOL)arg2;
- (void)acceptNotification:(id)arg1;
- (void)rejectNotification:(id)arg1;
- (void)blockNotification:(id)arg1;
- (void)_loadInviteNibIfNecessary;
- (void)_runInviteSheetForInvitees:(id)arg1;
- (void)acceptInviteMessage:(id)arg1;
- (void)cancelInviteMessage:(id)arg1;
- (void)_inviteMsgDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)scrollToBottom:(id)arg1;
- (void)clearTranscript:(id)arg1;
- (void)markTranscript:(id)arg1;
- (id)quicklookPreviewPanelDataSource;
- (void)showFindPanel:(id)arg1;
- (void)findNext:(id)arg1;
- (void)findPrevious:(id)arg1;
- (void)copySelectionToFindPboard:(id)arg1;
- (void)toggleHideSmileys:(id)arg1;
- (void)chooseBackgroundImage:(id)arg1;
- (void)clearBackground:(id)arg1;
- (void)toggleShowPictures:(id)arg1;
- (void)toggleShowNames:(id)arg1;
- (void)setChatShowsNames:(id)arg1;
- (void)setChatShowsPictures:(id)arg1;
- (void)setChatShowsNamesAndPictures:(id)arg1;
- (void)saveChatAs:(id)arg1;

@end

@interface ChatDoc : NSDocument <QLPreviewPanelDelegate, QLPreviewPanelDataSource>
{
    Chat *_chat;
    SecureWindow *_chatWindow;
    NSView *_chatView;
    ChatController *_controller;
    ChatMiniwindowController *_miniwindowController;
    NSWindow *_printingWindow;
    NSPrintOperation *_printingOperation;
    QLPreviewPanel *_previewPanel;
    NSString *_spotlightSearchString;
    unsigned int _didLoadNib:1;
}

+ (id)currentSpotlightSearchString;
+ (id)chatDocForChat:(id)arg1;
+ (void)_assignChatDoc:(id)arg1 toChat:(id)arg2;
- (id)init;
- (void)dealloc;
- (id)chat;
- (id)controller;
- (id)windowNibName;
- (void)windowControllerDidLoadNib:(id)arg1;
- (id)displayName;
- (void)_updateDisplayName;
- (void)windowDidResize:(id)arg1;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (id)window;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (void)saveDocumentTo:(id)arg1;
- (BOOL)readFromData:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (void)updateChangeCount:(unsigned long long)arg1;
- (void)close;
- (BOOL)windowShouldClose:(id)arg1;
- (void)chatDidLoad:(id)arg1;
- (void)_failureAlertDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)chatDidFailToLoad;
- (void)quickLook:(id)arg1;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
- (void)beginPreviewPanelControl:(id)arg1;
- (void)endPreviewPanelControl:(id)arg1;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (void)toggleParticipants:(id)arg1;
- (void)toggleHidePictures:(id)arg1;
- (void)toggleHideAudioStatus:(id)arg1;
- (void)toggleHideVideoStatus:(id)arg1;
- (void)composeEMail:(id)arg1;
- (void)setTranscriptStyleFromMenuItem:(id)arg1;
- (void)inviteToVideoChat:(id)arg1;
- (void)inviteToAudioChat:(id)arg1;
- (void)toggleHideSmileys:(id)arg1;
- (void)toggleShowNames:(id)arg1;
- (void)toggleShowPictures:(id)arg1;
- (void)setChatShowsNames:(id)arg1;
- (void)setChatShowsPictures:(id)arg1;
- (void)setChatShowsNamesAndPictures:(id)arg1;
- (void)showInAddressBook:(id)arg1;
- (void)addToAddressBook:(id)arg1;
- (void)showFindPanel:(id)arg1;
- (void)findNext:(id)arg1;
- (void)findPrevious:(id)arg1;
- (void)copySelectionToFindPboard:(id)arg1;
- (void)makeTextBigger:(id)arg1;
- (void)makeTextSmaller:(id)arg1;
- (void)makeTextStandardSize:(id)arg1;
- (void)printOperationDidRun:(id)arg1 success:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)printShowingPrintPanel:(BOOL)arg1;
- (id)imHandleToGetInfoOn;
- (void)showSelectedBuddyInfo:(id)arg1;
- (void)showSelectedBuddyProfile:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;

@end

@interface ChatFieldEditor : NSTextView <NSOpenSavePanelDelegate>
{
    NSMutableArray *_rememberedMessages;
    long long _rememberedIndex;
    NSAttributedString *_currentMessage;
    IMHandle *_attachmentRecipient;
    NSView *_forwardingView;
    LinkSheetController *_linkSheetController;
    BOOL _isChat;
    BOOL _allowsAttachments;
    BOOL _allowsInlineImages;
    id <ChatFieldEditorDelegate> _fieldEditorDelegate;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)orderFrontLinkPanel:(id)arg1;
- (void)addFontTrait:(id)arg1;
- (void)toggleContinuousSpellChecking:(id)arg1;
- (void)toggleGrammarChecking:(id)arg1;
- (void)toggleSmartInsertDelete:(id)arg1;
- (void)toggleAutomaticQuoteSubstitution:(id)arg1;
- (void)toggleAutomaticLinkDetection:(id)arg1;
- (void)toggleAutomaticDataDetection:(id)arg1;
- (void)toggleAutomaticDashSubstitution:(id)arg1;
- (void)toggleAutomaticTextReplacement:(id)arg1;
- (void)toggleAutomaticSpellingCorrection:(id)arg1;
- (void)changeFont:(id)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (void)insertText:(id)arg1;
- (void)_moveUpInPreviousMessageList;
- (void)_moveDownInPreviousMessageList;
- (void)setFieldEditorDelegate:(id)arg1;
- (id)fieldEditorDelegate;
- (void)clearHistory;
- (void)endHistoryNavigation;
- (void)addContentsToHistory;
- (id)historyData;
- (void)restoreHistoryData:(id)arg1;
- (void)setKeyForwardingView:(id)arg1;
- (id)keyForwardingView;
- (void)keyDown:(id)arg1;
- (void)_setAllowsAttachments:(BOOL)arg1;
- (void)_setAllowsInlineImages:(BOOL)arg1;
- (void)setIsChatChat:(BOOL)arg1;
- (void)setAttachmentRecipient:(id)arg1;
- (BOOL)canAttachFile;
- (BOOL)canFileURLBeAttachedInline:(id)arg1;
- (void)_showErrorSheetWithTitle:(id)arg1 message:(id)arg2 helpAnchor:(id)arg3;
- (void)_showAttachErrorSheetForMultipleFiles:(BOOL)arg1;
- (BOOL)insertFileURL:(id)arg1;
- (BOOL)insertFileURLs:(id)arg1;
- (void)sendFile:(id)arg1;
- (void)copySelectionToFindPboard:(id)arg1;
- (id)acceptableDragTypes;
- (id)readablePasteboardTypes;
- (void)_getIMHandleURL:(id *)arg1 andText:(id *)arg2 fromPasteboard:(id)arg3;
- (BOOL)readSelectionFromPasteboard:(id)arg1 type:(id)arg2;
- (BOOL)_readSelectionFromPasteboard:(id)arg1 types:(id)arg2;
- (void)_clearParagraphStyle;
- (BOOL)_applyDragAndDropFormatting:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (id)writablePasteboardTypes;
- (BOOL)writeSelectionToPasteboard:(id)arg1 type:(id)arg2;
- (void)paste:(id)arg1;
- (void)pasteAndMatchStyle:(id)arg1;
- (void)setTypingAttributes:(id)arg1;
- (void)_setTypingAttributesForSelection:(struct _NSRange)arg1;
- (void)_fixAttrsOnSelectionChange:(id)arg1;
- (void)changeDocumentBackgroundColor:(id)arg1;

@end

@interface ChatFieldEditorTextStorage : NSTextStorage
{
    NSMutableAttributedString *_storage;
}

- (id)init;
- (void)dealloc;
- (id)string;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)fixFontAttributeInRange:(struct _NSRange)arg1;

@end

@interface ChatInputLine : AutoSendTextField
{
    NSButton *_smileyButton;
    Chat *_chat;
}

- (unsigned long long)validModesForFontPanel:(id)arg1;
- (void)awakeFromNib;
- (void)dealloc;
- (void)viewDidEndLiveResize;
- (id)_preparedFieldEditor;
- (void)setChat:(id)arg1;
- (id)_chatFieldEditor;
- (void)insertSmiley:(id)arg1;
- (void)pickSmiley:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;

@end

@interface ChatInputLineCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)_drawFocusRingWithFrame:(struct CGRect)arg1;

@end

@interface ChatMiniwindowController : NSObject
{
    NSWindow *_window;
    Chat *_chat;
    ChatWindowController *_chatWindowController;
    NSTimer *_miniwindowTimer;
}

- (id)initWithWindow:(id)arg1;
- (void)setWindow:(id)arg1;
- (void)dealloc;
- (id)chatWindowController;
- (void)setChatWindowController:(id)arg1;
- (void)updateUnreadCount;
- (void)updateSelectedChat;
- (id)chat;
- (void)setChat:(id)arg1;
- (void)_updateMiniwindowImage;
- (void)windowDidMiniaturize:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)_needsDrawFromAnimate:(id)arg1;
- (void)_chatChanged:(id)arg1;

@end

@interface ChatNotifier : Notifier
{
    BOOL _msgsHidden;
    Chat *_chat;
    Chat *_chatForMessageContainer;
    NSString *_autosaveFrameName;
    ChatController *_controller;
    FezWebView *_realChatView;
    ChatViewController *_realChatViewController;
    NSView *_notifierClipView;
    FezWebView *_notifierChatView;
    ChatViewController *_notifierChatViewController;
    struct CGRect _originalFrame;
    struct CGSize _origTranscriptSize;
    BOOL _shouldRestoreSize;
    struct CGPoint _realMsgFloaterOffset;
    struct CGRect _messagePreviewRect;
}

+ (id)chatNotifierForChat:(id)arg1;
+ (void)_assignChatNotifier:(id)arg1 toChat:(id)arg2;
+ (struct CGSize)minChatSizeForScale:(double)arg1;
- (void)dealloc;
- (void)_makeRealWindowMsgRect:(struct CGRect *)arg1;
- (void)_installChatViewInFrame:(struct CGRect)arg1 hideMessages:(BOOL)arg2;
- (void)_makeFloaterWindowWithMessageRect:(struct CGRect)arg1 knockKnock:(BOOL)arg2;
- (void)_sizeWindowsToMessagePreview;
- (id)initWithChatController:(id)arg1;
- (void)disconnectFromChatController:(id)arg1;
- (void)clearWeakReferencesToObject:(id)arg1;
- (id)chat;
- (id)chatForMessageContainer;
- (id)menuItemFormat;
- (void)closeDownShop:(BOOL)arg1;
- (void)_animateRealSizeRestore;
- (void)acceptNotification;
- (void)clearKnockKnock;
- (void)_realWindowDidResize:(id)arg1;
- (void)realWindowHiding;
- (void)realWindowVisible;

@end

@interface ChatRegistry : IMChatRegistry
{
    NSMutableDictionary *_chatGUIDToSavedChatMap;
}

- (id)init;
- (void)dealloc;
- (id)resurrectedGroupChatWithRoomName:(id)arg1 onAccount:(id)arg2;
- (id)allSavedChats;
- (id)savedChatWithAccount:(id)arg1 style:(unsigned char)arg2 roomName:(id)arg3 chatItems:(id)arg4 participants:(id)arg5;
- (void)unregisterSavedChatWithGUID:(id)arg1;

@end

@interface ChatTranscriptManager : NSObject
{
    NSString *_cachedSavedChatPath;
    NSTimer *_autosaveTimer;
    NSMutableArray *_dirtyChatGUIDs;
    NSMutableDictionary *_chatGUIDToSavePathMap;
    NSOperationQueue *_findOperationQueue;
    NSOperationQueue *_loadOperationQueue;
    NSOperationQueue *_saveOperationQueue;
}

+ (id)sharedInstance;
- (id)init;
- (void)dealloc;
- (BOOL)_worker_loadData:(id)arg1 outAccount:(id *)arg2 outChatItems:(id *)arg3 outParticipants:(id *)arg4 outRoomName:(id *)arg5 outStyle:(id *)arg6;
- (void)_markChatAsDirty:(id)arg1;
- (void)_markChatGUIDAsClean:(id)arg1;
- (void)_worker_findRecentChatItemsForChat:(id)arg1 canHaveMultipleParticipants:(BOOL)arg2 handle:(id)arg3 roomName:(id)arg4 maxMessageLimit:(unsigned long long)arg5;
- (void)_worker_loadData:(id)arg1 intoChat:(id)arg2;
- (void)decodeTranscriptDataFromCoder:(id)arg1 intoChat:(id)arg2;
- (void)findRecentChatItemsAndLoadIntoChat:(id)arg1;
- (void)_main_finishLoadTranscriptDataIntoChatDoc:(id)arg1;
- (void)_worker_loadTranscriptData:(id)arg1 intoChatDoc:(id)arg2;
- (void)loadTranscriptData:(id)arg1 intoChatDoc:(id)arg2;
- (void)_main_chatWasSaved:(id)arg1;
- (id)_newMetadataForServiceName:(id)arg1 dateCreated:(id)arg2 dateModified:(id)arg3 loginIMHandle:(id)arg4 participants:(id)arg5 roomName:(id)arg6;
- (id)_dataForChatWithDateCreated:(id)arg1 dateModified:(id)arg2 accountInternalName:(id)arg3 serviceName:(id)arg4 chatItems:(id)arg5 loginIMHandle:(id)arg6 participants:(id)arg7 roomName:(id)arg8 includeArchivedItems:(BOOL)arg9 aggregateChatStyle:(id)arg10;
- (void)_worker_saveChatToPath:(id)arg1 guid:(id)arg2 dateCreated:(id)arg3 dateModified:(id)arg4 accountInternalName:(id)arg5 serviceName:(id)arg6 chatItems:(id)arg7 loginIMHandle:(id)arg8 participants:(id)arg9 roomName:(id)arg10 isAutosave:(BOOL)arg11 includeArchivedItems:(BOOL)arg12 aggregateChatStyle:(id)arg13;
- (id)_otherIMHandleOrChatroomForChat:(id)arg1;
- (id)_baseSaveNameForChat:(id)arg1;
- (id)defaultSaveNameForChat:(id)arg1;
- (id)savedChatPath;
- (void)_saveChat:(id)arg1 toTranscriptAtPath:(id)arg2 isAutosave:(BOOL)arg3 includeArchivedItems:(BOOL)arg4;
- (void)autosaveChat:(id)arg1;
- (void)autosaveChats;
- (void)saveChat:(id)arg1 toTranscriptAtPath:(id)arg2 includeArchivedItems:(BOOL)arg3;
- (void)encodeChat:(id)arg1 inCoder:(id)arg2;
- (void)_handleSavedChatPathChanged:(id)arg1;
- (void)_handleAutosaveChatsChanged:(id)arg1;
- (void)_handleChatRegistryDidRegisterChat:(id)arg1;
- (void)_handleChatRegistryDidUnregisterChat:(id)arg1;
- (void)_handleChatItemChanged:(id)arg1;

@end

@interface ChatViewHelper : NSObject
{
    ChatViewController *_chatViewController;
}

- (id)initWithChatViewController:(id)arg1;
- (void)setChatViewController:(id)arg1;
- (id)chatViewController;

@end

@interface ChatViewBuddyPictureHelper : ChatViewHelper
{
    NSMutableSet *_deferredInfoUpdates;
    NSMutableSet *_deferredPictureUpdates;
}

- (id)initWithChatViewController:(id)arg1;
- (void)dealloc;
- (void)cancelDeferredUpdates;
- (void)_updateDeferredHandles;
- (void)_personPictureChangedNotification:(id)arg1;
- (void)_personInfoChangedNotification:(id)arg1;

@end

@interface ChatViewController : NSObject
{
    NSMenu *_viewMenu;
    NSTextField *_textField;
    NSMenuItem *_balloonMenuItem;
    Chat *_chat;
    ChatController *_chatController;
    FezWebView *_webView;
    ChatViewDragDestinationHelper *_dragHelper;
    ChatViewTimeFormatHelper *_timeFormatHelper;
    ChatViewBuddyPictureHelper *_buddyPictureHelper;
    ChatViewScrollHelper *_scrollHelper;
    ChatViewDDHelper *_ddHelper;
    ChatViewQLHelper *_qlHelper;
    ChatViewFileTransferHelper *_fileTransferHelper;
    TranscriptStyleController *_transcriptStyleController;
    Class _transcriptStyleControllerClass;
    int _viewFlags;
    BOOL _pinToBottomOnResize;
    BOOL _needsNewLayout;
    BOOL _isLoading;
    BOOL _canShowMessages;
    id <ShowMessagesDelegate> _showMessagesDelegate;
    BOOL _aboutBlankHandled;
    BOOL _delayScrolling;
    BOOL _handingKeyEvent;
    NSMutableArray *_loadingIdentifiers;
    int _changeCount;
    int _changeCountForTranscriptStyleController;
    double _heightBeforeChange;
    struct CGRect _clipRectBeforeChange;
    BOOL _shouldPinAfterChange;
    BOOL _isVisible;
}

+ (void)initialize;
+ (int)flagsToSave;
- (id)init;
- (void)dealloc;
- (void)_initWebView;
- (void)awakeFromNib;
- (void)invalidate;
- (id)textField;
- (id)webView;
- (void)setWebView:(id)arg1;
- (id)chat;
- (void)setChat:(id)arg1;
- (id)chatController;
- (void)restoreTranscriptRendererFromPrefs;
- (void)restoreTranscriptPrefs;
- (void)finishLoad;
- (void)_setRenderer:(id)arg1;
- (BOOL)changeToNewRenderer:(Class)arg1;
- (id)renderer;
- (void)loadBaseDocument;
- (void)highlightSearchString:(id)arg1;
- (void)beginChanges;
- (void)endChanges;
- (void)_layoutIfNecessary;
- (void)willBecomeVisible;
- (void)willBecomeInvisible;
- (void)restoreSavedScrollPosition:(double)arg1;
- (double)savedScrollPosition;
- (void)scrollFromPosition:(double)arg1 toPosition:(double)arg2 smoothly:(BOOL)arg3;
- (void)scrollToPosition:(double)arg1 smoothly:(BOOL)arg2;
- (void)scrollToEndSmoothly:(BOOL)arg1;
- (void)scrollToBeginningSmoothly:(BOOL)arg1;
- (void)scrollHelperDidFinishScrolling;
- (void)_handleIMChatItemChanged:(id)arg1;
- (void)_chatRecipientDidChange:(id)arg1;
- (void)insertAllMessages;
- (void)clearAllMessages;
- (void)clearDDResults;
- (BOOL)_forwardViewFlagsToRenderer:(int)arg1;
- (void)setViewFlag:(int)arg1 toValue:(BOOL)arg2;
- (void)setViewFlags:(int)arg1;
- (BOOL)isViewFlagOn:(int)arg1;
- (int)viewFlags;
- (void)saveViewFlags;
- (void)reformatOutgoingColors;
- (void)reformatOutgoingFonts;
- (void)watchMessageAddressing;
- (void)reformatOverrideIncoming;
- (void)reformatOverrideIncomingFont;
- (void)reformatOverrideIncomingColors;
- (void)_setShowsPictures:(BOOL)arg1 names:(BOOL)arg2;
- (BOOL)setBackgroundImageFile:(id)arg1;
- (void)restoreDefaultBackground;
- (void)clearUnreadMessageIfVisible;
- (BOOL)lastMessageIsVisible;
- (void)_boundsChanged:(id)arg1;
- (void)addSampleChatItem:(id)arg1;
- (void)setSampleChat;
- (struct CGRect)messagePreviewBounds;
- (BOOL)shouldPinToBottom;
- (BOOL)validateMenuItem:(id)arg1;
- (void)undo:(id)arg1;
- (void)paste:(id)arg1;
- (void)copySelectionToFindPboard:(id)arg1;
- (BOOL)canMakeTextLarger;
- (void)makeTextLarger:(id)arg1;
- (BOOL)canMakeTextSmaller;
- (void)makeTextSmaller:(id)arg1;
- (BOOL)canMakeTextStandardSize;
- (void)makeTextStandardSize:(id)arg1;
- (void)toggleHideSmileys:(id)arg1;
- (void)chooseBackgroundImage:(id)arg1;
- (void)clearBackground:(id)arg1;
- (void)toggleShowPictures:(id)arg1;
- (void)toggleShowNames:(id)arg1;
- (void)setChatShowsNames:(id)arg1;
- (void)setChatShowsPictures:(id)arg1;
- (void)setChatShowsNamesAndPictures:(id)arg1;
- (void)setTranscriptStyleFromMenuItem:(id)arg1;
- (int)loadCacheCount;
- (void)_increaseResourceLoadCountForURL:(id)arg1;
- (void)_decreaseResourceLoadCountForURL:(id)arg1;
- (id)webView:(id)arg1 identifierForInitialRequest:(id)arg2 fromDataSource:(id)arg3;
- (id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (void)webView:(id)arg1 resource:(id)arg2 didFailLoadingWithError:(id)arg3 fromDataSource:(id)arg4;
- (void)webView:(id)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(id)arg3;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (BOOL)webView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)webView:(id)arg1 willPerformDragSourceAction:(int)arg2 fromPoint:(struct CGPoint)arg3 withPasteboard:(id)arg4;
- (id)webView:(id)arg1 contextMenuItemsForElement:(id)arg2 defaultMenuItems:(id)arg3;
- (id)webView:(id)arg1 plugInViewWithArguments:(id)arg2;
- (BOOL)webView:(id)arg1 validateUserInterfaceItem:(id)arg2 defaultValidation:(BOOL)arg3;
- (void)fezWebView:(id)arg1 setFrameSize:(struct CGSize)arg2;
- (void)fezWebViewWillStartLiveResize:(id)arg1;
- (void)fezWebViewDidEndLiveResize:(id)arg1;
- (void)fezWebViewDidMoveToSuperview:(id)arg1;
- (void)fezWebViewRemoveFromSuperview:(id)arg1;
- (void)fezWebViewDidMoveToWindow:(id)arg1;
- (BOOL)fezWebView:(id)arg1 keyDown:(id)arg2;
- (void)fezWebViewShouldRegisterForDraggedTypes:(id)arg1;
- (unsigned long long)fezWebView:(id)arg1 draggingEntered:(id)arg2;
- (unsigned long long)fezWebView:(id)arg1 draggingUpdated:(id)arg2;
- (void)fezWebView:(id)arg1 draggingExited:(id)arg2;
- (BOOL)fezWebView:(id)arg1 prepareForDragOperation:(id)arg2;
- (BOOL)fezWebView:(id)arg1 performDragOperation:(id)arg2;
- (void)fezWebView:(id)arg1 concludeDragOperation:(id)arg2;
- (id)quicklookPreviewPanelDataSource;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNewWindowAction:(id)arg2 request:(id)arg3 newFrameName:(id)arg4 decisionListener:(id)arg5;
@property(assign) id <ShowMessagesDelegate> showMessagesDelegate; // @synthesize showMessagesDelegate=_showMessagesDelegate;

@end

@interface ChatViewDDHelper : ChatViewHelper <DDHighlightsDataSource, FezDDScannerCompletionHandler>
{
    DDHighlightsView *_highlightsView;
    NSMutableDictionary *_ddMessageCache;
    NSMutableDictionary *_ddContainerCache;
    NSMutableDictionary *_recentChatItemsMap;
    NSMutableDictionary *_previousContainersMap;
    NSMutableDictionary *_resultsBySenderMap;
    NSMutableDictionary *_scanGUIDToChatItemsMap;
    NSMutableDictionary *_scanGUIDToMessagesMap;
    NSMutableArray *_queuedChatItems;
    unsigned int _hasAtLeastOneNode:1;
}

- (id)initWithChatViewController:(id)arg1;
- (void)dealloc;
- (BOOL)_connectHighlightsView;
- (void)_disconnectHighlightsView;
- (void)_handleFezDDScannerBuildComplete:(id)arg1;
- (void)_appendChatItemsToRecents:(id)arg1 senderGUID:(id)arg2;
- (BOOL)_clearCachesForChatItem:(id)arg1;
- (void)resetResults;
- (void)_scanChatItems:(id)arg1 senderGUID:(id)arg2;
- (void)scan:(id)arg1 didFinishWithResults:(id)arg2;
- (void)_addResultsForChatItems:(id)arg1 senderGUID:(id)arg2;
- (void)addResultsForChatItem:(id)arg1;
- (void)addResultsForChatItems:(id)arg1 isFromSameSender:(BOOL)arg2;
- (void)removeResultsForChatItem:(id)arg1;
- (void)remapResultsFromHandle:(id)arg1 toHandle:(id)arg2;
- (void)updateConnection;
- (void)didScroll;
- (void)recomputeLayout;
- (void)enqueuePerformLayout;
- (id)highlightsViewHighlightObjects:(id)arg1;
- (id)highlightsView:(id)arg1 framesOfHighlightObject:(id)arg2;
- (BOOL)highlightsView:(id)arg1 allowsHighlightForObject:(id)arg2;
- (id)highlightsView:(id)arg1 relatedObjectsForObject:(id)arg2;
- (BOOL)highlightsView:(id)arg1 wantsToHandleEvent:(id)arg2 onHighlightObject:(id)arg3;
- (id)highlightsView:(id)arg1 menuForEvent:(id)arg2 onHighlightObject:(id)arg3;
- (void)highlightsView:(id)arg1 handleEvent:(id)arg2 onHighlightObject:(id)arg3;
- (unsigned long long)highlightsView:(id)arg1 highlightStyleForObject:(id)arg2;
- (int)highlightsView:(id)arg1 actionForEvent:(id)arg2 onHighlightObject:(id)arg3 proposedAction:(int)arg4;
- (void)setPasteboardString:(id)arg1;

@end

@interface ChatViewDragDestinationHelper : ChatViewHelper
{
    BOOL _willAddNewInvitees;
    NSMutableArray *_newInvitees;
    BOOL _addIMHandlesToChat;
    BOOL _shouldForwardDragEvent;
}

+ (id)supportedDragTypes;
- (id)editor;
- (id)chatWindowController;
- (BOOL)isSenderFromMyWindow:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;

@end

@interface ChatViewFileTransferHelper : ChatViewHelper
{
}

- (id)initWithChatViewController:(id)arg1;
- (void)dealloc;
- (void)_fileTransferUpdated:(id)arg1;

@end

@interface ChatViewPasteboardHelper : ChatViewHelper
{
}

- (id)_inlineStyleForTextNode:(id)arg1 usingComputedStyle:(id)arg2;
- (BOOL)_generatePasteboardContentFromNode_r:(id)arg1 plaintextBody:(id)arg2 mixedBody:(id)arg3 htmlBody:(id)arg4 foundStart:(char *)arg5 foundEnd:(char *)arg6 range:(id)arg7 depth:(long long)arg8 endsWithBreak:(char *)arg9;
- (void)_generatePasteboardContentForRange:(id)arg1 plaintextBody:(id)arg2 mixedBody:(id)arg3 htmlBody:(id)arg4;
- (void)copyDOMRange:(id)arg1 toPasteboard:(id)arg2;

@end

@interface ChatViewQLHelper : ChatViewHelper <QLPreviewPanelDataSource, QLPreviewPanelDelegate>
{
    NSMutableArray *_previewItems;
    QLPreviewPanel *_panel;
}

- (id)initWithChatViewController:(id)arg1;
- (void)dealloc;
- (void)messagesChanged;
- (void)resetMessages;
- (void)addFileTransfersForMessage:(id)arg1;
- (void)removeFileTransfersForMessage:(id)arg1;
- (void)setQuicklookPreviewPanel:(id)arg1;
- (unsigned long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(unsigned long long)arg2;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;

@end

@interface ChatViewQLHelperPreviewItem : NSObject <QLPreviewItem>
{
    ChatViewQLHelper *_helper;
    BaseInstantMessage *_instantMessage;
    NSDictionary *_attributes;
}

- (id)initWithInstantMessage:(id)arg1 attributes:(id)arg2 helper:(id)arg3;
- (void)dealloc;
- (id)guid;
- (id)instantMessage;
@property(readonly) NSURL *previewItemURL;
- (struct CGRect)previewBounds;

// Remaining properties
@property(readonly) id previewItemDisplayState;
@property(readonly) NSString *previewItemTitle;

@end

@interface ChatViewScrollHelper : ChatViewHelper
{
    Animator *_currentScrollerAnimation;
    double _startingValue;
    double _endingValue;
}

- (id)initWithChatViewController:(id)arg1;
- (void)dealloc;
- (double)scrollPositionForDocumentHeight:(double)arg1 clipRect:(struct CGRect)arg2;
- (void)setScrollPositionToEnd;
- (void)scrollFromPosition:(double)arg1 toPosition:(double)arg2 smoothly:(BOOL)arg3;
- (BOOL)isScrolling;
- (void)animator:(id)arg1 doStep:(double)arg2 lastStep:(BOOL)arg3;
- (void)scrollToPosition:(double)arg1 smoothly:(BOOL)arg2;
- (void)scrollToEndSmoothly:(BOOL)arg1;
- (void)scrollToBeginningSmoothly:(BOOL)arg1;
- (double)savedScrollPosition;
- (void)restoreSavedScrollPositionFromNumber:(id)arg1;
- (void)restoreSavedScrollPosition:(double)arg1;

@end

@interface ChatViewTimeFormatHelper : ChatViewHelper
{
    NSTimer *_dailyRebuildTimer;
}

+ (id)midnight;
- (id)initWithChatViewController:(id)arg1;
- (void)dealloc;
- (void)clear;
- (void)reset;
- (void)dateDisplayChanged;
- (void)_dateDisplayChanged:(id)arg1;
- (void)_dateOrTimeFormatsChanged:(id)arg1;

@end

@interface ChatWindowController : NSWindowController <NSTableViewDelegate, NSTabViewDelegate, NSSplitViewDelegate, NSAnimationDelegate, QLPreviewPanelDelegate, QLPreviewPanelDataSource>
{
    AnimatingTabView *_chatTabView;
    NSExtendedBox *_chatListTitle;
    AnimatingTableView *_chatTable;
    NSView *_chatViewContainer;
    NSButton *_choosePersonButton;
    ExtendedSplitView *_splitView;
    NSMenu *_tabContextMenu;
    MenuButton *_actionButton;
    NSMutableArray *_lastReadMessage;
    NSMutableArray *_chats;
    NSMutableArray *_chatControllers;
    NSString *_chatGUIDToDisplay;
    ChatMiniwindowController *_miniwindowController;
    NSPrintOperation *_printingOperation;
    QLPreviewPanel *_previewPanel;
    id <QLPreviewPanelDelegate, QLPreviewPanelDataSource> _previewPanelDataSource;
    long long _coalesceCount;
    double _blinkProgress;
    NSMutableSet *_savedSelection;
    struct CGRect _frameToResurrect;
    struct CGRect _savedRect;
    NSTimer *_chatAnimationTimer;
    NSMutableArray *_chatAnimationProgresses;
    NSTimer *_notifierAnimationTimer;
    NSDate *_notifierStartTime;
    NSWindow *_notifierWindow;
    NSWindow *_secondaryNotifierWindow;
    struct CGRect _targetRect;
    struct CGRect _startRect;
    long long _targetNotifierRow;
    double _notifierAnimationTime;
    double _animationStep;
    struct CGAffineTransform _finalXform;
    NSTimer *_sidebarAnimationTimer;
    NSDate *_sidebarStartTime;
    NSWindow *_dragWindow;
    ChatWindowController *_dragChatWindowController;
    NSImage *_tabImage;
    NSImage *_miniWindowImage;
    NSImage *_dragImage;
    DragWindowAnimation *_morphAnimation;
    long long _draggedRow;
    struct CGRect _startChatWindowRect;
    struct CGRect _endChatWindowRect;
    BOOL _animateWhenEnded;
    BOOL _pendingResort;
    BOOL _pendingUpdateNumber;
    BOOL _pendingSync;
    BOOL _closing;
    BOOL _draggedTypesRegistered;
    BOOL _willAppearInNotifier;
    BOOL _dontResizeWindowNextSidebarChange;
    BOOL _expandSidebar;
    BOOL _wasSidebarVisibleWhenNotifierAnimationStarted;
    BOOL _shouldChangeSidebarWidth;
    BOOL _overrideSideBarPref;
}

+ (void)initialize;
+ (BOOL)wantsCollectedChats;
+ (void)displayChat:(id)arg1;
+ (void)closeChat:(id)arg1;
+ (id)windowForChat:(id)arg1;
+ (void)setAutomaticallyCreatesControllers:(BOOL)arg1;
+ (id)allChatWindowControllers;
+ (id)chatWindowControllerForChat:(id)arg1;
+ (id)chatControllerForChat:(id)arg1;
+ (unsigned long long)numberOfCollectedChatWindows;
+ (void)_registerChatWindowController:(id)arg1;
+ (void)_unregisterChatWindowController:(id)arg1;
+ (id)_chatWindowControllerSuitableForAddingChat:(id)arg1;
+ (BOOL)_doesChatHaveUIRepresentation:(id)arg1;
+ (void)_assignChatWindowController:(id)arg1 toChat:(id)arg2;
+ (void)_acceptChat:(id)arg1 inChatNotifier:(id)arg2;
+ (void)handleChatRegistryDidRegisterChat:(id)arg1;
- (void)window:(id)arg1 didDecodeRestorableState:(id)arg2;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (id)init;
- (void)cleanUp;
- (void)dealloc;
- (void)windowDidLoad;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (void)_setNotifierWindowProgress:(double)arg1;
- (void)_installSnapshotOfNotifierIntoWindow:(id)arg1;
- (void)stepNotifierAnimation:(id)arg1;
- (void)_startNotifierAnimationTimer;
- (void)animateNotifierWindowToRect:(struct CGRect)arg1;
- (void)_restoreSavedWindowFrameForWindow:(id)arg1;
- (void)showWindow:(id)arg1;
- (long long)activeNotifierTargetRow;
- (void)_animateMorphWindow;
- (void)_cleanUpAfterDragging;
- (void)animationDidEnd:(id)arg1;
- (void)_hookUpChat:(id)arg1;
- (void)_swapChat:(id)arg1 withChatWindowController:(id)arg2 atIndex:(long long)arg3 closeIfNecessary:(BOOL)arg4;
- (id)_dragImageForImage:(id)arg1;
- (id)_newWindowForChatAtIndex:(long long)arg1;
- (void)_findWindowUnderMouse:(id *)arg1 level:(int *)arg2 viewUnderMouse:(id *)arg3;
- (void)_isMouseOverTabBar:(char *)arg1 overFloatingWindow:(char *)arg2;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(id)arg4;
- (void)fezExtendedTableView:(id)arg1 draggingSession:(id)arg2 movedToPoint:(struct CGPoint)arg3;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)_registerForDraggedTypes;
- (void)_getIMHandles:(id *)arg1 andGroups:(id *)arg2 fromPasteboard:(id)arg3 allowDuplicates:(BOOL)arg4;
- (id)tableView:(id)arg1 cellTipForRow:(long long)arg2;
- (id)_imHandlePropertyListArrayForRows:(id)arg1;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (id)_imHandlesFromPasteboard:(id)arg1;
- (id)_imHandlesSuitableForInviteToChat:(id)arg1 fromPasteboard:(id)arg2;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 shouldDrawWhenMovingFrom:(struct CGPoint)arg2 toPoint:(struct CGPoint)arg3;
- (BOOL)_mouseInButtons:(id)arg1 trackMouse:(BOOL)arg2;
- (BOOL)tableView:(id)arg1 mouseDown:(id)arg2;
- (void)_updateLayoutToMatchScrollerStyle;
- (void)setResurrectedFrame:(struct CGRect)arg1;
- (void)dontResizeWindowNextSidebarChange;
- (void)_sidebarAnimationWillStart;
- (void)_sidebarAnimationDidFinish;
- (BOOL)isInSmallMode;
- (struct CGRect)fullSidebarFrame;
- (BOOL)isSidebarAnimating;
- (BOOL)isSidebarVisible;
- (void)_setSidebarVisiblePercent:(double)arg1;
- (void)stepSidebarAnimation:(id)arg1;
- (void)_startSidebarAnimationTimer;
- (void)_clearCurrentPosition;
- (void)_saveCurrentPosition;
- (struct CGRect)_rectAdjustingForSavedPositionWithRect:(struct CGRect)arg1;
- (void)showSidebar:(id)arg1;
- (void)hideSidebar:(id)arg1;
- (void)toggleTabBar:(id)arg1;
- (void)_forgetSelection;
- (void)_rememberSelection;
- (void)_restoreSelection;
- (void)beginChangesNoAnimation;
- (void)beginChanges;
- (void)endChanges;
- (BOOL)makingChanges;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (void)_showCellTipsIfNecessary;
- (void)_fixMinWidthForSplitView;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (void)splitViewWillResizeSubviews:(id)arg1;
- (void)splitViewDidResizeSubviews:(id)arg1;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (void)sizeToFitForSplitView:(id)arg1;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (id)targetViewForCustomSavingWindow:(id)arg1;
- (BOOL)shouldSaveFrameForWindow:(id)arg1;
- (BOOL)isNotifier;
- (void)setWillAppearInNotifier:(BOOL)arg1;
- (id)controllerForChat:(id)arg1;
- (id)chatForMiniWindow;
- (id)currentChat;
- (id)currentChatController;
- (id)_contextChat;
- (id)_contextChatController;
- (id)chats;
- (long long)numberOfUnreadMessages;
- (long long)numberOfChats;
- (id)chatAtIndex:(long long)arg1;
- (id)tableView:(id)arg1 objectValueForRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)containsChat:(id)arg1;
- (BOOL)canCollectChat:(id)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)windowDidEndLiveResize:(id)arg1;
- (void)windowDidResignMain:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowShouldCloseForUnsentAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)windowShouldCloseAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (id)_alertTextForUnreadMessages:(long long)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)cancelActiveNotifierAnimations;
- (void)windowWillClose:(id)arg1;
- (BOOL)_moveChatFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)_synchronizeChatAndTableForced:(BOOL)arg1;
- (void)selectChat:(id)arg1;
- (void)_updateDisplayName:(id)arg1;
- (void)_reallyUpdateNumberOfChats;
- (void)_updateNumberOfChats;
- (void)addChatInvite:(id)arg1 withNotifierWindow:(id)arg2;
- (void)addChat:(id)arg1 atIndex:(long long)arg2;
- (void)addChat:(id)arg1;
- (void)_removeChat:(id)arg1;
- (void)tabShouldCloseAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_closeChatAfterVerification:(id)arg1;
- (void)closeHighlightedTabItem;
- (void)closeChat:(id)arg1;
- (void)closeCurrentChat:(id)arg1;
- (void)_prepareAndClose;
- (void)displayChat:(id)arg1;
- (void)_chatOverallStatusChanged:(id)arg1;
- (void)_chatUnreadStatusChanged:(id)arg1;
- (void)_chatStatusChanged:(id)arg1;
- (void)_personChanged:(id)arg1;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (id)windowWillReturnUndoManager:(id)arg1;
- (void)_updateSelectedRow;
- (BOOL)chatIsRecent:(id)arg1;
- (id)drawMessageForChat:(id)arg1;
- (BOOL)chatIsPulsing:(id)arg1;
- (double)pulseProgressForChat:(id)arg1;
- (BOOL)chatIsAnimating:(id)arg1;
- (double)animationProgressForChat:(id)arg1;
- (void)_clearAnimationTimer;
- (void)_setAnimationTimer;
- (void)_checkAnimationTimer;
- (void)_animateChats:(id)arg1;
- (void)selectChatAction:(id)arg1;
- (void)choosePerson:(id)arg1;
- (void)moveSelectedChatIndex:(long long)arg1 fromCurrentIndex:(BOOL)arg2;
- (void)gotoNextChat:(id)arg1;
- (void)gotoPreviousChat:(id)arg1;
- (void)swipeWithEvent:(id)arg1;
- (void)moveTabToNewWindow:(id)arg1;
- (void)mergeAllChatWindows:(id)arg1;
- (void)saveDocumentTo:(id)arg1;
- (void)toggleParticipants:(id)arg1;
- (void)toggleHidePictures:(id)arg1;
- (void)toggleHideAudioStatus:(id)arg1;
- (void)toggleHideVideoStatus:(id)arg1;
- (void)sortByStatus:(id)arg1;
- (void)sortByName:(id)arg1;
- (void)sortByFirstName:(id)arg1;
- (void)sortByLastName:(id)arg1;
- (void)addLink:(id)arg1;
- (void)sendSMS:(id)arg1;
- (void)addABuddy:(id)arg1;
- (void)deleteSelectedBuddies:(id)arg1;
- (void)composeEMail:(id)arg1;
- (void)sendFile:(id)arg1;
- (void)attachFile:(id)arg1;
- (void)insertSmiley:(id)arg1;
- (void)setTranscriptStyleFromMenuItem:(id)arg1;
- (void)toggleHideSmileys:(id)arg1;
- (void)chooseBackgroundImage:(id)arg1;
- (void)clearTranscript:(id)arg1;
- (void)markTranscript:(id)arg1;
- (void)clearBackground:(id)arg1;
- (void)toggleShowNames:(id)arg1;
- (void)toggleRecipientBar:(id)arg1;
- (void)toggleShowPictures:(id)arg1;
- (void)setChatShowsNames:(id)arg1;
- (void)setChatShowsPictures:(id)arg1;
- (void)setChatShowsNamesAndPictures:(id)arg1;
- (void)makeTextBigger:(id)arg1;
- (void)makeTextStandardSize:(id)arg1;
- (void)makeTextSmaller:(id)arg1;
- (void)ignore:(id)arg1;
- (void)toggleQuietMode:(id)arg1;
- (void)showFindPanel:(id)arg1;
- (void)findNext:(id)arg1;
- (void)findPrevious:(id)arg1;
- (void)copySelectionToFindPboard:(id)arg1;
- (void)inviteToVideoChat:(id)arg1;
- (void)inviteToAudioChat:(id)arg1;
- (void)cancelARDSession:(id)arg1;
- (void)inviteToARDAsClient:(id)arg1;
- (void)inviteToARDAsServer:(id)arg1;
- (void)block:(id)arg1;
- (void)showInAddressBook:(id)arg1;
- (void)addToAddressBook:(id)arg1;
- (void)showInBuddyList:(id)arg1;
- (void)showSelectedBuddyInfo:(id)arg1;
- (void)showSelectedBuddyProfile:(id)arg1;
- (void)requestValidation:(id)arg1;
- (void)searchInSpotlight:(id)arg1;
- (void)closeTab:(id)arg1;
- (void)otherChatsShouldCloseForUnsentAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)closeOtherTabs:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)quickLook:(id)arg1;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
- (void)_updateQuickLookPreviewPanel;
- (void)beginPreviewPanelControl:(id)arg1;
- (void)endPreviewPanelControl:(id)arg1;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (void)printOperationDidRun:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)printDocument:(id)arg1;
- (void)tabView:(id)arg1 willSwitchFromTab:(long long)arg2 toTab:(long long)arg3 effect:(int *)arg4 direction:(int *)arg5;
- (void)_needsDrawFromAnimate:(id)arg1;

@end

@interface MenuButton : NSButton
{
    NSPopUpButtonCell *_popUpCell;
    NSString *_axDescription;
    BOOL _overlayStyle;
}

- (void)dealloc;
- (void)setUsesMenu:(BOOL)arg1;
- (BOOL)usesMenu;
- (void)runPopUpInFrame:(struct CGRect)arg1 ofView:(id)arg2;
- (BOOL)_runPopUp;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2;
- (void)mouseDown:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)performClick:(id)arg1;
- (void)setAccessibilityDescription:(id)arg1;
- (id)accessibilityDescriptionAttribute;
- (id)accessibilityAttributeNames;
- (void)setOverlayStyle:(BOOL)arg1;
- (BOOL)isOverlayStyle;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface ChooseBuddyButton : MenuButton
{
    Account *_account;
    int _buddiesShown;
    IMHandle *_selectedIMHandle;
    BOOL _registered;
    BOOL _menuIsValid;
    NSArray *_cachedPresentites;
    NSWindow *_customIDSheet;
    ExtendedComboBox *_customIDText;
    NSButton *_customIDOK;
    NSButton *_customIDCancel;
    ServicePopUp *_customIDService;
}

- (void)awakeFromNib;
- (void)dealloc;
@property(nonatomic, assign) Account *account;
- (id)selectedIMHandle;
- (void)_registerForNotifications;
- (void)_invalidateMenu:(id)arg1;
- (id)_addItemForIMHandle:(id)arg1 toMenu:(id)arg2 showingDetails:(BOOL)arg3;
- (id)_addItemForEmptyList;
- (id)_addItemForAccount:(id)arg1 atTop:(BOOL)arg2;
- (void)_loadChooseIDNibIfNecessary;
- (void)_rebuildBuddyMenu;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_recacheIMHandleInformation;
- (void)windowDidBecomeMain:(id)arg1;
- (long long)numberOfItemsInComboBox:(id)arg1;
- (id)comboBox:(id)arg1 objectValueForItemAtIndex:(long long)arg2;
- (unsigned long long)comboBox:(id)arg1 indexOfItemWithStringValue:(id)arg2;
- (id)comboBox:(id)arg1 completedString:(id)arg2;
- (void)invalidateMenu;
- (void)runPopUpInFrame:(struct CGRect)arg1 ofView:(id)arg2;
- (void)_selectIMHandle:(id)arg1;
- (void)_personSelected:(id)arg1;
- (void)chooseCustomID:(id)arg1;
- (void)customIDServiceSelected:(id)arg1;
- (void)selectedAccountStatusChanged:(id)arg1;
- (void)windowDidUpdate:(id)arg1;
- (void)acceptCustomID:(id)arg1;
- (void)cancelCustomID:(id)arg1;
- (void)_chooseIDDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
@property(nonatomic) int buddiesShown; // @synthesize buddiesShown=_buddiesShown;

@end

@interface CollapseView : NSClipView
{
    double _expandedHeight;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;
- (BOOL)isCollapsed;
- (id)_highestAncestor:(id)arg1;
- (void)_resizeWindowToFrame:(struct CGRect)arg1 animate:(BOOL)arg2;
- (void)collapse:(BOOL)arg1;
- (void)collapse:(BOOL)arg1 animate:(BOOL)arg2;
- (void)toggleCollapsed:(id)arg1;
- (void)takeStateFromSender:(id)arg1;

@end

@interface ColoredSpinner : NSView
{
    NSColor *_color;
    BOOL _displaysWhenStopped;
    NSTimer *_timer;
    unsigned long long _animationStep;
    NSMutableArray *_images;
}

- (void)dealloc;
@property(copy, nonatomic) NSColor *color;
@property(nonatomic) BOOL displaysWhenStopped;
@property(nonatomic) BOOL animating;
- (void)_timerStep:(id)arg1;
- (void)_generateImages;
- (void)drawRect:(struct CGRect)arg1;

@end

/*@interface CompositionList : QCPlugIn
{
    NSMutableArray *_effectsArray;
    NSMutableArray *_pageList;
    unsigned long long _pageIndex;
    unsigned long long _previousIndex;
    NSDictionary *_normalDesc;
    BOOL _updateOutput;
}

+ (int)executionMode;
+ (int)timeMode;
+ (id)attributes;
- (id)init;
- (void)dealloc;
- (void)_repositoryUpdated;
- (void)_loadAllEffects;
- (void)_rebuildBankList;
- (BOOL)startExecution:(id)arg1;
- (void)enableExecution:(id)arg1;
- (BOOL)execute:(id)arg1 atTime:(double)arg2 withArguments:(id)arg3;

@end*/

@interface ConfigKeyEditor : NSTextView
{
    id _master;
    NSNumber *_virtualKey;
    unsigned long long _modifiers;
    id _textField;
    BOOL _operationModeEnabled;
    unsigned int _savedHotKeyOperatingMode;
}

- (void)_disableHotKeyOperationMode;
- (void)_restoreHotKeyOperationMode;
- (void)_windowDidBecomeKeyNotification:(id)arg1;
- (void)_windowDidResignKeyNotification:(id)arg1;
- (id)initConfigKeyEditorWithMaster:(id)arg1;
- (void)dealloc;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)mouseDown:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (id)key;
- (id)modifier;
- (id)textField;
- (void)setTextField:(id)arg1;

@end

@interface CustomImageView : NSImageView
{
}

- (void)mouseDown:(id)arg1;

@end

@interface CustomMessageTableView : FezExtendedTableView
{
}

- (void)_userSelectTextOfNextCellInSameColumn;

@end

@interface CustomWindow : SecureWindow
{
    Notifier *_notifier;
    NSMutableArray *_keyDownQueue;
    BOOL _useClientDragging;
}

- (void)setWindowLevel;
- (void)setTitle:(id)arg1;
- (void)setNotifier:(id)arg1;
- (void)moveWindow:(id)arg1;
- (void)sendEvent:(id)arg1;

@end

@interface DaemonListenerStub : NSObject
{
}

- (oneway void)showInvalidCertNotificationForAccount:(id)arg1;
- (oneway void)showForgotPasswordNotificationForAccount:(id)arg1;
- (oneway void)setupComplete;
- (void)myPictureDataChanged:(id)arg1;
- (void)property:(id)arg1 changedTo:(id)arg2 from:(id)arg3;
- (void)persistentProperty:(id)arg1 changedTo:(id)arg2 from:(id)arg3;

@end

@interface DefaultApplicationPopUpButton : NSPopUpButton
{
    NSMutableDictionary *_schemeToAppMap;
    NSMutableDictionary *_appToSchemesMap;
    NSMutableDictionary *_appToNameMap;
    NSMutableDictionary *_schemeToNameMap;
}

- (void)dealloc;
- (unsigned long long)_countOfSchemesHandledByApp:(id)arg1;
- (id)_bundleForApp:(id)arg1;
- (void)_rebuildSchemeMaps;
- (id)_imageForApp:(id)arg1;
- (id)_schemeNamesHandledByApp:(id)arg1;
- (void)_addItemForApp:(id)arg1;
- (void)_addDummyItemWithTitle:(id)arg1;
- (void)_rebuildMenu;
- (void)configurePopUp;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_selectApp:(id)arg1;

@end

@interface DefaultApplicationPopUpButtonCell : NSPopUpButtonCell
{
}

- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface DragWindowAnimation : NSAnimation
{
}

- (void)setCurrentProgress:(float)arg1;

@end

@interface EffectView : NSView
{
    NSImage *_startImage;
    NSImage *_endImage;
    NSDate *_startTime;
    double _effectTime;
    int _effect;
    int _direction;
    float _prevProgress;
    BOOL _manuallyInvalidate;
}

- (id)initWithFrame:(struct CGRect)arg1 startImage:(id)arg2 endImage:(id)arg3;
- (void)dealloc;
- (void)doEffect:(int)arg1 direction:(int)arg2 time:(double)arg3;
- (void)_doFadeEffect:(float)arg1 inRect:(struct CGRect)arg2;
- (void)_doSlideEffect:(float)arg1 inRect:(struct CGRect)arg2 moveOld:(BOOL)arg3 moveNew:(BOOL)arg4;
- (void)_doZoomEffect:(float)arg1 inRect:(struct CGRect)arg2 scale:(BOOL)arg3;
- (void)_doSplitEffect:(float)arg1 inRect:(struct CGRect)arg2 horiz:(BOOL)arg3 wipe:(BOOL)arg4;
- (void)_setNeedsDisplay;
- (void)drawRect:(struct CGRect)arg1;
- (void)setManualInvalidation:(BOOL)arg1;
- (BOOL)doingEffect;
- (void)stopEffect;

@end

@interface EffectsPickerController : NSObject <FrameListener>
{
    QCCompositionPickerPanel *_picker;
    Texture *_texture;
    BOOL _isRunning;
    double _lastDeliveredFrameTime;
    unsigned long long _maxFPS;
}

+ (void)showEffectsPanel;
+ (void)hideEffectsPanel;
+ (BOOL)isVisible;
- (id)init;
- (void)dealloc;
- (void)setMaxFPS:(unsigned long long)arg1;
- (unsigned long long)maxFPS;
- (void)startVideo;
- (void)stopVideo;
- (BOOL)isVisible;
- (void)_didEndFullScreen:(id)arg1;
- (void)showEffectsPanel;
- (void)hideEffectsPanel;
- (void)_auxVideoControllerChanged:(id)arg1;
- (void)frameNotifier:(id)arg1 postedNewFrame:(id)arg2;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidExpose:(id)arg1;
- (id)_setPosterFrameForFile:(id)arg1 composition:(id)arg2;
- (id)_posterFrameForFile:(id)arg1 composition:(id)arg2;
- (void)_compositionBackdropChanged:(id)arg1;
- (void)compositionPickerView:(id)arg1 didSelectComposition:(id)arg2;
- (void)compositionPickerView:(id)arg1 didLoadComposition:(id)arg2;
- (void)compositionPickerView:(id)arg1 willSelectComposition:(id)arg2;
- (unsigned long long)compositionPickerView:(id)arg1 draggingEnteredComposition:(id)arg2 sender:(id)arg3;
- (BOOL)compositionPickerView:(id)arg1 performDragOperationOnComposition:(id)arg2 sender:(id)arg3;
- (BOOL)compositionPickerView:(id)arg1 keyDown:(id)arg2;

@end

@interface EffectsPickerImageCache : NSObject
{
}

+ (id)sharedInstance;
+ (id)_cachePath;
- (BOOL)imageExistsForKey:(id)arg1;
- (id)imageForKey:(id)arg1;
- (void)setImage:(id)arg1 forKey:(id)arg2;
- (void)cleanCacheExceptForKeys:(id)arg1;
- (void)removeImageForKey:(id)arg1;

@end

@interface EnterURLController : NSObject
{
    NSWindow *_linkSheet;
    NSTextField *_linkTextField;
    NSButton *_shareButton;
    SEL _didEndSelector;
    id _target;
    NSURL *_url;
    BOOL _isGrabbingURL;
}

- (void)_getURLFromSafari;
- (id)init;
- (BOOL)_validateURL;
- (void)beginForTarget:(id)arg1 didEndSelector:(SEL)arg2;
- (void)controlTextDidChange:(id)arg1;
- (void)shareURL:(id)arg1;
- (void)cancelShare:(id)arg1;
- (id)url;
- (void)bringToFront;
- (void)setTarget:(id)arg1;
- (void)setURLWithString:(id)arg1;
- (void)dealloc;

@end

@interface ErrorButton : NSButton
{
    ErrorImageButtonCell *_imageCell;
    struct CGRect _imageCellRect;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
- (void)changeErrorButtonStateTo:(long long)arg1;

@end

@interface ErrorImageButtonCell : NSButtonCell
{
    BOOL _mouseIn;
}

- (long long)interiorBackgroundStyle;
@property(nonatomic) BOOL isMouseIn; // @synthesize isMouseIn=_mouseIn;

@end

@interface ErrorReport : NSObject
{
    NSMutableString *_fullReport;
}

- (id)initWithDescription:(id)arg1;
- (void)dealloc;
- (id)fullReport;
- (void)_threadedSubmitProblemReport:(struct __CFDictionary *)arg1;
- (void)send;

@end

@interface ErrorReporterController : NSObject <NSWindowDelegate>
{
    NSWindow *_errorReporterSheet;
    NSTextField *_textualDescription;
    NSTextView *_errorLogTextView;
    NSTextView *_supportTextView;
    NSButton *_sendButton;
    NSButton *_dontSendButton;
    NSButton *_revealButton;
    NSBox *_revealBox;
    AVChatController *_chatController;
    NSInvocation *_endingCallback;
    BOOL _displayedAsSheet;
    BOOL _revealBoxShown;
    float _fullSizeFrameAdditionalHeight;
    float _minWidth;
    float _largeSizeMinHeight;
    ErrorReport *_errorReport;
}

+ (void)presentErrorReporterForChatController:(id)arg1 asSheet:(BOOL)arg2 thenInvoke:(id)arg3;
- (id)initForAVChatController:(id)arg1 asSheet:(BOOL)arg2 thenInvoke:(id)arg3;
- (void)_setupSupportString;
- (void)_setupErrorReport;
- (void)sendToApple:(id)arg1;
- (void)dontSendToApple:(id)arg1;
- (void)_hideRevealBox;
- (void)_showRevealBox;
- (void)revealButtonPressed:(id)arg1;
- (void)_sheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)dealloc;

@end

@interface ExtendedComboBox : NSComboBox
{
    BOOL _allowsLineBreaks;
    BOOL _passesReturnKey;
    BOOL _allowsRichText;
    BOOL _trimWhitespace;
    ServicePopUp *_servicePopUp;
    NSString *_prefKey;
    BOOL _autoFilled;
    NSString *_suffix;
    id _returnDelegate;
}

- (id)init;
- (void)_installCustomCell;
- (void)dealloc;
- (BOOL)passesReturnEvent;
- (void)setPassesReturnEvent:(BOOL)arg1;
- (void)setReturnDelegate:(id)arg1;
- (void)setAllowsLineBreaks:(BOOL)arg1;
- (BOOL)allowsLineBreaks;
- (void)setAllowsRichText:(BOOL)arg1;
- (BOOL)allowsRichText;
- (void)setTrimsWhitespace:(BOOL)arg1;
- (BOOL)trimsWhitespace;
- (void)keyDown:(id)arg1;
- (id)_suffixAttributes;
- (void)setSuffix:(id)arg1;
- (id)suffix;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)textDidChange:(id)arg1;
- (struct _NSRange)textView:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (void)setStringValue:(id)arg1;
- (BOOL)isPopUpButtonVisible;
- (void)setPopUpButtonVisible:(BOOL)arg1;
- (void)setObjectValue:(id)arg1;
- (BOOL)isAutoFilled;
- (void)setAutoFilled:(BOOL)arg1;
- (void)updateNumberOfVisibleItems;
- (id)_prefKey;
- (void)setRecentsListPrefKey:(id)arg1;
- (id)recentsListPrefKey;
- (void)loadLastRecentValue;
- (void)updateRecentsList;
- (void)saveRecentsList;
- (void)textDidEndEditing:(id)arg1;
- (BOOL)becomeFirstResponder;

@end

@interface ExtendedSlider : NSSlider
{
    StretchyImageView *_backgroundImage;
}

- (void)awakeFromNib;
- (void)setEnabled:(BOOL)arg1;

@end

@interface ExtendedSliderCell : NSSliderCell
{
    NSImage *_knobImage;
    NSImage *_knobDownImage;
    struct CGRect _knobSourceRect;
}

- (id)init;
- (void)dealloc;
- (void)drawKnob:(struct CGRect)arg1;
- (void)_drawTickMarks;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface ExtendedSplitView : NSSplitView
{
    NSString *_autosaveName;
    double _savedSplitPosition;
    double _minSavedSplitPosition;
}

+ (id)_keyForSavingSplitviewWithName:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setMinSavedSplitPosition:(double)arg1;
- (double)minSavedSplitPosition;
- (void)_rememberSavedSplitViewPosition;
- (void)_setPositionFromAutosaveName;
- (void)rememberCurrentSplitPosition;
- (double)savedSplitPosition;
- (void)setSavedSplitPosition:(double)arg1;
- (double)splitPosition;
- (void)setSplitPosition:(double)arg1;
- (id)autosaveName;
- (void)setAutosaveName:(id)arg1;
- (void)adjustSubviews;
- (double)dividerThickness;
- (double)scaledDividerThickness;
- (double)visualThicknessOfDividerAtIndex:(int)arg1;
- (void)drawDividerInRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (id)accessibilityAttributeValue:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)sizeToFitContents;
- (void)restoreStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;

@end

@interface ExtendedSplitViewGrabber : NSView
{
    ExtendedSplitView *_splitView;
    struct CGPoint _startPoint;
    struct CGRect _startFrame;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)setSplitView:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)resetCursorRects;
- (void)mouseDragged:(id)arg1;

@end

@interface ExtendedTextField : NSTextField
{
    BOOL _allowsLineBreaks;
    NSString *_suffix;
    BOOL _autoFilled;
    BOOL _allowsRichText;
}

- (id)init;
- (void)dealloc;
- (void)pasteAndMatchStyle:(id)arg1;
- (void)setAllowsLineBreaks:(BOOL)arg1;
- (BOOL)allowsLineBreaks;
- (void)setAllowsRichText:(BOOL)arg1;
- (BOOL)allowsRichText;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)textDidChange:(id)arg1;
- (BOOL)isAutoFilled;
- (void)setAutoFilled:(BOOL)arg1;
- (id)_suffixAttributes;
- (void)setSuffix:(id)arg1;
- (id)suffix;
- (struct _NSRange)textView:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (void)textDidEndEditing:(id)arg1;
- (BOOL)becomeFirstResponder;
- (void)setObjectValue:(id)arg1;
- (void)setStringValue:(id)arg1;

@end

@interface FPS : NSObject
{
    long long _frames;
    double _frameTime;
    double _lastTime;
    NSString *_name;
}

- (id)initWithName:(id)arg1;
- (void)dealloc;
- (void)countFrame;

@end

@interface FTUBackgroundView : NSView
{
    NSBox *_backgroundView;
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface FZBezelWindow : NSPanel
{
}

- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (void)resignMainWindow;

@end

@interface FZLargeTypeController : NSWindowController <NSAnimationDelegate>
{
    FZLargeTypeView *largeTypeView;
    NSString *_phoneString;
    BOOL _closing;
    BOOL _fadeIn;
    id _delegate;
}

+ (id)displayString:(id)arg1 forTime:(double)arg2 delegate:(id)arg3;
- (id)initWithString:(id)arg1 delegate:(id)arg2;
- (void)unsetDelegate:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (void)windowDidLoad;
- (void)stupidKitWorkaround;
- (id)windowNibName;
- (void)animationDidStop:(id)arg1;
- (void)animationDidEnd:(id)arg1;
- (void)_fadeInTimer:(id)arg1;
- (void)_startTimer;
- (void)fadeIn:(id)arg1;
- (void)fadeOut:(id)arg1;
- (void)showWindow:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)close;

@end

@interface FZLargeTypeView : NSView
{
    NSString *_phoneString;
    NSDictionary *_attributes;
    ABPhoneFormatter *_formatter;
}

- (struct CGRect)contentRectForString;
- (void)setPhoneString:(id)arg1;
- (void)setAttributes:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)mouseDown:(id)arg1;

@end

@interface FZVideoConferenceControllerHacks : NSObject <FZVideoProcessorProtocol, FZAuxVideoControllerProtocol, IMAVControllerDelegate>
{
}

@property(readonly, nonatomic) BOOL hasVideoProvider;
@property(readonly, nonatomic) BOOL hasAudioProvider;
@property(readonly, nonatomic) id renderDelegate;
@property(readonly, nonatomic) BOOL shouldCPUResize;
@property(readonly, nonatomic) BOOL auxVideoModeIsReplacement;
- (void)invitedToIMAVChat:(id)arg1;
- (void)inviteFailedFromIMHandle:(id)arg1 reason:(long long)arg2;
- (void)incomingNegotiationRequest:(id)arg1;

@end

@interface FezAVRecorder : NSObject
{
    id _delegate;
    NSString *_outputFilePathName;
    BOOL _isRecording;
    BOOL _didRecordVideo;
    NSLock *_fileWriterLock;
    NSURL *_outputFileURL;
    struct OpaqueCMByteStream *_outputByteStreamRef;
    struct OpaqueFigFormatWriter *_outputFormatWriterRef;
    CDStruct_1b6d18a9 _firstFrameTime;
    NSObject<FezAudioRecordingAdapter> *_audioAdapter;
    FezMPEG4AACAudioRecorder *_audioRecorder;
    NSObject<FezVideoRecordingAdapter> *_videoAdapter;
    FezH264VideoRecorder *_videoRecorder;
    CDStruct_1b6d18a9 _refFirstPresentationTime;
}

- (id)init;
- (void)_cleanup;
- (void)dealloc;
- (id)fileWriterLock;
- (void)setOutputFilePathName:(id)arg1;
- (id)outputFilePathName;
- (void)setAudioAdapter:(id)arg1;
- (id)audioAdapter;
- (void)setVideoAdapter:(id)arg1;
- (id)videoAdapter;
- (BOOL)didRecordVideo;
- (void)setDidRecordVideo:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (int)prepareRecording;
- (int)startRecording;
- (int)saveRecording;
- (int)cancelRecording;
- (CDStruct_1b6d18a9)normalizeDuration:(CDStruct_1b6d18a9)arg1;
- (CDStruct_1b6d18a9)normalizePresentationTime:(CDStruct_1b6d18a9)arg1;
- (void)recordFrame:(struct __CVBuffer *)arg1;
- (void)recordAudioBufferList:(struct AudioBufferList *)arg1 description:(struct AudioStreamBasicDescription)arg2 channelLayout:(struct AudioChannelLayout *)arg3 channelLayoutSize:(unsigned int)arg4 presentationTime:(CDStruct_1b6d18a9)arg5;
- (void)recorder:(id)arg1 didEncounterError:(int)arg2;
- (void)audioRecordingAdapter:(id)arg1 didEncounterError:(int)arg2;
- (void)videoRecordingAdapter:(id)arg1 didEncounterError:(int)arg2;

@end

@interface FezApplication : NSApplication
{
    id _keyEventHandler;
    unsigned long long _previousEventHandlerModifierFlags;
    BOOL _isTALRestored;
    int _dockUnreadCount;
}

- (void)finishLaunching;
- (void)dealloc;
- (BOOL)shouldRestoreStateOnNextLaunch;
@property(readonly) BOOL isTALRestored;
- (BOOL)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
- (void)sendEvent:(id)arg1;
@property(assign) id keyEventHandler;
- (BOOL)isModifierKeyDown:(unsigned long long)arg1;
- (void)_updateBadge;
@property int applicationBadgeUnreadCount;

@end

@interface FezPresence : IMDirectlyObservableObject <IMDirectlyObservableObjectObserver>
{
    IMHandle *_mostAvailableIMHandle;
    NSMutableArray *_imHandles;
    NSMutableSet *_imHandlesSet;
    NSString *_statusMessage;
    BOOL _quiet;
    unsigned long long _previousStatus;
    unsigned long long _status;
}

+ (id)notifications;
+ (id)selectors;
- (id)init;
- (void)dealloc;
- (void)_observeIMHandle:(id)arg1;
- (void)_unobserveIMHandle:(id)arg1;
- (void)_imHandleCapabilitiesChanged:(id)arg1;
- (void)_imHandleStatusChanged:(id)arg1;
- (void)_imHandlePictureChanged:(id)arg1;
- (void)_imHandleInfoChanged:(id)arg1;
- (void)_imHandleGroupsChanged:(id)arg1;
- (void)_imHandleExtraPropsChanged:(id)arg1;
- (void)_imHandleMobileChanged:(id)arg1;
- (void)_imHandleCertsChanged:(id)arg1;
- (void)_imHandleSortOrderChanged:(id)arg1;
- (void)objectDidPostDirectNotification:(id)arg1;
- (void)_setMostAvailableIMHandle:(id)arg1;
- (BOOL)_fullRecache;
- (BOOL)canAddIMHandle:(id)arg1;
- (BOOL)addIMHandle:(id)arg1;
- (void)removeIMHandle:(id)arg1;
@property(readonly, nonatomic) int numberOfIMHandles;
- (BOOL)containsIMHandle:(id)arg1;
@property(readonly, retain, nonatomic) NSSet *groups;
@property(readonly, retain, nonatomic) NSString *firstName;
@property(readonly, retain, nonatomic) NSString *lastName;
@property(readonly, retain, nonatomic) NSString *fullName;
@property(readonly, retain, nonatomic) NSString *shortName;
@property(readonly, retain, nonatomic) NSString *displayName;
@property(readonly, retain, nonatomic) NSString *nameAndEmail;
@property(readonly, retain, nonatomic) NSString *statusMessage;
@property(readonly, retain, nonatomic) NSString *previousStatusMessage;
@property(readonly, retain, nonatomic) NSString *nameOfStatus;
@property(readonly, nonatomic) BOOL isMobile;
@property(readonly, retain, nonatomic) NSString *mobileDeviceName;
@property(readonly, nonatomic) double timeSinceWentOffline;
@property(readonly, nonatomic) double timeSinceStatusChanged;
- (void)postNotificationNamed:(id)arg1 forIMHandle:(id)arg2;
- (id)description;
@property(readonly, nonatomic) unsigned long long previousStatus; // @synthesize previousStatus=_previousStatus;
@property(readonly, nonatomic) unsigned long long status; // @synthesize status=_status;
@property(readonly, retain, nonatomic) IMHandle *mostAvailableIMHandle; // @synthesize mostAvailableIMHandle=_mostAvailableIMHandle;
@property(readonly, retain, nonatomic) NSArray *imHandles; // @synthesize imHandles=_imHandles;
@property(readonly, retain, nonatomic) NSSet *imHandleSet; // @synthesize imHandleSet=_imHandlesSet;
@property(nonatomic) BOOL isQuiet; // @synthesize isQuiet=_quiet;
- (id)preferredDefaultHandle;
- (BOOL)hasPicture;
- (id)picture;
- (id)smallStatusIcon;
- (id)balloonColor;
- (id)tooltipString;

@end

@interface FezBuddyListPresence : FezPresence
{
    IMServiceImpl *_filterService;
    IMPerson *_filterPerson;
    NSSet *_filterGroups;
    NSString *_filterSingleGroup;
    NSString *_IDFilter;
}

- (id)initWithIMPersonFilter:(id)arg1 IDFilter:(id)arg2 serviceFilter:(id)arg3 groupFilters:(id)arg4 quiet:(BOOL)arg5;
- (id)initWithIMPersonFilter:(id)arg1 IDFilter:(id)arg2 serviceFilter:(id)arg3 groupFilters:(id)arg4;
- (id)initWithIMPersonFilter:(id)arg1 serviceFilter:(id)arg2 groupFilters:(id)arg3 quiet:(BOOL)arg4;
- (id)initWithIMPersonFilter:(id)arg1 serviceFilter:(id)arg2 groupFilters:(id)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
@property(retain, nonatomic) NSString *group; // @synthesize group=_filterSingleGroup;
- (id)_filterSingleGroup;
- (BOOL)canAddIMHandle:(id)arg1;
- (BOOL)isEqual:(id)arg1;
@property(readonly, nonatomic) unsigned int sortOrder;
@property(retain, nonatomic) NSString *_IDFilter; // @synthesize _IDFilter;
@property(retain, nonatomic) NSSet *groups; // @synthesize groups=_filterGroups;
@property(retain, nonatomic) IMPerson *person; // @synthesize person=_filterPerson;
@property(retain, nonatomic) IMServiceImpl *service; // @synthesize service=_filterService;

@end

@interface FezCellTipView : NSView
{
    NSAttributedString *_cellTip;
}

- (void)setAttributedCellTip:(id)arg1;
- (id)attributedCellTip;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface FezCellTipWindow : NSWindow
{
    FezCellTipView *_cellTipView;
}

- (id)init;
- (void)dealloc;
- (void)setCellTip:(id)arg1;
- (id)cellTip;

@end

@interface FezCreateCommand : NSCreateCommand
{
}

- (id)performDefaultImplementation;
- (id)_retrieveObjectOfClass:(Class)arg1 named:(id)arg2;
- (id)_retrieveParticipantsArrayNamed:(id)arg1;
- (id)_retrieveAccountNamed:(id)arg1;
- (id)_retrieveStringNamed:(id)arg1;
- (long long)_retrieveIntNamed:(id)arg1;
- (BOOL)_retrieveBoolNamed:(id)arg1;
- (BOOL)_verifyParticipants:(id)arg1 areOnService:(id)arg2;
- (id)_genericIMFromIMHandle:(id)arg1 withText:(id)arg2;
- (id)_createTextChatWithService:(id)arg1 participants:(id)arg2 name:(id)arg3 invitation:(id)arg4;
- (id)_createTextChat;
- (id)_createAVChat;

@end

@interface FezDeleteCommand : NSDeleteCommand
{
}

- (id)performDefaultImplementation;

@end

@interface FezExtendedOperation : NSOperation
{
    NSThread *_operationThread;
    NSString *_operationName;
    unsigned long long _operationState;
    double _operationTimeout;
    NSMutableSet *_childOperations;
}

+ (id)runLoopModes;
- (void)dealloc;
- (void)_setState:(unsigned long long)arg1;
- (unsigned long long)_maxChildOperationState;
- (unsigned long long)_minChildOperationState;
- (void)_startThread;
- (void)start;
- (void)_threadedMain;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)addChildOperation:(id)arg1;
- (void)createChildOperations;
- (void)didFinish;
@property(retain, nonatomic) NSString *name;
@property(nonatomic) double timeout;
- (void)_stopWithState:(unsigned long long)arg1;
- (void)_timeout;
- (void)fail;
- (void)cancel;
@property(readonly, nonatomic) unsigned long long state;
- (BOOL)isConcurrent;
- (BOOL)isExecuting;
- (BOOL)isFinished;

@end

@interface FezH264VideoRecorder : NSObject
{
    FezAVRecorder *_avRecorder;
    NSObject<FezVideoRecordingAdapter> *_videoAdapter;
    BOOL _didRecordVideo;
    struct OpaqueFigFormatWriter *_figFormatWriterRef;
    int _outputVideoTrackID;
    BOOL _compressingVideo;
    BOOL _readyToCompressFrame;
    struct __CFArray *_bufferedCompressedVideoFrames;
    struct OpaqueVTCompressionSession *_compressionSessionRef;
    struct _opaque_pthread_t *_videoCompressionThread;
    struct _opaque_pthread_cond_t _inputVideoReadyCondition;
    struct _opaque_pthread_mutex_t _inputVideoReadyMutex;
    struct __CVBuffer *_currentFrame;
    CDStruct_1b6d18a9 _currentFrameTime;
    CDStruct_1b6d18a9 _currentFrameDuration;
    CDStruct_1b6d18a9 _refEncodedFrameDuration;
    CDStruct_1b6d18a9 _refEncodedFramePresentationTime;
}

- (void *)_videoCompressionThreadMethod;
- (int)_flushBufferedVideo;
- (id)initWithAVRecorder:(id)arg1;
- (void)_cleanup;
- (void)dealloc;
- (void)setFigFormatWriter:(struct OpaqueFigFormatWriter *)arg1;
- (void)setVideoRecordingAdapter:(id)arg1;
- (int)prepareRecording;
- (int)startRecording;
- (int)saveRecording;
- (int)cancelRecording;
- (void)recordFrame:(struct __CVBuffer *)arg1;

@end

@interface FezHotKeyManager : NSObject
{
    NSMutableDictionary *_handlers;
}

+ (id)sharedInstance;
+ (int)enableSystemHotKey:(unsigned int)arg1;
+ (int)disableSystemHotKey:(unsigned int)arg1;
- (id)init;
- (void)dealloc;
- (int)registerHotKey:(unsigned long long)arg1 keyCode:(unsigned short)arg2 keyMask:(unsigned int)arg3 handler:(id)arg4;
- (int)unregisterHotKey:(unsigned long long)arg1;
- (void)triggerHotKeyEvent:(unsigned long long)arg1;

@end

@interface FezIKPictureTakerVideoReceiver : NSObject <IKPictureTakerVideoProvider, FrameListener>
{
    id <IKPictureTakerVideoReceiver> _receiver;
    FrameReader *_frameReader;
    NSOpenGLContext *_glContext;
    struct __CVBuffer *_readBuffer;
}

+ (id)sharedInstance;
- (struct __CVBuffer *)_textureToCVPixelBuffer:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)handleVirtualScreenChangedNotificiation:(int)arg1;
- (void)frameNotifier:(id)arg1 postedNewFrame:(id)arg2;
- (void)startGrabbingForReceiver:(id)arg1;
- (void)stopGrabbing;
- (BOOL)canStartGrabbing;

@end

@interface FezImageView : NSImageView
{
    struct CGPoint _lastMouseDownLocation;
    NSImage *_placeholderImage;
    NSArray *_buddyPictures;
    NSString *_baseFilename;
    NSString *_filePath;
    BOOL _drawsFocusRing;
    BOOL _allowsDrag;
    SEL _doubleAction;
}

- (void)_commonImageViewInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)_sendAction:(SEL)arg1;
- (void)_sendAction;
- (void)_sendDoubleAction;
- (BOOL)acceptsFirstResponder;
- (void)_buddyPictureNeedsDrawFromAnimate:(id)arg1;
- (void)_setImageAndNotifyTarget:(id)arg1;
- (struct CGRect)frameForImage;
- (void)_drawFocusRing;
- (void)drawRect:(struct CGRect)arg1;
- (id)imagePreservingOriginalImage;
@property(retain, nonatomic) BuddyPicture *buddyPicture;
@property(retain, nonatomic) NSArray *buddyPictures; // @synthesize buddyPictures=_buddyPictures;
- (void)setImage:(id)arg1;
- (void)setImage:(id)arg1 isIcon:(BOOL)arg2;
- (id)image;
- (BOOL)validateMenuItem:(id)arg1;
- (void)cut:(id)arg1;
- (void)copy:(id)arg1;
- (void)paste:(id)arg1;
- (void)delete:(id)arg1;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (id)_dragImageOfSize:(struct CGSize)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)performClick:(id)arg1;
- (void)keyDown:(id)arg1;
@property(nonatomic) SEL doubleAction; // @synthesize doubleAction=_doubleAction;
@property(nonatomic) BOOL allowsDrag; // @synthesize allowsDrag=_allowsDrag;
@property(nonatomic) BOOL drawsFocusRing; // @synthesize drawsFocusRing=_drawsFocusRing;
@property(copy, nonatomic) NSString *fullPath; // @synthesize fullPath=_filePath;
@property(copy, nonatomic) NSString *baseFilename; // @synthesize baseFilename=_baseFilename;
@property(copy, nonatomic) NSImage *placeholderImage; // @synthesize placeholderImage=_placeholderImage;
- (id)accessibilityAttributeNames;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityRoleAttribute;
- (id)accessibilityDescriptionAttribute;

@end

@interface FezMPEG4AACAudioRecorder : NSObject
{
    FezAVRecorder *_avRecorder;
    NSObject<FezAudioRecordingAdapter> *_audioAdapter;
    BOOL _isRecording;
    struct OpaqueFigFormatWriter *_figFormatWriterRef;
    int _outputAudioTrackID;
    BOOL _didSetUpAudioConverter;
    struct OpaqueAudioConverter *_audioConverter;
    struct AudioStreamBasicDescription _inputStreamDescription;
    struct AudioStreamBasicDescription _actualInputStreamDescription;
    BOOL _didSetUpCompressedStreamDescription;
    struct AudioStreamBasicDescription _outputStreamDescription;
    struct opaqueCMFormatDescription *_fileAudioFormatDescription;
    CDStruct_1b6d18a9 _currentOutputPTS;
    long long _outputPTSDelta;
    struct AudioBufferList *_bufferListToCompress;
}

- (id)initWithAVRecorder:(id)arg1;
- (void)_cleanup;
- (void)dealloc;
- (BOOL)isRecording;
- (void)setFigFormatWriter:(struct OpaqueFigFormatWriter *)arg1;
- (void)setAudioRecordingAdapter:(id)arg1;
- (struct AudioStreamBasicDescription)actualInputStreamDescription;
- (void)clearBufferListToCompress;
- (struct AudioBufferList *)bufferListToCompress;
- (int)prepareRecording;
- (int)startRecording;
- (int)saveRecording;
- (int)cancelRecording;
- (void)recordAudioBufferList:(struct AudioBufferList *)arg1 description:(struct AudioStreamBasicDescription)arg2 channelLayout:(struct AudioChannelLayout *)arg3 channelLayoutSize:(unsigned int)arg4 presentationTime:(CDStruct_1b6d18a9)arg5;

@end

@interface FezPeopleListGroup : NSObject
{
    NSRecursiveLock *_lock;
    NSDictionary *_properties;
    NSString *_localizableName;
    FezPeopleListItem *_item;
    BOOL _expanded;
    NSString *_name;
    NSMutableArray *_members;
    int _maxMembers;
    BOOL _supportsReordering;
    BOOL _supportsMemberReordering;
    BOOL _supportsRename;
    BOOL _supportsAdding;
    BOOL _supportsRemoving;
    BOOL _supportsOfflineMembers;
}

- (id)init;
- (void)dealloc;
@property(readonly, retain) NSArray *visibleMembers;
@property(readonly, retain) NSArray *members;
@property(readonly, retain) NSString *displayName;
- (void)addPeopleListItem:(id)arg1;
- (void)removePeopleListItem:(id)arg1;
@property(readonly) int numberOfItems;
@property(readonly) int actualNumberOfOnlineItems;
@property(readonly) int numberOfOnlineItems;
- (id)description;
- (void)removeAllItems;
@property(retain) NSDictionary *properties; // @synthesize properties=_properties;
- (BOOL)shouldContainIMHandle:(id)arg1;
- (BOOL)shouldConsumeIMHandle:(id)arg1;
- (CDStruct_b2f7276a)filterForIMHandle:(id)arg1;
@property BOOL supportsOfflineMembers; // @synthesize supportsOfflineMembers=_supportsOfflineMembers;
@property BOOL supportsRemoving; // @synthesize supportsRemoving=_supportsRemoving;
@property BOOL supportsAdding; // @synthesize supportsAdding=_supportsAdding;
@property BOOL supportsRename; // @synthesize supportsRename=_supportsRename;
@property BOOL supportsMemberReordering; // @synthesize supportsMemberReordering=_supportsMemberReordering;
@property BOOL supportsReordering; // @synthesize supportsReordering=_supportsReordering;
@property int maxMembers; // @synthesize maxMembers=_maxMembers;
@property(retain) NSMutableArray *_members; // @synthesize _members;
@property(retain) NSString *name; // @synthesize name=_name;
@property(setter=setExpanded:) BOOL isExpanded; // @synthesize isExpanded=_expanded;
@property(retain) FezPeopleListItem *peopleListItem; // @synthesize peopleListItem=_item;
@property(retain) NSString *localizableName; // @synthesize localizableName=_localizableName;
@property(retain) NSRecursiveLock *_lock; // @synthesize _lock;

@end

@interface FezOfflinePeopleListGroup : FezPeopleListGroup
{
    NSMutableArray *_visibleMembers;
    NSMutableSet *_dontShowMembers;
    int _changes;
    BOOL _pendingClear;
}

- (id)init;
@property(readonly, retain, nonatomic) NSSet *dontShowMembers;
- (id)visibleMembers;
- (int)numberOfItems;
- (void)forgetIgnoredPresences;
- (void)_clearVisibleMembers;
@property(readonly, nonatomic) BOOL isChanging;
- (void)beginChanges;
- (void)endChanges;
- (void)dontShowPresence:(id)arg1;
- (void)addPeopleListItem:(id)arg1;
- (void)removePeopleListItem:(id)arg1;
- (void)removeAllItems;
- (void)dealloc;
@property(nonatomic) BOOL _pendingClear; // @synthesize _pendingClear;
@property(nonatomic) int _changes; // @synthesize _changes;
@property(retain, nonatomic) NSMutableSet *_dontShowMembers; // @synthesize _dontShowMembers;
@property(retain, nonatomic) NSMutableArray *_visibleMembers; // @synthesize _visibleMembers;

@end

@interface FezPeopleList : IMDirectlyObservableObject <IMDirectlyObservableObjectObserver>
{
    Class _customPeopleListItemClass;
    NSDictionary *_groupProperties;
    NSMutableArray *_peopleListItems;
    NSMutableArray *_peopleListGroups;
    NSMutableArray *_smartGroups;
    NSString *_collapsedGroupsPrefKey;
    NSString *_searchString;
    NSArray *_groupsOrdering;
    FezServicePeopleListGroup *_bonjourGroup;
    NSMutableArray *_itemsToCleanup;
    BOOL _allowsIMHandleSubstitution;
    BOOL _hideOfflinePeople;
    BOOL _hideAwayPeople;
    BOOL _hideIdlePeople;
    BOOL _hideUnknownPeople;
    BOOL _hideNoStatusPeople;
    BOOL _usesOfflineGroup;
    BOOL _usesBonjourGroup;
    BOOL _arrangesByGroup;
    BOOL _allowsSearching;
    BOOL _inSearchMode;
    NSMutableArray *_items;
    FezOfflinePeopleListGroup *_offlineGroup;
    BOOL _allowsGroupOrdering;
    BOOL _pendingResort;
    long long _coalesceCount;
}

+ (id)_notificationNames;
+ (id)_notificationSelectors;
- (id)init;
- (void)dealloc;
- (void)_unobservePeopleListItem:(id)arg1;
- (void)_observePeopleListItem:(id)arg1;
- (void)_peopleListItemNeedsSorting:(id)arg1;
- (void)_peopleListItemSortOrderChangedNotification:(id)arg1;
- (void)_peopleListItemNeedsGroupChange:(id)arg1;
- (void)objectDidPostDirectNotification:(id)arg1;
@property(nonatomic) BOOL allowsSearching;
@property(readonly, nonatomic) BOOL inSearchMode;
- (void)endSearchMode;
@property(retain, nonatomic) NSString *searchString;
- (BOOL)_allowPeopleListItemInCurrentSearch:(id)arg1;
@property(readonly, nonatomic) NSArray *peopleListGroups;
@property(readonly, nonatomic) NSArray *peopleListItems;
@property(readonly, nonatomic) NSArray *items;
- (CDStruct_7495ffd8)_FezSortParameters;
- (id)_offlineGroup;
- (BOOL)_isOfflineGroup:(id)arg1;
- (BOOL)_isBonjourGroup:(id)arg1;
- (BOOL)_peopleListItemShouldBeShown:(id)arg1 inGroup:(id)arg2;
- (BOOL)_peopleListItem:(id)arg1 shouldBeInGroup:(id)arg2;
- (void)_rebuildItems;
- (void)_postResortNotification;
- (void)resort;
- (void)_resortNow;
- (void)_resort;
- (void)_refreshContents;
- (void)refreshList;
- (id)representedPeopleInGroup:(id)arg1;
- (id)peopleInGroup:(id)arg1;
@property(readonly, nonatomic) NSArray *allIMHandles;
@property(readonly, nonatomic) unsigned long long numberOfIMHandles;
- (BOOL)containsIMHandle:(id)arg1;
@property(nonatomic) BOOL allowsIMHandleSubstitution;
- (void)_updateGroupPreferences;
- (unsigned long long)_indexOfGroup:(id)arg1 startingAtIndex:(int)arg2;
- (struct _NSRange)_rangeOfGroupAndItems:(id)arg1 startingAtIndex:(unsigned int)arg2;
- (id)groupWithName:(id)arg1;
- (BOOL)containsGroup:(id)arg1;
- (void)_addGroup:(id)arg1;
- (void)addGroup:(id)arg1;
- (void)_removeGroup:(id)arg1;
- (void)removeGroup:(id)arg1;
- (id)peopleListGroupSortOrder;
- (void)setGroups:(id)arg1;
@property(readonly, nonatomic) NSString *groupForNewIMHandles;
@property(nonatomic) BOOL usesOfflineGroup;
- (void)setUsesBonjourGroup:(BOOL)arg1;
@property(retain, nonatomic) NSDictionary *groupProperties;
@property(nonatomic) BOOL arrangesByGroup;
@property(retain, nonatomic) NSString *collapsedGroupsPrefKey;
@property(nonatomic) BOOL showsOfflinePeople;
@property(nonatomic) BOOL showsNoStatusPeople;
@property(nonatomic) BOOL showsUnknownPeople;
@property(nonatomic) BOOL showsAwayPeople;
@property(nonatomic) BOOL showsIdlePeople;
- (BOOL)_addIMHandle:(id)arg1 toCollection:(id)arg2 usingOrphanItems:(id)arg3;
- (void)addIMHandle:(id)arg1;
- (void)addPeopleFromArray:(id)arg1 skipMe:(BOOL)arg2;
- (void)addPeopleFromArray:(id)arg1;
- (id)_removeIMHandle:(id)arg1 fromPeopleListItem:(id)arg2;
- (void)_removeIMHandle:(id)arg1 fromPeopleListGroup:(id)arg2;
- (void)removeIMHandle:(id)arg1 fromGroups:(id)arg2;
- (void)removeIMHandle:(id)arg1 fromGroup:(id)arg2;
- (void)removeIMHandle:(id)arg1;
- (void)removeAllIMHandlesAndGroups:(BOOL)arg1;
- (void)removeAllIMHandles;
- (void)_repopulateIMHandle:(id)arg1 filterGroups:(BOOL)arg2;
- (void)repopulateIMHandle:(id)arg1;
- (BOOL)makingChanges;
- (void)beginChanges;
- (void)endChanges;
@property(retain, nonatomic) Class customPeopleListItemClass;
@property(readonly, nonatomic) Class peopleListItemClass;

@end

@interface FezPeopleListItem : IMDirectlyObservableObject <NSCopying, IMDirectlyObservableObjectObserver>
{
    id _delegate;
    FezBuddyListPresence *_presence;
    NSDate *_whenStatusChanged;
    FezPeopleListGroup *_group;
    NSAttributedString *_attributedStatusMessage;
    NSString *_statusMessage;
    NSString *_displayName;
    NSDate *_transitionStartTime;
    double _currentTransitionTime;
    unsigned long long _currentStatus;
    unsigned long long _previousStatus;
    int _minutesIdle;
    BOOL _inTransition;
    BOOL _isGroup;
}

+ (void)initialize;
+ (void)clearAllWeakReferencesTo:(id)arg1;
+ (void)clearAllWeakGroupReferencesTo:(id)arg1;
+ (id)notifications;
+ (id)selectors;
+ (id)displayNameForString:(id)arg1;
+ (id)displayStatusMessageForString:(id)arg1;
- (id)initWithBuddyListPresence:(id)arg1 inGroup:(id)arg2;
- (id)initAsGroup:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)description;
@property(nonatomic, assign) id delegate;
- (void)_postNotificationNamed:(id)arg1 userInfo:(id)arg2;
- (void)_observePresence:(id)arg1;
- (void)_unobservePresence:(id)arg1;
@property(retain, nonatomic) FezBuddyListPresence *buddyListPresence;
- (void)_presenceInfoChanged:(id)arg1;
- (void)_presenceSortOrderChanged:(id)arg1;
- (void)_presenceCapabilitiesChanged:(id)arg1;
- (void)_presenceStatusChanged:(id)arg1;
- (void)_presencePictureChanged:(id)arg1;
- (void)_presenceGroupsChanged:(id)arg1;
- (void)_presenceMobileChanged:(id)arg1;
- (void)_presenceCertsChanged:(id)arg1;
- (void)objectDidPostDirectNotification:(id)arg1;
- (void)_cacheCurrentState;
- (BOOL)_currentInfoDiffersFromCache;
- (BOOL)_currentStatusDiffersFromCache;
@property(retain, nonatomic) FezPeopleListGroup *peopleListGroup;
@property(readonly, nonatomic) NSString *group;
@property(readonly, nonatomic) BOOL isGroup;
@property(readonly, nonatomic) BOOL isIMHandle;
@property(readonly, nonatomic) IMHandle *imHandle;
@property(readonly, nonatomic) NSMutableAttributedString *displayName;
- (id)tooltipString;
- (void)_setWhenStatusChanged:(id)arg1;
- (BOOL)_updateCurrentStatus;
@property(readonly, nonatomic) unsigned long long previousStatus;
@property(readonly, nonatomic) unsigned long long currentStatus;
@property(readonly, nonatomic) unsigned long long effectiveStatus;
@property(readonly, nonatomic) double timeSinceStatusChanged;
@property(readonly, nonatomic) BOOL canTransition;
@property(readonly, nonatomic) BOOL inStatusTransition;
- (void)_startAnimationPusling:(BOOL)arg1;
- (void)_startStatusTransition;
- (void)_startPulse;
@property(readonly, nonatomic) BOOL isPulseTransition;
- (void)startPulse;
- (void)stopTransition;
- (double)transitionPhase:(double)arg1;
- (double)transitionAlphaTo:(double)arg1 from:(double)arg2 throbs:(unsigned long long)arg3;
- (long long)_compareIMHandlesWith:(id)arg1 withFezSortParameters:(CDStruct_7495ffd8 *)arg2;
- (long long)compare:(id)arg1 withFezSortParameters:(CDStruct_7495ffd8 *)arg2;
- (void)clearAttributedStatusMessageCache;
@property(readonly, nonatomic) NSAttributedString *displayStatusMessage;
@property(readonly, nonatomic) unsigned int sortOrder;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityTitleAttribute;
- (id)accessibilityValueAttribute;

@end

@interface FezPreferences : NSPreferences
{
}

+ (void)initialize;
+ (void)finishStateRestoration;
+ (void)delayedLaunchComplete:(id)arg1;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
- (id)init;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)window:(id)arg1 didDecodeRestorableState:(id)arg2;
- (struct CGSize)preferencesContentSize;
- (BOOL)usesNewLayout;
- (BOOL)usesButtons;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (void)windowWillClose:(id)arg1;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (id)selectModuleOfClass:(Class)arg1;
- (void)_selectModuleOwner:(id)arg1;
- (void)cancel:(id)arg1;

@end

/*@interface FezQCRenderer : QCRenderer
{
}

+ (BOOL)requires8BitInternalBuffers;
+ (id)defaultRenderingOptions;
- (id)init;

@end*/

@interface FezServicePeopleListGroup : FezPeopleListGroup
{
    IMServiceImpl *_serviceFilter;
}

+ (id)bonjourGroup;
- (id)initWithServiceFilter:(id)arg1;
- (void)dealloc;
- (BOOL)shouldContainIMHandle:(id)arg1;
- (BOOL)shouldConsumeIMHandle:(id)arg1;
- (CDStruct_b2f7276a)filterForIMHandle:(id)arg1;
@property(retain) IMServiceImpl *_serviceFilter; // @synthesize _serviceFilter;

@end

/*@interface FezTokenAttachmentCell : NSTokenAttachmentCell
{
    BOOL _hasImage;
}

- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (void)setHasImage:(BOOL)arg1;

@end*/

@interface FezWebView : WebView
{
    NSObject *_dragDestinationDelegate;
    NSObject *_keyDownDelegate;
    NSObject *_viewDelegate;
}

- (id)dragDestinationDelegate;
- (void)setDragDestinationDelegate:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;
- (id)keyDownDelegate;
- (void)setKeyDownDelegate:(id)arg1;
- (void)keyDown:(id)arg1;
- (id)viewDelegate;
- (void)setViewDelegate:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)viewWillStartLiveResize;
- (void)viewDidEndLiveResize;
- (void)viewDidMoveToSuperview;
- (void)removeFromSuperview;
- (void)viewDidMoveToWindow;

@end

@interface Fezz : NSObject <FezHotKeyHandler, NSApplicationDelegate>
{
    NSMenuItem *_smsMenuItem;
    NSMenuItem *_smileyMenuItem;
    NSMenuItem *_balloonMenuItem;
    NSMenuItem *_firstServiceStatusItem;
    NSMenuItem *_closeChatMenuItem;
    NSMenuItem *_closeAllChatsMenuItem;
    NSMenuItem *_closeWindowMenuItem;
    NSMenuItem *_myStatusMenuItem;
    NSMenuItem *_accountsMenuItem;
    NSMenuItem *_firstPeopleListMenuItem;
    NSMenuItem *_avMenuItem;
    NSMenu *_avMenu;
    StatusController *_statusController;
    StatusController *_dockStatusController;
    NSArray *_inviteData;
    NSMutableArray *_aeQueue;
    BOOL _setupComplete;
    BOOL _connectedToDaemon;
    NSMenuItem *_switchToMenuItem;
    long long _switchToMenuIndex;
    NSWindow *_chooserWindow;
    NSMutableDictionary *_hotKeyInfo;
    NSMutableDictionary *_chatWindowControllerToChatMap;
    NSDictionary *_buddyIconDownloadInfo;
    long long _numberOfUnreadMessagesBeforeActivationEvent;
    BOOL _disableDockIconClickPerformsActivateRecentChat;
    BOOL _finishedLaunching;
    BOOL _finishedDelayedLaunching;
    BOOL _finishedDefferredLaunching;
    BOOL _terminating;
    NSMutableArray *_filesToOpen;
}

+ (id)sharedInstance;
+ (void)showCouldNotConnectDialog;
+ (void)connectToDaemon;
+ (unsigned long long)numberOfUnreadMessages;
+ (BOOL)hasUnsentMessages;
+ (void)savePersistentChats;
+ (void)savePersistentChatSelections;
+ (id)persistentChatInfo;
+ (id)persistentChatSelectionInfo;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
- (id)init;
- (void)dealloc;
- (id)_openFile:(id)arg1;
- (void)openFilesAfterLaunch;
- (BOOL)application:(id)arg1 openFile:(id)arg2;
- (BOOL)applicationShouldOpenUntitledFile:(id)arg1;
- (void)_orderFrontAllActiveWindows;
- (unsigned long long)applicationShouldTerminate:(id)arg1;
- (BOOL)_appHasOpenUnminiaturizedWindows;
- (void)_temporarilyDisableDockIconClickPerformsActivateRecentChat;
- (void)_reenableDockIconClickPerformsActivateRecentChat;
- (void)applicationWillUnhide:(id)arg1;
- (void)applicationDidUnhide:(id)arg1;
- (void)applicationWillBecomeActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (BOOL)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(BOOL)arg2;
- (void)showDockNotificationWithMessage:(id)arg1;
- (void)handleHotKey:(long long)arg1;
- (void)doAddBuddyCommandForIMHandle:(id)arg1 withWindow:(id)arg2;
- (void)showInfoForIMHandle:(id)arg1;
- (void)showProfileForIMHandle:(id)arg1;
- (id)chooserWindow;
- (id)statusController;
- (id)imHandleForIteration:(long long)arg1;
- (id)messageForIteration:(long long)arg1;
- (id)chatWindowControllerForIteration:(long long)arg1;
- (void)verifyLoginAndSendAnIM;
- (void)verifyResponseToIMAndStartAV;
- (void)verifyAVIsRunningAndCloseWindow;
- (void)verifyAddedBuddyAndStartAV;
- (void)verifyVideoIsRunningAndTryAudio;
- (void)startAudio;
- (void)verifyAudioIsRunningAndStartNewIteration;
- (void)loginIfNecessary;
- (void)application:(id)arg1 runTest:(unsigned long long)arg2 duration:(double)arg3;
- (void)resurrectPersistentChats;
- (void)delayedChatResurrection:(id)arg1;
- (void)showAbout:(id)arg1;
- (void)showPrefs:(id)arg1;
- (void)showVideoPrefs:(id)arg1;
- (void)sendSMS:(id)arg1;
- (void)newChat:(id)arg1;
- (void)newChatWithPerson:(id)arg1;
- (void)goToChat:(id)arg1;
- (void)_togglePeopleList:(id)arg1;
- (void)toggleAccountConnection:(id)arg1;
- (void)showPeopleListControllerSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)showPeopleListController:(id)arg1;
- (void)showPeopleListControllerWithActivate:(id)arg1;
- (void)showFileTransferManager:(id)arg1;
- (void)showChatList:(id)arg1;
- (void)inviteToAudioChat:(id)arg1;
- (void)inviteToVideoChat:(id)arg1;
- (void)inviteToARDAsClient:(id)arg1;
- (void)inviteToARDAsServer:(id)arg1;
- (void)cancelARDSession:(id)arg1;
- (void)showVCInfo:(id)arg1;
- (void)resetBackground:(id)arg1;
- (void)showSelfPreview:(id)arg1;
- (void)_shareWithiChatTheaterChoosingDocuments:(BOOL)arg1 chooseURL:(BOOL)arg2;
- (void)shareAppWithiChatTheater:(id)arg1;
- (void)shareAppWithiChatTheaterSelected:(id)arg1;
- (void)shareWithiChatTheater:(id)arg1;
- (void)shareURLWithiChatTheater:(id)arg1;
- (void)shareiPhotoWithiChatTheater:(id)arg1;
- (void)showAddressBook:(id)arg1;
- (void)changeBuddyPicture:(id)arg1;
- (void)toggleNameDisplay:(id)arg1;
- (void)toggleEffectsPalette:(id)arg1;
- (void)togglePublishMic:(id)arg1;
- (void)togglePublishCamera:(id)arg1;
- (void)togglePublishARD:(id)arg1;
- (void)deleteSelectedBuddies:(id)arg1;
- (void)showMyProfile:(id)arg1;
- (void)shopForiChatProducts:(id)arg1;
- (void)provideBetaFeedback:(id)arg1;
- (void)ignore:(id)arg1;
- (void)block:(id)arg1;
- (void)closeAllChats:(id)arg1;
- (void)toggleHidePictures:(id)arg1;
- (void)toggleHideAudioStatus:(id)arg1;
- (void)toggleHideVideoStatus:(id)arg1;
- (void)toggleShowOfflines:(id)arg1;
- (void)toggleArrangesByGroup:(id)arg1;
- (void)toggleUsesOfflineGroup:(id)arg1;
- (void)sortManually:(id)arg1;
- (void)sortByName:(id)arg1;
- (void)sortByStatus:(id)arg1;
- (void)sortByFirstName:(id)arg1;
- (void)sortByLastName:(id)arg1;
- (void)addABuddy:(id)arg1;
- (void)toggleHideSmileys:(id)arg1;
- (void)toggleHideLocalVideo:(id)arg1;
- (void)toggleRecording:(id)arg1;
- (BOOL)forwardValidateMenuItem:(id)arg1 toController:(id)arg2;
- (void)toggleMute:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)registerGlobalHotKey;
- (void)unregisterGlobalHotKey;
- (void)setupComplete:(id)arg1;
- (void)_resurrectPersistentChats;
- (void)_persistCurrentChats;
- (void)_updateAVMenu;
- (void)_initAVMenu;
- (void)_createCacheFolder;
- (void)_saveCameraSettings;
- (void)_prepareInternals;
- (void)_createDownloadsFolder;
- (void)createRequiredFolders;
- (void)_runTestsIfRequested;
- (void)_unloadBuddyLists;
- (void)_loadBuddyLists;
- (void)_finishDeferredLaunching;
- (void)_deferredApplicationDidFinishLaunching;
- (void)_setupViceroy;
- (void)_timeZoneChanged;
- (void)unifiedModeChanged:(id)arg1;
- (void)_delayedApplicationLoading;
- (void)_addressBookChanged:(id)arg1;
- (void)_daemonConnected;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)_updateUnreadBadge:(id)arg1;
- (void)setPrefersCloseChat:(BOOL)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)_displayChat:(id)arg1;
- (BOOL)activateRecentChat;
- (id)_otherSMSMenuItem;
- (void)_removeSMSMenuIfNeeded;
- (void)_removeOpenRecentMenu;
- (void)_updateBuddyListMenu:(id)arg1;
- (void)updatePeopleListWindowItem;
- (id)applicationDockMenu:(id)arg1;
- (void)_dockItemPicked:(id)arg1;
- (BOOL)willRunFTU;
- (void)afterLaunchMakeObject:(id)arg1 performSelector:(SEL)arg2;
- (BOOL)deferredLaunchComplete;
- (BOOL)delayedLaunchComplete;
- (BOOL)isAppLaunching;
- (BOOL)isAppTerminating;
- (void)_populateChatMenuItems;
- (void)awakeFromNib;
- (void)setChooserWindow:(id)arg1;
- (void)_setImage:(id)arg1 forIMHandle:(id)arg2 allowEditing:(BOOL)arg3;
- (void)_cleanUpDownloadWithError:(BOOL)arg1;
- (void)urlFetcher:(id)arg1 fetchedResult:(id)arg2;
- (void)urlFetcher:(id)arg1 fetchFailedWithError:(id)arg2;
- (void)_setImageAtURL:(id)arg1 forIMHandle:(id)arg2 allowEditing:(BOOL)arg3;
- (void)_installAEHandlers;
- (void)_handleAEQueue;
- (id)_imHandlesWithIDs:(id)arg1 forAccount:(id)arg2;
- (id)_imHandlesWithCardUIDs:(id)arg1 forSpecificAccount:(id)arg2;
- (id)_imHandlesWithCardUIDs:(id)arg1 forAccount:(id)arg2 preferOnline:(BOOL)arg3;
- (id)_handleTextComposeRequestFor:(id)arg1 style:(int)arg2 roomName:(id)arg3 message:(id)arg4;
- (BOOL)_confirmActionWithMessage:(id)arg1 info:(id)arg2 button:(id)arg3;
- (BOOL)_confirmAndInviteToAVChatVideo:(BOOL)arg1 imHandles:(id)arg2;
- (BOOL)_confirmAndGoToChatRoom:(id)arg1 account:(id)arg2;
- (id)_generateErrorWithReason:(id)arg1 descriptiveText:(id)arg2;
- (BOOL)_handleRequestFor:(id)arg1 style:(int)arg2 roomName:(id)arg3 message:(id)arg4 error:(id *)arg5;
- (void)_handleGURLAppleEvent:(id)arg1 reply:(id)arg2;

@end

@interface FileDragOutView : NSImageView
{
    FileTransfer *_file;
    id <FileDragOutViewDelegate> _delegate;
    struct CGPoint _clickLoc;
}

- (void)setDelegate:(id)arg1;
- (void)_updateImage;
- (void)setFile:(id)arg1;
- (id)file;
- (void)dealloc;
- (void)mouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;

@end

@interface FileNotifier : BannerNotifier
{
    FileTransferRequest *_fileRequest;
    FileTransfer *_file;
    BOOL _wasClicked;
}

+ (void)openOnFileTransferRequest:(id)arg1;
- (id)initWithFileTransfer:(id)arg1;
- (id)menuItemFormat;
- (id)bannerView;
- (BOOL)isActiveNotification;
- (void)dealloc;
- (void)closeDownShop:(BOOL)arg1;
- (void)realWindowVisible;

@end

@interface FileTransfer : IMFileTransfer <FileTransferIconLoaderDelegate, QLPreviewItem>
{
    NSString *_displayNameCache;
    NSImage *_icon;
    IMHandle *_otherPersonAsIMHandle;
    NSURL *_deadFile;
    unsigned int _iconWasGuessedFromTransferInformation:1;
}

- (void)dealloc;
- (id)otherPersonAsIMHandle;
- (id)errorString;
- (void)_updateWithDictionaryRepresentation:(id)arg1;
- (void)fileTransferIconDidLoad:(id)arg1;
- (void)_updateIconUsingFileTransferInformation;
- (void)_updateIconUsingLocalPath;
- (id)icon;
- (void)_setIcon:(id)arg1;
- (void)_updateDisplayNameCache;
- (id)displayName;
@property(readonly) NSURL *previewItemURL;
@property(readonly) NSString *previewItemTitle;
- (id)scriptID;
- (id)scriptName;
- (id)scriptDirection;
- (id)scriptService;
- (id)scriptFilePath;
- (id)scriptParticipant;
- (id)scriptTransferSize;
- (id)scriptTransferProgress;
- (id)scriptSecure;
- (id)scriptTransferStatus;
- (id)scriptStarted;
- (void)acceptTransferCommand:(id)arg1;
- (void)declineTransferCommand:(id)arg1;
- (id)objectSpecifier;

// Remaining properties
@property(readonly) id previewItemDisplayState;

@end

@interface FileTransferCenter : IMFileTransferCenter <NSOpenSavePanelDelegate>
{
}

+ (void)initialize;
+ (Class)fileTransferClass;
- (id)init;
- (void)dealloc;
- (void)_displayNameUpdated:(id)arg1;
- (void)removeTransfer:(id)arg1;
- (void)selectAndSendFileToIMHandle:(id)arg1 window:(id)arg2;
- (void)selectAndSendFileToIMHandle:(id)arg1 window:(id)arg2 completionHandler:(id)arg3;
- (void)askAndSendFileURLs:(id)arg1 toIMHandle:(id)arg2;
- (void)askAndSendFilesOnPasteboard:(id)arg1 toIMHandle:(id)arg2;
- (void)sendFileURLs:(id)arg1 toIMHandle:(id)arg2 showManagerWindow:(BOOL)arg3;
- (void)handleIMFileTransferRefreshAllNotification:(id)arg1;
- (void)handleIMStandaloneFileTransferRegisteredNotification:(id)arg1;

@end

@interface FileTransferFragment : NSObject <DOMEventListener>
{
    DOMDocumentFragment *_fragment;
    BOOL _mouseDown;
    DOMNode *_statusTextNode;
    int _statusIconAction;
    DOMNode *_statusNode;
    NSString *_statusId;
    DOMNode *_iconNode;
    NSString *_iconId;
    FileTransfer *_file;
    NSString *_filename;
    TranscriptStyleController *_style;
}

- (id)fragment;
- (id)initWithFileTransfer:(id)arg1 inChat:(id)arg2;
- (void)dealloc;
- (void)handleEvent:(id)arg1;
- (void)_updateFileTransferStatusIcon;
- (void)_fileXferUpdated:(id)arg1;
- (void)_flagsChanged:(id)arg1;

@end

@interface FileTransferFragmentProvider : TranscriptFragmentProvider <FileTransferFragmentProvider>
{
    NSMutableDictionary *_guidToContainerElementMap;
    NSMutableDictionary *_guidToObjectElementMap;
    NSMutableDictionary *_guidToPlaceholderElementMap;
}

+ (void)initialize;
- (id)initWithTranscriptStyleController:(id)arg1;
- (void)dealloc;
- (id)role;
- (void)transcriptWillLoad;
- (void)_updateWidth:(double)arg1 height:(double)arg2 objectElement:(id)arg3 placeholderElement:(id)arg4;
- (void)fileTransferUpdated:(id)arg1;
- (id)fragmentForGUID:(id)arg1 filename:(id)arg2 width:(double)arg3 height:(double)arg4;
- (id)fragmentForGUID:(id)arg1 filename:(id)arg2 bookmark:(id)arg3;

@end

@interface FileTransferIconLoader : NSObject
{
    NSOperationQueue *_queue;
}

+ (id)sharedInstance;
- (id)init;
- (void)dealloc;
- (void)cancelNotificationsForDelegate:(id)arg1;
- (void)queueURL:(id)arg1 bookmark:(id)arg2 forSize:(double)arg3 withDelegate:(id)arg4;
- (void)queueURL:(id)arg1 forSize:(double)arg2 withDelegate:(id)arg3;

@end

@interface FileTransferIconLoaderOperation : NSOperation
{
    NSURL *_url;
    NSData *_bookmark;
    id <FileTransferIconLoaderDelegate> _delegate;
    struct CGSize _thumbnailSize;
    NSDictionary *_options;
}

- (id)init;
- (void)dealloc;
- (void)_notifyDelegate:(id)arg1;
- (void)main;
@property(nonatomic, assign) id <FileTransferIconLoaderDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) struct CGSize thumbnailSize; // @synthesize thumbnailSize=_thumbnailSize;
@property(retain, nonatomic) NSData *bookmark; // @synthesize bookmark=_bookmark;
@property(copy, nonatomic) NSURL *url; // @synthesize url=_url;

@end

@interface FileTransferManager : NSWindowController <QLPreviewPanelDataSource, QLPreviewPanelDelegate, ViewTableDelegate, QLSeamlessOpenerDelegate>
{
    NSButton *_clearButton;
    NSTextField *_countField;
    ViewTable *_table;
    BOOL _securityDialogInProgress;
    NSMutableDictionary *_inlineImageGUIDToBookmarkMap;
    NSMutableArray *_securityDialogQueue;
    QLPreviewPanel *_previewPanel;
}

+ (BOOL)checkSavePath:(id)arg1 forFileTransfer:(id)arg2 postingErrorToWindow:(id)arg3;
+ (void)_replaceSheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
+ (void)fileTransfer:(id)arg1 saveAs:(id)arg2 attachedToWindow:(id)arg3;
+ (void)fileTransfer:(id)arg1 saveTo:(id)arg2 attachedToWindow:(id)arg3;
+ (void)fileTransfer:(id)arg1 saveTo:(id)arg2 attachedToWindow:(id)arg3 forceReplace:(BOOL)arg4;
+ (void)fileTransfer:(id)arg1 saveTo:(id)arg2 attachedToWindow:(id)arg3 automaticallyRename:(BOOL)arg4;
+ (void)fileTransfer:(id)arg1 saveTo:(id)arg2 attachedToWindow:(id)arg3 forceReplace:(BOOL)arg4 automaticallyRename:(BOOL)arg5;
+ (id)sharedInstance;
- (void)awakeFromNib;
- (void)windowDidLoad;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (BOOL)windowShouldClose:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)dealloc;
- (void)_countChanged;
- (id)_viewForTransferGUID:(id)arg1;
- (void)_addTransfer:(id)arg1;
- (void)_scrollToBottom;
- (void)_handleRefreshAllTransfers:(id)arg1;
- (void)_handleTransferCreated:(id)arg1;
- (void)_handleTransferRemoved:(id)arg1;
- (id)_transfersMatchingCondition:(int)arg1 wantsGUIDs:(BOOL)arg2;
- (void)_removeTransfersMatchingCondition:(int)arg1;
- (void)openSelectedRowsInViewTable:(id)arg1;
- (void)deleteSelectedRowsInViewTable:(id)arg1;
- (void)showWindowAndMakeKey:(BOOL)arg1;
- (void)showWindow:(id)arg1;
- (void)refreshList;
- (void)showTransfer:(id)arg1;
- (void)clearTransfers:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)openSelectedTransfers:(id)arg1;
- (void)removeSelectedTransferFromList:(id)arg1;
- (void)selectionDidChangeForViewTable:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (id)revealInFinderPathForInlineImageWithGUID:(id)arg1 filename:(id)arg2;
- (void)mouseDown:(id)arg1;
- (void)_fileTransferIconUpdated:(id)arg1;
- (void)quickLook:(id)arg1;
- (void)quicklookSelectedRowsInViewTable:(id)arg1;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
- (void)beginPreviewPanelControl:(id)arg1;
- (void)endPreviewPanelControl:(id)arg1;
- (id)_qlPreviewItems;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (BOOL)previewPanel:(id)arg1 handleEvent:(id)arg2;
- (id)_fileDragOutViewForItem:(id)arg1;
- (id)_fileIconForItem:(id)arg1;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (id)previewPanel:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)seamlessOpener:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (id)seamlessOpener:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;

@end

@interface FileTransferRequest : NSWindowController <FileDragOutViewDelegate>
{
    NSExtendedBox *_box;
    NSView *_bannerContainer;
    AVParticipantView *_bannerView;
    FileDragOutView *_fileIconView;
    NSTextField *_filenameField;
    NSTextField *_descriptionField;
    NSTabView *_buttonTabView;
    NSButton *_notifyAccept;
    NSButton *_notifyReject;
    NSButton *_notifyBlock;
    NSButton *_notifyOK;
    FileNotifier *_notifier;
    FileTransfer *_file;
    int _action;
}

+ (id)fileTransferRequestWithFile:(id)arg1 notifier:(id)arg2;
- (id)_initWithIncomingFile:(id)arg1 notifier:(id)arg2;
- (id)fileTransfer;
- (void)setNotifier:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)dealloc;
- (void)_flagsChanged:(id)arg1;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (void)windowDidLoad;
- (void)_handleUpdated:(id)arg1;
- (void)_handleRemoved:(id)arg1;
- (void)acceptButtonPressed:(id)arg1;
- (BOOL)fileDragOutView:(id)arg1 shouldDragFile:(id)arg2;
- (void)fileDragOutView:(id)arg1 file:(id)arg2 draggedTo:(id)arg3;
- (void)fileDragOutView:(id)arg1 fileDoubleClicked:(id)arg2;
- (void)rejectButtonPressed:(id)arg1;
- (void)blockButtonPressed:(id)arg1;
- (void)contextUpdated:(id)arg1;

@end

@interface ViewTableRow : NSView
{
    NSView *_containerView;
    BOOL _selected;
}

- (void)awakeFromNib;
- (id)initWithNibNamed:(id)arg1 saveNib:(BOOL)arg2;
- (void)dealloc;
- (BOOL)isSelected;
- (void)selectedDidChange;
- (void)windowKeyChanged;
- (void)_setSelected:(BOOL)arg1;
- (void)_setSelected;
- (void)_deselect;
- (void)_setSingleSelection;
- (void)_extendSelection;
- (void)mouseDown:(id)arg1;
- (void)rightMouseDown:(id)arg1;

@end

@interface FileTransferView : ViewTableRow <FileDragOutViewDelegate>
{
    FileTransfer *_fileTransfer;
    BOOL _canUpdate;
    FileDragOutView *_fileIcon;
    NSTextField *_fileNameField;
    NSTextField *_statusField;
    NSProgressIndicator *_progressBar;
    NSButton *_stopButton;
    NSButton *_revealButton;
    NSMenu *_contextMenu;
    NSImage *_pressedCancel;
    NSImage *_selectedCancel;
    NSImage *_activeCancel;
}

+ (id)_bytesTransferredPerSecondforTransfer:(id)arg1;
+ (id)_timeRemainingStringWithProgress:(double)arg1 forTransfer:(id)arg2;
+ (id)kindStringForFileTransfer:(id)arg1;
+ (id)statusStringForFileTransfer:(id)arg1;
- (id)initWithFileTransfer:(id)arg1 saveNib:(BOOL)arg2;
- (id)fileTransfer;
- (id)fileIcon;
- (void)awakeFromNib;
- (void)dealloc;
- (void)_removeProgressBar;
- (void)_updateButtons;
- (void)_update:(id)arg1;
- (void)update;
- (void)viewDidMoveToWindow;
- (void)_updateTextColor;
- (void)windowKeyChanged;
- (void)selectedDidChange;
- (id)hitTest:(struct CGPoint)arg1;
- (double)dwToFit;
- (void)acceptTransfer:(id)arg1;
- (void)stopTransfer:(id)arg1;
- (void)revealInFinder:(id)arg1;
- (BOOL)fileDragOutView:(id)arg1 shouldDragFile:(id)arg2;
- (void)fileDragOutView:(id)arg1 file:(id)arg2 draggedTo:(id)arg3;
- (void)fileDragOutView:(id)arg1 fileDoubleClicked:(id)arg2;

@end

@interface FindPanelController : NSWindowController
{
    NSTextField *searchTextField;
    NSTextField *statusTextField;
    long long _lastFindPasteboardChangeCount;
}

+ (id)sharedController;
- (void)dealloc;
- (id)windowNibName;
- (id)windowFrameAutosaveName;
- (void)updateFindPasteboardFromSearchField;
- (void)_updateSearchFieldFromFindPasteboard;
- (id)_searchString;
- (id)_searchTarget;
- (BOOL)_doSearchForString:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 inTarget:(id)arg4;
- (void)_setStatus:(id)arg1;
- (void)_findWithDirection:(BOOL)arg1 caseSensitive:(BOOL)arg2;
- (BOOL)readyToFind;
- (void)findNext:(id)arg1;
- (void)findPrevious:(id)arg1;
- (void)selectText;

@end

@interface FrameNotifier : NSObject
{
    NSString *_sourceName;
    struct dispatch_queue_s *_lock;
    NSMutableDictionary *_notifiers;
    id _lastFrame;
    FPS *_fps;
    id _delegate;
}

+ (BOOL)hasListenersForSource:(id)arg1;
+ (BOOL)postFrame:(id)arg1 fromSource:(id)arg2;
+ (id)frameNotifierForSource:(id)arg1;
+ (id)runLoopModes;
+ (void)_setupThread;
+ (void)_backgroundThreadRunner;
+ (id)_backgroundNotificationThread;
- (id)description;
- (void)setDelegate:(id)arg1;
- (id)initWithSourceName:(id)arg1;
- (void)dealloc;
- (id)sourceName;
- (BOOL)hasListeners;
- (void)addListener:(id)arg1 onThread:(id)arg2;
- (void)removeListener:(id)arg1;
- (void)postFrame:(id)arg1;
- (BOOL)canPostFrame;
- (id)lastFrame;

@end

@interface FramePoster : NSObject
{
    id _frame;
    NSArray *_targets;
    FrameNotifier *_notifier;
    NSString *_source;
}

- (void)post;

@end

@interface GLObject : NSObject
{
    NSOpenGLContext *_context;
    struct _CGLContextObject *cgl_ctx;
}

- (id)initWithOpenGLContext:(id)arg1;
- (void)dealloc;
- (id)context;
- (void)throwOnGLError:(const char *)arg1:(int)arg2;
- (void)throwOnGLError:(id)arg1;

@end

@interface FrameReader : GLObject
{
    unsigned long long _rowBytes;
    unsigned long long _pixelsWide;
    unsigned long long _pixelsHigh;
    unsigned int _glPixelBufferId;
    void *_frameBuffer;
    void *_flipBuffer;
    GLFBO *_fbo;
    GLSLProgram *_shader;
}

+ (unsigned int)nativePixelFormat;
+ (unsigned int)nativePixelType;
+ (BOOL)_isIntel950Graphics:(id)arg1;
- (void)_initResources;
- (void)_destroyResources;
- (id)initWithOpenGLContext:(id)arg1 pixelsWide:(unsigned int)arg2 pixelsHigh:(unsigned int)arg3;
- (void)dealloc;
- (void)handleVirtualScreenChangedNotificiation:(int)arg1;
- (void)_glReadPixels_readFrameIntoBuffer:(void *)arg1 wantYuv:(BOOL)arg2 rowBytes:(long long)arg3;
- (void)_PBuffer_readFrameIntoBuffer:(void *)arg1 wantYuv:(BOOL)arg2 rowBytes:(long long)arg3;
- (void)_readFrameIntoBuffer:(void *)arg1 wantYuv:(BOOL)arg2 rowBytes:(long long)arg3 flipBuffer:(BOOL)arg4;
- (id)bitmap;
- (void)copyFrameTo:(struct __CVBuffer *)arg1 flipBuffer:(BOOL)arg2;
- (void)copyFrameTo:(struct __CVBuffer *)arg1;
- (struct CGSize)size;

@end

@interface FrameResizer : NSObject
{
    NSOpenGLContext *_context;
    FrameReader *_frameReader;
    struct __CVOpenGLBufferPool *_bufferPool;
    struct __CVBuffer *_buffer;
}

+ (BOOL)resizeBufferPool:(struct __CVOpenGLBufferPool **)arg1 width:(int)arg2 height:(int)arg3;
- (id)init;
- (void)dealloc;
- (void)handleVirtualScreenChangedNotificiation:(int)arg1;
- (void)resizeTexture:(id)arg1 intoBuffer:(struct __CVBuffer *)arg2 fromRect:(struct CGRect)arg3 sizeToFitCIF:(BOOL)arg4;

@end

@interface FramerateTracker : NSObject
{
    unsigned long long _sampleCount;
    double *_samples;
    unsigned long long _curSample;
    unsigned long long _totalSamples;
    double _sampleSum;
    double _curTime;
    double _rounding;
}

- (id)initWithSampleCount:(unsigned long long)arg1 framerate:(double)arg2 rounding:(double)arg3;
- (unsigned long long)sampleCount;
- (double)rounding;
- (double)nextSample;
- (unsigned long long)totalSamples;
- (double)sampleVariation;
- (void)dealloc;

@end

@interface FullScreenQCTransitionWindow : NSWindow
{
    QCView *_qcView;
    double _transitionTime;
    id _completionDelegate;
    SEL _completionSelector;
    BOOL _transitionOnMainScreen;
}

+ (void)performTransitionWithScreen:(id)arg1 transitionPath:(id)arg2 image1:(id)arg3 fromRect:(struct CGRect)arg4 toRect:(struct CGRect)arg5 image2:(id)arg6 fromRect:(struct CGRect)arg7 toRect:(struct CGRect)arg8 bgColor:(id)arg9 completionDelegate:(id)arg10 completionSelector:(SEL)arg11 transitionTime:(double)arg12;
- (id)_initWithScreen:(id)arg1 transitionPath:(id)arg2 image1:(id)arg3 fromRect:(struct CGRect)arg4 toRect:(struct CGRect)arg5 image2:(id)arg6 fromRect:(struct CGRect)arg7 toRect:(struct CGRect)arg8 bgColor:(id)arg9 completionDelegate:(id)arg10 completionSelector:(SEL)arg11 transitionTime:(double)arg12;
- (void)_transitionDidComplete;
- (void)_startTransition;
- (void)dealloc;

@end

@interface FullScreenWindow : NSWindow
{
    NSView *_placeholderView;
}

- (id)initWithScreen:(id)arg1 backing:(unsigned long long)arg2;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (void)magnifyWithEvent:(id)arg1;
- (void)acquireView:(id)arg1;
- (void)restoreView;

@end

@interface GLFBO : GLObject
{
    unsigned int _textureTarget;
    unsigned int _textureName;
    unsigned int _fboName;
    int _width;
    int _height;
}

+ (BOOL)fboIsSupportedOnContext:(id)arg1;
- (id)initWithTarget:(unsigned int)arg1 width:(int)arg2 height:(int)arg3 internalFormat:(unsigned int)arg4 format:(unsigned int)arg5 type:(unsigned int)arg6 context:(id)arg7;
- (void)dealloc;
- (void)bind;
- (void)unbind;
- (void)readBack:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(unsigned int)arg5:(unsigned int)arg6:(void *)arg7;
- (void)readBack:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(unsigned int)arg5:(unsigned int)arg6:(void *)arg7:(unsigned int)arg8;
@property(readonly) unsigned int name;
@property(readonly) unsigned int textureName;
- (void)setAsSource;
- (void)setAsDestination;

@end

@interface GLSLProgram : GLObject
{
    void *_prog;
    void *_frag;
    void *_vert;
}

+ (id)rgbToYCbCr601Shader:(id)arg1;
- (id)initWithVertexShader:(const char *)arg1 fragmentShader:(const char *)arg2 context:(id)arg3;
- (void)dealloc;
- (void)useProgram;
- (void)unuseProgram;
- (int)uniformLocation:(id)arg1;

@end

@interface GLTexture : GLObject
{
    unsigned int _target;
    unsigned int _name;
    unsigned int _wide;
    unsigned int _high;
}

+ (id)bgraTextureWithOpenGLContext:(id)arg1 pixelsWide:(unsigned int)arg2 pixelsHigh:(unsigned int)arg3;
+ (id)yuvTextureWithOpenGLContext:(id)arg1 pixelsWide:(unsigned int)arg2 pixelsHigh:(unsigned int)arg3;
- (id)initWithOpenGLContext:(id)arg1 target:(unsigned int)arg2 pixelsWide:(unsigned int)arg3 pixelsHigh:(unsigned int)arg4 internalFormat:(unsigned int)arg5 format:(unsigned int)arg6 type:(unsigned int)arg7 pixels:(const void *)arg8;
- (void)dealloc;
- (void)bind;
- (void)unbind;
@property(readonly) unsigned int pixelsHigh; // @synthesize pixelsHigh=_high;
@property(readonly) unsigned int pixelsWide; // @synthesize pixelsWide=_wide;
@property(readonly) unsigned int name; // @synthesize name=_name;
@property(readonly) unsigned int target; // @synthesize target=_target;

@end

@interface GoToChat : NSWindowController <NSWindowRestoration>
{
    NSButton *_addButton;
    NSButton *_cancelButton;
    NSTableView *_bookmarkTable;
    ExtendedComboBox *_chatNameField;
    NSTextField *_errorField;
    NSButton *_goButton;
    NSButton *_removeButton;
    ServicePopUp *_servicePopUp;
}

+ (BOOL)canGoToChat;
+ (id)sharedGoToChatPanel;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
- (void)windowDidLoad;
- (void)dealloc;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)window:(id)arg1 didDecodeRestorableState:(id)arg2;
- (void)_pruneDeadAccounts;
- (void)_updateUI;
- (void)_updateRecentKey;
- (void)_updateServicePopUp;
- (void)selectedAccountStatusChanged:(id)arg1;
- (void)selectedServiceChanged:(id)arg1;
- (void)comboBoxWillDismiss:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)_loadBookmarks;
- (void)_saveBookmarks;
- (void)_removeBookmarkAtIndex:(long long)arg1;
- (void)_addBookmarkForRoom:(id)arg1 account:(id)arg2;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)add:(id)arg1;
- (void)remove:(id)arg1;
- (void)go:(id)arg1;
- (void)cancel:(id)arg1;
- (void)showWindow:(id)arg1;

@end

@interface GoToChatTableCell : NSCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;

@end

@interface GradientView : NSView
{
    NSMutableArray *colors;
    BOOL _dropHighlight;
}

- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)addColor:(id)arg1;
- (void)setColors:(id)arg1;
- (void)setDropHighlight:(BOOL)arg1;
- (BOOL)dropHighlight;

@end

@interface GroupsEditorController : NSObject
{
    PeopleListController *_peopleListController;
    NSMutableArray *_deletedGroups;
    NSMutableArray *_oldGroups;
    NSMutableArray *_newGroups;
    NSArray *_fromGroups;
    NSArray *_movingIMHandles;
    NSString *_renamingGroup;
    NSString *_deletingGroup;
    BOOL _allowsCustomSort;
    NSWindow *_renameGroupSheet;
    NSTextField *_renameGroupField;
    NSButton *_renameGroupAcceptButton;
    NSWindow *_addGroupSheet;
    NSTextField *_renameGroupLabel;
    NSTextField *_addGroupField;
    NSButton *_addGroupButton;
    NSButton *_newGroupButton;
    NSButton *_deleteGroupButton;
    NSButton *_renameGroupButton;
}

+ (void)addGroupForPeopleListController:(id)arg1;
+ (void)addGroupForPeopleListController:(id)arg1 withPeople:(id)arg2 fromGroups:(id)arg3;
+ (void)renameGroup:(id)arg1 forPeopleListController:(id)arg2;
+ (void)deleteGroup:(id)arg1 forPeopleListController:(id)arg2;
- (id)initWithPeopleListController:(id)arg1 editingGroups:(BOOL)arg2 renamingGroup:(id)arg3 deletingGroup:(id)arg4 movingFromGroups:(id)arg5 movingPeople:(id)arg6;
- (void)awakeFromNib;
- (void)_sheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)_beginSheet:(int)arg1;
- (void)endSheet:(id)arg1;
- (void)dealloc;
- (void)_doAddGroup;
- (void)_doMoveFromGroup;
- (id)_array:(id)arg1 equivalentString:(id)arg2;
- (void)_doRenameGroup;
- (BOOL)_nameExists:(id)arg1 atRowOtherThan:(int)arg2;
- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (id)_newGroupName;
- (void)_deleteGroupsSheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (BOOL)_confirmDeletionOfGroups:(id)arg1;
- (void)deleteGroups:(id)arg1 andRenameGroupsFrom:(id)arg2 to:(id)arg3;

@end

@interface HiddenButton : AccessibilityIgnoredButton
{
}

- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;

@end

/*@interface IKPictureTakerRecentPicture (FezAdditions)
+ (id)mostRecentPicture;
@end*/

@interface IMAVChat (ARDFeature)
- (BOOL)setConnection:(CDStruct_75a3e9f3 *)arg1 withHandle:(id)arg2;
- (void)startARDClientToParticipant:(id)arg1;
- (void)setARDUpgradeController:(id)arg1;
- (id)ARDUpgradeController;
- (void)sendARDFileTransferAuthorization:(id)arg1 to:(id)arg2;
- (int)ardRole;
- (void)setARDRole:(int)arg1;
@end

@interface IMAVChat (AuxVideoFeature)
- (BOOL)shouldConferenceAcceptAuxVideoFromUser:(id)arg1;
- (void)conferencePersonWithID:(id)arg1 approvedAuxVideo:(BOOL)arg2;
- (void)auxVideoBeganForPersonWithID:(id)arg1;
- (void)auxVideoEndedForPersonWithID:(id)arg1;
- (BOOL)isAuxVideoRunningOrUnderNegotiation;
- (void)readyForAuxVideo;
@end

@interface IMAVChat (RecordingFeature)
- (BOOL)recordingRequested;
- (void)requestRecording;
- (void)respondToRecordingRequestFromParticipant:(id)arg1 canRecord:(BOOL)arg2;
- (void)recordingFinished;
@end

@interface IMAVChat (Scripting)
- (id)scriptID;
- (id)scriptService;
- (id)scriptAVType;
- (id)scriptScreenSharingRole;
- (id)scriptParticipants;
- (id)scriptShowFullScreen;
- (void)setScriptShowFullScreen:(id)arg1;
- (id)scriptShowLocalVideo;
- (void)setScriptShowLocalVideo:(id)arg1;
- (id)scriptPaused;
- (void)setScriptPaused:(id)arg1;
- (id)scriptMuted;
- (void)setScriptMuted:(id)arg1;
- (id)scriptStarted;
- (id)scriptUpdated;
- (id)scriptInvitation;
- (id)scriptSecure;
- (id)scriptActive;
- (id)scriptAVConnectionState;
- (id)objectSpecifier;
- (void)stopChatScriptCommand:(id)arg1;
- (void)requestRecordingScriptCommand:(id)arg1;
- (void)stopRecordingScriptCommand:(id)arg1;
- (void)acceptInvitationScriptCommand:(id)arg1;
- (void)declineInvitationScriptCommand:(id)arg1;
- (void)takeVideoSnapshotScriptCommand:(id)arg1;
@end

@interface IMAVChatParticipant (ARDFeature)
- (CDStruct_75a3e9f3 *)_newConnectionAuthorization;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)authorizeARDClient;
- (void)requestARDUpgrade:(int)arg1;
- (void)_connectClientIfPossible;
- (void)setARDAuthorized;
- (void)ARDChannelDidConnect:(id)arg1;
- (id)outgoingARDUpgradeRequest;
- (void)closeARDChannel;
- (id)ARDChannelNegotiation;
- (void)_doARDFileTransferSource:(id)arg1 destination:(id)arg2 send:(BOOL)arg3;
- (void)sendARDFileTransferAuthorizationSource:(id)arg1 destination:(id)arg2 toServer:(BOOL)arg3;
- (BOOL)_checkARDFileTransferIndex:(unsigned int)arg1;
- (void)authorizeARDFileTransfer:(id)arg1;
- (void)handleVCChannelMessage:(unsigned int)arg1 userInfo:(id)arg2;
- (BOOL)createVCChannelRequestWithInfo:(id)arg1 isUpgrade:(BOOL)arg2;
- (int)connectedUDPSocket;
- (id)remoteIPPort;
- (id)encryptionKey;
@end

@interface IMAccount (AccountAdditions)
- (id)_defaultBuddyListDescription;
- (id)buddyListDescription;
- (id)speechDescription;
- (id)menuItemDescription;
- (void)setCollapsedGroups:(id)arg1;
- (id)collapsedGroups;
@end

@interface IMAccount (AccountPreferencesAdditions)
- (id)chatRoomsPrefsDictionary;
- (void)setChatRoomsPrefsDictionary:(id)arg1;
- (id)objectForKey:(id)arg1 forChatRoom:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2 forChatRoom:(id)arg3;
@end

@interface IMAccount (VCAdditions)
@end

@interface IMAccountController (AccountCleanup)
- (void)removePreferencesForAccount:(id)arg1;
@end

@interface IMAccountController (AccountScripting)
- (id)scriptingAccounts;
- (id)accountForDescription:(id)arg1;
@end

@interface IMAccountController (BuddyListDisplayAdditions)
- (void)_activeAccountChanged:(id)arg1;
- (BOOL)isBuddyListLoadedForAccount:(id)arg1;
- (id)loadBuddyListForAccount:(id)arg1;
- (id)loadBuddyListForAccount:(id)arg1 dontShowWindow:(BOOL)arg2;
- (void)unloadBuddylistForAccount:(id)arg1;
@end

@interface IMAccountController (LoadSaveAdditions)
- (void)_saveSortedAccounts;
- (BOOL)save;
- (void)_sortAccounts;
- (BOOL)load;
@end

@interface IMAccountController (NSTableViewDataSourceMethods)
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
@end

@interface IMAccountController (NSTableViewDelegateMethods)
- (BOOL)tableView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
@end

@interface IMAccountController (SortingAdditions)
- (id)sortOrderForAccounts:(id)arg1;
@end

@interface IMAccountController (SwitchToMenuDelegate)
- (void)toggleAccountConnection:(id)arg1;
- (long long)_numberOfRealItems;
- (long long)numberOfItemsInMenu:(id)arg1;
- (BOOL)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
@end

@interface IMFileTransferCenter (Scripting)
- (id)allTransfers;
@end

@interface IMHandle (IMHandle_Additions)
- (id)URLForIM;
@end

@interface IMHandle (PresentityAdditions)
+ (void)_loadStatusImages;
+ (id)invisibleImageName;
+ (id)invisibleStatusImage;
+ (id)etchedInvisibleStatusImage;
+ (id)imageForStatus:(unsigned long long)arg1;
+ (id)etchedImageForStatus:(unsigned long long)arg1;
+ (BOOL)usesAlternateStatusImages;
+ (void)setUsesAlternateStatusImages:(BOOL)arg1;
+ (id)anonymousPicture;
+ (id)genericPicture;
- (BOOL)blockingIMHandlePictures;
- (void)setBlockingIMHandlePictures:(BOOL)arg1;
- (id)smallStatusIcon;
- (id)image;
- (BOOL)hasPicture;
- (id)currentFontColor;
- (id)currentBackgroundColor;
- (id)mobileSiblings;
@end

@interface IMHandle (SampleIMHandleAdditions)
+ (id)sampleIMHandle;
+ (id)fakeMeHandle;
@end

@interface IMHandle (Scripting)
- (id)uniqueId;
- (id)scriptAccountName;
- (id)scriptAccountLegacyName;
- (id)scriptName;
- (id)scriptIdleTime;
- (id)scriptStatusMessage;
- (id)scriptStatus;
- (id)scriptImage;
- (id)scriptCaps;
- (id)scriptGroups;
- (id)scriptFirstName;
- (id)scriptLastName;
- (id)scriptFullName;
- (id)scriptService;
- (id)objectSpecifier;
- (void)inviteScriptCommand:(id)arg1;
@end

@interface IMMe (BuddyPictureAdditions)
- (id)myPicture;
- (id)picture;
- (id)image;
- (void)setPicture:(id)arg1;
- (id)balloonColor;
@end

/*@interface IndexChanged : QCPlugIn
{
    unsigned long long _previousIndex;
}

+ (int)executionMode;
+ (int)timeMode;
+ (id)attributes;
- (id)init;
- (BOOL)execute:(id)arg1 atTime:(double)arg2 withArguments:(id)arg3;

@end*/

@interface InputArea : NSView
{
    NSView *_minibar;
    AnimatingTabView *_tabView;
    NSButton *_vcInviteButton;
    NSButton *_vcAcceptFromTextButton;
    NSButton *_vcAcceptVCOnlyButton;
    double _minHeight;
    long long _mode;
}

- (void)awakeFromNib;
- (void)_setTabViewStretchy:(BOOL)arg1;
- (double)setMode:(long long)arg1;
- (long long)mode;
- (double)minHeight;
- (id)tabView;
- (void)tabView:(id)arg1 willSwitchFromTab:(long long)arg2 toTab:(long long)arg3 effect:(int *)arg4 direction:(int *)arg5;
- (void)tabViewTransitionWillBegin:(id)arg1;
- (void)tabViewTransitionDidFinish:(id)arg1;

@end

@interface InstantMessage : BaseInstantMessage
{
    NSMutableAttributedString *_attributedSummaryString;
    NSMutableAttributedString *_textWithAppAttributes;
    BOOL _didHighlightMyName;
    BOOL _didRunSmilifier;
}

- (void)dealloc;
- (void)_upgradeText;
- (id)text;
- (id)summaryString;
- (BOOL)isAddressedToMe;
- (id)attributedSummaryString;
- (void)setBackgroundColor:(id)arg1;
- (void)highlightMyNameAtRange:(struct _NSRange)arg1;
- (void)useScriptReplacementText:(id)arg1;
- (BOOL)applyDataDetectorResults:(id)arg1;

@end

@interface InstantPopUpSegementedControlCell : NSSegmentedCell
{
    long long _segmentToToggle;
}

- (void)_commonCellInit;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)setSegmentToAllowToggle:(long long)arg1;
- (id)_segmentsDeselectedBySegment:(long long)arg1;
- (double)_menuDelayTimeForSegment:(long long)arg1;
- (long long)interiorBackgroundStyleForSegment:(long long)arg1;

@end

@interface InviteCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface KeyWindow : NSWindow
{
}

- (BOOL)canBecomeKeyWindow;

@end

@interface LinkSheetController : NSObject
{
    NSPanel *_linkSheet;
    ExtendedTextField *_linkTextField;
    ExtendedTextField *_linkTitleTextField;
    NSButton *_okButton;
    NSString *_link;
    NSString *_title;
    NSTextView *_textView;
}

- (id)init;
- (void)awakeFromNib;
- (void)dealloc;
- (id)_title;
- (void)_setTitle:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)showLinkSheetForTextView:(id)arg1 onWindow:(id)arg2;
- (void)_linkSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)acceptLinkText:(id)arg1;
- (void)cancelLinkSheet:(id)arg1;
- (void)removeLinkSheet:(id)arg1;

@end

@interface MessageEditorController : NSObject
{
    NSWindow *_window;
    CustomMessageTableView *_availableTable;
    CustomMessageTableView *_awayTable;
    NSButton *_availableAddButton;
    NSButton *_awayAddButton;
    NSButton *_availableRemoveButton;
    NSButton *_awayRemoveButton;
    NSButton *_autoCreateCheckbox;
    NSPopUpButton *_rememberLastPopup;
    NSMutableArray *_availableMessages;
    NSMutableArray *_awayMessages;
    NSMutableArray *_previousAvailableMessages;
    NSMutableArray *_previousAwayMessages;
    NSString *_messageToSet;
    BOOL _setMessage;
    unsigned long long _startingStatus;
    NSArray *_accounts;
}

- (void)_statusIndicatorDidChange:(id)arg1;
- (void)awakeFromNib;
- (void)dealloc;
- (id)currentMessage;
- (void)setCurrentStatus:(unsigned long long)arg1 andMessage:(id)arg2;
- (void)runAsSheetInWindow:(id)arg1 forAccounts:(id)arg2;
- (void)_trimList:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)endSheet:(id)arg1;
- (id)availableMessages;
- (id)awayMessages;
- (void)setAvailableMessages:(id)arg1;
- (void)setAwayMessages:(id)arg1;
- (void)_determineList:(id *)arg1 andTable:(id *)arg2 toUseForStatus:(unsigned long long)arg3;
- (void)newItem:(id)arg1;
- (void)removeItems:(id)arg1;
- (void)autoCreateChecked:(id)arg1;
- (void)changeNumberOfRememberedMessages:(id)arg1;
- (int)numberOfRowsInTableView:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(int)arg3;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(int)arg4;
- (BOOL)tableView:(id)arg1 canDeleteRows:(id)arg2;
- (BOOL)tableView:(id)arg1 deleteRows:(id)arg2;
- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(int)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(int)arg3 dropOperation:(unsigned long long)arg4;

@end

@interface ModifierTabView : AnimatingTabView
{
    unsigned int _modifierFlags[5];
    BOOL _disabled;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)_updateNotification;
- (void)_flagsChanged:(id)arg1;
- (void)setModifierFlags:(unsigned int [5])arg1;
- (void)setStandardFlags;
- (unsigned int *)modifierFlags;
- (void)setDisabled:(BOOL)arg1;
- (BOOL)isDisabled;
- (id)tabViewItemForFlags:(unsigned int)arg1;

@end

@interface MsgComposePrefsBox : NSBox
{
    Prefs_MsgCompose *_prefsManager;
}

- (unsigned long long)validModesForFontPanel:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)changeColor:(id)arg1;
- (void)changeAttributes:(id)arg1;
- (void)changeFont:(id)arg1;
- (void)setTranscriptStyleFromMenuItem:(id)arg1;
- (void)setChatShowsNames:(id)arg1;
- (void)setChatShowsNamesAndPictures:(id)arg1;
- (void)setChatShowsPictures:(id)arg1;
- (void)toggleHideSmileys:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;

@end

@interface MultiBuddyImageView : NSView
{
    NSArray *_imHandles;
    unsigned long long _curImage;
    unsigned long long _oldImage;
    double _opacity;
    BOOL _transitionPending;
    BOOL _animateBuddyIcon;
    Animator *_animator;
}

- (void)_commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)_pictureChanged:(id)arg1;
- (void)_subscribe:(BOOL)arg1;
- (void)setIMHandle:(id)arg1;
- (void)setIMHandles:(id)arg1;
- (void)setAllowsBuddyIconAnimation:(BOOL)arg1;
- (BOOL)allowsBuddyIconAnimation;
- (void)_needsDrawFromAnimate:(id)arg1;
- (void)setOpacity:(float)arg1;
- (float)opacity;
- (void)_nextImage;
- (void)_startTransition;
- (void)_delayTransition;
- (void)animator:(id)arg1 doStep:(double)arg2 lastStep:(BOOL)arg3;
- (void)startCycling;
- (void)stopCycling;
- (void)_drawPicture:(id)arg1 fraction:(float)arg2;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface RolloverButton : NSControl
{
    NSTextFieldCell *_messageCell;
    NSPopUpButtonCell *_popUpButtonCell;
    NSPopUpButtonCell *_triangleCell;
    NSString *_message;
    unsigned long long _alignment;
    unsigned long long _imagePosition;
    long long _trackingRectTag;
    id _target;
    SEL _action;
    id <RolloverButtonDelegate> _delegate;
    struct CGRect _activeRect;
    struct CGSize _triangleSize;
    float _cornerRadius;
    int _leftMargin;
    int _rightMargin;
    BOOL _showDropDownArrow;
    BOOL _rollsOver;
    BOOL _toggles;
    BOOL _mouseOver;
    BOOL _mouseDown;
    BOOL _state;
}

+ (Class)cellClass;
+ (id)_lineBreakAttributes;
- (void)setShowsDropDownArrow:(BOOL)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_startNotifications;
- (void)_stopNotifications;
- (void)awakeFromNib;
- (void)dealloc;
- (id)customCell;
- (void)setToggles:(BOOL)arg1;
- (BOOL)toggles;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setState:(BOOL)arg1;
- (BOOL)state;
- (void)setImagePosition:(unsigned long long)arg1;
- (unsigned long long)alignment;
- (void)setAlignment:(unsigned long long)arg1;
- (id)target;
- (void)setTarget:(id)arg1;
- (SEL)action;
- (void)setAction:(SEL)arg1;
- (void)clearActiveRect;
- (void)updateActiveRect;
- (id)menu;
- (void)addMenuItem:(id)arg1;
- (void)resetMenu;
- (struct CGRect)messageRect;
- (struct CGRect)triangleRect;
- (struct CGRect)fittedRect;
- (struct CGRect)_popupRect;
- (void)_resizeEditingIfNeeded;
- (float)bgTextColorForRollover:(BOOL)arg1;
- (float)fgTextColorForRollover:(BOOL)arg1;
- (void)drawTitleInRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)canBecomeKeyView;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (id)menuForEvent:(id)arg1;
- (void)_runPopUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)setRollsOver:(BOOL)arg1;
- (BOOL)rollsOver;
- (void)_removeTrackingRect;
- (void)updateTrackingAreas;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)refreshTracking;
- (void)viewDidMoveToSuperview;
- (void)windowDidResize:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)setAttributedTitle:(id)arg1;
- (id)title;
- (void)setTitle:(id)arg1;
- (void)setStringValue:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)becomeFirstResponder;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)performClick:(id)arg1;
- (id)accessibilityActionNames;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsIgnored;

@end

@interface MyNameControl : RolloverButton
{
    float _heightOffset;
}

- (void)awakeFromNib;
- (void)setHeightOffset:(float)arg1;
- (float)heightOffset;
- (void)drawTitleInRect:(struct CGRect)arg1;

@end

@interface MyPictureControl : FezImageView
{
    NSArray *_accounts;
    NSImageCell *_dropDownIndicatorCell;
    int _trackingRectTag;
    BOOL _mouseOver;
}

+ (void)openGenericPicturePicker;
+ (void)_ikPictureTakerClosed:(id)arg1;
+ (void)_configureDefaultImagePicker;
+ (void)_ensurePickerConfiguredWithGenericImage:(id)arg1;
+ (BOOL)usePictureTaker;
+ (void)_updatePickerWithPicture:(id)arg1;
+ (id)videoFrameProviderForPictureTaker:(id)arg1;
+ (void)_centerPickerInWindow:(id)arg1;
+ (void)_openPicturePickerOn:(id)arg1 asDownload:(BOOL)arg2 genericImage:(id)arg3;
+ (void)_showMenuInView:(id)arg1;
+ (void)pictureTaker:(id)arg1 willOpenOnImage:(id)arg2 contextInfo:(void *)arg3;
+ (void)pictureTakerDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)awakeFromNib;
- (void)setAccounts:(id)arg1;
- (id)accounts;
- (void)dealloc;
- (void)_updateUI;
- (void)_myPictureChanged:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)_needsDrawFromAnimate:(id)arg1;
- (id)_genericPickerImage;
- (void)openPicturePicker;
- (void)openPicturePickerWithDownloadedImage:(id)arg1;
- (void)_setImageAndNotifyTarget:(id)arg1;
- (void)_updateTrackingRect;
- (void)setFrame:(struct CGRect)arg1;
- (void)windowDidResize:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)mouseDown:(id)arg1;
- (void)performClick:(id)arg1;
- (id)accessibilityActionNames;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityTitleAttribute;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsIgnored;

@end

@interface MyProfileTextView : NSTextView
{
    LinkSheetController *_linkSheetController;
}

- (void)changeDocumentBackgroundColor:(id)arg1;
- (void)orderFrontLinkPanel:(id)arg1;
- (void)dealloc;

@end

@interface MyProfileWindow : NSWindowController <NSTextViewDelegate, NSWindowRestoration>
{
    NSColorWell *_backgoundColorWell;
    MyProfileTextView *_profileText;
    NSAttributedString *_originalString;
    NSColor *_originalColor;
    BOOL _isDirty;
    BOOL _isSaving;
}

+ (void)showWindow;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
- (void)showWindow:(id)arg1;
- (id)init;
- (BOOL)dirty;
- (void)setDirty:(BOOL)arg1;
- (void)_updateProfile;
- (void)windowDidLoad;
- (void)awakeFromNib;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)_textDidChange:(id)arg1;
- (void)_errorSheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (unsigned long long)validModesForFontPanel:(id)arg1;
- (BOOL)_showErrorSheetTitle:(id)arg1 text:(id)arg2 helpAnchor:(id)arg3;
- (void)confirmSheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)_showCloseConfirmationSheet;
- (BOOL)windowShouldClose:(id)arg1;
- (void)_handleErrorPosted:(id)arg1;
- (void)finish:(id)arg1;
- (void)_reallyFinish;
- (void)cancel:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)changeBackgroundColor:(id)arg1;
- (void)changeTextFont:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)dealloc;
- (void)insertSmiley:(id)arg1;
- (void)addLink:(id)arg1;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
- (BOOL)saving;
- (void)setSaving:(BOOL)arg1;

@end

@interface MyScrollView : NSScrollView
{
}

- (void)awakeFromNib;
- (void)viewDidEndLiveResize;

@end

@interface MyScroller : NSScroller
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MyStatusControl : RolloverButton
{
    id <MyStatusControlDelegate> _statusDelegate;
    int _currentStatus;
    int _oldStatus;
    BOOL _isiTunesMessage;
}

+ (BOOL)stringIsStatusType:(id)arg1;
- (void)dealloc;
- (void)viewDidMoveToWindow;
- (void)awakeFromNib;
- (void)setStatus:(int)arg1 message:(id)arg2;
- (void)addMenuItemForInvisible;
- (void)addMenuItemForITunesStatus;
- (void)addMenuItemsForStatus:(int)arg1 customizable:(BOOL)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (void)setStatusAndMessage:(id)arg1;
- (void)setInvisibleStatus:(id)arg1;
- (void)_startEditingCurrentStatus;
- (void)startEditingCurrentStatus;
- (void)customStatusAndMessage:(id)arg1;
- (BOOL)textShouldBeginEditing:(id)arg1;
- (BOOL)textShouldEndEditing:(id)arg1;
- (void)_revertToOldStatus;
- (void)textDidEndEditing:(id)arg1;
- (void)_windowResignedKey:(id)arg1;
- (float)_bgTextColorForRollover:(BOOL)arg1;
- (float)_fgTextColorForRollover:(BOOL)arg1;
- (void)setCurrentMessage:(id)arg1;
- (void)setTitle:(id)arg1;
- (id)currentMessage;
- (int)currentStatus;
- (void)setCurrentStatus:(int)arg1;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)textDidChange:(id)arg1;
- (void)editMessageField:(BOOL)arg1;
- (void)setStatusDelegate:(id)arg1;
- (id)statusDelegate;
- (id)accessibilityTitleAttribute;
- (id)accessibilityDescriptionAttribute;

@end

@interface MyStatusImageControl : NSView
{
    NSExtendedImageView *_statusImage;
    ErrorButton *_errorButton;
    id _target;
    SEL _action;
    BOOL _isShowingDisconnectedButton;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
@property(nonatomic, assign) id target; // @synthesize target=_target;
@property(nonatomic) SEL action; // @synthesize action=_action;
- (void)_showErrorButtonWithState:(long long)arg1;
- (void)showStatusImage:(id)arg1;
- (void)showErrorButtonAsDisconnection;
- (void)showErrorButtonAsAlert;
- (void)setAccessibilityValue:(id)arg1;

@end

@interface NSAlert (iChatAlertAdditions)
+ (void)beginAlertSheetWithMessage:(id)arg1 text:(id)arg2 defaultButton:(id)arg3 alternateButton:(id)arg4 otherButton:(id)arg5 helpAnchor:(id)arg6 audibleAlert:(BOOL)arg7 documentWindow:(id)arg8 alertStyle:(unsigned long long)arg9 delegate:(id)arg10 didEndSelector:(SEL)arg11 didDismissSelector:(SEL)arg12 contextInfo:(void *)arg13;
+ (void)beginAlertSheetWithMessage:(id)arg1 text:(id)arg2 helpAnchor:(id)arg3;
+ (void)beginAlertSheetWithMessage:(id)arg1 text:(id)arg2;
+ (void)beginAlertSheetWithMessage:(id)arg1 text:(id)arg2 documentWindow:(id)arg3;
+ (void)beginAlertSheetWithMessage:(id)arg1 text:(id)arg2 helpAnchor:(id)arg3 documentWindow:(id)arg4;
+ (int)runAlertSheetWithMessage:(id)arg1 text:(id)arg2 defaultButton:(id)arg3 alternateButton:(id)arg4 otherButton:(id)arg5 helpAnchor:(id)arg6 audibleAlert:(BOOL)arg7 alertStyle:(unsigned long long)arg8;
+ (int)runAlertSheetWithMessage:(id)arg1 text:(id)arg2 helpAnchor:(id)arg3;
+ (int)runAlertSheetWithMessage:(id)arg1 text:(id)arg2;
@end

@interface NSAppleScript (iChatAdditionsCopiedFromMessage)
+ (id)_newScriptAtPath:(id)arg1 errorInfo:(id *)arg2;
+ (id)executeHandlerWithEventClass:(unsigned int)arg1 eventID:(unsigned int)arg2 inScriptAtPath:(id)arg3 withArguments:(id)arg4 forEvent:(int)arg5 forIMHandle:(id)arg6 usingGlobalPrefs:(BOOL)arg7 error:(id *)arg8;
- (id)executeHandlerWithEventClass:(unsigned int)arg1 eventID:(unsigned int)arg2 andArguments:(id)arg3 error:(id *)arg4;
@end

@interface NSApplication (Scripting)
- (void)loginScriptCommand:(id)arg1;
- (void)logoutScriptCommand:(id)arg1;
- (void)showChatChooserCommand:(id)arg1;
- (void)storeRecentPictureCommand:(id)arg1;
- (void)inviteScriptCommand:(id)arg1;
- (void)setMyStatus:(id)arg1;
- (id)myStatus;
- (void)setMyStatusMessage:(id)arg1;
- (id)myStatusMessage;
- (id)myIdleTime;
- (void)setMyImage:(id)arg1;
- (id)myImage;
- (id)scriptActiveAVChat;
- (id)buddies;
- (id)valueInBuddiesWithName:(id)arg1;
- (id)valueInBuddiesWithUniqueID:(id)arg1;
- (id)services;
- (id)valueInServicesWithUniqueID:(id)arg1;
- (id)valueInServicesWithName:(id)arg1;
- (id)scriptFileTransfers;
- (id)objectInScriptFileTransfersAtIndex:(unsigned long long)arg1;
- (id)valueInScriptFileTransfersWithUniqueID:(id)arg1;
- (id)scriptChats;
- (id)objectInScriptChatsAtIndex:(unsigned long long)arg1;
- (id)valueInScriptChatsWithUniqueID:(id)arg1;
- (id)valueInScriptChatsWithName:(id)arg1;
- (id)scriptAVChats;
- (id)objectInScriptAVChatsAtIndex:(unsigned long long)arg1;
- (id)valueInScriptAVChatsWithUniqueID:(id)arg1;
- (id)scriptAudioChats;
- (id)objectInScriptAudioChatsAtIndex:(unsigned long long)arg1;
- (id)valueInScriptAudioChatsWithUniqueID:(id)arg1;
- (id)scriptVideoChats;
- (id)objectInScriptVideoChatsAtIndex:(unsigned long long)arg1;
- (id)valueInScriptVideoChatsWithUniqueID:(id)arg1;
- (id)scriptTextChats;
- (id)objectInScriptTextChatsAtIndex:(unsigned long long)arg1;
- (id)valueInScriptTextChatsWithUniqueID:(id)arg1;
- (id)valueInScriptTextChatsWithName:(id)arg1;
- (id)scriptAuthorizationRequests;
- (id)objectInScriptAuthorizationRequestsAtIndex:(unsigned long long)arg1;
- (id)valueInScriptAuthorizationRequestsWithUniqueID:(id)arg1;
@end

@interface NSArray (FezSearchExtensions)
- (unsigned long long)indexOfObject:(id)arg1 usingComparator:(SEL)arg2;
@end

@interface NSArray (IMHandle_Additions)
- (id)URLForChatRoom;
- (id)URLForIMOrChatRoom;
@end

@interface NSArray (StringJoiningAdditinos)
- (id)fezComponentsJoinedIntoListWithMaxItems:(int)arg1;
@end

@interface NSAttributedString (ChatFieldAdditions)
+ (id)stringStoredIn:(id)arg1;
- (id)unfixedAttributedString;
- (id)storableFormat;
@end

@interface NSBezierPath (DebuggingAdditions)
- (void)drawControlPoint1:(struct CGPoint)arg1 controlPoint2:(struct CGPoint)arg2 color:(id)arg3;
@end

@interface NSControl (TextFieldCellAdditions)
- (void)setRomanOnly:(BOOL)arg1;
- (BOOL)isRomanOnly;
@end

@interface NSData (Scripting)
+ (id)scriptingImageWithDescriptor:(id)arg1;
+ (id)scriptingTiffPictureWithDescriptor:(id)arg1;
- (id)scriptingImageDescriptor;
- (id)scriptingTiffPictureDescriptor;
@end

@interface NSDictionary (CompositionAdditions)
@property(readonly) NSString *identifier;
@property(readonly) NSString *localizedName;
@property(readonly) NSDictionary *attributes;
@property(readonly) BOOL wantsSlider;
@property(readonly) BOOL backdropsEnabled;
@property(readonly) NSString *backdropsForegroundPath;
@property(readonly) NSString *backdropsBackgroundPath;
@property(readonly) BOOL allowDragAndDrop;
@end

@interface NSDictionary (TheaterAppURL)
- (long long)compareAppNames:(id)arg1;
@end

@interface NSExtendedBox : NSBox
{
    BOOL _isNewAquaDivider;
    BOOL _isAudioDivider;
    BOOL _isLeopardDivider;
    BOOL _isVideoBorder;
    BOOL _isSingleLineDivider;
    BOOL _isNetworkTab;
    NSColor *_interiorColor;
    BOOL _fadeToSecondaryInteriorColor;
    BOOL _fadeToSecondaryInteriorColorVertically;
    NSColor *_secondaryInteriorColor;
    float _lengthForFadeToSecondaryInteriorColor;
    BOOL _drawGradient;
    NSString *_string;
    NSString *_shortString;
    BOOL _drawRoundedBox;
    NSColor *_roundedBoxBorderColor;
    NSColor *_roundedBoxInteriorColor;
    BOOL _isOpaque;
    float _opacity;
    float _radius;
    NSImage *_backgroundImage;
}

+ (void)initialize;
+ (id)_titleAttributes;
+ (id)_titleDisabledAttributes;
+ (id)_titleShadowAttributes;
+ (void)_setShadowStyle;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (void)setSingleLineDivider:(BOOL)arg1;
- (BOOL)singleLineDivider;
- (void)setIsNewAquaDivider:(BOOL)arg1;
- (BOOL)isNewAquaDivider;
- (void)setBackgroundImage:(id)arg1;
- (id)backgroundImage;
- (void)setIsNetworkTab:(BOOL)arg1;
- (BOOL)isNetworkTab;
- (void)setRadius:(float)arg1;
- (float)radius;
- (void)setOpacity:(float)arg1;
- (float)opacity;
- (void)setDrawsRoundedBox:(BOOL)arg1;
- (BOOL)drawsRoundedBox;
- (void)setRoundedBoxBorderColor:(id)arg1;
- (id)roundedBoxBorderColor;
- (void)setRoundedBoxInteriorColor:(id)arg1;
- (id)roundedBoxInteriorColor;
- (BOOL)isLeopardDivider;
- (void)setIsLeopardDivider:(BOOL)arg1;
- (void)setIsAudioDivider:(BOOL)arg1;
- (BOOL)isAudioDivider;
- (void)setIsVideoBorder:(BOOL)arg1;
- (BOOL)isVideoBorder;
- (void)setInteriorColor:(id)arg1;
- (void)setFadeToSecondaryInteriorColor:(BOOL)arg1;
- (BOOL)fadeToSecondaryInteriorColor;
- (void)setFadeToSecondaryInteriorColorVertically:(BOOL)arg1;
- (BOOL)fadeToSecondaryInteriorColorVertically;
- (void)setSecondaryInteriorColor:(id)arg1;
- (id)secondaryInteriorColor;
- (void)setLengthForFadeToSecondaryInteriorColor:(float)arg1;
- (float)lengthFoFadeToSecondaryInteriorColorLength;
- (void)setDrawGradient:(BOOL)arg1;
- (BOOL)drawGradient;
- (id)interiorColor;
- (void)setShortStringValue:(id)arg1;
- (id)shortStringValue;
- (void)setStringValue:(id)arg1;
- (id)stringValue;
- (void)setIsOpaque:(BOOL)arg1;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface NSExtendedComboBoxCell : NSComboBoxCell
{
    BOOL _drawPopUpButton;
    NSTextFieldCell *_textFieldCell;
}

- (void)dealloc;
- (void)setPopUpButtonVisible:(BOOL)arg1;
- (BOOL)isPopUpButtonVisible;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (struct CGRect)boundsForTextCell:(struct CGRect)arg1;
- (struct CGRect)boundsForButtonCell:(struct CGRect)arg1;
- (float)_buttonWidth;

@end

@interface NSExtendedImageView : NSImageView
{
    BOOL _mouseDownCanMoveWindow;
}

- (BOOL)mouseDownCanMoveWindow;
- (void)setMouseDownCanMoveWindow:(BOOL)arg1;

@end

@interface NSFileManager (UserFolders)
+ (id)userDownloadsFolder;
+ (id)userDesktopFolder;
- (id)firstValidDirectory:(id)arg1;
@end

@interface NSImage (FadeDrawingAdditions)
+ (id)gradientOfSize:(struct CGSize)arg1 topBorder:(id)arg2 top:(id)arg3 bottom:(id)arg4 bottomBorder:(id)arg5;
- (void)drawFadeAtPoint:(struct CGPoint)arg1 fromRect:(struct CGRect)arg2 start:(float)arg3 end:(float)arg4;
@end

@interface NSMenu (FezUtilAdditions)
- (void)updateSeparatorVisibility;
@end

@interface NSMenu (NSMenuItemReplacementAdditions)
- (void)replaceItem:(id)arg1 withItem:(id)arg2;
@end

@interface NSMutableAttributedString (FezCharAdditions)
- (void)setMaxCharacterWidth:(int)arg1;
@end

@interface NSObject (FezExtendedTableViewDataSource)
- (BOOL)tableView:(id)arg1 canPasteFromPasteboard:(id)arg2;
- (BOOL)tableView:(id)arg1 pasteFromPasteboard:(id)arg2;
- (BOOL)tableView:(id)arg1 canDeleteRows:(id)arg2;
- (BOOL)tableView:(id)arg1 deleteRows:(id)arg2;
- (void)tableView:(id)arg1 performDragOperation:(unsigned long long)arg2 withPasteboard:(id)arg3;
- (BOOL)tableView:(id)arg1 groupRowAtIndex:(long long)arg2;
- (unsigned long long)tableView:(id)arg1 groupRowGreaterThanIndex:(unsigned long long)arg2;
- (id)tableView:(id)arg1 titleForGroupRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 prepareTooltip:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 numberStringForGroupRow:(long long)arg2 ignoreCollapsed:(BOOL)arg3;
- (void)tableView:(id)arg1 groupRowClicked:(long long)arg2;
- (id)tableView:(id)arg1 menuForGroupRow:(long long)arg2;
- (void)tableView:(id)arg1 willReturnMenu:(id)arg2 forRow:(long long)arg3;
- (void)tableView:(id)arg1 mouseExited:(id)arg2;
- (void)tableView:(id)arg1 mouseEntered:(id)arg2;
- (void)tableView:(id)arg1 mouseMoved:(id)arg2;
- (BOOL)tableView:(id)arg1 shouldStartDraggingForGroupRow:(long long)arg2;
- (void)tableView:(id)arg1 dragStarted:(id)arg2 originPoint:(struct CGPoint)arg3;
- (void)tableViewTrackingChanged:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldDrawWhenMovingFrom:(struct CGPoint)arg2 toPoint:(struct CGPoint)arg3;
- (id)tableView:(id)arg1 cellTipForRow:(long long)arg2;
- (id)tableView:(id)arg1 tooltipForRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldShowTooltipForRow:(long long)arg2;
@end

@interface NSObject (MainThreadKVO)
- (void)observeValueForKeyPathOnMainThread:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_observeValueForKeyPathOnMainThread:(id)arg1;
- (void)performObserveValueForKeyPathOnMainThread:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@end

@interface NSObject (VirtualScreenNotifications)
- (void)registerForVirtualScreenChangedNotificiations;
- (void)unregisterForVirtualScreenChangedNotificiations;
- (void)postVirtualScreenChangedNotificiation:(int)arg1;
- (void)_handleVirtualScreenChangedNotificiations:(id)arg1;
- (void)handleVirtualScreenChangedNotificiation:(int)arg1;
@end

@interface NSOpenGLContext (FezAdditions)
- (id)initWithCompatibleFormatIncluding:(int *)arg1 shareContext:(id)arg2;
@end

@interface NSOpenGLContext (QCSharedContext)
+ (id)_sharedQCCGLContext;
+ (id)sharedContext;
+ (BOOL)isCoreImageAccelerated;
+ (BOOL)supportsAcceleratedEffects;
+ (BOOL)supportsBackdrops;
@end

@interface NSOpenGLContext (VirtualScreenNotifications)
+ (int)currentPreferedVirtualScreen;
- (void)handleVirtualScreenChangedNotificiation:(int)arg1;
@end

@interface NSOpenGLPixelFormat (FezAdditions)
+ (id)compatiblePixelFormatIncludingAttributes:(int *)arg1 forContext:(id)arg2;
@end

@interface NSOpenPanel (FezUtilAdditions)
- (id)fez_filenames;
@end

@interface NSPasteboard (FezUtilAdditions)
+ (id)pasteboardTypeFromCarbonDragFlavor:(unsigned int)arg1;
+ (id)dropDirectory;
- (id)_URLsFromiTunesDrag:(id)arg1;
- (id)filePaths;
- (id)fileURLs;
- (id)imageURL;
- (BOOL)hasFilenames;
- (BOOL)hasFilePathsOrImage;
- (BOOL)hasTextClipping;
- (BOOL)hasRichText;
- (BOOL)hasWebloc;
- (BOOL)hasURL;
- (BOOL)hasPlainText;
@end

@interface NSPreferences (PrivateOverrides)
- (id)currentModule;
@end

@interface NSPreferencesModule (PrivateImpls)
- (void)setMinSize:(struct CGSize)arg1;
@end

@interface NSRecursiveLock (PrivateAdditions)
- (BOOL)lockBeforeTimeout:(double)arg1 fromLine:(int)arg2;
- (void)unlockFromLine:(int)arg1;
@end

@interface NSSavePanel (FezUtilAdditions)
- (id)fez_filename;
@end

@interface NSSavePanel (HackToGetTheOKButton)
- (id)okButton;
@end

@interface NSScreen (CaptureAdditions)
+ (id)screenWithMenu;
+ (void)captureAllScreens;
+ (void)uncaptureAllScreens;
- (unsigned int)deviceID;
- (BOOL)capture;
- (BOOL)uncapture;
@end

@interface NSScreen (FezExtensions)
+ (id)screenForRect:(struct CGRect)arg1;
+ (struct CGPoint)coreGraphicsScreenPointForAppKitScreenPoint:(struct CGPoint)arg1;
- (unsigned int)directDisplayID;
@end

@interface NSSegmentedControl (AccessibilityAdditions)
- (void)setAccessibilityDescription:(id)arg1 forSegment:(int)arg2;
@end

@interface NSSet (FastIMHandleCompareAdditions)
- (BOOL)fastIsEqualToPointerCompareSet:(id)arg1;
@end

@interface NSSound (iChatSoundAdditions)
+ (id)systemLibrarySoundsDirs;
+ (id)librarySoundsDirs;
+ (id)networkLibrarySoundsDirs;
+ (id)tildeLibrarySoundsDirs;
+ (id)appendSoundsToPaths:(id)arg1;
@end

@interface NSSoundPopUpButton : NSPopUpButton <NSSoundDelegate>
{
    NSButton *addSoundButton;
    NSButton *removeSoundButton;
    NSButton *doneButton;
    NSTableView *soundTableView;
    NSMutableArray *userSounds;
    NSPanel *soundPanel;
    id delegate;
    NSMenu *soundMenu;
    NSString *_selectedItem;
    NSMenuItem *_otherItem;
    BOOL _amIAwake;
    BOOL _showSoundsFromBundle;
    BOOL _showSoundsFromDelegate;
    BOOL _showSoundsFromSystemLibrary;
    BOOL _showSoundsFromLibrary;
    BOOL _showSoundsFromNetworkLibrary;
    BOOL _showSoundsFromTildeLibrary;
    BOOL _showNone;
    BOOL _showAddRemove;
    NSSound *_currentSound;
}

+ (id)soundsAtPaths:(id)arg1;
- (void)_appendSoundsFromDirectories:(id)arg1;
- (void)_popupMenuChanged:(id)arg1;
- (void)_configureSoundMenu;
- (void)_playSound;
- (void)sound:(id)arg1 didFinishPlaying:(BOOL)arg2;
- (void)_playSoundForItemAtIndex:(int)arg1;
- (void)_invalidateSoundMenu;
- (id)otherMenuItem;
- (void)_commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)awakeFromNib;
- (id)menu;
- (id)soundPath;
- (int)selectSoundPath:(id)arg1;
- (void)openPanelDidEnd:(id)arg1 returnCode:(int)arg2;
- (void)addRemoveMailSound:(id)arg1;
- (void)soundSheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)newSoundClicked:(id)arg1;
- (void)removeSoundClicked:(id)arg1;
- (void)doneClicked:(id)arg1;
- (int)numberOfRowsInTableView:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(int)arg3;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)showSoundsFromBundle;
- (void)setShowSoundsFromBundle:(BOOL)arg1;
- (BOOL)showSoundsFromDelegate;
- (void)setShowSoundsFromDelegate:(BOOL)arg1;
- (BOOL)showSoundsFromSystemLibrary;
- (void)setShowSoundsFromSystemLibrary:(BOOL)arg1;
- (BOOL)showSoundsFromLibrary;
- (void)setShowSoundsFromLibrary:(BOOL)arg1;
- (BOOL)showSoundsFromNetworkLibrary;
- (void)setShowSoundsFromNetworkLibrary:(BOOL)arg1;
- (BOOL)showSoundsFromTildeLibrary;
- (void)setShowSoundsFromTildeLibrary:(BOOL)arg1;
- (BOOL)showNone;
- (void)setShowNone:(BOOL)arg1;
- (BOOL)showAddRemove;
- (void)setShowAddRemove:(BOOL)arg1;
- (void)stopCurrentSound;
- (void)dealloc;
- (void)finalize;

@end

@interface NSString (FadeDrawingAdditions)
- (void)_rebuildFadeDrawingImageIfNeeded:(struct CGSize)arg1;
- (void)drawAtPoint:(struct CGPoint)arg1 fromBounds:(struct CGRect)arg2 fadeLeft:(int)arg3 fadeRight:(int)arg4 withAttributes:(id)arg5;
@end

@interface NSTextAttachment (FezUtilAdditions)
+ (id)attachmentForFileURL:(id)arg1;
@end

@interface NSTextField (AutoResize)
- (double)autosizeHeight;
@end

@interface NSTextField (FindPanelAdditions)
- (BOOL)isFirstResponder;
@end

@interface NSTextField (iChatAdditions)
- (float)autosizeWithStringValue:(id)arg1 resizeWindow:(BOOL)arg2 expandOnly:(BOOL)arg3;
- (BOOL)textIsNonEmpty;
- (id)rawAttributedStringValue;
@end

@interface NSTextFieldCell (TextFieldCellAdditions)
- (id)romanOnlyLocales;
- (BOOL)allowsOnlyRomanCharacters;
- (void)setAllowsOnlyRomanCharacters:(BOOL)arg1;
@end

@interface NSTextView (FezUtilAdditions)
- (BOOL)writeAttributedStringSelectionToPasteboard:(id)arg1;
- (BOOL)_pasteAttributedStringWithAttachments:(id)arg1 plainString:(id)arg2;
- (BOOL)_pasteAttributedString:(id)arg1 plainString:(id)arg2;
- (BOOL)pasteStringFromPasteboard:(id)arg1 withAttributes:(id)arg2;
- (BOOL)pasteFezIMFromPasteboard:(id)arg1;
- (BOOL)pasteRtfdFromPasteboard:(id)arg1;
- (BOOL)pasteRtfFromPasteboard:(id)arg1;
- (BOOL)pasteAttributedStringFromPasteboard:(id)arg1;
- (id)selectedLink_adjustingSelection:(BOOL)arg1;
- (void)applyLinkToSelection:(id)arg1 withText:(id)arg2;
- (BOOL)insertLinkAtSelection:(id)arg1 withText:(id)arg2;
@end

@interface NSTimer (FezUtilAdditions)
+ (id)weakTimerWithTimeInterval:(double)arg1 target:(id)arg2 selector:(SEL)arg3 userInfo:(id)arg4 repeats:(BOOL)arg5;
+ (id)scheduledWeakTimerWithTimeInterval:(double)arg1 target:(id)arg2 selector:(SEL)arg3 userInfo:(id)arg4 repeats:(BOOL)arg5;
@end

@interface NSUserDefaults (BackdropsPrefs)
- (void)setBackdropsBackgroundPath:(id)arg1 forKey:(id)arg2;
- (id)backdropsBackgroundPathForKey:(id)arg1;
@end

@interface NSUserDefaults (DeferredSavingAdditions)
- (BOOL)delayedSynchronize;
- (void)applicationWillTerminate:(id)arg1;
@end

@interface NSView (BalloonDrawingAdditions)
- (void)drawBalloonInRect:(struct CGRect)arg1 tailAtPoint:(struct CGPoint)arg2 withShadow:(id)arg3 fillColor:(id)arg4 strokeColor:(id)arg5 lineWidth:(float)arg6 curve:(float)arg7;
@end

@interface NSView (CollapseView_Additions)
- (void)_setAutoresizingVerticalMask:(long long)arg1;
@end

@interface NSView (FezUtilAdditions)
- (BOOL)flipContextIfNecessary;
- (void)unflipContext:(BOOL)arg1;
- (struct CGPoint)mouseLocationInView;
- (BOOL)mouseInRect:(struct CGRect)arg1;
- (BOOL)mouseInView;
- (void)_reposition:(long long)arg1;
- (void)bringToFront;
- (void)sendToBack;
- (void)setMaxX:(float)arg1;
- (void)setFocusRingNeedsDisplay;
- (struct CGPoint)mouseLocationOutsideOfEventStream;
- (BOOL)isOrContainsFirstResponder;
- (struct CGSize)constrainWindowSize:(struct CGSize)arg1 minSize:(struct CGSize)arg2 maxSize:(struct CGSize)arg3 aspectRatio:(struct CGSize)arg4 outset:(BOOL)arg5;
- (id)snapshotOfRect:(struct CGRect)arg1;
- (id)snapshotOfRect:(struct CGRect)arg1 forceFullDraw:(BOOL)arg2;
- (void)relayoutForRTL;
- (void)relayoutSubviewsForRTLIfNecessary;
- (void)relayoutSubviewsForRTLIfNecessaryRecursive;
@end

@interface NSView (NSViewShouldHaveAVisibleBitLikeEveryOtherFrameworkInExistance)
- (BOOL)visible;
- (void)setVisible:(BOOL)arg1;
@end

@interface NSView (QCRendererAdditions)
- (struct CGPoint)normalizedMouseLocationWithOptionalEvent:(id)arg1;
@end

@interface NSView (TemplateExtensions)
- (void)applyTemplateSubviews;
@end

@interface NSViewAnimation (iChatAdditions)
+ (id)animationWithDuration:(double)arg1 viewAnimations:(id)arg2;
+ (id)animationWithTarget:(id)arg1 toRect:(struct CGRect)arg2 effect:(id)arg3;
+ (id)animationWithTarget:(id)arg1 toRect:(struct CGRect)arg2;
+ (id)animationWithTarget:(id)arg1 fromRect:(struct CGRect)arg2 toRect:(struct CGRect)arg3;
+ (id)animationWithTarget:(id)arg1 fromRect:(struct CGRect)arg2 toRect:(struct CGRect)arg3 effect:(id)arg4;
+ (id)animationWithTarget:(id)arg1 effect:(id)arg2;
+ (id)animationWithTarget:(id)arg1 fromRect:(struct CGRect)arg2 toRect:(struct CGRect)arg3 effect:(id)arg4 startKey:(id)arg5 endKey:(id)arg6;
- (id)initWithDuration:(double)arg1 viewAnimations:(id)arg2;
@end

@interface NSWindow (FezAdditions)
+ (id)_snapshotView:(id)arg1;
- (void)bottomLeftAlignOnFirstScreen;
- (void)bottomAlignCenterOnFirstScreen;
- (void)centerOnFirstScreen;
- (struct CGPoint)_positionNextToWindow:(id)arg1 gapLeft:(float)arg2 right:(float)arg3 top:(float)arg4 bottom:(float)arg5;
- (void)positionRelativeToWindow:(id)arg1 gapLeft:(float)arg2 right:(float)arg3 top:(float)arg4 bottom:(float)arg5;
- (struct CGRect)frame:(struct CGRect)arg1 constrainedToScreen:(id)arg2;
- (void)setContentRelativeFrame:(struct CGRect)arg1 constrainedToScreen:(id)arg2 display:(BOOL)arg3 animate:(BOOL)arg4;
- (void)setContentRelativeFrame:(struct CGRect)arg1 constrainedToScreen:(id)arg2 display:(BOOL)arg3;
- (void)setContentRelativeFrame:(struct CGRect)arg1 constrainedToScreen:(id)arg2;
- (void)morphToFrame:(struct CGRect)arg1;
- (void)dragWithEvent:(id)arg1;
- (BOOL)hasVisibleDrawer;
- (float)minFrameWidthWithTitle:(id)arg1;
- (void)fixMaxWidth:(BOOL)arg1 height:(BOOL)arg2;
- (BOOL)screenHasMenubar;
- (BOOL)screenHasDock;
@end

@interface NSWindow (HiDPIAdditions)
+ (struct CGPoint)offsetOrigin:(struct CGPoint)arg1 relativeToWindow:(id)arg2 offsetAmount:(struct CGSize)arg3;
+ (struct CGPoint)originForWindow:(id)arg1 relativeToWindow:(id)arg2 afterOffset:(struct CGSize)arg3;
+ (struct CGRect)contentRelativeRectAdjustingOriginInRect:(struct CGRect)arg1 srcRect:(struct CGRect)arg2 srcWindow:(id)arg3;
- (void)positionRelativeToWindow:(id)arg1 offset:(struct CGSize)arg2;
- (void)offsetContentRelativeOrigin:(struct CGSize)arg1;
- (void)outsetContentRelativeLeft:(float)arg1 right:(float)arg2 top:(float)arg3 bottom:(float)arg4;
- (void)outsetContentRelativeLeft:(float)arg1 right:(float)arg2 top:(float)arg3 bottom:(float)arg4 display:(BOOL)arg5 animate:(BOOL)arg6;
- (struct CGRect)contentRelativeFrame;
- (struct CGSize)contentRelativeMinSize;
- (struct CGSize)contentRelativeMaxSize;
- (void)setContentRelativeFrame:(struct CGRect)arg1 display:(BOOL)arg2 animate:(BOOL)arg3;
- (void)setContentRelativeFrame:(struct CGRect)arg1 display:(BOOL)arg2 srcFrame:(struct CGRect)arg3;
- (void)setContentRelativeFrame:(struct CGRect)arg1 display:(BOOL)arg2;
- (void)setContentRelativeFrame:(struct CGRect)arg1;
- (void)setContentRelativeMinSize:(struct CGSize)arg1;
- (void)setContentRelativeMaxSize:(struct CGSize)arg1;
- (void)ensureEntirelyOnScreen;
- (struct CGRect)contentRelativeRectAdjustingOriginInRect:(struct CGRect)arg1;
- (void)setWindowBackgroundToLight;
- (void)setWindowBackgroundToDark;
- (void)makeUnresizable;
@end

@interface NSWindow (iChatFrameSavingAdditions)
- (void)saveWindowPositionUsingName:(id)arg1 saveWidth:(BOOL)arg2 saveHeight:(BOOL)arg3;
- (BOOL)hasSavedPositionUsingName:(id)arg1;
- (void)restoreWindowPositionUsingName:(id)arg1 restoreWidth:(BOOL)arg2 restoreHeight:(BOOL)arg3 defaultHeight:(int)arg4;
@end

@interface NSWindow (iChatWindowLocation)
+ (id)windowsWithOrigin:(struct CGPoint)arg1 screen:(id)arg2 withDelegateClass:(Class)arg3;
- (BOOL)makeNonDeferred;
- (struct CGImage *)createCGImageForRect:(struct CGRect)arg1 excludingChildWindows:(id)arg2;
- (id)imageForRect:(struct CGRect)arg1;
@end

/*@interface NSWindowGraphicsContext (CGLayerContext)
- (id)initWithCoreGraphicsContext:(struct CGContext *)arg1;
@end*/

@interface NSWorkspace (VideoConferencing)
+ (BOOL)isDockAutoHidden;
@end

@interface NameTableCell : NSActionCell
{
    PeopleList *_peopleList;
    BOOL _oneLine;
    BOOL _disabled;
    BOOL _usesLegacyScroller;
    int _imageIndex;
    struct CGRect _trackingRect;
    struct CGRect _cellTrackingFrame;
    BOOL _urlMouseDown;
    BOOL _urlMouseOver;
    BOOL _showVCIcons;
    BOOL _showArrow;
    BOOL _showColorHint;
}

+ (id)_lineBreakAttributes;
- (id)initWithPeopleList:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)_validStatusURL:(id)arg1;
- (void)_openURL;
- (BOOL)_tracking;
- (void)setShowsColorHint:(BOOL)arg1;
- (BOOL)showsColorHint;
- (void)setShowsArrow:(BOOL)arg1;
- (BOOL)showsArrow;
- (void)setShowVCIcon:(BOOL)arg1;
- (BOOL)showVCIcon;
- (void)setOneLine:(BOOL)arg1;
- (BOOL)oneLine;
- (void)setDisabled:(BOOL)arg1;
- (BOOL)isDisabled;
- (void)setUsesLegacyScroller:(BOOL)arg1;
- (id)_currentVCImage;
- (void)_setNoImage;
- (void)_setImageIsVideo:(BOOL)arg1 multiway:(BOOL)arg2 state:(int)arg3;
- (void)_setImageState:(int)arg1;
- (void)setNoImage;
- (BOOL)hasImage;
- (void)setImageIsVideo:(BOOL)arg1 multiway:(BOOL)arg2 state:(int)arg3;
- (void)setImageState:(int)arg1;
- (BOOL)imageIsVideo;
- (BOOL)imageIsMultiway;
- (int)imageState;
- (struct CGSize)vcImageSizeMultiway:(BOOL)arg1;
- (struct CGRect)vcRectForFrame:(struct CGRect)arg1 multiway:(BOOL)arg2;
- (struct CGRect)rectOfStatusImageWithFrame:(struct CGRect)arg1 inView:(id)arg2 usingStatusImageReference:(id)arg3;
- (struct CGRect)rectOfStatusImageWithFrame:(struct CGRect)arg1 inView:(id)arg2 forStatus:(unsigned long long)arg3;
- (id)imHandle;
- (id)peopleListItem;
- (void)_layoutInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2 urlRect:(struct CGRect *)arg3 layoutOnly:(BOOL)arg4;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (struct CGRect)urlRectForFrame:(struct CGRect)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_redisplay:(id)arg1;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (BOOL)startTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;
- (BOOL)continueTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityTitleAttribute;
- (id)accessibilityValueAttribute;

@end

@interface NewChatChooser : NSWindowController
{
    ShadowView *_shadowView;
    ServicePopUp *_accountPopup;
    NSButton *_cancelButton;
    FezImageView *_imageView;
    NSButton *_okButton;
    NSProgressIndicator *_progressIndicator;
    NSPopUpButton *_typePopup;
    StatusTokenFieldController *_tokenFieldController;
}

+ (void)_registerNewChooser:(id)arg1;
+ (void)_unregisterNewChooser:(id)arg1;
+ (BOOL)canOpenNewChat;
+ (void)openForIMHandles:(id)arg1;
+ (void)openForNewChatMode:(long long)arg1;
- (id)init;
- (void)dealloc;
- (void)awakeFromNib;
- (id)imHandles;
- (BOOL)setIMHandles:(id)arg1;
- (BOOL)setNewChatMode:(long long)arg1;
- (void)_ensureValidMenuItemSelected;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_validateChatButton;
- (void)_validateButtons;
- (void)__setBuddyPictures:(id)arg1;
- (void)_setBuddyPictures:(id)arg1;
- (void)_updateSelectedBuddyPictureWithIDs:(id)arg1;
- (void)statusTokenFieldDidChange:(id)arg1;
- (void)_targetIMHandleUpdated:(id)arg1;
- (void)_accountChanged:(id)arg1;
- (void)showWindow:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)cancelPressed:(id)arg1;
- (void)nameChanged:(id)arg1;
- (void)okPressed:(id)arg1;

@end

@interface NicelyScaledImageView : NSImageView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface NonKeyPanel : NSPanel
{
}

- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;

@end

@interface OpenGLLayer : NSObject
{
    NSString *_name;
    struct CGRect _layerFrame;
    float _opacity;
    unsigned char _flags;
    BOOL _isValid;
    BOOL _isVisible;
    float _topMargin;
    unsigned int _autoresizingMask;
    NSMutableArray *_sublayers;
    unsigned int _positionInSublayers;
    OpenGLLayerModel *_layerModel;
    OpenGLLayer *_superLayer;
}

+ (id)sequentialLayerName:(id)arg1;
+ (id)masterOpenGLContext;
- (id)initWithFrame:(struct CGRect)arg1 layerName:(id)arg2;
- (void)dealloc;
- (id)description;
- (void)setLayerIsValid:(BOOL)arg1;
- (BOOL)isValid;
- (void)setIsVisible:(BOOL)arg1;
- (void)setIsVisible:(BOOL)arg1 recursive:(BOOL)arg2;
- (BOOL)isVisible;
- (struct CGRect)superLayerFrame;
- (struct CGRect)layerFrame;
- (void)setLayerFrame:(struct CGRect)arg1;
- (void)_parentMovedFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2;
- (void)setLayerOrigin:(struct CGPoint)arg1;
- (void)_parent:(id)arg1 resizedFrom:(struct CGSize)arg2 to:(struct CGSize)arg3;
- (void)setLayerSize:(struct CGSize)arg1;
- (void)setAutoresizingMask:(unsigned int)arg1;
- (unsigned int)autoresizingMask;
- (void)containerViewResizedFrom:(struct CGSize)arg1 to:(struct CGSize)arg2;
- (id)name;
- (void)setName:(id)arg1;
- (void)setOpacity:(float)arg1;
- (float)opacity;
- (float)scaleFactor;
- (float)topMargin;
- (void)setTopMargin:(float)arg1;
- (void)_setLayerModel:(id)arg1;
- (id)layerModel;
- (void)setUsesAlphaBlending:(BOOL)arg1;
- (void)updateBuffer;
- (void)compositeLayer:(struct _CGLContextObject *)arg1;
@property(readonly) CIContext *ciContext;
@property(readonly) BOOL useCoreImage;
- (id)superLayer;
- (id)sublayers;
- (int)positionInSublayers;
- (void)addedToSuperLayer:(id)arg1;
- (void)addSublayer:(id)arg1 underSelf:(BOOL)arg2 underSiblings:(BOOL)arg3;
- (void)removedFromSuperLayer:(id)arg1;
- (BOOL)removeSublayer:(id)arg1;
- (id)sublayerWithName:(id)arg1;
- (id)sublayerWithPrefix:(id)arg1;
- (void)recursiveCompositeLayer:(struct _CGLContextObject *)arg1;
- (BOOL)containsPoint:(struct CGPoint)arg1;

@end

@interface OpenGLTextureLayer : OpenGLLayer
{
    unsigned int _textureID;
    unsigned int _textureCapability;
    struct CGSize _textureSize;
    struct CGSize _bufferSize;
    unsigned int _pixelFormat;
    unsigned int _pixelType;
    unsigned int _internalFormat;
    BOOL _alphaIsPremultiplied;
    BOOL _textured;
    BOOL _mirrored;
    float _blackTint;
    BOOL _appWillTerminate;
}

- (id)initWithSize:(struct CGSize)arg1 layerName:(id)arg2;
- (void)dealloc;
- (void)generateTextureID;
- (void)deleteTextureID;
- (unsigned int)textureID;
- (void)_updateAlphaBlending;
- (void)setBlackTint:(float)arg1;
- (void)setOpacity:(float)arg1;
- (float)blackTint;
- (void)setMirrored:(BOOL)arg1;
- (BOOL)isMirrored;
- (void)setTextureID:(unsigned int)arg1;
- (void)updateBuffer;
- (CDStruct_8a8b3360)_textureLayerInfo;
- (void)_cleanupAfterRetexture:(void *)arg1;
- (void)_retexture:(struct _CGLContextObject *)arg1;
- (void)renderTexture:(struct _CGLContextObject *)arg1;
- (void)compositeLayer:(struct _CGLContextObject *)arg1;
- (struct CGSize)textureSize;
- (struct CGSize)bufferSize;
- (void)handleApplicationWillTerminate:(id)arg1;

@end

@interface OpenGLCGBitmapContextLayer : OpenGLTextureLayer
{
    char *_buffer;
    struct CGContext *_cgBitmapContext;
    int _textureMappingType;
    float _borderLeft;
    float _borderRight;
    float _borderTop;
    float _borderBottom;
    BOOL _mapCenter;
}

- (id)initWithSize:(struct CGSize)arg1 layerName:(id)arg2;
- (void)dealloc;
- (CDStruct_8a8b3360)_textureLayerInfo;
- (void)setTextureMappingType:(int)arg1;
- (void)setBorderTextureMappingInsetLeft:(float)arg1 right:(float)arg2 top:(float)arg3 bottom:(float)arg4;
- (int)textureMappingType;
- (void)setMapCenter:(BOOL)arg1;
- (void)clearContext;
- (void)updateBuffer;
- (void)draw;
- (void)_renderBorder:(struct _CGLContextObject *)arg1;
- (void)renderTexture:(struct _CGLContextObject *)arg1;

@end

@interface OpenGLColorLayer : OpenGLLayer
{
    float _bottomColor[4];
    float _topColor[4];
}

- (id)initWithFrame:(struct CGRect)arg1 layerName:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1 layerName:(id)arg2 red:(float)arg3 green:(float)arg4 blue:(float)arg5 alpha:(float)arg6;
- (void)setRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;
- (void)setWhite:(float)arg1 alpha:(float)arg2;
- (void)setAlpha:(float)arg1;
- (void)setBottomRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;
- (void)setTopRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;
- (void)setBottomWhite:(float)arg1 topWhite:(float)arg2;
- (void)compositeLayer:(struct _CGLContextObject *)arg1;

@end

@interface OpenGLCoreVideoLayer : OpenGLLayer <FrameListener>
{
    BOOL _isRegisteredListener;
    NSString *_videoSourceName;
    Texture *_texture;
    BOOL _mirrored;
    float _blackTint;
    NSOpenGLContext *_frameReaderContext;
    CIContext *_frameReaderCIContext;
    FrameReader *_frameReader;
}

- (void)ensureRegisteredListener:(BOOL)arg1;
- (id)initWithFrame:(struct CGRect)arg1 layerName:(id)arg2 videoSource:(id)arg3;
- (void)dealloc;
- (void)frameNotifier:(id)arg1 postedNewFrame:(id)arg2;
- (void)_setLayerModel:(id)arg1;
- (void)setTexture:(id)arg1;
- (id)texture;
- (void)textureDidChange;
- (void)setBlackTint:(float)arg1;
- (float)blackTint;
- (void)setMirrored:(BOOL)arg1;
- (BOOL)isMirrored;
- (void)compositeTexture:(struct _CGLContextObject *)arg1;
- (void)compositeLayer:(struct _CGLContextObject *)arg1;
- (void)handleVirtualScreenChangedNotificiation:(int)arg1;
- (id)bitmapFromLayer;
- (float)sceneBrightness;

@end

@interface OpenGLImageLayer : OpenGLTextureLayer
{
    NSBitmapImageRep *_bitmap;
    NSString *_imageName;
    BOOL _alphaBorder;
    NSMutableDictionary *_savedBitmaps;
    float _texCoords[8];
    float _borderLeft;
    float _borderRight;
    float _borderTop;
    float _borderBottom;
    BOOL _mapCenter;
}

- (void)_updateTexCoords;
- (id)_bitmapFromImage:(id)arg1;
- (void)_setBitmap:(id)arg1;
- (id)initWithImage:(id)arg1 named:(id)arg2 alphaBorder:(BOOL)arg3 layerName:(id)arg4;
- (id)initWithImageNamed:(id)arg1 alphaBorder:(BOOL)arg2 layerName:(id)arg3;
- (void)dealloc;
- (BOOL)hasAlphaBorder;
- (CDStruct_8a8b3360)_textureLayerInfo;
- (void)setImageToImage:(id)arg1 named:(id)arg2;
- (void)setImageToImageNamed:(id)arg1;
- (void)setTextureBorderLeft:(float)arg1 right:(float)arg2 top:(float)arg3 bottom:(float)arg4 mapCenter:(BOOL)arg5;
- (void)setTextureBorder:(float)arg1 mapCenter:(BOOL)arg2;
- (void)clearTextureBorders;
- (void)_renderBorder:(struct _CGLContextObject *)arg1;
- (void)renderTexture:(struct _CGLContextObject *)arg1;

@end

@interface OpenGLLayerModel : NSObject
{
    NSMutableArray *_remoteLayers;
    OpenGLVideoConferenceLayer *_localLayer;
    NSMutableArray *_floatingLayers;
    OpenGLLayerView *_layerView;
    float _scaleFactor;
    BOOL _needsDisplay;
    BOOL _theatricalLayout;
    BOOL _forceDepthInOrtho;
    unsigned int _orthoDepthForceCounter;
    int _auxVideoMode;
    BOOL _needsToUpdateProjection;
    CDStruct_82b9310e _projection;
    float _remoteAspectRatio;
    BOOL _needsMarginForOverlay;
    BOOL _localLayerHidden;
    int _localLayerSuppressed;
    struct CGSize _remoteVideoSize;
    struct CGSize _localVideoSize;
    float _localAspectRatio;
    void *_layoutStart;
    void *_layoutEnd;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)setLayerView:(id)arg1;
- (id)layerView;
- (void)setNeedsDisplay;
- (void)setLayerNeedsDisplay:(id)arg1;
- (BOOL)needsDisplay;
- (void)setAllowsAnamorphicScaling:(BOOL)arg1;
- (void)addRemoteLayer:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addFloatingLayer:(id)arg1;
- (id)floatingLayerWithName:(id)arg1;
- (void)_fadeInDropView:(BOOL)arg1;
- (void)addVCDropView:(id)arg1;
- (void)setLocalLayer:(id)arg1;
- (id)remoteLayer;
- (id)remoteLayers;
- (id)remoteLayerWithVCPartyID:(id)arg1;
- (id)auxVideoLayerWithVCPartyID:(id)arg1;
- (id)auxVideoLayer;
- (id)localLayer;
- (id)vcDropView;
- (id)layers;
- (void)layer:(id)arg1 changedFromSize:(struct CGSize)arg2 toSize:(struct CGSize)arg3;
- (void)_positionLayerWithVCPartyID:(id)arg1 atIndex:(unsigned int)arg2 remoteLayersCount:(unsigned int)arg3;
- (void)positionRemoteParticipants:(id)arg1;
- (void)removeLocalLayer;
- (void)removeRemoteLayer:(id)arg1;
- (void)removeFloatingLayer:(id)arg1;
- (void)removeVCDropView;
- (void)_setLocalLayerHidden:(BOOL)arg1;
- (BOOL)_isLocalLayerHidden;
- (void)suppressLocalLayer:(BOOL)arg1;
- (float)scaleFactor;
- (void)_getTransforms:(CDStruct_818bb265 *)arg1 count:(int)arg2 forLayoutForLayers:(int)arg3 extraIndex:(int)arg4 ofWidth:(float)arg5 auxVideoMode:(int)arg6;
- (void)updateTheatricalLayoutForBoundsSize:(struct CGSize)arg1;
- (void)_getCameraHeight:(float *)arg1 distance:(float *)arg2 forLayers:(int)arg3 ofWidth:(float)arg4 auxVideoMode:(int)arg5;
- (void)_getProjection:(CDStruct_82b9310e *)arg1 forLayers:(int)arg2 ofSize:(struct CGSize)arg3 auxVideoMode:(int)arg4;
- (void)_adjustProjectionToAspectRatio:(float)arg1 clipProjection:(BOOL)arg2;
- (void)_updateProjection;
- (void)setTheatricalLayout:(BOOL)arg1;
- (BOOL)theatricalLayout;
- (void)setAuxVideoMode:(int)arg1;
- (int)auxVideoMode;
- (struct CGSize)remoteVideoSize;
- (struct CGSize)localVideoSize;
- (void)setRemoteVideoSize:(struct CGSize)arg1;
- (void)setLocalVideoSize:(struct CGSize)arg1;
- (struct CGSize)defaultStandardVideoSize;
- (float)remoteAspectRatio;
- (float)localAspectRatio;
- (float)_preferredAspectRatioForLayers:(int)arg1 auxVideoMode:(int)arg2;
- (float)preferredAspectRatioForLayers:(int)arg1;
- (struct CGSize)boundsSizeForRemoteLayers:(int)arg1 ofWidth:(float)arg2;
- (struct CGSize)boundsSizeForRemoteLayers:(int)arg1 ofWidth:(float)arg2 auxVideoMode:(int)arg3;
- (struct CGSize)sizeForRemoteLayers:(int)arg1 inBoundsSize:(struct CGSize)arg2 auxVideoMode:(int)arg3;
- (struct CGSize)sizeForRemoteLayers:(int)arg1 inBoundsSize:(struct CGSize)arg2;
- (double)controlsMarginForBoundsSize:(struct CGSize)arg1;
- (double)controlsMarginForBoundsSize:(struct CGSize)arg1 remoteLayers:(int)arg2 auxVideoMode:(int)arg3;
- (void)setNeedsMarginForOverlay:(BOOL)arg1;
- (BOOL)needsMarginForOverlay;
- (void)setDepthForcedInOrtho:(BOOL)arg1;
- (BOOL)depthForcedInOrtho;
- (void)_setupCameraTheatrical:(BOOL)arg1 ctx:(struct _CGLContextObject *)arg2;
- (void)_renderOverlayMarginFadeout:(struct _CGLContextObject *)arg1;
- (void)compositeAllLayers:(struct _CGLContextObject *)arg1;
- (void)compositeFloatingLayers:(struct _CGLContextObject *)arg1;
- (CDStruct_f8cc2bb8 *)_saveLayoutForLayers:(int)arg1 extraIndex:(int)arg2 inBoundsSize:(struct CGSize)arg3 auxVideoMode:(int)arg4;
- (void)saveLayoutFor:(int)arg1 inBounds:(struct CGSize)arg2 transitionTo:(int)arg3 inBounds:(struct CGSize)arg4 extraIndex:(int)arg5 auxVideoMode:(int)arg6;
- (void)_getTweenLayout:(CDStruct_f8cc2bb8 *)arg1 progress:(float)arg2;
- (void)tweenLayoutWithProgress:(float)arg1 resizeLayerView:(BOOL)arg2;
- (void)endLayoutTransitionAsTheatrical:(BOOL)arg1 fullScreen:(BOOL)arg2;
- (void)updateVCQuads;
- (long long)layerHitAtPoint:(struct CGPoint)arg1 inCloseButton:(char *)arg2;
- (id)layerForHit:(long long)arg1;

@end

@interface OpenGLNSViewLayer : OpenGLTextureLayer
{
    OpenGLNSViewLayerWindow *_window;
    NSView *_view;
    BOOL _alphaBorder;
    BOOL _projectsOrtho;
}

- (float)scaleFactor;
- (void)_updateLayout;
- (void)setLayerSize:(struct CGSize)arg1;
- (void)setProjectsOrtho:(BOOL)arg1;
- (BOOL)projectsOrtho;
- (void)recursiveCompositeLayer:(struct _CGLContextObject *)arg1;
- (id)initWithView:(id)arg1 alphaBorder:(BOOL)arg2 layerName:(id)arg3;
- (void)dealloc;
- (id)view;
- (CDStruct_8a8b3360)_textureLayerInfo;
- (void)_cleanupAfterRetexture:(void *)arg1;
- (id)_initLabelWithStringValue:(id)arg1 fontSize:(double)arg2 lineBreakMode:(unsigned long long)arg3 layerName:(id)arg4;

@end

@interface OpenGLNSViewLayerWindow : NSWindow
{
    OpenGLNSViewLayer *_owner;
}

- (void)setOwner:(id)arg1;
- (void)setViewsNeedDisplay:(BOOL)arg1;

@end

@interface OpenGLVideoConferenceLayer : OpenGLCoreVideoLayer
{
    BOOL _hasFirstFrame;
    NSString *_vcPartyID;
    BOOL _isLocal;
    BOOL _isAuxVideo;
    BOOL _isReplacement;
    BOOL _hidingUntilNextFrame;
    FramerateTracker *_framerateTracker;
    NSMutableDictionary *_frameSizesByPartyID;
    struct CGSize _localFrameSize;
    BOOL _anamorphicScaling;
    int _videoAppearance;
    BOOL _hasDropHighlight;
    BOOL _hasReflection;
    BOOL _spotlightEffect;
    BOOL _shouldFadeOutSpotlight;
    NSDate *_spotlightFadeoutStart;
    float _endedFadeoutProgress;
    float _translationX;
    float _translationZ;
    float _rotationY;
    float _scaleXY;
    BOOL _allowsJaggies;
    float _jaggiesSmoothingBrightness;
    CDStruct_ddd3e379 _layerQuad;
    CDStruct_ddd3e379 _closeQuad;
    OpenGLNSViewLayer *_bannerSublayer;
    OpenGLImageLayer *_closeButtonSublayer;
    float _rotationYAboutCenterWithAspect;
}

- (id)initWithSize:(struct CGSize)arg1 layerName:(id)arg2 vcPartyID:(id)arg3 appearance:(int)arg4 isLocal:(BOOL)arg5 isAuxVideo:(BOOL)arg6 isReplacement:(BOOL)arg7;
- (void)dealloc;
- (void)setTexture:(id)arg1;
- (void)textureDidChange;
- (id)vcPartyID;
- (BOOL)isLocal;
- (BOOL)isAuxVideo;
- (BOOL)isReplacement;
- (void)freezeFrame;
- (void)hideUntilNextFrame;
- (void)addBannerSublayer:(id)arg1;
- (id)bannerSublayer;
- (void)addCloseButtonSublayer:(id)arg1;
- (id)closeButtonSublayer;
- (BOOL)removeSublayer:(id)arg1;
- (void)fadeToBlack:(BOOL)arg1 overTime:(double)arg2;
- (BOOL)allowsAnamorphicScaling;
- (void)setAllowsAnamorphicScaling:(BOOL)arg1;
- (id)_createAppeanceLayer:(BOOL)arg1;
- (void)setVideoAppearance:(int)arg1;
- (int)videoAppearance;
- (int)_textureFlags;
- (struct CGSize)renderedFrameSize;
- (void)compositeTexture:(struct _CGLContextObject *)arg1;
- (void)setTranslationX:(float)arg1 z:(float)arg2;
- (void)getTranslationX:(float *)arg1 z:(float *)arg2;
- (void)setRotationY:(float)arg1;
- (float)rotationY;
- (void)setRotationYAboutCenterWithAspect:(float)arg1;
- (float)rotationYAboutCenterWithAspect;
- (void)setScaleXY:(float)arg1;
- (float)scaleXY;
- (void)clearTransforms;
- (void)setHasDropHighlight:(BOOL)arg1;
- (BOOL)hasDropHighlight;
- (void)setHasReflection:(BOOL)arg1;
- (BOOL)hasReflection;
- (void)_removeSpotlight;
- (void)setSpotlightEffect:(BOOL)arg1;
- (BOOL)hasSpotlightEffect;
- (void)setShouldFadeOutSpotlight;
- (void)setAllowsJaggies:(BOOL)arg1;
- (BOOL)allowsJaggies;
- (void)_applyTransforms:(struct _CGLContextObject *)arg1;
- (CDStruct_ddd3e379)_project:(double *)arg1 model:(double *)arg2 viewport:(int *)arg3 rect:(struct CGRect)arg4 isOrtho:(BOOL)arg5;
- (struct CGRect)_projectLayerFrame:(double *)arg1 ctx:(struct _CGLContextObject *)arg2;
- (void)projectVCQuads:(double *)arg1 ctx:(struct _CGLContextObject *)arg2;
- (void)isPoint:(struct CGPoint)arg1 inLayer:(char *)arg2 inCloseButton:(char *)arg3;
- (struct CGRect)frameOfLayerQuad;
- (void)_renderReflectionFadeout:(struct _CGLContextObject *)arg1;
- (void)_renderSpotlightWithFrame:(struct CGRect)arg1 ctx:(struct _CGLContextObject *)arg2;
- (void)_smoothJaggies:(struct _CGLContextObject *)arg1;
- (void)_renderTheaterOutline:(struct CGRect)arg1 ctx:(struct _CGLContextObject *)arg2;
- (void)_renderDropHighlight:(struct _CGLContextObject *)arg1;
- (void)compositeLayer:(struct _CGLContextObject *)arg1;
- (void)_projectOrtho:(struct CGSize)arg1 modelYTranslation:(float)arg2 ctx:(struct _CGLContextObject *)arg3;
- (void)recursiveCompositeLayer:(struct _CGLContextObject *)arg1;

@end

@interface OptionalScrollView : ScrollerStyleScrollView
{
}

- (void)reflectScrolledClipView:(id)arg1;
- (void)_doScroller:(id)arg1;

@end

@interface OverlayBackground : NSView
{
    double _radius;
    NSColor *_borderColor;
    NSColor *_interiorColor;
    double _borderLeft;
    double _borderTop;
    double _borderRight;
    double _borderBottom;
    double _minBorder;
    double _maxBorder;
}

- (void)setBorderWidthLeft:(double)arg1 top:(double)arg2 right:(double)arg3 bottom:(double)arg4;
- (void)getBorderWidthLeft:(double *)arg1 top:(double *)arg2 right:(double *)arg3 bottom:(double *)arg4;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
@property(nonatomic) double radius; // @synthesize radius=_radius;
@property(copy, nonatomic) NSColor *interiorColor; // @synthesize interiorColor=_interiorColor;
@property(copy, nonatomic) NSColor *borderColor; // @synthesize borderColor=_borderColor;

@end

@interface People : NSObject
{
}

+ (void)_postNoCommonServicesForPeople:(id)arg1;
+ (void)_postOfflineWarningForPeople:(id)arg1;
+ (id)bestIMHandlesForPeople:(id)arg1 commonServices:(id)arg2 requireOnline:(BOOL)arg3;
+ (id)bestIMHandlesForPeople:(id)arg1 requireOnline:(BOOL)arg2;
+ (id)bestIMHandlesForPeople:(id)arg1;
+ (BOOL)allPeopleOnline:(id)arg1;
+ (BOOL)allPeopleOffline:(id)arg1;
+ (BOOL)_allPeople:(id)arg1 haveCapability:(unsigned long long)arg2 skipUnknown:(BOOL)arg3 rejectOffline:(BOOL)arg4;
+ (BOOL)allPeopleCanReceiveIMs:(id)arg1;
+ (BOOL)allPeople:(id)arg1 haveCapability:(unsigned long long)arg2;
+ (BOOL)allPeopleCanReceiveFiles:(id)arg1;
+ (BOOL)allPeopleCanChat:(id)arg1;
+ (BOOL)buddyExistInSelection:(id)arg1;
+ (id)servicesForIMHandle:(id)arg1 requireOnline:(BOOL)arg2;
+ (id)commonServicesForPeople:(id)arg1 requireOnline:(BOOL)arg2;
+ (BOOL)allPeople:(id)arg1 canBeOnService:(id)arg2;
+ (BOOL)allPeopleHaveEMailAddresses:(id)arg1;
+ (BOOL)allPeopleCanBeDeleted:(id)arg1;
+ (int)_allPeople:(id)arg1 canConferenceWithVideo:(BOOL)arg2 ardCap:(unsigned long long)arg3 minRequirement:(int)arg4 allowReverseOneWay:(BOOL)arg5;
+ (int)_allPeople:(id)arg1 canConferenceWithVideo:(BOOL)arg2 ardCap:(unsigned long long)arg3 minRequirement:(int)arg4;
+ (BOOL)allPeopleCanTwoWayVideoChat:(id)arg1;
+ (BOOL)allPeopleCanTwoWayAudioChat:(id)arg1;
+ (int)_allPeopleCanJoinVideoChat:(id)arg1 allowReverseOneWay:(BOOL)arg2;
+ (int)_allPeopleCanJoinVideoChat:(id)arg1;
+ (BOOL)allPeopleCanJoinOneWayVideoChat:(id)arg1;
+ (BOOL)allPeopleCanJoinVideoChat:(id)arg1;
+ (int)_allPeopleCanJoinAudioChat:(id)arg1 allowReverseOneWay:(BOOL)arg2;
+ (int)_allPeopleCanJoinAudioChat:(id)arg1;
+ (BOOL)allPeopleCanJoinAudioChat:(id)arg1;
+ (BOOL)allPeopleCanBeRecorded:(id)arg1;
+ (BOOL)allPeopleCanBeARDClient:(id)arg1;
+ (BOOL)allPeopleCanBeARDServer:(id)arg1;
+ (BOOL)personCanMultiwayAudioChat:(id)arg1;
+ (BOOL)personCanMultiwayVideoChat:(id)arg1;
+ (BOOL)validateMenuItem:(id)arg1 forPeople:(id)arg2;
+ (BOOL)_verifyAllPeopleAreOnline:(id)arg1;
+ (BOOL)doDefaultActionForPeople:(id)arg1;
+ (id)_sendMessageToPeople:(id)arg1 style:(int)arg2;
+ (BOOL)allPeopleHaveMobileNumbers:(id)arg1;
+ (id)sendSMSToIMHandle:(id)arg1;
+ (id)sendMessageToIMHandle:(id)arg1;
+ (id)sendMessageToPeople:(id)arg1;
+ (id)startChatWithPeople:(id)arg1;
+ (BOOL)allPeopleHaveCommonService:(id)arg1 postWarning:(BOOL)arg2;
+ (id)startVideoChatWithPeople:(id)arg1;
+ (id)startAudioChatWithPeople:(id)arg1;
+ (id)startARDClientChatWithPeople:(id)arg1;
+ (id)startARDServerChatWithPeople:(id)arg1;
+ (BOOL)searchInSpotlightWithPeople:(id)arg1;
+ (void)_blockSheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
+ (BOOL)blockPersonWithIMHandles:(id)arg1 inWindow:(id)arg2;
+ (BOOL)sendFileToPeople:(id)arg1 inWindow:(id)arg2;
+ (BOOL)composeEMailToPeople:(id)arg1;
+ (BOOL)openMailtoURLWithAddresses:(id)arg1;
+ (void)setDesiredChatFrame:(struct CGRect)arg1;
+ (struct CGRect)desiredChatFrame;
+ (void)retitleAddBuddyItem:(id)arg1 forIMHandle:(id)arg2;
+ (void)retitleRemoveBuddyItem:(id)arg1 forIMHandles:(id)arg2;

@end

@interface PeopleList : FezPeopleList <IMDirectlyObservableObjectObserver>
{
    NSMutableDictionary *_buddyPictureIndexLookup;
    AnimatingTableView *_table;
    NSMenu *_contextualMenu;
    NSMenuItem *_showProfileMenuItem;
    id <PeopleListDelegate> _delegate;
    PresenceTooltip *_tooltip;
    BOOL _awokenFromNib;
    NSTableColumn *_statusColumn;
    NSTableColumn *_nameColumn;
    NSTableColumn *_pictureColumn;
    unsigned long long _viewOptions;
    NSMutableArray *_savedSelection;
    NSTimer *_statusTransitionTimer;
    NSMutableArray *_itemsInTransition;
    int _primarySort;
    int _secondarySort;
    BOOL _sortManually;
    NSString *_sortDefaultKey;
    BOOL _suppressingAnimation;
    NSMutableSet *_statusChangeQueue;
    NSMutableSet *_groupChangeQueue;
    NSMutableDictionary *_changeQueuePreviousStatuses;
    BOOL _willForceChangeProcessing;
    BOOL _dontAnimateStatusQueue;
    BOOL _animateWhenEnded;
    BOOL _allowsReorderingOfGroups;
}

+ (id)_notificationNames;
+ (id)_notificationSelectors;
+ (id)peoplePasteboardTypes;
+ (id)_typeFromPasteboard:(id)arg1;
+ (BOOL)pasteboardContainsPeople:(id)arg1;
- (void)_localeChangedRefresh;
- (id)init;
- (void)_configureTableColumns;
- (void)dealloc;
- (void)awakeFromNib;
- (void)detachFromTableView;
- (void)_peopleListItemNeedsUpdating:(id)arg1;
- (void)_peopleListItemNeedsSorting:(id)arg1;
- (void)_peopleListItemSortOrderChangedNotification:(id)arg1;
- (void)_peopleListItemNeedsGroupChange:(id)arg1;
- (void)_peopleListItemAnimationStateChanged:(id)arg1;
- (BOOL)peopleListItem:(id)arg1 canTransitionToStatus:(unsigned long long)arg2;
- (void)_customColorChangedForIMHandle:(id)arg1;
- (void)setShowIMHandleColorHint:(BOOL)arg1;
- (id)table;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)setArrangesByGroup:(BOOL)arg1;
- (void)setShowsOfflinePeople:(BOOL)arg1;
- (id)contextualMenu;
- (unsigned long long)_visibleIndexOfIMHandle:(id)arg1 startingAtIndex:(int)arg2;
- (unsigned long long)_visibleIndexOfItem:(id)arg1 startingAtIndex:(int)arg2;
- (BOOL)isIMHandleVisible:(id)arg1;
- (void)selectIMHandles:(id)arg1;
- (void)setGroups:(id)arg1;
- (id)groupForNewIMHandles;
- (void)_removeGroup:(id)arg1;
- (id)_groupsForIMHandle:(id)arg1 inItem:(id)arg2;
- (void)_refreshContents;
- (void)_rebuildItems;
- (void)_pulseIMHandle:(id)arg1 inCollection:(id)arg2;
- (void)pulseIMHandle:(id)arg1;
- (void)pulseIMHandles:(id)arg1;
- (void)objectDidPostDirectNotification:(id)arg1;
- (void)removeIMHandle:(id)arg1 fromGroups:(id)arg2;
- (void)removeAllIMHandlesAndGroups:(BOOL)arg1;
- (void)repopulateIMHandle:(id)arg1;
- (id)imHandleAtRow:(long long)arg1;
- (id)imHandlesAtRow:(long long)arg1;
- (id)_selectedIMHandlesPreferHandleForDefaultAction:(BOOL)arg1;
- (id)selectedIMHandles;
- (id)imHandleForObjectValue:(id)arg1;
- (void)_rememberSelection;
- (void)_restoreSelection;
- (void)disableAnimation;
- (void)beginChanges;
- (void)endChanges;
- (CDStruct_7495ffd8)_FezSortParameters;
- (void)setAllowsReorderingOfGroups:(BOOL)arg1;
- (BOOL)allowsReorderingOfGroups;
- (void)setPreferCustomSort:(BOOL)arg1;
- (BOOL)preferNameSort;
- (BOOL)preferAvailabilitySort;
- (int)nameSortOrder;
- (BOOL)preferCustomSort;
- (void)setSortOrder:(int)arg1;
- (void)setSortOrder:(int)arg1 secondary:(int)arg2;
- (int)sortOrder;
- (int)secondarySortOrder;
- (void)setSortDefaultKey:(id)arg1;
- (id)sortDefaultKey;
- (void)setSortOrderFromDefaults;
- (void)saveSortOrderToDefaultsAndNotify:(BOOL)arg1;
- (void)_setPeopleListItemNeedsDisplay:(id)arg1;
- (void)setIMHandleNeedsDisplay:(id)arg1;
- (void)revealIMHandlesInBuddyList:(id)arg1;
- (void)_stopTransitions;
- (void)_animateTransitions:(id)arg1;
- (void)_endAnimationSuppression;
- (void)suppressAnimation;
- (void)_needsDrawFromAnimate:(id)arg1;
- (void)_processIMHandleForGroupChange:(id)arg1;
- (void)_processGroupChangeQueue;
- (void)_processStatusChangeQueue;
- (void)_processStatusChangeQueueUnforced;
- (void)_processStatusChangeQueueForced;
- (void)_buddyPropertiesDone:(id)arg1;
- (int)numberOfRowsInTableView:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(int)arg3;
- (id)tableView:(id)arg1 objectValueForRow:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(int)arg4;
- (double)alphaForItem:(id)arg1 throbs:(unsigned long long)arg2;
- (id)displayNameForItem:(id)arg1;
- (id)displayStatusForItem:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldStartDraggingForGroupRow:(int)arg2;
- (void)tableView:(id)arg1 dragStarted:(id)arg2 originPoint:(struct CGPoint)arg3;
- (BOOL)_mouseInButtons:(id)arg1;
- (BOOL)tableView:(id)arg1 acceptsFirstMouse:(id)arg2;
- (BOOL)tableView:(id)arg1 canDeleteRows:(id)arg2;
- (void)tableView:(id)arg1 performDragOperation:(unsigned long long)arg2 withPasteboard:(id)arg3;
- (BOOL)tableView:(id)arg1 deleteRows:(id)arg2;
- (id)_peopleToAddFromABPerson:(id)arg1 isOK:(char *)arg2;
- (void)_getIMHandles:(id *)arg1 andGroups:(id *)arg2 fromPasteboard:(id)arg3 allowDuplicates:(BOOL)arg4;
- (id)peopleFromPasteboard:(id)arg1 addToAB:(BOOL)arg2 notAddablePeople:(id *)arg3;
- (id)tableView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 row:(long long)arg3;
- (id)_propertyListForIMHandles:(id)arg1 inGroup:(id)arg2;
- (id)_imHandlePropertyListArrayForRows:(id)arg1;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (void)setDropGroup:(id)arg1;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(int)arg3 proposedDropOperation:(unsigned long long)arg4;
- (void)_promptToAddABPeople:(id)arg1 toGroup:(id)arg2;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(int)arg3 dropOperation:(unsigned long long)arg4;
- (void)mergingGroupsSheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (BOOL)tableView:(id)arg1 canPasteFromPasteboard:(id)arg2;
- (BOOL)tableView:(id)arg1 pasteFromPasteboard:(id)arg2;
- (id)tableView:(id)arg1 tooltipForRow:(int)arg2;
- (BOOL)tableView:(id)arg1 prepareTooltip:(id)arg2 row:(int)arg3;
- (BOOL)tableView:(id)arg1 shouldShowTooltipForRow:(int)arg2;
- (struct CGRect)_vcRectOfRow:(int)arg1;
- (BOOL)tableView:(id)arg1 shouldDrawWhenMovingFrom:(struct CGPoint)arg2 toPoint:(struct CGPoint)arg3;
- (void)refreshTracking;
- (void)_updateLayout;
- (void)_updateLayoutToMatchScrollerStyle;
- (void)setHides:(unsigned long long)arg1;
- (void)setHides:(unsigned long long)arg1 to:(BOOL)arg2;
- (void)toggleHides:(unsigned long long)arg1;
- (BOOL)hides:(unsigned long long)arg1;
- (float)widthToFitContent;
- (void)_statusIndicatorDidChange:(id)arg1;
- (BOOL)tableView:(id)arg1 groupRowAtIndex:(int)arg2;
- (unsigned long long)tableView:(id)arg1 groupRowGreaterThanIndex:(unsigned long long)arg2;
- (id)tableView:(id)arg1 titleForGroupRow:(int)arg2;
- (id)tableView:(id)arg1 numberStringForPeopleListGroup:(id)arg2 ignoreCollapsed:(BOOL)arg3;
- (id)tableView:(id)arg1 numberStringForGroupRow:(int)arg2 ignoreCollapsed:(BOOL)arg3;
- (void)groupClicked:(id)arg1;
- (void)showContextMenuForPeopleListItem:(id)arg1;
- (void)tableView:(id)arg1 groupRowClicked:(int)arg2;
- (id)tableView:(id)arg1 menuForGroupRow:(int)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(int)arg2;
- (void)tableView:(id)arg1 returnKeyPressedAtRow:(int)arg2;
- (void)doDefaultAction:(id)arg1;
- (void)sendMessage:(id)arg1;
- (void)requestValidation:(id)arg1;
- (void)startChat:(id)arg1;
- (void)inviteToVideoChat:(id)arg1;
- (void)inviteToAudioChat:(id)arg1;
- (void)cancelARDSession:(id)arg1;
- (void)screenShareWithBuddy:(id)arg1;
- (void)inviteToARDAsClient:(id)arg1;
- (void)inviteToARDAsServer:(id)arg1;
- (void)createNewGroupWithPeople:(id)arg1;
- (void)sendSMS:(id)arg1;
- (void)composeEMail:(id)arg1;
- (void)searchInSpotlight:(id)arg1;
- (void)sendFile:(id)arg1;
- (void)block:(id)arg1;
- (void)_showSelectedInfo:(BOOL)arg1;
- (void)showSelectedBuddyInfo:(id)arg1;
- (void)showSelectedBuddyProfile:(id)arg1;
- (void)addToAddressBook:(id)arg1;
- (void)_mergeBuddies:(id)arg1;
- (void)showInAddressBook:(id)arg1;
- (void)showInBuddyList:(id)arg1;
- (void)openStatusAsURL:(id)arg1;
- (void)toggleArrangesByGroup:(id)arg1;
- (void)toggleUsesOfflineGroup:(id)arg1;
- (void)toggleShowsOfflines:(id)arg1;
- (BOOL)validateAction:(SEL)arg1;
- (BOOL)validateMenuItem:(id)arg1;

@end

@interface PeopleListAlert : NSAlert
{
    void *_contextInfo;
    SEL _endSelector;
    BOOL _isDisconnectionAlert;
}

- (void)dealloc;
@property(nonatomic) void *contextInfo; // @synthesize contextInfo=_contextInfo;
@property(nonatomic) SEL didEndSelector; // @synthesize didEndSelector=_endSelector;
@property(nonatomic) BOOL isDisconnectionAlert; // @synthesize isDisconnectionAlert=_isDisconnectionAlert;

@end

@interface PeopleListController : NSWindowController <PeopleListDelegate, NSAnimationDelegate, NSTextFieldDelegate>
{
    PeopleList *_peopleList;
    IMPeople *_sourcePeople;
    NSArray *_representedAccounts;
    NSArray *_representedServices;
    NSMutableArray *_buddyListViews;
    NSMutableArray *_viewsToRemove;
    NSView *_statusArea;
    MyNameControl *_myName;
    MyStatusControl *_myStatus;
    MyStatusImageControl *_myStatusImage;
    StatusController *_myStatusController;
    MyPictureControl *_myPicture;
    NSButton *_myVCButton;
    long long _myVCButtonTrackingRectTag;
    NSTableView *_accountsViewTable;
    AccountsScrollView *_accountsScrollView;
    AccountsTableController *_accountsTableController;
    NSBox *_statusAreaSeparatorBox;
    SearchBackgroundView *_searchBackgroundView;
    NSSearchField *_searchField;
    NSButton *_searchDoneButton;
    NSTextField *_noResultsField;
    NSViewAnimation *_searchHideDoneButtonAnimation;
    NSViewAnimation *_searchShowDoneButtonAnimation;
    NSString *_searchString;
    NSTimer *_searchTypingTimer;
    double _searchDoneButtonWidth;
    double _searchEdgePadding;
    double _searchMidPadding;
    NSScrollView *_scrollView;
    NSView *_bottomView;
    MenuButton *_addButton;
    NSSegmentedControl *_buddyListButtons;
    NSMenu *_screenSharingMenu;
    NSMenu *_screenSharingMenuInSession;
    NSButton *_getInfoButton;
    NSString *_name;
    NSString *_prefIdentifier;
    struct CGSize _defaultMinWindowSize;
    double _defaultMinHeight;
    double _defaultHeight;
    double _collapsableHeight;
    NSMenu *_groupContextualMenu;
    NSString *_groupForContextualMenu;
    NSArray *_savedGroupsSortOrder;
    unsigned int _windowHasLoaded:1;
    unsigned int _ardConnectionUsesMenu:1;
    unsigned int _buttonIsVideo:1;
    unsigned int _willRefresh:1;
    unsigned int _unifiedWindowTitle:1;
    unsigned int _isTableCollapsed:1;
    unsigned int _supportsOfflineToggle:1;
    unsigned int _supportsGroups:1;
    unsigned int _supportsEditing:1;
    unsigned int _supportsChild:1;
    unsigned int _shouldAutoResize:1;
    unsigned int _showingAccountsTable:1;
    unsigned int _shouldShowSearchField:1;
    unsigned int _searchPreviouslyShowingDoneButton:1;
}

+ (id)unifiedPeopleListController;
+ (id)defaultValueForPrefKey:(id)arg1;
+ (void)transferPreferencesToUnifiedPeopleList;
+ (id)peopleListControllerWithRepresentedAccount:(id)arg1;
+ (id)peopleListControllers;
+ (void)showAlertForAccount:(id)arg1;
+ (void)removeAlertForAccount:(id)arg1;
+ (BOOL)hasVisibleController;
+ (BOOL)hasAlertForAccount:(id)arg1;
+ (id)alertForAccount:(id)arg1;
+ (BOOL)hasTimerForAccount:(id)arg1;
+ (void)displayWithKeyWhenLoggingInAccount:(id)arg1;
+ (id)accountsToDisplayWithKey;
+ (id)prefIdentifierForAccount:(id)arg1;
+ (id)identifiedPref:(id)arg1 forIdentifier:(id)arg2;
- (id)initWithAccount:(id)arg1;
- (id)initWithName:(id)arg1 prefIdentifier:(id)arg2;
- (void)awakeFromNib;
- (void)removeFromList;
- (void)dealloc;
- (void)_setupAddButtonTooltip;
- (void)_importPrefsFromTiger;
- (void)windowDidLoad;
- (void)clearPreferences;
- (void)_layoutSearchArea:(BOOL)arg1 force:(BOOL)arg2;
- (BOOL)_shouldShowSearchField;
- (BOOL)isFindPanelShowing;
- (void)_toggleSearchField:(BOOL)arg1;
- (void)showFindPanel:(id)arg1;
- (void)searchDismissed:(id)arg1;
- (long long)_nextSuitableRowForHighlightAfterRow:(long long)arg1;
- (void)_showNoResultsField;
- (void)_startSearch:(id)arg1;
- (void)searchFieldDidChange:(id)arg1;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)shouldShowAccountTable;
- (BOOL)isAccountTableShowing;
- (void)_updateAccountsTable;
- (void)_cleanupAccountsTableTimers;
- (void)_clearAccountsTableTimers;
- (void)_clearTimer:(id *)arg1;
- (void)_rowUpdateTimerHit:(id)arg1;
- (void)_scheduleRowUpdateTimerForAccountID:(id)arg1;
- (BOOL)hasTimerForAccount:(id)arg1;
- (void)addAlert:(id)arg1 forAccount:(id)arg2;
- (void)removeAlertForAccount:(id)arg1;
- (void)showAlertForAccount:(id)arg1;
- (BOOL)hasAlertForAccount:(id)arg1;
- (id)alertForAccount:(id)arg1;
- (void)_configureUIForAccount;
- (void)_accountCapsChanged:(id)arg1;
- (void)_accountInfoChanged:(id)arg1;
- (void)_refreshTargetedNotifications;
@property(retain, nonatomic) Account *representedAccount;
@property(retain, nonatomic) NSArray *representedAccounts;
@property(retain, nonatomic) IMPeople *sourcePeople;
- (BOOL)representsService:(id)arg1;
- (BOOL)representsAccount:(id)arg1;
- (void)_activeAccountsChanged:(id)arg1;
@property(retain, nonatomic) NSArray *representedServices;
- (void)updateWindowTitle;
- (void)setPrefIdentifier:(id)arg1;
- (id)prefIdentifier;
@property(nonatomic) BOOL prefVisible;
@property(readonly, nonatomic) PeopleList *peopleList;
@property(readonly, nonatomic) MyPictureControl *pictureControl;
@property(readonly, nonatomic) MyStatusControl *statusControl;
- (void)showWindow:(id)arg1;
- (void)enableWindow:(BOOL)arg1 quietly:(BOOL)arg2;
- (void)enableWindow:(BOOL)arg1;
- (void)displayWithKey:(BOOL)arg1;
- (void)displayWithoutKey;
- (void)displayIfPrefVisible;
- (void)display;
- (void)hide;
@property(readonly, nonatomic) BOOL isVisible;
- (BOOL)windowShouldClose:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowDidResignMain:(id)arg1;
- (BOOL)addBuddy:(id)arg1 withWindow:(id)arg2;
- (id)addBuddy;
- (void)addABuddy:(id)arg1;
- (id)propertiesForGroup:(id)arg1;
- (id)peopleList:(id)arg1 addablePeople:(id)arg2;
- (void)addWhitelistedNotInBuddyListSheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (BOOL)peopleList:(id)arg1 canRemoveRows:(id)arg2;
- (BOOL)_deleteBuddies:(id)arg1;
- (void)pulseIMHandle:(id)arg1;
- (void)_deleteSheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)_confirmDeletionOfPeople:(id)arg1 withContextInfo:(id)arg2;
- (BOOL)peopleList:(id)arg1 deletePeople:(id)arg2;
- (BOOL)deletePeople:(id)arg1;
- (void)deleteSelectedBuddies:(id)arg1;
- (BOOL)containsIMHandle:(id)arg1;
- (void)parentalSheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)addAGroup:(id)arg1;
- (void)renameGroup:(id)arg1;
- (void)startIMToGroup:(id)arg1;
- (void)addBuddyToGroup:(id)arg1;
- (void)inviteGroupToChat:(id)arg1;
- (void)deleteGroup:(id)arg1;
- (void)peopleList:(id)arg1 deleteGroup:(id)arg2;
- (BOOL)peopleList:(id)arg1 forceDeleteGroup:(id)arg2;
@property(readonly, nonatomic) BOOL wantsSortedGroups;
- (BOOL)_shouldUseSaveSortOrder;
- (void)_setSavedGroupsSortOrder:(id)arg1;
- (id)_savedGroupsSortOrder;
- (void)setGroupsSortOrder:(id)arg1;
- (void)peopleList:(id)arg1 setGroupsSortOrder:(id)arg2;
- (id)mergedGroupProperties:(id)arg1;
@property(readonly, nonatomic) NSArray *groups;
@property(readonly, nonatomic) NSDictionary *groupProperties;
- (id)groupsWithCapability:(id)arg1;
- (id)groupsWithCapability:(id)arg1 fromGroups:(id)arg2;
@property(readonly, nonatomic) NSArray *reorderableGroups;
- (void)_serviceGroupsChanged:(id)arg1;
- (void)_arrangesByGroupChanged;
- (id)groupsToAddTo;
- (BOOL)_doAddPeople:(id)arg1 toGroups:(id)arg2 atLocation:(long long)arg3;
- (BOOL)peopleList:(id)arg1 pastePeople:(id)arg2 intoGroup:(id)arg3 atLocation:(long long)arg4;
- (id)_imHandlesFromPeople:(id)arg1 inGroups:(id)arg2;
- (BOOL)peopleList:(id)arg1 people:(id)arg2 draggedFromGroups:(id)arg3 toGroup:(id)arg4 atLocation:(unsigned long long)arg5 copying:(BOOL)arg6;
- (void)personABPersonChanged:(id)arg1;
- (void)_accountSortOrderChanged:(id)arg1;
- (void)_accountLoaded:(id)arg1;
- (void)_multiSessionSheedDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_accountNoLongerJustLoggedIn:(id)arg1;
- (void)_buildAlertsForAccount:(id)arg1;
- (void)_accountStatusMessageChanged:(id)arg1;
- (void)_accountLoginStatusChanged:(id)arg1;
- (void)refreshList;
- (void)_refreshList;
- (void)buddyListChanged:(id)arg1;
- (void)showInBuddyList:(id)arg1;
- (void)showSelectedPeopleInList:(id)arg1;
- (id)_myVCImage:(int)arg1 forState:(int)arg2;
- (void)_updateVCButtonRollover;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (BOOL)_setupVCButtonAsVideo:(BOOL)arg1 force:(BOOL)arg2;
- (BOOL)_addVCButtonIsVideo:(BOOL)arg1;
- (BOOL)_setVCButtonIsVideo:(BOOL)arg1;
- (BOOL)_updateVCButton;
- (void)_adjustWidgetsToTable:(BOOL)arg1;
- (void)_adjustWidgetsToTable;
- (void)_adjustWidgetsSoon:(id)arg1;
- (void)tableDidResize:(id)arg1;
- (BOOL)windowShouldZoom:(id)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (void)_startViewAnimationWithViews:(id)arg1 toRects:(id)arg2;
- (void)animationDidEnd:(id)arg1;
- (void)_layoutInteriorViews;
- (double)_collapsableListHeight;
- (void)_fixWindowForCollapsed;
- (void)_fixWindowMinSize;
- (void)_fixGradientForUncollapsed;
- (void)_fixGradientForCollapsed;
- (void)_fixGradient;
- (BOOL)isTableCollapsed;
- (void)collapseTableAnimated:(BOOL)arg1;
- (void)uncollapseTableAnimated:(BOOL)arg1;
- (void)setTableCollapsed:(BOOL)arg1 animate:(BOOL)arg2;
- (id)identifiedPref:(id)arg1;
- (double)peopleList:(id)arg1 alphaForStatus:(unsigned long long)arg2;
- (id)peopleList:(id)arg1 alternateNameTextForIMHandle:(id)arg2;
- (id)peopleList:(id)arg1 alternateStatusTextForIMHandle:(id)arg2;
- (id)peopleList:(id)arg1 filterIMHandleFromPasteboard:(id)arg2;
- (void)peopleList:(id)arg1 addPersonWithoutID:(id)arg2 toGroup:(id)arg3;
- (id)peopleList:(id)arg1 menuForGroup:(id)arg2;
- (void)peopleListSelectedItemInfoChanged:(id)arg1;
- (BOOL)canModifyBuddiesInPeopleList:(id)arg1;
@property(readonly, nonatomic) BOOL supportsChild;
@property(readonly, nonatomic) BOOL supportsEditing;
@property(readonly, nonatomic) BOOL supportsGroups;
@property(readonly, nonatomic) BOOL supportsOfflineToggle;
- (void)_autoResizeBuddyList;
- (void)peopleList:(id)arg1 tableView:(id)arg2 contentDidResize:(struct CGSize)arg3;
- (void)buddyListButtonsAction:(id)arg1;
- (void)sortByName:(id)arg1;
- (void)sortManually:(id)arg1;
- (void)sortByStatus:(id)arg1;
- (void)sortByFirstName:(id)arg1;
- (void)sortByLastName:(id)arg1;
- (void)toggleHidePictures:(id)arg1;
- (void)toggleHideAudioStatus:(id)arg1;
- (void)toggleHideVideoStatus:(id)arg1;
- (void)toggleShowOfflines:(id)arg1;
- (void)toggleArrangesByGroup:(id)arg1;
- (void)toggleUsesOfflineGroup:(id)arg1;
- (void)personDoubleClicked:(id)arg1;
- (void)changeBuddyPicture:(id)arg1;
- (void)sendMessage:(id)arg1;
- (void)startChat:(id)arg1;
- (void)inviteToAudioChat:(id)arg1;
- (void)inviteToVideoChat:(id)arg1;
- (void)cancelARDSession:(id)arg1;
- (void)inviteToARDAsClient:(id)arg1;
- (void)inviteToARDAsServer:(id)arg1;
- (void)createNewGroupWithPeople:(id)arg1;
- (void)composeEMail:(id)arg1;
- (void)searchInSpotlight:(id)arg1;
- (void)sendSMS:(id)arg1;
- (void)sendFile:(id)arg1;
- (void)block:(id)arg1;
- (void)requestValidation:(id)arg1;
- (void)showInAddressBook:(id)arg1;
- (void)addToAddressBook:(id)arg1;
- (void)openStatusAsURL:(id)arg1;
- (void)showSelectedBuddyInfo:(id)arg1;
- (void)showSelectedBuddyProfile:(id)arg1;
- (void)screenShareWithBuddy:(id)arg1;
@property(nonatomic) BOOL ARDConnectionUsesMenu;
@property(readonly, nonatomic) BOOL anythingConnected;
@property(readonly, nonatomic) BOOL anythingConnecting;
- (BOOL)everythingLoggedIn;
@property(readonly, nonatomic) BOOL everythingLoggedOut;
- (void)logBuddyListInOrOut:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)editMessageForCurrentStatus;
- (void)_savePosition;
- (void)windowDidMove:(id)arg1;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (void)windowDidResize:(id)arg1;
- (void)windowWillClose:(id)arg1;

@end

@interface PeopleListControllerWindow : NSWindow
{
}

- (double)animationResizeTime:(struct CGRect)arg1;

@end

@interface PeopleListItem : FezPeopleListItem <NSCopying, IMDirectlyObservableObjectObserver>
{
}

+ (id)displayStatusMessageForString:(id)arg1;
+ (id)displayNameForString:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)tooltipString;
- (id)displayStatusMessage;
- (void)objectDidPostDirectNotification:(id)arg1;
- (id)preferredDefaultHandle;

@end

@interface PeoplePicker : NSObject
{
    Service *_service;
    ABPeoplePickerView *_peoplePicker;
    NSView *_titleView;
    BOOL _alwaysPost;
}

- (id)init;
- (void)awakeFromNib;
- (void)dealloc;
- (void)setPeopleDoubleClickTarget:(id)arg1 andAction:(SEL)arg2;
- (void)enableMultiplePeopleSelection:(BOOL)arg1;
- (void)setAllowedServices:(id)arg1;
- (void)setAllowsAccountSelection:(BOOL)arg1;
- (void)setService:(id)arg1;
- (void)setAlwaysPosts:(BOOL)arg1;
- (void)_postChangedNotificationNamed:(id)arg1;
- (void)_postChangedNotification;
- (void)groupDidChange:(id)arg1;
- (void)nameDidChange:(id)arg1;
- (void)valueDidChange:(id)arg1;
- (void)propertyDidChange:(id)arg1;
- (id)displayedProperty;
- (id)selectedRecords;
- (id)selectedValues;
- (id)selectedPerson;
- (void)openInAddressBook:(id)arg1;
- (void)editInAddressBook:(id)arg1;
- (void)selectABPerson:(id)arg1 andIMHandle:(id)arg2;
- (void)selectABPerson:(id)arg1;
- (void)selectABPerson:(id)arg1 andValue:(id)arg2;
- (void)personSelected:(id)arg1;

@end

@interface Presentity : IMHandle <NSCoding>
{
    BuddyPicture *_customPicture;
    BuddyPicture *_picture;
    NSColor *_balloonColor;
    NSColor *_lastCustomBackgroundColor;
    NSColor *_lastCustomFontColor;
    BOOL _isCustomPictureChecked;
}

- (void)setBalloonColor:(id)arg1;
- (id)lastCustomBackgroundColor;
- (void)setLastCustomBackgroundColor:(id)arg1;
- (id)lastCustomFontColor;
- (void)setLastCustomFontColor:(id)arg1;
- (id)customPicture;
- (BOOL)isCustomPictureChecked;
- (void)_forgetCustomPicture;
- (void)abPersonChangedPictureBlocking;
- (void)_imPersonPictureChanged:(id)arg1;
- (void)sendNotificationABPersonChanged;
- (void)_setPicture:(id)arg1;
- (void)setPictureFromImage:(id)arg1;
- (void)dealloc;
- (id)balloonColor;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)picture;
- (id)pictureKey;
- (void)customPictureDataChanged:(id)arg1 key:(id)arg2;
- (void)setPicture:(id)arg1;
- (id)customPictureRegardlessOfBlocking;
- (id)statusMessageAsURL;

@end

@interface Person : Presentity
{
}

@end

@interface Prefs : NSObject
{
}

+ (void)copyPreference:(id)arg1 toKey:(id)arg2;
+ (void)clearPreferenceForKey:(id)arg1;
+ (BOOL)boolForKey:(id)arg1 defaultValue:(BOOL)arg2;
+ (long long)integerForKey:(id)arg1 defaultValue:(long long)arg2;
+ (float)floatForKey:(id)arg1 defaultValue:(double)arg2;
+ (double)doubleForKey:(id)arg1 defaultValue:(double)arg2;
+ (id)arrayForKey:(id)arg1;
+ (void)setArray:(id)arg1 forKey:(id)arg2;
+ (void)setInteger:(long long)arg1 forKey:(id)arg2;
+ (void)setBool:(BOOL)arg1 forKey:(id)arg2;
+ (void)setString:(id)arg1 forKey:(id)arg2;
+ (id)stringForKey:(id)arg1 defaultValue:(id)arg2;
+ (long long)nameStyle;
+ (void)setNameStyle:(long long)arg1;
+ (BOOL)offlineOnQuit;
+ (void)setOfflineOnQuit:(BOOL)arg1;
+ (id)accountsToLogInAtLaunch;
+ (void)setAccountsToLogInAtLaunch:(id)arg1;
+ (int)fastUserSwitchAction;
+ (void)setFastUserSwitchAction:(int)arg1;
+ (BOOL)usingABPicture;
+ (void)setUsingABPicture:(BOOL)arg1;
+ (long long)numberOfCustomMessagesToRemember;
+ (void)setNumberOfCustomMessagesToRemember:(long long)arg1;
+ (BOOL)knockKnock;
+ (void)setKnockKnock:(BOOL)arg1;
+ (BOOL)showMyLoginIdInBuddyList;
+ (void)setShowMyLoginIdInBuddyList:(BOOL)arg1;
+ (BOOL)fileTransferManagerShouldBeVisible;
+ (void)setFileTransferManagerShouldBeVisible:(BOOL)arg1;
+ (BOOL)useSingleStatus;
+ (void)setUseSingleStatus:(BOOL)arg1;
+ (BOOL)animateBuddyIcons;
+ (void)setAnimateBuddyIcons:(BOOL)arg1;
+ (id)chatBookmarks;
+ (void)_setChatBookmarks:(id)arg1;
+ (BOOL)_hasBookmarkForRoom:(id)arg1 account:(id)arg2;
+ (id)chatBookmarksForAccountID:(id)arg1;
+ (void)removeBookmarkAtIndex:(long long)arg1;
+ (void)addBookmarkForRoom:(id)arg1 account:(id)arg2;
+ (void)removeBookmarkForRoom:(id)arg1 account:(id)arg2;
+ (BOOL)shouldJoinRoomNameAtLaunch:(id)arg1 accountID:(id)arg2;
+ (void)setJoinAtLaunch:(BOOL)arg1 roomName:(id)arg2 accountID:(id)arg3;
+ (BOOL)shouldShowParticipantsForRoomName:(id)arg1 accountID:(id)arg2;
+ (void)setShowParticipants:(BOOL)arg1 roomName:(id)arg2 accountID:(id)arg3;
+ (void)_updateLastUsedDateForRoom:(id)arg1 account:(id)arg2;
+ (void)removeGoToChatPrefsForRoom:(id)arg1 accountID:(id)arg2;
+ (void)purgeChatRoomPrefs;
+ (BOOL)addressMeInGroupchat;
+ (void)setAddressMeInGroupchat:(BOOL)arg1;
+ (BOOL)autosaveChats;
+ (void)setAutosaveChats:(BOOL)arg1;
+ (BOOL)showRecipientBar;
+ (void)setShowRecipientBar:(BOOL)arg1;
+ (BOOL)showTabBar;
+ (void)setShowTabBar:(BOOL)arg1;
+ (BOOL)useBestRecipient;
+ (id)savedChatPath;
+ (void)setSavedChatPath:(id)arg1;
+ (BOOL)autoRestoreChatContents;
+ (BOOL)autoRestoreChatContentsIfAutosaveEnabled;
+ (void)setAutoRestoreChatContents:(BOOL)arg1;
+ (long long)autoRestoreChatContentsMessageCount;
+ (long long)autoRestoreChatContentsMessageCountIfRestoreEnabled;
+ (void)setAutoRestoreChatContentsMessageCount:(long long)arg1;
+ (id)downloadPath;
+ (void)setDownloadPath:(id)arg1;
+ (id)existingDownloadPath;
+ (BOOL)useUnifiedBuddyList;
+ (void)setUseUnifiedBuddyList:(BOOL)arg1;
+ (BOOL)menuExtraIsVisible;
+ (int)setMenuExtraIsVisible:(BOOL)arg1;
+ (id)nowPlayingFormatString;

@end

@interface Prefs_Accounts : NSPreferencesModule <IMPreferencePaneControllerProtocol>
{
    Account *_loadedAccount;
    long long _nextRowToSelect;
    NSTextField *_accountText;
    NSTableView *_serviceTable;
    NSButton *addButton;
    NSButton *removeButton;
    NSMutableDictionary *_preferenceControllers;
    NSTabView *_servicesTab;
}

- (id)imageForPreferenceNamed:(id)arg1;
- (id)currentPrefController;
- (void)selectCurrentPrefTabViewItem;
- (void)loadAccount:(id)arg1;
- (void)_activeAccountChanged:(id)arg1;
- (void)_serviceEnablementChanged:(id)arg1;
- (void)_windowLostFocus:(id)arg1;
- (void)_windowBecameMain:(id)arg1;
- (void)_addressBookChanged:(id)arg1;
- (void)_accountDoubleClicked:(id)arg1;
- (void)_accountChanged:(id)arg1;
- (void)loadPreferenceBundles;
- (void)awakeFromNib;
- (id)init;
- (void)dealloc;
- (BOOL)isResizable;
- (void)updateServiceTable:(id)arg1;
- (void)accountSelectionChanged:(id)arg1;
- (void)_managedPrefsChanged:(id)arg1;
- (void)selectAccount:(id)arg1;
- (id)viewForPreferenceNamed:(id)arg1;
- (void)willBeDisplayed;
- (void)initializeFromDefaults;
- (BOOL)moduleCanBeRemoved;
- (BOOL)preferencesWindowShouldClose;
- (void)saveChanges;
- (void)selectFirstActiveAccount;
- (void)setupComplete:(id)arg1;
- (void)addAccount:(id)arg1;
- (void)removeAccount:(id)arg1;
- (void)showHelp:(id)arg1;
- (void)_deleteSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_changeLoginSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_warnRemoveAccount:(id)arg1;
- (void)updateBottomText;
- (id)encodableState;
- (void)restoreState:(id)arg1;

@end

@interface Prefs_Actions : NSPreferencesModule
{
    ActionsController *_actionsController;
    NSImageView *_lowVolume;
    NSImageView *_highVolume;
}

- (id)imageForPreferenceNamed:(id)arg1;
- (void)awakeFromNib;
- (void)dealloc;
- (BOOL)isResizable;
- (id)viewForPreferenceNamed:(id)arg1;
- (BOOL)hasChangesPending;
- (void)saveChanges;
- (void)actionsControllerChanged:(id)arg1;
- (void)willBeDisplayed;
- (BOOL)preferencesWindowShouldClose;
- (void)moduleWillBeRemoved;
- (void)showHelp:(id)arg1;

@end

@interface Prefs_BuddyList : NSPreferencesModule
{
}

- (id)viewForPreferenceNamed:(id)arg1;

@end

@interface Prefs_Camera : NSPreferencesModule
{
    CollapseView *cameraCollapseView;
    NSPopUpButton *cameraPulldownMenu;
    CollapseView *micCollapseView;
    NSPopUpButton *micPulldownMenu;
    CollapseView *soundOutputDeviceCollapseView;
    NSPopUpButton *soundOutputDevicePulldownMenu;
    CollapseView *pairHeadsetCollapseView;
    NSButton *pairHeadsetButton;
    NSBox *cameraBoxView;
    NSTabView *cameraTabView;
    CameraPreferencesView *cameraView;
    NSExtendedBox *noCameraBox;
    NSTextField *noCameraTextField;
    CollapseView *volumeCollapseView;
    VolumeIndicator *volumeIndicator;
    CollapseView *lightingCollapseView;
    NSPopUpButton *bandwidthPulldownMenu;
    NSButton *launchOnCameraCheckbox;
    NSButton *repeatedRingCheckbox;
    BOOL stayingOnVideoPrefs;
    BOOL videoPrefsWindowWasClosed;
    BOOL didCancel;
    BOOL autoselectBTMic;
    BOOL autoselectBTOutput;
    BOOL _closeRegistered;
}

- (void)dealloc;
- (BOOL)isResizable;
- (id)viewForPreferenceNamed:(id)arg1;
- (void)saveChanges;
- (void)_registerForCloseNotification;
- (void)_unregisterForCloseNotification;
- (void)windowWillClose:(id)arg1;
- (void)willBeDisplayed;
- (void)moduleWasInstalled;
- (void)moduleWillBeRemoved;
- (void)_resizeWindowForNewVideoSize:(struct CGSize)arg1 animate:(BOOL)arg2;
- (void)_cameraPreferencesViewSizeChanged:(id)arg1;
- (id)_firstBloothSoundDeviceInList:(id)arg1;
- (void)_updateUIElement:(int)arg1 animate:(BOOL)arg2 hardwareChanged:(BOOL)arg3;
- (id)_noneStr;
- (void)_startStopAV;
- (void)_prefsChangedNotification:(id)arg1;
- (void)__prefsChangedNotification:(id)arg1;
- (void)_setBandwidth:(unsigned long long)arg1;
- (void)changeBandwidth:(id)arg1;
- (void)changeLaunchOnCamera:(id)arg1;
- (void)changeRepeatedRing:(id)arg1;
- (void)showHelp:(id)arg1;
- (void)setStayingOnVideoPrefs:(BOOL)arg1;
- (BOOL)videoPrefsWindowWasClosed;
- (void)setVideoPrefsWindowWasClosed:(BOOL)arg1;
- (void)setDidCancel:(BOOL)arg1;
- (void)pairHeadset:(id)arg1;
- (long long)_updateMicList;
- (void)changeMicrophone:(id)arg1;
- (long long)_updateSoundDeviceList:(id)arg1 deviceList:(id)arg2 currentDevice:(id)arg3;
- (long long)_updateSoundOutputDeviceList;
- (void)changeSoundOutputDevice:(id)arg1;
- (long long)_updateCameraList;
- (void)changeCamera:(id)arg1;

@end

@interface Prefs_General : NSPreferencesModule
{
    DefaultApplicationPopUpButton *defaultIMClientPopup;
    NSButton *showStatusMenuCheckbox;
    NSButton *offlineOnQuitCheckbox;
    NSButton *persistentChats;
    NSButton *useShapeForStatusCheckbox;
    NSMatrix *welcomeBackMode;
    NSButton *autoAwayCheckbox;
    NSButton *useSingleBuddyList;
    NSButton *autoAwayTimeField;
    NSButton *animateBuddyIcons;
    NSButton *_confirmSend;
    NSPopUpButton *downloadPathPopupButton;
    NSPopUpButton *fastUserSwitchPopup;
    CollapseView *fusCollapseView;
}

- (id)imageForPreferenceNamed:(id)arg1;
- (void)awakeFromNib;
- (void)dealloc;
- (BOOL)isResizable;
- (id)viewForPreferenceNamed:(id)arg1;
- (void)_updateStatusMenuControl:(id)arg1;
- (void)initializeFromDefaults;
- (void)saveChanges;
- (void)changeAnimateBuddyIcons:(id)arg1;
- (void)changeOfflineOnQuit:(id)arg1;
- (void)changeShowFezStatus:(id)arg1;
- (void)changeUseSingleBuddyList:(id)arg1;
- (void)changeUseShapesForStates:(id)arg1;
- (void)changeWelcomeBackMode:(id)arg1;
- (void)changeAutoAway:(id)arg1;
- (void)confirmSendSelected:(id)arg1;
- (void)changeAutoAwayTime:(id)arg1;
- (void)changeFastUserSwitchPopup:(id)arg1;
- (void)changeDownloadPath:(id)arg1;
- (void)_setupDownloadPathMenu;
- (void)showHelp:(id)arg1;

@end

@interface Prefs_MsgCompose : NSPreferencesModule <ShowMessagesDelegate>
{
    NSPopUpButton *_outBalloonColorPopUp;
    NSPopUpButton *_outFontColorPopUp;
    NSPopUpButton *_inBalloonColorPopUp;
    NSPopUpButton *_inFontColorPopUp;
    NSPopUpButton *_saveChatLocation;
    NSMenuItem *_outBalloonOtherItem;
    NSMenuItem *_outFontOtherItem;
    NSMenuItem *_inBalloonRandomItem;
    NSMenuItem *_inBalloonOtherItem;
    NSMenuItem *_inFontOtherItem;
    NSView *sampleTranscript;
    FezWebView *_sampleChatView;
    ChatViewController *_sampleChatViewController;
    NSTextField *_inBalloonColorLabel;
    NSTextField *_inFontColorLabel;
    NSButton *persistentChats;
    NSButton *_overrideIncomingStyle;
    NSButton *_autosaveChats;
    NSButton *_autoRestoreEnable;
    NSPopUpButton *_autoRestoreCount;
    NSButton *_collectChats;
    BOOL _dirty;
    NSColor *_curFgColor;
    NSColor *_curBgColor;
    NSColor *_curInFgColor;
    NSColor *_curInBgColor;
    BOOL _customOutBalloonColor;
    BOOL _customInBalloonColor;
    NSFont *_curFont;
    NSFont *_curInFont;
    BOOL _overrideSendersFormatting;
    BOOL _editingInFont;
    BOOL _editingInColor;
    BOOL _editingBgColor;
    NSButton *activateRecentShortcut;
    NSButton *_addressMeInGroupchat;
    NSComboBox *recentShortcutKeyCombo;
    NSButton *autoReplyCheckbox;
    NSMutableArray *_shortcutKeyItems;
    ConfigKeyEditor *_menuHotKeyFieldEditor;
}

+ (id)quickSharedInstance;
+ (id)_colorFromPref:(id)arg1;
+ (id)_sampleForFont:(id)arg1 fgColor:(id)arg2 bgColor:(id)arg3;
- (id)init;
- (void)dealloc;
- (void)awakeFromNib;
- (BOOL)isResizable;
- (id)messageFont;
- (id)messageFgColor;
- (id)messageBgColor;
- (BOOL)overrideSendersFormatting;
- (id)messageInFont;
- (id)messageInBgColor;
- (id)messageInFgColor;
- (void)setUpMessageTextField:(id)arg1;
- (void)_notifyChanged;
- (void)_notifyOverrideChanged;
- (void)_notifyOverrideColorsChanged;
- (void)_notifyOverrideFontChanged;
- (void)_notifyWatchMessageAddressingChanged;
- (id)viewForPreferenceNamed:(id)arg1;
- (id)_swatchForColor:(id)arg1;
- (void)setUpColorMenu:(id)arg1;
- (void)moduleWasInstalled;
- (void)willBeDisplayed;
- (void)chatView:(id)arg1 canShowMessages:(BOOL)arg2;
- (void)setTranscriptStyleFromMenuItem:(id)arg1;
- (void)setChatShowsNames:(id)arg1;
- (void)setChatShowsNamesAndPictures:(id)arg1;
- (void)setChatShowsPictures:(id)arg1;
- (void)toggleHideSmileys:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)controlTextDidCancelEditing:(id)arg1;
- (void)keyEditorFinished:(id)arg1 forTextView:(id)arg2 virtualKey:(id)arg3 modifiers:(unsigned long long)arg4;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (void)changeActivateRecentShortcut:(id)arg1;
- (id)comboBox:(id)arg1 objectValueForItemAtIndex:(long long)arg2;
- (long long)numberOfItemsInComboBox:(id)arg1;
- (void)comboBoxSelectionIsChanging:(id)arg1;
- (void)comboBoxSelectionDidChange:(id)arg1;
- (unsigned long long)comboBox:(id)arg1 indexOfItemWithStringValue:(id)arg2;
- (void)_setupComboBox;
- (void)_saveColor:(id)arg1 inVar:(id *)arg2 isOutgoing:(BOOL)arg3;
- (void)_setOtherColor:(id)arg1 forMenuItem:(id)arg2 inPopUp:(id)arg3;
- (void)_outBalloonColorPicked:(id)arg1;
- (void)_outFontColorPicked:(id)arg1;
- (void)_inBalloonColorPicked:(id)arg1;
- (void)_inFontColorPicked:(id)arg1;
- (id)_fontFgColor;
- (void)_setColor:(id)arg1 asFontChange:(BOOL)arg2;
- (void)overrideSelected:(id)arg1;
- (void)_updateInColorControls;
- (void)colorChanged:(id)arg1;
- (void)_selectColor:(id)arg1 inPopUp:(id)arg2;
- (void)_showSampleText;
- (void)setMessageFont:(id)arg1;
- (void)_setCurrentFont:(id)arg1;
- (id)fontBeingChanged;
- (void)_chooseAFont;
- (void)chooseOutFont:(id)arg1;
- (void)chooseInFont:(id)arg1;
- (void)addressMeInGroupChatChanged:(id)arg1;
- (void)autosaveChanged:(id)arg1;
- (void)_notifySavedChatPathChanged;
- (void)_setupChatPathMenu;
- (void)changeSaveChatLocation:(id)arg1;
- (void)openAutosaveFolder:(id)arg1;
- (void)autoRestoreEnableChanged:(id)arg1;
- (void)autoRestoreCountChanged:(id)arg1;
- (void)changePersistentChats:(id)arg1;
- (BOOL)hasChangesPending;
- (void)saveChanges;
- (void)collectChats:(id)arg1;
- (void)showHelp:(id)arg1;
- (void)changeAutoReply:(id)arg1;

@end

@interface Tooltip : NSObject
{
    NSView *_view;
    NSWindow *_window;
    BOOL _fadingIn;
    NSTimer *_animationTimer;
    NSDate *_animationStartDate;
    struct CGPoint _previousPosition;
}

- (void)awakeFromNib;
- (id)initWithNibNamed:(id)arg1;
- (void)dealloc;
- (void)positionAtPoint:(struct CGPoint)arg1 inView:(id)arg2;
- (void)_setAnimationStartDate;
- (void)_stopAnimationTimer;
- (void)_setAnimationTimer;
- (void)_finishAnimation;
- (void)_animationStep:(id)arg1;
- (BOOL)isAnimating;
- (void)_fadeIn:(BOOL)arg1;
- (void)open;
- (BOOL)isVisible;
- (void)close;
- (void)closeImmediately;
- (void)showWindowImmediately;
- (void)hideWindowImmediately;
- (void)cleanupAfterClose;

@end

@interface PresenceTooltip : Tooltip <IMDirectlyObservableObjectObserver>
{
    FezPresence *_presence;
    NSArray *_uniqueIMHandles;
    NSMutableArray *_tableText;
    FezImageView *_iconView;
    NSTextField *_nameField;
    NSTableView *_table;
}

+ (id)_mobileStringRepresentation;
+ (id)_botStringRepresentation;
- (id)_attributesForNameBold:(BOOL)arg1 disabled:(BOOL)arg2;
- (id)_attributesForStatus;
- (id)_attributesForProfileHeader;
- (id)_attributesForProfile;
- (id)init;
- (id)_textCell;
- (void)awakeFromNib;
- (void)dealloc;
- (void)closeImmediately;
- (id)_idleStringForIMHandle:(id)arg1;
- (id)_offlineStringForIMHandle:(id)arg1;
- (id)_otherServiceStringForIMHandle:(id)arg1;
- (void)_addTextForIMHandle:(id)arg1 highlighted:(BOOL)arg2;
- (void)_updateTableText;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)_updateUIWithDisplay:(BOOL)arg1;
- (void)_updateUI;
- (void)_fetchProfile;
- (void)setupProfile;
- (void)_finishAnimation;
- (void)_updateIMHandles;
- (void)objectDidPostDirectNotification:(id)arg1;
- (void)accountOrderChanged:(id)arg1;
- (id)presence;
- (void)setPresence:(id)arg1;

@end

@interface ProfileContainer : NSView
{
}

- (BOOL)isFlipped;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface ProfileTextField : NSTextField
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface ProfileTextView : NSTextView
{
}

- (void)_showSelectedText:(BOOL)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (BOOL)shouldDrawInsertionPoint;
- (void)scrollWheel:(id)arg1;

@end

@interface ProfileView : NSView <NSTextViewDelegate>
{
    BuddyInfo *_owner;
    IMHandle *_imHandle;
    NSView *_contentView;
    NSBox *_separator;
    NSImageView *_statusGemView;
    FezImageView *_buddyIconView;
    NSTextField *_accountNameField;
    NSImageView *_accountTypeView;
    NSTextField *_serviceNameField;
    NSImageView *_mobileIconView;
    NSView *_textContainer;
    NSTextField *_idleField;
    NSTextField *_profileLabel;
    NSTextView *_profileText;
    NSTextField *_messageLabel;
    NSTextView *_messageText;
    NSTextField *_capsLabel;
    NSTextView *_capsText;
    NSTextField *_notesLabel;
    NSTextField *_notesText;
}

- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)_adjustLabel:(id)arg1 toTextView:(id)arg2;
- (float)_adjustTextView:(id)arg1 dy:(float)arg2;
- (void)_hideMessage:(BOOL)arg1;
- (void)_removeProfile;
- (void)_removeNotes;
- (void)_updateLayout:(BOOL)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)mouseDown:(id)arg1;
- (id)_capabilitiesText;
- (void)_updateServiceName;
- (void)_updateStatus:(id)arg1;
- (void)_updateCapabilities:(id)arg1;
- (void)_updatePicture:(id)arg1;
- (void)_hideNotes:(BOOL)arg1;
- (void)_updateNotesAndSetText:(BOOL)arg1;
- (void)_updateMobile:(id)arg1;
- (void)_updateBot:(id)arg1;
- (void)_feedUpdatedDateChanged:(id)arg1;
- (void)_infoChanged:(id)arg1;
- (void)_extraPropsChanged:(id)arg1;
- (void)_accountStatusChanged:(id)arg1;
- (id)initWithIMHandle:(id)arg1 owner:(id)arg2 saveNib:(BOOL)arg3;
- (id)imHandle;
- (void)setOwner:(id)arg1;
- (void)setShowsSeparator:(BOOL)arg1;
- (void)awakeFromNib;
- (void)dealloc;
- (void)toggleBuddy:(id)arg1;
- (void)showFullSizeBuddyIcon:(id)arg1;
- (void)setNotes:(id)arg1;

@end

/*@interface QCComposition (VideoPipelineAdditions)
- (id)asDictionary;
@end*/

@interface QLAuxVideoReceiver : AuxVideoReceiver <QLPreviewViewDelegate, QLPreviewSlideshowDelegate>
{
    QLPreviewView *_previewView;
    QLPreviewSlideshow *_slideshow;
    NSArray *_items;
    unsigned long long _currentIndex;
    long long _indexDelta;
    IMAuxVideoProvider *_provider;
    BOOL _slideshowNeedsAutostart;
    NSTimer *_sliderTimer;
    BOOL _needsUpdate;
}

- (void)_observeSlideshowRunning:(BOOL)arg1;
- (id)initWithAuxVideoController:(id)arg1 bundleID:(id)arg2 URLs:(id)arg3;
- (void)_qlCleanup;
- (void)dealloc;
- (void)activateProvider;
- (void)deactivateProvider;
- (oneway void)provider:(id)arg1 sentBuffer:(int)arg2 withAttachments:(id)arg3;
- (void)setURLs:(id)arg1;
- (unsigned long long)_indexWithDelta:(long long)arg1;
- (void)_setCurrentItemIndex:(unsigned long long)arg1 delta:(long long)arg2 withTransition:(int)arg3 blocking:(BOOL)arg4;
- (id)currentControlBarDictionaryRepresentation;
- (void)_configureBufferPoolAndAudioChannels;
- (void)_updateControlsForPreviewView:(id)arg1;
- (void)previewView:(id)arg1 willShowPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 didShowPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 didChangeDisplayStateForPreviewItem:(id)arg2;
- (void)_advanceBy:(long long)arg1;
- (void)slideshowGoToNextItem:(id)arg1;
- (id)currentSlideshowItem;
- (id)nextSlideshowItem;
- (void)performActionForControlWithIdentifier:(id)arg1 control:(id)arg2;
- (void)theaterScrollWheel:(id)arg1 atRelativePoint:(struct CGPoint)arg2;
- (void)_deferredPerformUpdate;
- (void)scheduleUpdateTimerFired:(id)arg1;
- (void)scheduleUpdate;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@end

/*@interface QLPreviewPanel (iChatAdditions)
- (void)_imSelectQuickLookItemWithGUID:(id)arg1;
- (id)_imPreviewItemWithGUID:(id)arg1;
- (struct CGRect)_sourceFrameOnScreenForPreviewItem:(id)arg1;
@end*/

@interface QLTheater : NSObject <NSOpenSavePanelDelegate>
{
    NSOpenPanel *_openPanel;
    EnterURLController *_chooseURLController;
    int _canShare;
    int _fullScreenNotificationRegisterCount;
    BOOL _sharingDocuments;
}

+ (id)sharedQLTheater;
+ (BOOL)_openExternalClient:(id)arg1 withBundleID:(id)arg2 documentURL:(id)arg3 isiPhoto:(BOOL)arg4;
+ (BOOL)_warnARDChat;
+ (BOOL)_warnCameraDisabled;
+ (BOOL)shareFilesWithiChatTheater:(id)arg1;
+ (BOOL)shareFileWithiChatTheater:(id)arg1 usingApplication:(id)arg2;
+ (BOOL)sharePasteboardContentsWithiChatTheater:(id)arg1;
+ (BOOL)isSharingDocuments;
+ (BOOL)canChooseDocuments;
+ (void)chooseDocuments;
+ (void)chooseURL;
+ (BOOL)canChooseURL;
+ (id)_getiPhotoURL;
+ (id)_iPhotoURL;
+ (BOOL)canChooseiPhotoAlbum;
+ (void)chooseiPhotoAlbum;
+ (BOOL)canOpenURLsIniChatTheater:(id)arg1;
+ (BOOL)canOpenContentUTIIniChatTheater:(id)arg1;
+ (BOOL)canOpenPasteboardContentsIniChatTheater:(id)arg1;
- (void)_didEndFullScreen:(id)arg1;
- (void)_registerForFullScreenNotification;
- (void)_deRegisterForFullScreenNotification;
- (BOOL)_bundleCanProvideVideoData:(id)arg1;
- (BOOL)_externalApplication:(id)arg1 canOpenURLs:(id)arg2 launch:(BOOL)arg3;
- (BOOL)_quickLookCanOpenContentUTI:(id)arg1;
- (BOOL)_quickLookCanOpenURLs:(id)arg1 launch:(BOOL)arg2;
- (BOOL)_shareFilesWithiChatTheater:(id)arg1 usingApplication:(id)arg2;
- (void)_updateStatusText;
- (void)_chooseDocuments;
- (void)_chooseURLPanelDidEnd:(id)arg1;
- (void)_chooseURL;
- (void)dealloc;
- (BOOL)_isSharingDocuments;
- (void)_checkURLs:(id)arg1 succeeded:(BOOL)arg2;
- (void)_checkURLsFailed:(id)arg1;
- (void)_checkURLsSucceeded:(id)arg1;
- (void)_checkURLs:(id)arg1;
- (void)panelSelectionDidChange:(id)arg1;

@end

@interface RecentChat : NSObject
{
    NSString *_GUID;
    NSString *_accountID;
    int _style;
    int _ardRole;
    NSString *_roomName;
    BOOL _useRoomName;
    NSArray *_participants;
    BOOL _isValid;
}

- (id)initWithChat:(id)arg1;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;
- (id)dictionaryRepresentation;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToRecentChat:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)startChatFromMenuItem:(id)arg1;
- (void)startChat;
- (id)title;
- (int)style;
- (void)setStyle:(int)arg1;
- (int)ardRole;
- (void)setArdRole:(int)arg1;
- (id)GUID;
- (void)setGUID:(id)arg1;
- (id)participants;
- (void)setParticipants:(id)arg1;
- (void)setParticipantsFromStringArray:(id)arg1;
- (BOOL)useRoomName;
- (void)setUseRoomName:(BOOL)arg1;
- (id)roomName;
- (void)setRoomName:(id)arg1;
- (id)accountID;
- (void)setAccountID:(id)arg1;
- (BOOL)isValid;

@end

@interface RecentItemsController : NSObject
{
    NSMutableArray *_recentChats;
    NSArray *_recentDocURLs;
}

+ (id)sharedObject;
- (id)init;
- (void)dealloc;
- (void)chatRegistered:(id)arg1;
- (void)retrieveRecentsFromPrefs;
- (id)recentChats;
- (unsigned long long)recentChatsCount;
- (void)purgeRecentChatsForceSave:(BOOL)arg1;
- (void)clearMenuItem:(id)arg1;
- (void)noteRecentSavedChatURL:(id)arg1;
- (void)noteRecentChat:(id)arg1;
- (long long)numberOfItemsInMenu:(id)arg1;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (void)openFile:(id)arg1;

@end

@interface RecordingAVChatFeature : IMAVChatFeature
{
    NSMutableDictionary *_recordingNegotiations;
    unsigned int _lastRecordingNegotiationID;
    NSMutableDictionary *_vcPartyIDToRecordingNegotiationID;
    unsigned int _recordingRequested:1;
}

- (void)dealloc;
- (void)participant:(id)arg1 changedFromState:(unsigned int)arg2 toState:(unsigned int)arg3;
- (id)recordingFeatureDelegate;
- (void)_participantBeginRecording:(id)arg1 withID:(unsigned int)arg2;
- (void)_participantFinishedRecording:(id)arg1 withID:(unsigned int)arg2;
- (BOOL)recordingRequested;
- (void)_requestRecordingOnBehalfOf:(id)arg1 withID:(unsigned int)arg2;
- (void)requestRecording;
- (void)respondToRecordingRequestFromParticipant:(id)arg1 canRecord:(BOOL)arg2;
- (void)_participantRequestedRecording:(id)arg1 withID:(unsigned int)arg2;
- (void)_participantDeniedRecording:(id)arg1 forParticipant:(id)arg2 withID:(unsigned int)arg3;
- (void)_broadcastRecordingBeginForParticipant:(id)arg1 withID:(unsigned int)arg2;
- (void)_participantGrantedRecording:(id)arg1 forParticipant:(id)arg2 withID:(unsigned int)arg3;
- (void)recordingFinished;
- (BOOL)hasRecordingNegotiations;
- (void)_sendRecordingMessageToParticipant:(id)arg1 type:(unsigned int)arg2 forParticipant:(id)arg3 onBehalfOf:(id)arg4 withID:(unsigned int)arg5;
- (BOOL)handleGenericAVMessageFromParticipant:(id)arg1 type:(unsigned int)arg2 userInfo:(id)arg3;
- (BOOL)hasAddableParticipantsOtherwiseStatus:(unsigned int *)arg1;

@end

@interface RemoteAuxVideoMuxer : NSObject <IMAuxVideoReceiver>
{
    AuxVideoController *_auxVideoController;
    IMLocalObject *_videoReceiver;
}

- (void)_createReceivePort;
- (void)_destroyReceivePort;
- (void)_receivePortDidDie:(id)arg1;
- (id)initWithController:(id)arg1;
- (void)dealloc;
- (oneway void)provider:(id)arg1 bundleID:(id)arg2 connectWithPixelFormat:(unsigned int)arg3 videoStills:(BOOL)arg4 replacement:(BOOL)arg5 audioChannels:(int)arg6 controlsDictionary:(id)arg7;
- (oneway void)provider:(id)arg1 sentBuffer:(int)arg2 withAttachments:(id)arg3;
- (oneway void)provider:(id)arg1 updateControlBarFromDictionaryRepresentation:(id)arg2;

@end

@interface RemoteAuxVideoReceiver : AuxVideoReceiver
{
    IMRemoteObject<IMAuxVideoProvider> *_videoProvider;
}

- (void)setFrameRate:(double)arg1;
- (void)activateProvider;
- (void)deactivateProvider;
- (void)_mainThreadClientDidDisconnect:(id)arg1;
- (void)_clientDidDisconnect:(id)arg1;
- (void)provider:(id)arg1 bundleID:(id)arg2 connectWithPixelFormat:(unsigned int)arg3 videoStills:(BOOL)arg4 replacement:(BOOL)arg5 audioChannels:(int)arg6 controlsDictionary:(id)arg7;
- (id)_controls:(id)arg1 withVolumeLevel:(double)arg2;
- (void)setControls:(id)arg1;
- (void)performActionForControlWithIdentifier:(id)arg1 control:(id)arg2;

@end

@interface ReplaceBackgroundUILayer : OpenGLNSViewLayer
{
}

- (id)initWithLayerName:(id)arg1;
- (void)dealloc;
- (void)compositeLayer:(struct _CGLContextObject *)arg1;
- (void)_replaceBackgroundMessageChanged:(id)arg1;
- (void)_adjustLayerSize;
- (void)setTextMessage:(id)arg1;
- (void)stopReceivingMessageChangedNotifications;
- (void)addedToSuperLayer:(id)arg1;

@end

@interface ReplaceBackgroundUIView : NSView
{
    NSDictionary *_attributes;
    NSString *_message;
    NSCell *_cell;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;
- (id)textAttributes;
- (id)textMessage;
- (void)setTextMessage:(id)arg1;
- (id)cell;

@end

@interface SKDashboardButton : NSButton
{
    int _direction;
    NSMutableDictionary *_attr;
    long long _trackingRectTag;
    BOOL _active;
    BOOL _displayCapsule;
    struct CGRect _activeRect;
    NSString *_string;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;
- (void)setDirection:(int)arg1;
- (void)setIndex:(unsigned int)arg1 count:(unsigned int)arg2;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (id)leftArrowPathInRect:(struct CGRect)arg1;
- (id)rightArrowPathInRect:(struct CGRect)arg1;
- (id)capsulePathInRect:(struct CGRect)arg1;
- (struct CGSize)sizeForString;
- (void)updateTrackingRect;
- (void)drawHoverTarget;
- (void)drawCapsule;
- (struct CGRect)capsuleRectForDirection;
- (struct CGRect)hoverRectForDirection;
- (BOOL)checkPoint:(struct CGPoint)arg1;

@end

@interface SavedChat : Chat
{
}

- (BOOL)_shouldRegisterChat;

@end

@interface SearchBackgroundView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface SelfPreviewController : NSWindowController
{
    NSExtendedBox *_vcBevel;
    CameraPreferencesView *_cameraView;
    NSTabView *_cameraTabView;
    NSExtendedBox *_noCameraBox;
    NSTextField *_noCameraTextField;
    VolumeIndicator *_volumeIndicator;
}

+ (id)sharedPreviewController;
- (void)_updateUI;
- (void)_startStopAV;
- (void)_setWindowTitle;
- (void)_prefsChangedNotification:(id)arg1;
- (void)_layerViewVideoSizeChanged:(id)arg1;
- (void)windowDidLoad;
- (void)windowWillClose:(id)arg1;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (void)windowDidEndLiveResize:(id)arg1;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (void)copy:(id)arg1;
- (void)takeVideoSnapshot:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;

@end

@interface SendCommand : NSScriptCommand
{
}

- (id)_sendInvitation;
- (id)_sendMessage;
- (id)_sendFile;
- (id)performDefaultImplementation;

@end

@interface SendFileDialog : NSObject <FileTransferIconLoaderDelegate, NSWindowRestoration>
{
    NSPanel *_confirmPanel;
    NSTextField *_messageField;
    NSButton *_dontAskAgainBox;
    NSImageView *_fileIcon;
    NSButton *_cancelButton;
    NSButton *_sendButton;
    NSArray *_fileURLs;
    IMHandle *_handle;
    unsigned int _requireArchiving:1;
}

+ (id)dialogWithFileURLs:(id)arg1 handle:(id)arg2;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
- (id)_initWithFileURLs:(id)arg1 handle:(id)arg2;
- (void)_loadNIB;
- (void)dealloc;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)fileTransferIconDidLoad:(id)arg1;
- (void)show;
- (void)start:(id)arg1;
- (void)close:(id)arg1;

@end

@interface Service : IMServiceImpl
{
    NSImage *_serviceIcon;
    NSArray *_defaultBuddyIcons;
    NSArray *_defaultBuddyImages;
    BOOL _defaultBuddyIconChecked;
    BOOL _serviceIconChecked;
    BOOL _customCanonicalFormOfID;
}

+ (void)disconnectAllServices;
+ (void)initialize;
+ (void)daemonWillConnect:(id)arg1;
+ (void)daemonConnectionLost:(id)arg1;
+ (BOOL)connectToDaemon;
+ (id)allServices;
+ (id)allServicesNonBlocking;
+ (id)myPicture;
+ (void)setMyPicture:(id)arg1;
- (void)dealloc;
- (id)icon;
- (long long)compareNames:(id)arg1;
- (Class)accountClass;

@end

@interface ServiceController : NSObject
{
}

+ (id)sharedObject;
- (id)init;
- (void)_accountNoLongerJustLoggedIn:(id)arg1;

@end

@interface ServiceErrorDialog : NSObject
{
    NSPanel *_errorPanel;
    NSTextField *_errorMessageField;
    NSTextField *_errorInfoTextField;
    NSTextField *_errorTimestampField;
    NSImageView *_errorIcon;
    NSButton *_okButton;
    long long _requestID;
    Account *_account;
    int _type;
    unsigned int _isClosing:1;
}

+ (void)closeErrorDialogsForAccount:(id)arg1 ofType:(int)arg2;
+ (id)errorDialogsForAccount:(id)arg1 ofType:(int)arg2;
+ (id)allErrorDialogsOfType:(int)arg1;
+ (void)closeErrorDialogsForAccount:(id)arg1;
+ (id)errorDialogsForAccount:(id)arg1;
+ (id)allErrorDialogs;
+ (void)_displayAlertMessage:(id)arg1 infoText:(id)arg2 windowTitle:(id)arg3 forAccount:(id)arg4 ofType:(int)arg5;
+ (void)displayDisconnectAlertInfoText:(id)arg1 wasConnected:(BOOL)arg2 forAccount:(id)arg3;
+ (void)displayError:(id)arg1 forAccount:(id)arg2 ofType:(int)arg3;
+ (void)displayDaemonDisconnectedDialog;
- (int)type;
- (id)associatedAccount;
- (void)showPanel:(id)arg1;
- (void)closeErrorPanel:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)_resizePanelForField:(id)arg1 withOtherField:(id)arg2 havingYMargin:(unsigned long long)arg3;
- (void)dealloc;
- (id)initWithMessage:(id)arg1 infoText:(id)arg2 windowTitle:(id)arg3 date:(id)arg4 image:(id)arg5 associatedAccount:(id)arg6 errorType:(int)arg7 closeOnDaemonReconnect:(BOOL)arg8;

@end

@interface ServiceFieldController : NSCollectionViewItem <NSTokenFieldDelegate>
{
    NSTextField *_serviceLabel;
    NSTokenField *_handlesTokenField;
    NSObject<ServiceFieldControllerDelegate, NSTokenFieldDelegate> *_delegate;
}

- (void)dealloc;
- (void)setView:(id)arg1;
- (void)setRepresentedObject:(id)arg1;
- (void)setEditable:(BOOL)arg1;
- (id)handlesTokenField;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)handleTokensDidChange:(id)arg1;
- (BOOL)tokenField:(id)arg1 hasMenuForRepresentedObject:(id)arg2;
- (id)tokenField:(id)arg1 menuForRepresentedObject:(id)arg2;
- (id)tokenField:(id)arg1 readFromPasteboard:(id)arg2;
- (id)tokenField:(id)arg1 shouldAddObjects:(id)arg2 atIndex:(unsigned long long)arg3;

@end

@interface ServicePopUp : NSPopUpButton
{
    unsigned long long _requiredCapabilities;
    Service *_requiredService;
    NSArray *_requiredServices;
    NSArray *_requiredAccounts;
    NSMutableArray *_possibleAccounts;
    id <ServicePopUpDelegate> _delegate;
    BOOL _requireActiveAccounts;
    BOOL _requireConnectedAccounts;
}

- (void)dealloc;
- (void)setDelegate:(id)arg1;
- (BOOL)_updateMenu;
- (void)awakeFromNib;
- (void)requireConnectedAccounts:(BOOL)arg1;
- (void)requireActiveAccounts:(BOOL)arg1;
- (void)requireAccounts:(id)arg1;
- (void)requireService:(id)arg1;
- (void)requireServices:(id)arg1;
- (void)requireCapabilities:(unsigned long long)arg1;
- (void)activeAccountsChanged:(id)arg1;
- (void)accountStatusChanged:(id)arg1;
- (id)selectedAccount;
- (void)selectAccount:(id)arg1;
- (id)possibleAccounts;

@end

@interface ShadowView : NSView
{
    NSColor *_backgroundColor;
    NSColor *_contentColor;
    NSShadow *_shadow;
    BOOL _drawsShadow;
    id _eventDelegate;
}

- (void)dealloc;
- (void)setDefaultShadow;
- (void)setShadow:(id)arg1;
- (id)shadow;
- (void)setDrawsShadow:(BOOL)arg1;
- (BOOL)drawsShadow;
- (void)setContentColor:(id)arg1;
- (id)contentColor;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;
- (void)setEventDelegate:(id)arg1;
- (id)eventDelegate;
- (void)mouseDown:(id)arg1;

@end

@interface SingleLineDivider : NSExtendedBox
{
}

- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SmileyButton : NSButton
{
}

- (void)mouseDown:(id)arg1;
- (id)accessibilityActionNames;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityAttributeValue:(id)arg1;

@end

@interface SmileyCell : NSButtonCell
{
    NSString *_axDescription;
}

- (void)dealloc;
- (id)accessibilityAttributeNames;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (id)accessibilityAttributeValue:(id)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface SmileyGrid : NSMatrix
{
    long long _numberOfSmileys;
}

- (void)_layoutCells:(long long)arg1 cellsPerRow:(long long)arg2;
- (void)setUpWithSmileys:(id)arg1 columns:(long long)arg2;
- (long long)numberOfSmileys;
- (void)highlightCell:(BOOL)arg1 atPosition:(long long)arg2;
- (long long)arrowKeyDown:(unsigned short)arg1 fromSelectedItem:(long long)arg2;
- (id)accessibilityFocusedUIElement;

@end

@interface SmileyPicker : NSObject <NSWindowDelegate>
{
    NSView *_smileyView;
    SmileyGrid *_smileyGrid;
    NSTextField *_smileyNameField;
    NSTextField *_smileyTextField;
    NSWindow *_window;
    NSTimer *_timer;
    long long _numFlashes;
    long long _uniqueSmileyCounter;
    NSMutableArray *_smileyMenuItems;
}

+ (id)sharedInstance;
- (struct CGRect)windowContentFrameForSmileyButton:(id)arg1;
- (void)_updateTextFieldsForItem:(long long)arg1;
- (long long)_trackMenuSelection;
- (void)_fadeOut:(id)arg1;
- (void)_doFlash:(id)arg1;
- (void)_flashItem:(long long)arg1;
- (long long)pickSmileyFromButton:(id)arg1;
- (void)awakeFromNib;
- (id)smileyMenuItems;
- (long long)numberOfItemsInMenu:(id)arg1;
- (BOOL)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)updateSelectedItem:(long long)arg1 forKeyDown:(unsigned short)arg2;
- (void)highlightSelectedItem:(long long)arg1;
- (long long)newSelectionForMouseMoved:(id)arg1;
- (void)insertSmileyForTag:(long long)arg1 intoTextView:(id)arg2;
- (id)installSmileyButtonInView:(id)arg1 margin:(struct CGSize)arg2;

@end

@interface StatusControlCellView : NSTableCellView
{
    MyStatusImageControl *_statusImageControl;
    MyStatusControl *_statusControl;
    ExtendedTextField *_accountName;
    NSBox *_greyBox;
    NSBox *_whiteBox;
    Account *_representedAccount;
    StatusController *_statusController;
}

+ (void)setUsesLegacyScroller:(BOOL)arg1;
- (void)awakeFromNib;
- (void)_cleanup;
- (void)dealloc;
- (void)_windowKeyStateChanged:(id)arg1;
- (void)setupForAccount:(id)arg1;
- (void)updateUIForActiveState:(BOOL)arg1;
- (void)hideEtchingLines:(BOOL)arg1;
- (void)layoutInteriorViews;
- (void)setFrame:(struct CGRect)arg1;
@property(readonly, nonatomic) ExtendedTextField *accountName; // @synthesize accountName=_accountName;
@property(readonly, nonatomic) MyStatusControl *statusControl; // @synthesize statusControl=_statusControl;
@property(retain, nonatomic) StatusController *statusController; // @synthesize statusController=_statusController;
@property(retain, nonatomic) Account *representedAccount; // @synthesize representedAccount=_representedAccount;
@property(readonly, nonatomic) MyStatusImageControl *statusImageControl; // @synthesize statusImageControl=_statusImageControl;

@end

@interface StatusController : NSObject <NSMenuDelegate, RolloverButtonDelegate, MyStatusControlDelegate>
{
    MyStatusControl *_statusControl;
    MyNameControl *_nameControl;
    MyPictureControl *_myPicture;
    MyStatusImageControl *_statusImageControl;
    NSMenu *_nameControlMenu;
    NSMutableArray *_customAvailableMessages;
    NSMutableArray *_customAwayMessages;
    NSArray *_accounts;
    NSString *_lastSetStatusMessage;
    unsigned long long _lastSetNormalStatus;
    unsigned int _lastSetInvisibleStatus:1;
    unsigned int _finishedInitializing:1;
    unsigned int _supportsInvisible:1;
    unsigned int _isInvisible:1;
    unsigned int _isEntirelyInvisible:1;
    unsigned int _hideEmoticons:1;
    unsigned int _ignoreSameStatus:1;
    unsigned int _statusImageControlRetained:1;
    unsigned int _statusControlRetained:1;
}

- (void)awakeFromNib;
- (void)updateStatusImage;
- (void)_statusIndicatorDidChange:(id)arg1;
- (void)finishInitializing;
- (void)dealloc;
- (id)description;
- (void)_configureInvisibleSupport;
- (void)setStatusImageControl:(id)arg1;
- (id)statusImageControl;
- (void)setStatusControl:(id)arg1;
- (id)statusControl;
- (void)setAccounts:(id)arg1;
- (void)setAccount:(id)arg1;
- (id)accounts;
- (BOOL)_loadDefaultStatusMessagesIfNecessary;
- (BOOL)_importLegacyStatusMessagesIfNecessary;
- (void)_saveCustomMessages;
- (void)_readCustomMessagesFromPrefs;
- (void)_rebuildStatusControlMenu;
- (void)showError:(id)arg1;
- (void)setIgnoreSameStatusForAllAccounts:(BOOL)arg1;
- (void)updateNameField;
- (void)showMyStatus;
- (void)accountUpdated:(id)arg1;
- (void)accountCapsChanged:(id)arg1;
- (void)invisibleStatusChanged:(id)arg1;
- (void)myStatusChanged:(id)arg1;
- (void)serviceStatusChanged:(id)arg1;
- (void)nowPlayingInfoChanged:(id)arg1;
- (void)trimStatusMessages;
- (void)customStatusMessagesChanged:(id)arg1;
- (void)editCustomMessages:(id)arg1;
- (void)changeShowSingleStatus:(id)arg1;
- (void)viewAsName:(id)arg1;
- (void)viewAsHandle:(id)arg1;
- (BOOL)_timeExistsForStatusMessage:(id)arg1 forStatus:(int)arg2;
- (id)_oldestStatusMessageForStatus:(int)arg1;
- (void)_removeMessage:(id)arg1 forStatus:(int)arg2;
- (void)_touchStatusMessage:(id)arg1 forStatus:(int)arg2;
- (void)_trimStaleTimeStamps;
- (BOOL)_trimStatusMessagesForStatus:(int)arg1;
- (void)_status:(unsigned long long)arg1 toCustomMessageList:(id *)arg2 andPrefsName:(id *)arg3;
- (void)myStatusControl:(id)arg1 changedStatus:(int)arg2 message:(id)arg3;
- (void)myStatusControl:(id)arg1 addedMessage:(id)arg2 forStatus:(int)arg3;
- (id)nameForStatus:(int)arg1;
- (id)imageForStatus:(int)arg1;
- (id)customMessagesForStatus:(int)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateMessage:(id)arg1 forStatus:(int)arg2;
- (int)desiredStatus;
- (int)desiredLeastAvailableStatus;
- (void)_checkInvisible;
- (BOOL)isInvisible;
- (BOOL)isEntirelyInvisible;
- (int)leastAvailableStatus;
- (int)currentStatus;
- (int)lowestStatus;
- (id)nowPlayingString;
- (unsigned long long)_myStatus;
- (unsigned long long)_myLeastAvailableStatus;
- (id)_myStatusMessage;
- (BOOL)usingTemplateMessage;
- (id)currentRealMessage;
- (id)currentMessage;
- (id)menuForMyRolloverButton:(id)arg1;
- (void)_setMyStatusFromItem:(id)arg1;
- (long long)numberOfItemsInMenu:(id)arg1;
- (BOOL)_isCurrentlyCustomStatus;
- (BOOL)supportsInvisible;
- (void)_setStatusToStatus:(unsigned long long)arg1;
- (void)_setAvailableFromMenu:(id)arg1;
- (void)_setAwayFromMenu:(id)arg1;
- (void)_setOfflineFromMenu:(id)arg1;
- (void)_setInvisibleFromMenu:(id)arg1;
- (void)setInvisible:(BOOL)arg1;
- (void)setShowEmotions:(BOOL)arg1;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;

@end

@interface StatusTokenFieldController : NSObject <NSTokenFieldDelegate, ServicePopUpDelegate>
{
    NSTokenField *_tokenField;
    ServicePopUp *_accountPopup;
    ABPerson *_abPerson;
    NSArray *_cachedIMHandles;
    Account *_selectedAccount;
    NSMutableArray *_imHandlesWhenEditing;
    unsigned int _displayIMHandles:1;
    unsigned int _autoFilled:1;
    unsigned int _readFromPasteBoard:1;
    unsigned int _isEditing:1;
    unsigned int _updateAfterEditing:1;
    unsigned int _updatesIMHandlesWithService:1;
}

- (void)awakeFromNib;
- (void)dealloc;
- (id)tokenField;
- (void)setAutoFilled:(BOOL)arg1;
- (BOOL)isAutoFilled;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)isEnabled;
- (void)setDisplaysIMHandles:(BOOL)arg1;
- (void)setIMHandles:(id)arg1;
- (void)setABPerson:(id)arg1;
- (id)imHandles;
- (id)imHandlesList;
- (void)_statusGemChanged:(id)arg1;
- (void)_accountWillChange:(id)arg1;
- (void)_postTokensDidChangeNotification;
- (void)_refreshTokens;
- (void)updateTokensForAccount:(id)arg1;
- (void)_targetIMHandleUpdated:(id)arg1;
- (id)_validateIMHandles:(id)arg1;
- (void)_recacheIMHandleInformation;
- (void)servicePopUpSelectionDidChange:(id)arg1;
- (void)accountChanged:(id)arg1;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (id)tokenField:(id)arg1 readFromPasteboard:(id)arg2;
- (BOOL)tokenField:(id)arg1 writeRepresentedObjects:(id)arg2 toPasteboard:(id)arg3;
- (id)tokenField:(id)arg1 completionsForSubstring:(id)arg2 indexOfToken:(long long)arg3 indexOfSelectedItem:(long long *)arg4;
- (id)tokenField:(id)arg1 representedObjectForEditingString:(id)arg2;
- (id)tokenField:(id)arg1 shouldAddObjects:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)controlTextDidBeginEditing:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (id)tokenField:(id)arg1 displayStringForRepresentedObject:(id)arg2;
- (id)tokenField:(id)arg1 setUpTokenAttachmentCell:(id)arg2 forRepresentedObject:(id)arg3;
- (id)tokenField:(id)arg1 editingStringForRepresentedObject:(id)arg2;

@end

@interface Stopwatch : NSObject
{
    NSString *_name;
    double _startTime;
    double _elapsedTime;
    double _averageTime;
    double _averageSum;
    double _lastSampleTime;
    double _logInterval;
    double _lastLogTime;
    int _averageCount;
}

+ (id)stopwatchWithName:(id)arg1;
+ (id)stopwatchWithName:(id)arg1 logInterval:(double)arg2;
- (id)initWithName:(id)arg1 logInterval:(double)arg2;
- (void)dealloc;
@property(readonly) double totalElapsedTime;
- (void)reset;
- (void)resetElapsed;
- (void)sample;
- (id)description;
- (void)sampleAndLog;
- (void)sampleAndLogWithLabel:(id)arg1;
- (BOOL)shouldLog;
- (void)sampleAndLogIfNeeded;
@property(readonly) double averageTime; // @synthesize averageTime=_averageTime;
@property(readonly) double elapsedTime; // @synthesize elapsedTime=_elapsedTime;
@property double logInterval; // @synthesize logInterval=_logInterval;
@property(readonly) NSString *name; // @synthesize name=_name;

@end

@interface StretchyImageView : NSView
{
    NSImage *_image;
    float _tileMargins[4];
    float _opacity;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setImage:(id)arg1;
- (id)image;
- (void)setTileLeft:(float)arg1 right:(float)arg2 top:(float)arg3 bottom:(float)arg4;
- (void)setTile:(float)arg1;
- (void)getTileLeft:(float *)arg1 right:(float *)arg2 top:(float *)arg3 bottom:(float *)arg4;
- (void)setOpacity:(float)arg1;
- (float)opacity;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface SystemSound : NSObject
{
    unsigned int _soundID;
}

+ (id)soundForPath:(id)arg1;
- (id)_initWithSystemSoundID:(unsigned int)arg1;
- (void)dealloc;
- (void)play;

@end

@interface TabbedChatTableCell : NSActionCell
{
    ChatWindowController *_list;
    BOOL _oneLine;
    BOOL _disabled;
    long long _imageIndex;
    long long _imageState;
    struct CGRect _imageRect;
    BOOL _urlMouseDown;
    BOOL _urlMouseOver;
    BuddyPicture *_personImage;
    BuddyPicture *_everyoneImage;
    NSButtonCell *_imageDrawingCell;
    NSTextFieldCell *_nameDrawingCell;
}

+ (void)setUsesLegacyScroller:(BOOL)arg1;
+ (struct CGSize)tabCoseSize;
+ (id)_lineBreakAttributes;
+ (id)displayNameForString:(id)arg1;
+ (id)displayNameForChat:(id)arg1;
+ (id)displayNameForIMHandle:(id)arg1;
+ (void)setIconSize:(struct CGSize)arg1;
+ (struct CGSize)iconSize;
+ (struct CGRect)rectOfPictureWithFrame:(struct CGRect)arg1 inView:(id)arg2;
+ (struct CGRect)rectOfCloseBox:(struct CGRect)arg1 inView:(id)arg2 usingWidth:(double)arg3;
+ (struct CGRect)rectOfCloseBox:(struct CGRect)arg1 inView:(id)arg2;
+ (void)drawColorFadeOfColor:(id)arg1 inRect:(struct CGRect)arg2;
- (void)setChatWindowController:(id)arg1;
- (id)list;
- (id)initWithChatWindowController:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)_redisplay:(id)arg1;
- (void)_closeTabItem;
- (BOOL)trackMouseDown:(id)arg1 inCloseRect:(BOOL)arg2 withRect:(struct CGRect)arg3 cellFrame:(struct CGRect)arg4 ofView:(id)arg5;
- (BOOL)startTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;
- (BOOL)continueTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (void)setOneLine:(BOOL)arg1;
- (BOOL)oneLine;
- (void)setDisabled:(BOOL)arg1;
- (BOOL)isDisabled;
- (id)closeImageWithRollover:(BOOL)arg1;
- (id)badgeColor;
- (id)badgeTextColor;
- (void)controlTintChanged:(id)arg1;
- (id)badgeTextAttributes;
- (double)badgeWidthWithCount:(long long)arg1;
- (void)drawBadgeCenteredInRect:(struct CGRect)arg1 withCount:(long long)arg2;
- (BOOL)shouldAnimate;
- (id)highlightColorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawHighlightWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)_layoutInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2 draw:(BOOL)arg3;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)layoutInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;

@end

@interface TemplateView : NSView
{
    NSView *_actualView;
}

- (id)actualView;
- (void)apply;

@end

@interface Texture : NSObject
{
    struct __CVBuffer *_sourceBuffer;
    struct __CVBuffer *_texture;
    QCImage *_qcImage;
    CIImage *_ciImage;
    BOOL _mirrored;
    BOOL _replacementVideo;
}

+ (struct __CVOpenGLTextureCache *)sharedTextureCache;
+ (void)flushCache;
+ (BOOL)useCoreImage;
+ (id)textureWithCVImageBuffer:(struct __CVBuffer *)arg1;
- (id)initWithCVImageBuffer:(struct __CVBuffer *)arg1;
- (void)dealloc;
@property(readonly) struct __CVBuffer *sourceImage;
- (id)CVOpenGLTextureObj;
- (id)qcImage;
- (unsigned int)target;
- (unsigned int)name;
- (BOOL)_isFlipped;
- (struct CGRect)textureRect;
@property(readonly) CIImage *displayImage;
- (id)_userFrames;
- (id)_userFrameForId:(id)arg1;
- (id)_auxVideoUserFrame;
- (id)userIds;
- (BOOL)hasAuxVideoFrame;
- (void)setReplacementVideo:(BOOL)arg1;
- (BOOL)isReplacementVideo;
- (struct CGRect)userRect:(id)arg1 auxVideo:(BOOL)arg2;
- (struct CGRect)userRect:(id)arg1;
- (float)gamma;
- (double)time;
- (id)attachments;
- (struct CGRect)sizeOfFrameWithUserId:(id)arg1 flags:(int)arg2;
- (void)drawInContext:(struct _CGLContextObject *)arg1 userId:(id)arg2 inRect:(struct CGRect)arg3 flags:(int)arg4;
- (void)drawInContext:(struct _CGLContextObject *)arg1 textureRect:(struct CGRect)arg2 inRect:(struct CGRect)arg3 flags:(int)arg4;
- (void)drawInCIContext:(id)arg1 userId:(id)arg2 inRect:(struct CGRect)arg3 flags:(int)arg4;
- (void)drawInCIContext:(id)arg1 textureRect:(struct CGRect)arg2 inRect:(struct CGRect)arg3 flags:(int)arg4;
@property BOOL mirrored; // @synthesize mirrored=_mirrored;

@end

@interface ThreadNotifier : NSObject
{
    NSString *_name;
    NSThread *_thread;
    FrameNotifier *_frameNotifier;
    NSMutableSet *_listeners;
    unsigned int _isPostingFrame:1;
    struct dispatch_queue_s *_lock;
    struct dispatch_queue_s *_queue;
}

- (id)initWithName:(id)arg1 thread:(id)arg2 frameNotifier:(id)arg3;
- (void)dealloc;
- (long long)listenerCount;
- (BOOL)addListener:(id)arg1;
- (void)removeListener:(id)arg1;
- (struct dispatch_queue_s *)queue;
- (BOOL)postFrame:(id)arg1;
@property(readonly) NSString *name; // @synthesize name=_name;

@end

@interface TranscriptStylePluginLoader : NSObject
{
    NSMutableArray *_pluginIdentifiers;
}

- (id)init;
- (void)dealloc;
- (id)identifiers;
- (id)loadedPluginWithIdentifier:(id)arg1;
- (id)pluginWithIdentifier:(id)arg1;

@end

@interface TranscriptStylePluginRegistry : NSObject
{
    TranscriptStylePluginLoader *_pluginLoader;
}

+ (id)sharedRegistry;
- (id)init;
- (void)dealloc;
- (id)plugins;
- (id)loadedPluginWithIdentifier:(id)arg1;
- (id)pluginIdentifierForClass:(Class)arg1;
- (id)menuItems;

@end

@interface TwoViewContainer : NSView
{
    NSView *_view1;
    NSView *_view2;
    float _spacerWidth;
    BOOL _vertical;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (float)spacerWidth;
- (void)setSpacerWidth:(float)arg1;
- (BOOL)isVertical;
- (void)setVertical:(BOOL)arg1;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;

@end

@interface UTF8ByteLengthFormatter : NSFormatter
{
    long long _maxBytes;
}

- (id)initWithMaxBytes:(int)arg1;
- (id)stringForObjectValue:(id)arg1;
- (BOOL)getObjectValue:(id *)arg1 forString:(id)arg2 errorDescription:(id *)arg3;
- (id)attributedStringForObjectValue:(id)arg1 withDefaultAttributes:(id)arg2;
- (BOOL)isPartialStringValid:(id *)arg1 proposedSelectedRange:(struct _NSRange *)arg2 originalString:(id)arg3 originalSelectedRange:(struct _NSRange)arg4 errorDescription:(id *)arg5;

@end

@interface UserSetupController : NSObject
{
    NSButton *_goBackButton;
    NSButton *_continueButton;
    NSPopUpButton *_accountTypeMenu;
    NSWindow *_userSetupWindow;
    NSTabView *_tabView;
    NSTextField *_currentTitle;
    NSTabView *_accountTypeTabView;
    NSTextField *_skipText;
    NSTextField *_conclusionText;
    NSTextField *_clickDoneText;
    id _delegate;
    BOOL _disableJabber;
    BOOL _disableAIM;
    DotMacCaps *_dotMacCaps;
    Account *_accountObject;
    NSMutableArray *_addedAccounts;
    NSWindow *_parentWindow;
    BOOL _hasRun;
    BOOL _runningAsFirstTimeUser;
    BOOL _hasSetupAtLeastOneAccount;
    NSMutableDictionary *_preferenceControllers;
}

+ (BOOL)userIsSetup;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)_setupAccount;
- (BOOL)_saveMeCard;
- (void)_sendMeCardPictureToDaemon;
- (void)accountTypeChanged:(id)arg1;
- (void)addAnotherAccount:(id)arg1;
- (id)addedAccounts;
- (id)_defaultDescriptionForAccount:(id)arg1;
- (void)_finishSetup;
- (void)_closeSetup;
- (void)userSetupSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)runAccountSetupAttachedToWindow:(id)arg1;
- (void)runFirstTimeUserSetup;
- (void)_forgotPassword:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_dropInvalidDotMacPassword;
- (void)_setDotmacProgressHidden:(BOOL)arg1;
- (void)_checkForDotMacCertCapabilityForIdentifier:(id)arg1;
- (void)_loadDefaults;
- (void)resetAllFields;
- (void)_updateTitle;
- (void)tabView:(id)arg1 willSelectTabViewItem:(id)arg2;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (BOOL)_canMoveOffTabViewItem:(id)arg1;
- (void)_updateContinueDoneButton:(BOOL)arg1;
- (void)_goToDone;
- (void)_goToNextPane:(id)arg1;
- (void)_goToPreviousPane:(id)arg1;
- (void)goBack:(id)arg1;
- (void)done:(id)arg1;
- (void)continueDone:(id)arg1;
- (void)_finishedGettingDotMacCaps:(id)arg1;
- (id)initWithDelegate:(id)arg1;
- (void)loadPreferenceBundles;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface VCChannelNegotiation (AVChatControllerAdditions)
- (int)ardRole;
@end

@interface VCDropView : NSView
{
    float _opacity;
}

- (void)createRegionsForRecipients:(id)arg1 includeTheater:(BOOL)arg2;
- (void)setOpacity:(float)arg1;
- (float)opacity;
- (id)updateHighlightingForPoint:(struct CGPoint)arg1;

@end

@interface VCFullScreenScalingInfoController : NSObject
{
    NSMatrix *scalingTypeMatrix;
}

+ (void)initialize;
+ (void)showInfoWindow;
+ (int)fullScreenScalingType;
- (void)awakeFromNib;
- (void)setScalingType:(id)arg1;

@end

@interface VCInfoController : NSWindowController <NSWindowRestoration>
{
    NSPopUpButton *_tabPopUp;
    NSButton *_helpButton;
    NSTabView *_tabView;
    NSTabViewItem *_statsTab;
    VCInfoTable *_statsTable;
    NSTextField *_noConferenceField;
    NSCell *_statCell;
    NSFormatter *_statFormatter;
    NSTimer *_statsTimer;
    NSMutableArray *_statsList;
    NSTabViewItem *_capsTab;
    NSTableView *_capsTable;
    NSArrayController *_capsList;
    NSAttributedString *_capEnabledSymbol;
    NSAttributedString *_capDisabledSymbol;
    NSTabViewItem *_errorTab;
    NSTextView *_errorLogTextView;
    NSTabViewItem *_netTab;
    NSExtendedBox *_netBox;
    NSImageView *_bandwidthGem;
    NSTextField *_bandwidthText;
    NSButton *_bandwidthButton;
    NSImageView *_routerGem;
    NSTextField *_routerTitle;
    NSTextField *_routerType;
    NSTextField *_routerText;
    NSButton *_switchBandwidth;
    NSButton *_switchFirewall;
}

+ (void)_createInfoWindow;
+ (void)showInfoWindow;
+ (void)showInfoWindowCapabilities;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
+ (void)addErrorLog:(id)arg1;
+ (void)clearErrorLogs;
- (void)awakeFromNib;
- (void)windowDidLoad;
- (void)windowWillClose:(id)arg1;
- (float)_errorLogHeight;
- (struct CGRect)_bestFrameWithStats:(unsigned int)arg1;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (void)dealloc;
- (void)showTab:(id)arg1;
- (void)showHelp:(id)arg1;
- (void)showPrefs:(id)arg1;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)_updateErrorLogUI;
- (BOOL)validateMenuItem:(id)arg1;
- (id)_descriptionForCapability:(id)arg1 enabled:(BOOL)arg2 reason:(id)arg3;
- (id)_descriptionForCap:(int)arg1 CPUCaps:(int)arg2 netCaps:(int)arg3 device:(BOOL)arg4;
- (void)_updateCaps;
- (void)_setupCapsUpdating;
- (void)_refreshNetTab;
- (void)_updateNetTab;
- (float)_updateBandwidthLimitation;
- (float)_updateRouterInformation;
- (void)_resizeWindowFromItem:(id)arg1 withSize:(float)arg2;
- (void)refreshStats:(id)arg1;
- (int)numberOfRowsInTableView:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(int)arg3;
- (id)tableView:(id)arg1 statItemForRow:(int)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(int)arg4;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(int)arg2;

@end

@interface VCInfoTable : NSTableView
{
}

- (void)_setupColumns;
- (void)awakeFromNib;
- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;
- (void)drawRow:(long long)arg1 clipRect:(struct CGRect)arg2;

@end

@interface VCLayoutController : NSObject
{
    VideoConferenceLayerView *_container;
    OpenGLLayerModel *_layerModel;
    BOOL _isPreview;
    BOOL _isFullScreen;
    BOOL _hasPIP;
    BOOL _theatricalLayout;
    BOOL _PIPHiddenByUser;
    BOOL _didMoveLocalLayerBelowBanner;
    BOOL _forceDisablePreviewLabel;
    NSDate *_transitionStartTime;
    NSDate *_AOLFadeOutStartTime;
    NSTimer *_timer;
    NSTimer *_AOLFadeOutTimer;
    NSMutableDictionary *_flipTimers;
    float _PIPScale;
    struct _RectPosition _PIPPosition;
    float _windowStartWidth;
    float _windowEndWidth;
    float _transitionProgress;
    struct CGRect _startPIPFrame;
    struct CGRect _endPIPFrame;
    long long _trackingRectTag;
    long long _vcLayerHit;
    BOOL _mouseInCloseButton;
    BOOL _mouseIsHidden;
    OpenGLImageLayer *_recordingDot;
}

+ (void)initialize;
+ (void)_constrainWindow:(id)arg1 frame:(struct CGRect *)arg2 screen:(id)arg3 andContainerSize:(struct CGSize *)arg4;
+ (struct CGRect)constrainedWindow:(id)arg1 frame:(struct CGRect)arg2 screen:(id)arg3 withContainerSize:(struct CGSize)arg4;
+ (void)_createTextLabel:(id)arg1 layerName:(id)arg2 inLayer:(id)arg3;
+ (id)_badgeImage:(id)arg1 atSize:(struct CGSize)arg2 inImageOfSize:(struct CGSize)arg3 atPoint:(struct CGPoint)arg4;
+ (void)_showMute:(BOOL)arg1 pause:(BOOL)arg2 off:(BOOL)arg3 stalled:(BOOL)arg4 large:(BOOL)arg5 blackOpacity:(double)arg6 inLayer:(id)arg7;
+ (void)showCameraOff:(BOOL)arg1 inLayer:(id)arg2;
- (void)_syncPositionPrefsRead:(BOOL)arg1;
- (void)_syncScalePrefRead:(BOOL)arg1;
- (id)initWithContainer:(id)arg1 videoOut:(BOOL)arg2 videoIn:(BOOL)arg3;
- (id)layerModel;
- (void)setLayerModel:(id)arg1;
- (void)stopPreviewTransition;
- (void)stopAOLBadgeFadeOut;
- (void)clearContainer;
- (void)dealloc;
- (id)container;
- (double)PIPScale;
- (struct _RectPosition)PIPPosition;
- (double)currentLayerWidth;
- (double)_videoWidthToSnapWithMin:(double)arg1;
- (BOOL)isPreview;
- (double)_transitionProgressReverse:(BOOL)arg1;
- (struct CGSize)_windowSizeForRemoteLayers:(int)arg1 ofWidth:(double)arg2;
- (void)setPreview:(BOOL)arg1 snapToVideo:(BOOL)arg2;
- (void)setHasPIP;
- (void)_setFullScreen:(BOOL)arg1 layerWidth:(double)arg2;
- (void)setFullScreen;
- (void)setNotFullScreen:(double)arg1;
- (BOOL)isFullScreen;
- (void)freezeFrame;
- (void)fitWindowToLocalBannerHorizOnly:(BOOL)arg1;
- (struct CGSize)standardWindowSize;
- (void)shouldFullscreenPillarbox:(char *)arg1 letterbox:(char *)arg2 aspect:(double *)arg3 forSize:(struct CGSize)arg4;
- (void)_containerDidResize:(id)arg1;
- (struct CGRect)_PIPFrameForBounds:(struct CGRect)arg1;
- (struct CGRect)_theoreticalPIPFrameForLayers:(int)arg1 inBounds:(struct CGRect)arg2 auxVideoMode:(int)arg3;
- (struct CGRect)_banner:(id)arg1 frameInVCLayer:(id)arg2;
- (void)updateLayout;
- (void)containerDidEndLiveResize;
- (void)_fadeOutAOLBadge;
- (void)_getAspectTransitionForLayers:(int)arg1 ofWidth:(double)arg2 auxVideoMode:(int)arg3 containerStart:(struct CGSize *)arg4 end:(struct CGSize *)arg5 windowStart:(struct CGRect *)arg6 end:(struct CGRect *)arg7;
- (void)_updateCursorTracking;
- (void)_runTheatricalTransition:(unsigned int)arg1 snapToVideo:(BOOL)arg2 auxVideoMode:(int)arg3 fullScreenAnimationTime:(double)arg4 sizePIPToWindow:(BOOL)arg5;
- (void)_runTheatricalTransition:(unsigned int)arg1 snapToVideo:(BOOL)arg2 auxVideoMode:(int)arg3 fullScreenAnimationTime:(double)arg4;
- (void)animateAdditionOfRemoteLayerAtIndex:(unsigned long long)arg1 resizeTime:(double)arg2;
- (void)removeRemoteVCLayer:(id)arg1 fullScreenAnimationTime:(double)arg2 willResultInOneWayChat:(BOOL)arg3;
- (void)removeRemoteVCLayer:(id)arg1 fullScreenAnimationTime:(double)arg2;
- (void)_stepLayerFlip:(id)arg1;
- (BOOL)_startLayerFlip:(id)arg1;
- (BOOL)startLocalLayerFlip;
- (BOOL)startRemoteLayerFlip:(int)arg1;
- (id)_createVCLayerNamed:(id)arg1 vcPartyID:(id)arg2 resizes:(BOOL)arg3 appearance:(int)arg4 atIndex:(unsigned long long)arg5 isLocal:(BOOL)arg6 isAuxVideo:(BOOL)arg7 isReplacement:(BOOL)arg8;
- (id)createLayerForParticipant:(id)arg1 appearance:(int)arg2 atIndex:(unsigned long long)arg3 isAuxVideo:(BOOL)arg4 isReplacement:(BOOL)arg5;
- (id)createBannerForParticipant:(id)arg1;
- (id)bannerForParticipant:(id)arg1;
- (void)repositionBannerForParticipant:(id)arg1;
- (void)removeBannerForParticipant:(id)arg1;
- (void)_createCloseButtonForLayer:(id)arg1;
- (void)createCloseButtonForParticipant:(id)arg1;
- (void)createCloseButtonForAuxVideo:(id)arg1;
- (void)removeCloseButtonForParticipant:(id)arg1;
- (void)createWhitePreviewLayerForLocalParticipant:(id)arg1;
- (id)createLayerWithLabel:(id)arg1 fontSize:(double)arg2 name:(id)arg3 margin:(double)arg4 bgSize:(struct CGSize)arg5;
- (void)_createAOLLabel;
- (void)createAOLBadge;
- (void)_changeAOLLabelSize;
- (void)forceDisablePreviewLabel:(BOOL)arg1;
- (void)showPreviewLabel:(BOOL)arg1;
- (void)removeAllBanners;
- (void)disableBackdropsUpdates;
- (void)_showConnectionDoctorLabelInLayer:(id)arg1;
- (void)showLocalConnectionDoctorLabel;
- (void)showRemoteConnectionDoctorLabel:(id)arg1;
- (BOOL)canShowHidePIP;
- (void)setPIPHidden:(BOOL)arg1;
- (BOOL)isPIPHidden;
- (void)showLocalMute:(BOOL)arg1 pause:(BOOL)arg2 off:(BOOL)arg3 stalled:(BOOL)arg4;
- (void)showRemoteParty:(id)arg1 mute:(BOOL)arg2 pause:(BOOL)arg3 stalled:(BOOL)arg4;
- (unsigned int)_autoresizingMask;
- (void)_createResizeIndicatorIn:(id)arg1;
- (void)_showResizeIndicator;
- (void)_hideResizeIndicator;
- (void)_removeResizeIndicator;
- (void)_addResizeTrackingRect;
- (void)_updateResizeTrackingRect;
- (void)resetCursorRects;
- (void)_addPIPBorder;
- (void)_hideOverlay;
- (void)_hideOverlayAndCursor;
- (void)_dontHideOverlay;
- (void)_hideOverlayAndCursorAfterDelay;
- (void)_showOverlay;
- (void)_showCloseButton:(BOOL)arg1 rollover:(BOOL)arg2 inLayer:(id)arg3;
- (void)_setMouseInLayer:(long long)arg1 inCloseButton:(BOOL)arg2;
- (void)_doBannerHitTest:(struct CGPoint)arg1;
- (void)_updateBannerHitTesting;
- (void)_resizePIPWithOriginalSize:(struct CGSize)arg1;
- (void)_mainThreadPerformAnimateLayerFromDictionary:(id)arg1;
- (void)_performMainThreadAnimateLayer:(id)arg1 frame:(struct CGRect)arg2;
- (void)_backgroundThreadAnimateLayerFromDictionary:(id)arg1;
- (void)_animateLayer:(id)arg1 from:(struct CGRect)arg2 to:(struct CGRect)arg3;
- (void)_animatePIPFrom:(struct CGRect)arg1 to:(struct CGRect)arg2;
- (void)_movePIPWithStartFrame:(struct CGRect)arg1 baseOffset:(struct CGSize)arg2 useFistCursor:(BOOL)arg3;
- (BOOL)_trackMouseDown:(id)arg1 inCloseButtonAt:(struct CGPoint)arg2;
- (void)mouseDown:(id)arg1 at:(struct CGPoint)arg2;
- (void)mouseUpAt:(struct CGPoint)arg1;
- (void)mouseMovedAt:(struct CGPoint)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseDraggedAt:(struct CGPoint)arg1;
- (void)scrollWheel:(id)arg1 at:(struct CGPoint)arg2;
- (void)setShowsRecordingDot:(BOOL)arg1 on:(BOOL)arg2;
- (void)_didShowParticipantStatus:(id)arg1;
- (void)_didHideParticipantStatus:(id)arg1;

@end

@interface VCNotifier : Notifier
{
    NSDictionary *_vcProperties;
    AVChatController *_avChatController;
    AVParticipantView *_bannerView;
    BOOL _audioOnly;
    BOOL _oneWay;
    BOOL _ardClient;
    BOOL _ardServer;
}

+ (void)openOnIncomingVC:(id)arg1;
+ (void)openOnIncomingARDUpgradeRequest:(id)arg1;
+ (void)cleanUpOldNotifiersFrom:(id)arg1;
- (void)dealloc;
- (BOOL)isStale;
- (BOOL)canShowRealWindow;
- (BOOL)canHideRealWindow;
- (BOOL)isActiveNotification;
- (void)floaterBecomingVisible;
- (struct CGAffineTransform)_xformForFloaterScale:(double)arg1;
- (void)_makeVCFloaterWindow;
- (BOOL)_makeRealVCNotifierWindow;
- (id)initForPersistentVCWithIMHandle:(id)arg1 isVideo:(BOOL)arg2 isOneWay:(BOOL)arg3;
- (id)accessibilityFormat;
- (id)initForAVChat:(id)arg1;
- (id)_initForARDUpgradeRequest:(id)arg1;
- (void)disconnect;
- (id)menuItemFormat;
- (void)doVCTextReplyWithChat:(id)arg1;
- (id)avChatController;
- (id)bannerView;
- (void)setBannerTitle:(id)arg1;
- (void)showTimeStamp;
- (void)updateBanner;
- (id)callerProperties;
- (void)closeDownShop:(BOOL)arg1;

@end

@interface VCStatItem : NSObject
{
    IMAVChatParticipant *_participant;
    int _type;
    NSAttributedString *_labelValue;
    id _statValue;
}

+ (id)_labelAttributesForType:(int)arg1;
+ (id)statItemsForAVChat:(id)arg1 vcStats:(id)arg2 logFramerate:(BOOL)arg3;
- (id)_initWithParticipant:(id)arg1 type:(int)arg2 label:(id)arg3 stat:(id)arg4;
- (id)_initWithType:(int)arg1 label:(id)arg2 stat:(id)arg3;
- (void)dealloc;
- (id)participant;
- (int)type;
- (id)labelValue;
- (id)statValue;

@end

@interface VideoChatController : AVChatController <NSAnimationDelegate, AuxVideoFeatureDelegate>
{
    NSExtendedBox *_vcBox;
    NSButton *_effectsButton;
    NSButton *_declineButton;
    NSButton *_acceptButton;
    NSViewAnimation *_fadeAnimation;
    VideoControlsOverlay *_controlsOverlay;
    NSWindow *_dropOverlay;
    VideoConferenceLayerView *_vcLayerView;
    OpenGLLayerModel *_layerModel;
    int _restoreTab;
    BOOL _receivedAFrame;
    BOOL _hasSetupVC;
    BOOL _userHasResizedWindow;
    NSString *_participantNames;
    BOOL _recordingUnderNegotiation;
    long long _flashingRecordingState;
    NSTimer *_flashingRecordingTimer;
    BOOL _windowIsTransitioningToFullScreen;
    BOOL _windowIsFullScreen;
    struct CGRect _fullScreenPriorFrame;
    double _fullScreenPriorVCBoxOriginY;
}

- (BOOL)isVideo;
- (void)dealloc;
- (id)vcLayerView;
- (id)layerModel;
- (BOOL)isAddBuddyAllowed;
- (void)_getIsFullScreen:(char *)arg1 theaterControlsRep:(id *)arg2 hasTheaterControls:(char *)arg3;
- (void)_updateNeedsOverlayMargin;
- (void)_updateNotifierUI;
- (id)_setupBannerFor:(id)arg1 inState:(unsigned int)arg2 layoutController:(id)arg3;
- (void)_setupPreview;
- (void)_createRemoteVCLayers;
- (void)_setupVC;
- (void)endPreview;
- (void)_firstRemoteFrameForParticipantWithID:(id)arg1;
- (void)_firstRemoteFrame:(id)arg1;
- (void)_removeParticipantWithID:(id)arg1 auxVideoLayer:(BOOL)arg2;
- (void)removeParticipantWithID:(id)arg1;
- (void)showFullScreenControls:(BOOL)arg1;
- (BOOL)areFullScreenControlsVisible;
- (id)windowNibName;
- (void)_setFSButton:(id)arg1 imageTemplateSize:(float)arg2;
- (void)windowDidLoad;
- (void)windowWillClose:(id)arg1;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (BOOL)windowShouldZoom:(id)arg1 toFrame:(struct CGRect)arg2;
- (float)_layerWidth;
- (void)_saveWindowFrame;
- (void)_restoreSavedWindowFrame;
- (id)shortWindowTitle;
- (id)longWindowTitle;
- (void)updateAddBuddyButton;
- (void)_updateRemoteVideoStateIndicators:(id)arg1 forcingOff:(BOOL)arg2;
- (id)controlsOverlay;
- (void)_updateOverlayMargin:(BOOL)arg1;
- (void)updateControlsOverlay;
- (void)_updateLocalUI;
- (void)swipeWithEvent:(id)arg1;
- (void)toggleFullScreen:(id)arg1;
- (void)startFullScreen;
- (void)stopFullScreen;
- (void)restoreLayoutAfterFullScreenWithVCLayerWidth:(double)arg1;
- (void)takeVideoSnapshot:(id)arg1;
- (void)setEffectsButtonHidden:(BOOL)arg1;
- (void)toggleShowVideoSettings:(id)arg1;
- (void)toggleHideLocalVideo:(id)arg1;
- (void)toggleMuteOrPause:(BOOL)arg1;
- (void)showEffectsPalette:(id)arg1;
- (void)theaterPrevious:(id)arg1;
- (void)theaterPlayPause:(id)arg1;
- (void)theaterNext:(id)arg1;
- (void)theaterSetVolume:(id)arg1;
- (void)theaterSetTime:(id)arg1;
- (void)theaterScrollWheel:(id)arg1 atRelativePoint:(struct CGPoint)arg2;
- (id)layerView;
- (BOOL)isFullScreen;
- (void)copy:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (struct CGRect)_rectToFullScreenAspectFitContent:(struct CGRect)arg1 forScreen:(id)arg2;
- (void)_sizeFullScreenToScreenSize;
- (void)_aspectSizeFullScreenToVideoSize;
- (id)_windowBackgroundColorForFullScreenMode:(id)arg1;
- (struct CGSize)window:(id)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (void)_windowWillEnterFullScreen:(id)arg1;
- (void)_windowDidEnterFullScreen:(id)arg1;
- (void)_windowWillExitFullScreen:(id)arg1;
- (void)_windowDidExitFullScreen:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (id)_recipientForDropView:(id)arg1 dragSender:(id)arg2;
- (void)animationDidEnd:(id)arg1;
- (void)animationDidStop:(id)arg1;
- (void)_fadeInDropOverlay:(BOOL)arg1;
- (id)_updateDropView:(id)arg1 includeTheater:(BOOL)arg2;
- (unsigned long long)_operationForDrag:(id)arg1 onPartyID:(id)arg2 isFiles:(char *)arg3;
- (BOOL)_performDragOperation:(id)arg1 onPartyID:(id)arg2 confirmFileSend:(BOOL)arg3;
- (void)logError:(id)arg1 forParticipant:(id)arg2;
- (void)_createCloseButtonForOtherParticipant:(id)arg1;
- (BOOL)_isParticipant:(id)arg1 theOnlyVideoSenderInAVChat:(id)arg2;
- (void)_avChat:(id)arg1 addedParticipant:(id)arg2 isAuxVideo:(BOOL)arg3;
- (id)avChat:(id)arg1 bitmapDataForParticipant:(id)arg2;
- (void)_setUpAuxInputUIFor:(id)arg1;
- (void)_tearDownAuxInputUIFor:(id)arg1;
- (void)_setupLocalLayerForReplacement:(BOOL)arg1;
- (void)_setUpReplacementUI;
- (void)_tearDownReplacementUI;
- (void)avChat:(id)arg1 participantBeganAuxiliaryInput:(id)arg2;
- (void)avChat:(id)arg1 participantEndedAuxiliaryInput:(id)arg2;
- (void)avChat:(id)arg1 participantBeganAuxiliaryReplacement:(id)arg2;
- (void)avChat:(id)arg1 participantEndedAuxiliaryReplacement:(id)arg2;
- (id)_windowForSecurityAlert:(id)arg1;
- (void)IMAVChatParticipantAdded:(id)arg1;
- (void)IMAVChatParticipantRemoved:(id)arg1;
- (void)IMAVChatParticipantStateChanged:(id)arg1;
- (void)IMAVChatStateChanged:(id)arg1;
- (void)IMAVChatIrisStateChanged:(id)arg1;
- (void)IMAVChatMuteChanged:(id)arg1;
- (void)IMAVChatPauseChanged:(id)arg1;
- (void)IMAVChatParticipantNetworkStalled:(id)arg1;
- (void)showRecordingIndicator:(BOOL)arg1;
- (void)_showRecordingIndicatorOn:(BOOL)arg1;
- (void)requestRecording;
- (void)avChat:(id)arg1 participantGrantedRecording:(id)arg2;
- (void)avChat:(id)arg1 participantDeniedRecording:(id)arg2;
- (void)stopRecording;
- (void)avChat:(id)arg1 participantBeginRecording:(id)arg2;
- (void)windowDidBecomeKeyWindow;
- (void)windowDidResignKeyWindow;

@end

@interface VideoConferenceLayerView : OpenGLLayerView
{
    VideoChatController *_videoChatController;
    VCLayoutController *_layoutController;
}

- (id)initWithFrame:(struct CGRect)arg1 videoChatController:(id)arg2;
- (void)cleanup;
- (void)dealloc;
- (void)setLayerModel:(id)arg1;
- (id)videoChatController;
- (void)resetCursorRects;
- (BOOL)acceptsFirstResponder;
- (void)mouseDown:(id)arg1;
- (void)swipeWithEvent:(id)arg1;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)viewDidEndLiveResize;
- (id)layoutController;
- (unsigned long long)draggingSourceOperationMask;
- (BOOL)_isOneWayTo:(id *)arg1;
- (id)_vcPartyIDForDrag:(id)arg1;
- (void)_highlightVCPartyID:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)layer:(id)arg1 videoSizeChangedFrom:(struct CGSize)arg2 to:(struct CGSize)arg3;

@end

@interface VideoControlsOverlay : NSObject <NSAnimationDelegate>
{
    id _delegate;
    NSWindow *_overlayWindow;
    NSWindow *_parentWindow;
    NSView *_parentView;
    double _horizPosition;
    NSViewAnimation *_fadeAnimation;
    BOOL _fadedOut;
    BOOL _trackingTimeSlider;
    NSView *_overlayContentView;
    OverlayBackground *_overlayContainer;
    ModifierTabView *_mutePauseTabView;
    NSTabView *_theaterPlayPauseTabView;
    NSExtendedBox *_controlsDivider;
    NSView *_fullScreenControlsContainer;
    MenuButton *_endChatButton;
    ChooseBuddyButton *_addButton;
    MenuButton *_muteChatButton;
    MenuButton *_pauseChatButton;
    MenuButton *_effectsButton;
    MenuButton *_endFullScreenButton;
    NSView *_theaterControlsContainer;
    MenuButton *_previousButton;
    MenuButton *_playButton;
    MenuButton *_pauseButton;
    MenuButton *_nextButton;
    AVVolumeSlider *_volumeControl;
    AVTimeSlider *_timeSlider;
    NSView *_fullScreenFullTemplate;
    NSView *_fullScreenNoSliderTemplate;
    NSView *_fullScreenOnlyTemplate;
    NSView *_windowedFullTemplate;
    NSView *_windowedNoVolumeTemplate;
    NSView *_windowedNoSliderTemplate;
    NSView *_windowedButtonsOnlyTemplate;
    NSView *_controlsFullTemplate;
    NSView *_controlsPrevNextTemplate;
    NSView *_currentTemplate;
}

- (id)initWithDelegate:(id)arg1;
- (void)_setButton:(id)arg1 imageTemplateSize:(struct CGSize)arg2;
- (void)_setButton:(id)arg1 imageTemplateDimension:(double)arg2;
- (void)awakeFromNib;
- (void)dealloc;
- (void)_repositionOverlayWindow;
- (void)_setParentView:(id)arg1 horizPosition:(double)arg2 forceReposition:(BOOL)arg3;
- (void)setParentView:(id)arg1 horizPosition:(double)arg2;
- (id)parentWindow;
- (id)overlayWindow;
- (void)_updateOpacity;
- (void)animationDidEnd:(id)arg1;
- (void)animationDidStop:(id)arg1;
- (void)_fadeOut:(BOOL)arg1 animated:(BOOL)arg2;
- (void)fadeOutIfPossible;
- (void)fadeInAnimated:(BOOL)arg1;
- (BOOL)isVisible;
- (void)_setFullScreen:(BOOL)arg1 playPause:(id)arg2 previous:(id)arg3 next:(id)arg4 volume:(id)arg5 slider:(id)arg6;
- (void)setFullScreen:(BOOL)arg1 theaterControls:(id)arg2;
- (id)addButton;
- (void)setMute:(BOOL)arg1 enabled:(BOOL)arg2 paused:(BOOL)arg3 enabled:(BOOL)arg4 effectsEnabled:(BOOL)arg5;
- (void)_performClickOnButton:(id)arg1;
- (void)performPrevious;
- (void)performNext;
- (void)swipeWithEvent:(id)arg1;
- (void)sliderWillStartTracking:(id)arg1;
- (void)_stopTracking;
- (void)sliderDidEndTracking:(id)arg1;
- (void)endConference:(id)arg1;
- (void)addParticipant:(id)arg1;
- (void)togglePause:(id)arg1;
- (void)toggleMute:(id)arg1;
- (void)showEffectsPalette:(id)arg1;
- (void)toggleFullScreen:(id)arg1;
- (void)theaterPrevious:(id)arg1;
- (void)theaterPlayPause:(id)arg1;
- (void)theaterNext:(id)arg1;
- (void)theaterSetVolume:(id)arg1;
- (void)theaterSetTime:(id)arg1;

@end

@interface VideoProcessor : NSObject <VCRenderDelegateProtocol>
{
    NSOpenGLContext *_displayContext;
    CIContext *_ciCtx;
    CIContext *_colorCorrectingCtx;
    struct __CVOpenGLBufferPool *_displayBufferPool;
    FrameResizer *_localResizer;
    FrameResizer *_remoteResizer;
    FrameReader *_localReader;
    struct dispatch_queue_s *_startStopQueue;
    struct OpaqueVTPixelTransferSession *_scaleAndResizeTransferSession;
    NSMutableDictionary *_inputPorts;
    QCRenderer *_renderer;
    QCRenderer *_gamma;
    NSArray *_keyPaths;
    QCPatchController *_qcController;
    struct CGPoint _inputXY;
    BOOL _backdropsSupported;
    BOOL _effectsSupported;
    BOOL _cameraLocked;
    unsigned long long _auxVideoMode;
    BOOL _dvWorkaround;
    Texture *_spotlightFrame;
    FramerateTracker *_framerateTracker;
    NSRecursiveLock *_renderLock;
    QCComposition *_composition;
    BOOL _backdropsEnabled;
    NSMutableDictionary *_remoteTextures;
    Texture *_auxVideoFrame;
    BOOL _auxVideoNeedsRendering;
    BOOL _showRecordingBadge;
    unsigned int _rendererStarted:1;
}

+ (id)sharedProcessor;
+ (BOOL)_realCameraConnected;
+ (BOOL)isEffectsAvailable;
+ (BOOL)isBackdropsAvailable;
- (id)init;
- (void)dealloc;
- (void)_applicationWillTerminate:(id)arg1;
- (void)_setMicronCameraAELock:(BOOL)arg1;
- (void)_lockCamera:(BOOL)arg1;
- (BOOL)_startGPURenderer;
- (void)_stopGPURenderer;
- (void)_startRenderer;
- (void)_stopRenderer;
- (void)handleVirtualScreenChangedNotificiation:(int)arg1;
- (void)frameNotifier:(id)arg1 didAddListener:(id)arg2;
- (void)frameNotifier:(id)arg1 didRemoveListener:(id)arg2;
@property(assign) NSString *backdropsMessage;
- (void)setCapture:(BOOL)arg1;
- (BOOL)capture;
- (void)setHasCaptured:(BOOL)arg1;
- (BOOL)hasCaptured;
- (BOOL)finishedCapture;
- (void)setShowBackgroundMotion:(BOOL)arg1;
- (void)_updateCapture;
- (void)startCapture;
- (void)_captureEnded;
- (void)_stopCapture;
- (void)_captureTimedout;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)observeValueForKeyPathOnMainThread:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setAuxVideoFrame:(struct __CVBuffer *)arg1;
- (id)auxVideoFrame;
- (void)setBackPath:(id)arg1 forePath:(id)arg2;
- (void)_setBackdropPaths;
@property(retain) QCComposition *composition;
- (void)setAuxVideoMode:(unsigned long long)arg1;
- (unsigned long long)auxVideoMode;
- (BOOL)auxVideoModeIsReplacement;
- (struct __CVBuffer *)_normalizeDVBuffer:(struct __CVBuffer *)arg1;
- (struct __CVBuffer *)_convertToARGB:(struct __CVBuffer *)arg1;
- (int)_Software_processCVPixelBuffer:(struct __CVBuffer *)arg1 intoCVPixelBuffer:(struct __CVBuffer *)arg2 withHint:(id)arg3;
- (int)_GPU_processCVPixelBuffer:(struct __CVBuffer *)arg1 intoCVPixelBuffer:(struct __CVBuffer *)arg2 withHint:(id)arg3;
- (int)_AuxVideo_processCVPixelBufferIntoCVPixelBuffer:(struct __CVBuffer *)arg1 withHint:(id)arg2;
- (int)processCVPixelBuffer:(struct __CVBuffer *)arg1 intoCVPixelBuffer:(struct __CVBuffer *)arg2 withHint:(id)arg3;
- (void)gammaCorrectBuffer:(struct __CVBuffer *)arg1;
- (void)newRemoteCVPixelBuffer:(struct __CVBuffer *)arg1;
- (int)resizeRemoteVideoForUserID:(id)arg1 outBuffer:(struct __CVBuffer *)arg2;
@property(readonly) BOOL backdropsEnabled; // @synthesize backdropsEnabled=_backdropsEnabled;
@property struct CGPoint inputXY; // @synthesize inputXY=_inputXY;

@end

@interface VideoRecordingAdapter : NSObject <FezVideoRecordingAdapter>
{
    FezAVRecorder *_avRecorder;
    NSView *_view;
    long long _width;
    long long _height;
    OpenGLLayerView *_layerView;
    NSOpenGLContext *_context;
    NSOpenGLPixelBuffer *_nsPixelBuffer;
    FrameReader *_frameReader;
    BOOL _skippedFirstFrame;
}

- (void)_destroyOpenGL;
- (void)_initOpenGL;
- (id)initWithWidth:(long long)arg1 height:(long long)arg2 layerView:(id)arg3;
- (void)handleVirtualScreenChangedNotificiation:(int)arg1;
- (void)dealloc;
- (void)setAVRecorder:(id)arg1;
- (void)askForFrame;
- (void)newVideoFrameAvailable;
- (void)prepare;
- (void)stop;
- (void)start;
- (struct CGSize)inputSize;
- (void)newFrameAvailable;

@end

@interface ViewTable : NSView
{
    id <ViewTableDelegate> _delegate;
    float _rowSpacing;
    int _selectionBehavior;
    BOOL _usesAlternatingRowBackgroundColors;
    float _defaultRowHeight;
    NSColor *_bgColor;
}

- (void)_commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setRowSpacing:(float)arg1;
- (float)rowSpacing;
- (void)_setHeight:(float)arg1 inClipView:(id)arg2;
- (void)_clipViewFrameChanged:(id)arg1;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (struct CGSize)contentSize;
- (void)tile;
- (BOOL)isFlipped;
- (void)setUsesAlternatingRowBackgroundColors:(BOOL)arg1;
- (BOOL)usesAlternatingRowBackgroundColors;
- (void)setDefaultRowHeight:(float)arg1;
- (float)defaultRowHeight;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)_windowKeyChanged:(id)arg1;
- (void)setSelectionBehavior:(int)arg1;
- (int)selectionBehavior;
- (void)selectionDidChange;
- (void)selectView:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)_nextView:(BOOL)arg1;
- (void)_scrollToVisibleSelectionShowingTop:(BOOL)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;

@end

@interface VolumeIndicator : NSView
{
    float _floatValue;
    BOOL _isRemote;
    BOOL _isMute;
    float _opacity;
    NSImage *_onImage;
    NSImage *_offImage;
    NSImage *_muteImage;
    float _numSlices;
    BOOL _proStyle;
}

- (id)_loadScaledImage:(id)arg1;
- (void)_updateNumSlices:(float)arg1;
- (void)_recacheImages;
- (void)setProStyle:(BOOL)arg1;
- (BOOL)proStyle;
- (void)awakeFromNib;
- (void)dealloc;
- (void)setFrameSize:(struct CGSize)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (void)setFloatValue:(float)arg1;
- (float)floatValue;
- (void)takeFloatValueFrom:(id)arg1;
- (void)setNumberValue:(id)arg1;
- (void)setSamplerLevelValue:(id)arg1;
- (void)setRemote:(BOOL)arg1;
- (BOOL)isRemote;
- (void)setMute:(BOOL)arg1;
- (BOOL)isMute;
- (void)toggleMute:(id)arg1;
- (void)setOpacity:(float)arg1;
- (float)opacity;
- (float)_splicePointFor:(float)arg1;
- (void)_invalidateValue:(float)arg1 to:(float)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityValueAttribute;

@end

/*@interface WebPluginDatabase (iChatAdditions)
+ (id)_defaultPlugInPaths;
@end*/

@interface WindowDraggingTabView : NSTabView
{
}

- (void)mouseDown:(id)arg1;

@end

@interface _MoveRecordedTracksOp : FezExtendedOperation
{
    NSMutableArray *_filenames;
    NSString *_trackTitle;
}

- (id)initWithFilenames:(id)arg1 trackTitle:(id)arg2;
- (void)dealloc;
- (id)filenames;
- (id)trackTitle;
- (void)main;

@end

@interface _VCDropRegion : NSView
{
    id _recipient;
    BOOL _highlighted;
    float _opacity;
    Animator *_animator;
    BOOL _needsLayout;
    AbbreviatingTextField *_titleField;
    NSBezierPath *_fillPath;
    NSColor *_fillColor;
    NSShadow *_fillGlow;
    NSBezierPath *_borderPath;
}

- (void)_updateMarquee:(float)arg1;
- (void)_updateLayout;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)_setTitle;
- (void)setOpacity:(float)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)animator:(id)arg1 doStep:(double)arg2 lastStep:(BOOL)arg3;
- (void)setHighlighted:(BOOL)arg1;
- (BOOL)isHighlighted;
- (void)setRecipient:(id)arg1;
- (id)recipient;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface _VCInfoColumn : NSTableColumn
{
    NSLevelIndicatorCell *_levelCell;
}

- (id)initWithIdentifier:(id)arg1;
- (void)dealloc;
- (id)dataCellForRow:(long long)arg1;

@end

@interface _iTunesCreatePlaylistOp : FezExtendedOperation
{
    NSString *_playlistName;
}

- (id)playlistName;
- (void)main;
- (void)dealloc;

@end

@interface iChatResourceProtocol : FezResourceURLProtocol
{
}

+ (id)customProtocolScheme;
- (void)resourceDataRequested:(id)arg1;

@end

@interface iPhotoBrowser : NSWindowController
{
    ILMediaBrowserView *_browserView;
    NSButton *_okButton;
    NSButton *_cancelButton;
}

+ (id)sharedBrowser;
- (id)init;
- (void)dealloc;
- (id)browserView;
- (void)_prepareWindow;
- (int)runModal;
- (void)windowDidLoad;
- (void)acceptBrowser:(id)arg1;
- (void)cancelBrowser:(id)arg1;
- (void)mediaBrowserViewSelectionDidChange:(id)arg1;
- (BOOL)mediaBrowserView:(id)arg1 shouldDisplayMediaGroup:(id)arg2;
- (BOOL)mediaBrowserView:(id)arg1 shouldDisplayMediaObject:(id)arg2;
- (BOOL)mediaBrowserView:(id)arg1 shouldSelectMediaObject:(id)arg2;
- (BOOL)mediaBrowserView:(id)arg1 shouldPreviewDoubleClickedItem:(id)arg2;

@end

@interface iTunesAdditionOp : FezExtendedOperation
{
    BOOL _didStart;
    FezExtendedOperation *_moveOperation;
    FezExtendedOperation *_playlistOperation;
}

- (id)initWithFilenames:(id)arg1 trackTitle:(id)arg2;
- (void)dealloc;
- (void)start;
- (void)didChangeValueForKey:(id)arg1;
- (void)main;

@end

