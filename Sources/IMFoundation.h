/*
 *     Generated by class-dump 3.3.3 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#pragma mark Named Structures

struct _TidyDoc {
    int _field1;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
} CDStruct_19b88e92;

#pragma mark -

/*
 * File: IMFoundation
 * UUID: 267AA0CF-7F7E-387A-8A87-25696388215C
 * Arch: Intel x86-64 (x86_64)
 *       Current version: 800.0.0, Compatibility version: 1.0.0
 *       Minimum Mac OS X version: 10.7.0
 *
 *       Objective-C Garbage Collection: Supported
 */
 
@class IMRemoteObjectBroadcaster, IMAttributedStringParserContext, IMReachability, IMXMLReparserContext;

@protocol IMDaemonMIGInterfaceDelegate, IMFileCopierDelegate;

@protocol FZDaemon <NSObject>
- (void)autoLoginActiveAccountsIfNecessary;
- (void)loginAllAccounts;
- (void)logoutAllAccounts;
- (void)terminate;
- (void)changeMyStatus:(id)arg1 forAccount:(id)arg2;
- (void)listener:(id)arg1 setValue:(id)arg2 ofProperty:(id)arg3;
- (void)listener:(id)arg1 setValue:(id)arg2 ofPersistentProperty:(id)arg3;
- (void)setVCCapabilities:(unsigned long long)arg1 forListener:(id)arg2;
- (void)requestPendingVCInvites;
- (void)requestCurrentAVChatInfoForListenerID:(id)arg1 responseID:(id)arg2;
- (void)requestAudioReflector:(BOOL)arg1 forListenerID:(id)arg2 responseID:(id)arg3;
- (void)requestVideoStillForPerson:(id)arg1 forListenerID:(id)arg2 responseID:(id)arg3;
- (void)provideCurrentAVChatInfo:(id)arg1 result:(unsigned int)arg2 transactionID:(unsigned int)arg3;
- (void)provideVideoStill:(id)arg1 forPerson:(id)arg2 result:(unsigned int)arg3 transactionID:(unsigned int)arg4;
- (void)setAVManagerClient:(id)arg1 URLToShare:(id)arg2;
- (void)activateAccounts:(id)arg1;
- (void)deactivateAccounts:(id)arg1;
- (void)addAccount:(id)arg1 defaults:(id)arg2 service:(id)arg3;
- (void)removeAccount:(id)arg1;
- (void)writeAccount:(id)arg1 defaults:(id)arg2;
- (void)requestBuddyPicturesAndPropertiesForAccount:(id)arg1;
- (void)sendStandaloneFileTransfer:(id)arg1;
- (void)fileTransfer:(id)arg1 createdWithProperties:(id)arg2;
- (void)fileTransfer:(id)arg1 updatedWithProperties:(id)arg2;
- (void)fileTransfer:(id)arg1 acceptedWithPath:(id)arg2 autoRename:(BOOL)arg3 overwrite:(BOOL)arg4;
- (void)fileTransferStopped:(id)arg1;
- (void)fileTransferRemoved:(id)arg1;
- (void)clearPendingVCRequestsWithPerson:(id)arg1 forAccount:(id)arg2;
- (void)conference:(id)arg1 account:(id)arg2 requestSendResponseWithResult:(long long)arg3 toPerson:(id)arg4;
- (void)conference:(id)arg1 account:(id)arg2 notifyInvitationFromPerson:(id)arg3;
- (void)conference:(id)arg1 account:(id)arg2 notifyInvitationCancelledFromPerson:(id)arg3;
- (void)conference:(id)arg1 account:(id)arg2 notifyMissedInvitationFromPerson:(id)arg3;
- (void)addListener:(id)arg1 withListenerID:(id)arg2 capabilities:(unsigned int)arg3 allowServices:(id)arg4 denyServices:(id)arg5 context:(id)arg6;
- (void)listener:(id)arg1 setListenerCapabilities:(unsigned int)arg2;
- (void)listener:(id)arg1 loadMessageWithGUIDs:(id)arg2 chatID:(id)arg3 queryID:(id)arg4;
- (void)listener:(id)arg1 loadMessageWithDestinationIDs:(id)arg2 onService:(id)arg3 limit:(unsigned long long)arg4 beforeGUID:(id)arg5 afterGUID:(id)arg6 chatID:(id)arg7 queryID:(id)arg8;
- (void)listener:(id)arg1 loadMessageWithRoomName:(id)arg2 onService:(id)arg3 limit:(unsigned long long)arg4 beforeGUID:(id)arg5 afterGUID:(id)arg6 chatID:(id)arg7 queryID:(id)arg8;
- (void)listener:(id)arg1 deleteMessageWithGUIDs:(id)arg2 queryID:(id)arg3;
- (void)listener:(id)arg1 deleteMessageWithDestinationIDs:(id)arg2 onService:(id)arg3 queryID:(id)arg4;
- (void)listener:(id)arg1 deleteMessageWithRoomName:(id)arg2 onService:(id)arg3 queryID:(id)arg4;
- (void)listener:(id)arg1 account:(id)arg2 markMessagesAsReadForChat:(id)arg3 style:(unsigned char)arg4;
- (void)listener:(id)arg1 account:(id)arg2 markMessagesAsRead:(id)arg3 chat:(id)arg4 style:(unsigned char)arg5;
- (void)listener:(id)arg1 account:(id)arg2 markMessageAsRead:(id)arg3 chat:(id)arg4 style:(unsigned char)arg5;
- (void)chat:(id)arg1 updateProperties:(id)arg2;
- (void)leaveChat:(id)arg1;
- (void)forwardData:(id)arg1 toSession:(id)arg2;
@end

@protocol IMConnectionMonitorDelegate
- (void)connectionMonitorDidUpdate:(id)arg1;
@end

@protocol IMReachabilityDelegate
- (void)reachabilityDidChange:(id)arg1;
@end

@protocol IMSystemMonitorListener

@optional
- (void)systemDidBecomeIdle;
- (void)systemDidBecomeUnidle;
- (void)screenSaverDidStart;
- (void)screenSaverDidStop;
- (void)screenLocked;
- (void)screenUnlocked;
- (void)systemWillSleep;
- (void)systemDidWake;
- (void)systemWillShutdown;
- (void)systemApplicationDidEnterBackground;
- (void)systemApplicationWillEnterForeground;
- (void)systemApplicationDidSuspend;
- (void)systemApplicationDidResume;
- (void)systemDidStartBackup;
- (void)systemDidStopBackup;
- (void)systemDidFinishMigration;
- (void)systemRestoreStateDidChange;
- (void)systemDidFastUserSwitchOut;
- (void)systemDidFastUserSwitchIn;
- (void)systemDidLogout;
@end

@interface Broadcaster : NSProxy
{
    NSArray *_targets;
    IMRemoteObjectBroadcaster *_parent;
    Protocol *_protocol;
}

- (id)initWithNotifier:(id)arg1 protocol:(id)arg2 targets:(id)arg3;
- (void)dealloc;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;

@end

@interface FZMessage : NSObject <NSCoding, NSCopying>
{
    NSString *_handle;
    NSString *_service;
    NSString *_account;
    NSString *_subject;
    NSString *_accountID;
    NSString *_roomName;
    NSDictionary *_senderInfo;
    unsigned int _error;
    NSString *_guid;
    NSDate *_time;
    NSArray *_fileTransferGUIDs;
    unsigned long long _flags;
    NSAttributedString *_body;
    NSData *_bodyData;
    long long _messageID;
    NSDate *_timeRead;
    NSDate *_timeDelivered;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)dictionaryRepresentation;
- (id)initWithSender:(id)arg1 time:(id)arg2 body:(id)arg3 attributes:(id)arg4 fileTransferGUIDs:(id)arg5 flags:(unsigned long long)arg6 error:(id)arg7 guid:(id)arg8;
- (id)initWithSenderInfo:(id)arg1 time:(id)arg2 body:(id)arg3 attributes:(id)arg4 fileTransferGUIDs:(id)arg5 flags:(unsigned long long)arg6 guid:(id)arg7 account:(id)arg8 accountID:(id)arg9 service:(id)arg10 handle:(id)arg11 roomName:(id)arg12 error:(id)arg13;
- (id)initWithSenderInfo:(id)arg1 time:(id)arg2 body:(id)arg3 attributes:(id)arg4 fileTransferGUIDs:(id)arg5 flags:(unsigned long long)arg6 guid:(id)arg7 messageID:(long long)arg8 account:(id)arg9 accountID:(id)arg10 service:(id)arg11 handle:(id)arg12 roomName:(id)arg13 error:(id)arg14;
- (id)initWithSenderInfo:(id)arg1 time:(id)arg2 timeRead:(id)arg3 timeDelivered:(id)arg4 body:(id)arg5 attributes:(id)arg6 fileTransferGUIDs:(id)arg7 flags:(unsigned long long)arg8 guid:(id)arg9 messageID:(long long)arg10 account:(id)arg11 accountID:(id)arg12 service:(id)arg13 handle:(id)arg14 roomName:(id)arg15 error:(id)arg16;
- (id)initWithSenderInfo:(id)arg1 time:(id)arg2 body:(id)arg3 attributes:(id)arg4 fileTransferGUIDs:(id)arg5 flags:(unsigned long long)arg6 error:(id)arg7 guid:(id)arg8;
- (id)initWithSenderInfo:(id)arg1 time:(id)arg2 timeRead:(id)arg3 timeDelivered:(id)arg4 body:(id)arg5 attributes:(id)arg6 fileTransferGUIDs:(id)arg7 flags:(unsigned long long)arg8 guid:(id)arg9 messageID:(long long)arg10 account:(id)arg11 accountID:(id)arg12 service:(id)arg13 handle:(id)arg14 roomName:(id)arg15 errorType:(unsigned int)arg16;
- (id)initWithSenderInfo:(id)arg1 time:(id)arg2 timeRead:(id)arg3 timeDelivered:(id)arg4 subject:(id)arg5 body:(id)arg6 attributes:(id)arg7 fileTransferGUIDs:(id)arg8 flags:(unsigned long long)arg9 guid:(id)arg10 messageID:(long long)arg11 account:(id)arg12 accountID:(id)arg13 service:(id)arg14 handle:(id)arg15 roomName:(id)arg16 errorType:(unsigned int)arg17;
- (id)initWithSenderInfo:(id)arg1 time:(id)arg2 timeRead:(id)arg3 timeDelivered:(id)arg4 subject:(id)arg5 body:(id)arg6 bodyData:(id)arg7 attributes:(id)arg8 fileTransferGUIDs:(id)arg9 flags:(unsigned long long)arg10 guid:(id)arg11 messageID:(long long)arg12 account:(id)arg13 accountID:(id)arg14 service:(id)arg15 handle:(id)arg16 roomName:(id)arg17 errorType:(unsigned int)arg18;
- (void)dealloc;
@property(retain, nonatomic) NSString *sender;
@property(readonly, nonatomic) BOOL isAlert;
@property(readonly, nonatomic) BOOL isFinished;
@property(readonly, nonatomic) BOOL isEmpty;
- (BOOL)isRead;
@property(readonly, nonatomic) BOOL isFromMe;
- (BOOL)isDelivered;
@property(readonly, nonatomic) BOOL isPrepared;
- (BOOL)isEmote;
- (BOOL)isSent;
@property(retain, nonatomic) NSError *error;
@property(retain, nonatomic) NSArray *fileTransferGUIDs; // @synthesize fileTransferGUIDs=_fileTransferGUIDs;
@property(nonatomic) unsigned long long flags; // @synthesize flags=_flags;
- (void)adjustIsEmptyFlag;
- (void)_generateBodyDataIfNeeded;
- (void)_generateBodyTextIfNeeded;
- (void)_regenerateBodyText;
- (void)_regenerateBodyData;
- (void)_clearBodyData;
@property(retain, nonatomic) NSAttributedString *body; // @synthesize body=_body;
- (BOOL)isEqual:(id)arg1;
- (id)description;
@property(retain, nonatomic) NSDate *timeDelivered; // @synthesize timeDelivered=_timeDelivered;
@property(retain, nonatomic) NSDate *timeRead; // @synthesize timeRead=_timeRead;
@property(nonatomic) long long messageID; // @synthesize messageID=_messageID;
@property(retain, nonatomic) NSData *bodyData; // @synthesize bodyData=_bodyData;
@property(retain, nonatomic) NSDate *time; // @synthesize time=_time;
@property(retain, nonatomic) NSString *guid; // @synthesize guid=_guid;
@property(nonatomic) unsigned int errorCode; // @synthesize errorCode=_error;
@property(retain, nonatomic) NSDictionary *senderInfo; // @synthesize senderInfo=_senderInfo;
@property(retain, nonatomic) NSString *roomName; // @synthesize roomName=_roomName;
@property(retain, nonatomic) NSString *accountID; // @synthesize accountID=_accountID;
@property(retain, nonatomic) NSString *subject; // @synthesize subject=_subject;
@property(retain, nonatomic) NSString *account; // @synthesize account=_account;
@property(retain, nonatomic) NSString *service; // @synthesize service=_service;
@property(retain, nonatomic) NSString *handle; // @synthesize handle=_handle;

@end

@interface IMXMLParserFrame : NSObject
{
}

- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;
- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;
- (void)parser:(id)arg1 context:(id)arg2 foundCharacters:(id)arg3;
- (void)parser:(id)arg1 context:(id)arg2 foundIgnorableWhitespace:(id)arg3;

@end

@interface IMToSuperParserFrame : IMXMLParserFrame
{
}

- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;
- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;
- (void)parser:(id)arg1 context:(id)arg2 foundCharacters:(id)arg3;
- (void)parser:(id)arg1 context:(id)arg2 foundIgnorableWhitespace:(id)arg3;

@end

@interface HTMLToSuper_Default_Frame : IMToSuperParserFrame
{
}

- (void)parser:(id)arg1 context:(id)arg2 foundCharacters:(id)arg3;

@end

@interface HTMLToSuper_A_Frame : HTMLToSuper_Default_Frame
{
    BOOL _shouldPopLink;
}

- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;
- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;

@end

@interface HTMLToSuper_BODY_Frame : HTMLToSuper_Default_Frame
{
}

- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;

@end

@interface HTMLToSuper_BR_Frame : HTMLToSuper_Default_Frame
{
}

- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;

@end

@interface HTMLToSuper_B_Frame : HTMLToSuper_Default_Frame
{
}

- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;
- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;

@end

@interface HTMLToSuper_EM_Frame : HTMLToSuper_Default_Frame
{
}

- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;
- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;

@end

@interface HTMLToSuper_FONT_Frame : HTMLToSuper_Default_Frame
{
    BOOL _shouldPopBackgroundColor;
    BOOL _shouldPopForegroundColor;
    BOOL _shouldPopFontName;
    BOOL _shouldPopFontSize;
}

- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;
- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;

@end

@interface HTMLToSuper_I_Frame : HTMLToSuper_Default_Frame
{
}

- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;
- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;

@end

@interface HTMLToSuper_SPAN_Frame : HTMLToSuper_Default_Frame
{
    BOOL _shouldPopBackgroundColor;
    BOOL _shouldPopForegroundColor;
    BOOL _shouldPopFontFamily;
    BOOL _shouldPopFontSize;
    BOOL _shouldDecrementBoldCount;
    BOOL _shouldDecrementItalicCount;
    BOOL _shouldDecrementUnderlineCount;
    BOOL _shouldDecrementStrikeCount;
}

- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;
- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;

@end

@interface HTMLToSuper_STRIKE_Frame : HTMLToSuper_Default_Frame
{
}

- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;
- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;

@end

@interface HTMLToSuper_STRONG_Frame : HTMLToSuper_Default_Frame
{
}

- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;
- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;

@end

@interface HTMLToSuper_S_Frame : HTMLToSuper_Default_Frame
{
}

- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;
- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;

@end

@interface HTMLToSuper_U_Frame : HTMLToSuper_Default_Frame
{
}

- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;
- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;

@end

@interface IMAttributedStringParser : NSObject
{
    IMAttributedStringParserContext *_context;
}

+ (id)sharedInstance;
- (void)release;
- (unsigned long long)retainCount;
- (id)autorelease;
- (void)_preprocessWithContext:(id)arg1 string:(id *)arg2;
- (void)parseContext:(id)arg1;

@end

@interface IMAttributedStringParserContext : NSObject
{
    NSAttributedString *_inString;
}

- (id)initWithAttributedString:(id)arg1;
- (void)dealloc;
@property(readonly, retain) NSString *name;
@property(readonly, retain) NSArray *resultsForLogging;
- (void)parserDidStart:(id)arg1;
- (void)parser:(id)arg1 foundAttributes:(id)arg2 inRange:(struct _NSRange)arg3;
- (void)parserDidEnd:(id)arg1;
@property(readonly) BOOL shouldPreprocess;
- (id)parser:(id)arg1 preprocessedAttributesForAttributes:(id)arg2 range:(struct _NSRange)arg3;
@property(readonly, retain) NSAttributedString *inString; // @synthesize inString=_inString;

@end

@interface IMConnectionMonitor : NSObject
{
    NSString *_remoteHost;
    id <IMConnectionMonitorDelegate> _delegate;
}

+ (id)alloc;
- (id)initWithRemoteHost:(id)arg1 delegate:(id)arg2;
- (void)dealloc;
- (void)_setup;
- (void)goConnectedWithLocalSocketAddress:(id)arg1 remoteSocketAddress:(id)arg2;
- (void)goDisconnected;
@property(nonatomic, setter=setDataConnectionActive:) BOOL isDataConnectionActive;
@property(readonly, nonatomic) BOOL requiresDataConnectionActivation;
@property(readonly, nonatomic) BOOL isImmediatelyReachable;
@property(readonly, nonatomic) BOOL isReachableAfterModemDial;
- (BOOL)startDialUp;
@property(nonatomic, assign) id <IMConnectionMonitorDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSString *remoteHost; // @synthesize remoteHost=_remoteHost;

@end

@interface IMDaemonMIGInterface : NSObject
{
    unsigned int _port;
    struct dispatch_source_s *_source;
    unsigned int _activePort;
    struct dispatch_source_s *_activeSource;
    id _delegate;
}

+ (id)sharedInstance;
- (void)release;
- (unsigned long long)retainCount;
- (id)autorelease;
- (void)__setupServer;
- (void)acceptIncomingGrantRequests;
@property(assign) id <IMDaemonMIGInterfaceDelegate> delegate; // @synthesize delegate=_delegate;

@end

@interface IMNetworkManager : NSObject
{
}

+ (id)alloc;
+ (id)sharedInstance;
- (void)release;
- (unsigned long long)retainCount;
- (id)autorelease;

@end

@interface IMDesktopNetworkManager : IMNetworkManager
{
}

@end

@interface IMDirectlyObservableObject : NSObject
{
    NSArray *_observers;
}

- (id)init;
- (void)dealloc;
- (void)_objectDidPostNotification:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)informObserversOfNotification:(id)arg1;
@property(retain) NSArray *observers; // @synthesize observers=_observers;

@end

@interface IMFileCopier : NSObject
{
    id <IMFileCopierDelegate> _delegate;
    NSURL *_inputURL;
    NSURL *_outputURL;
    id _identifier;
    BOOL _shouldCancel;
    BOOL _didErrorOccur;
    BOOL _inProgress;
    unsigned int _operation;
}

- (id)initWithInputURL:(id)arg1 outputURL:(id)arg2 identifier:(id)arg3 operation:(unsigned int)arg4 delegate:(id)arg5;
- (void)dealloc;
- (id)_temporaryCopierPath;
- (void)_fillOutputURLFromInputURL;
- (void)start;
- (void)cancel;
- (void)cleanup;
- (void)_main_copierFinishedWithResult:(id)arg1;
- (void)_worker_doCopy;
@property unsigned int operation; // @synthesize operation=_operation;
@property BOOL inProgress; // @synthesize inProgress=_inProgress;
@property(readonly, nonatomic) BOOL didErrorOccur; // @synthesize didErrorOccur=_didErrorOccur;
@property(readonly, nonatomic) BOOL wasCancelled; // @synthesize wasCancelled=_shouldCancel;
@property(readonly) id identifier; // @synthesize identifier=_identifier;
@property(readonly) NSURL *outputURL; // @synthesize outputURL=_outputURL;
@property(readonly) NSURL *inputURL; // @synthesize inputURL=_inputURL;
@property(assign) id <IMFileCopierDelegate> delegate; // @synthesize delegate=_delegate;

@end

@interface IMFileManager : NSFileManager
{
}

+ (id)defaultManager;
+ (id)defaultHFSFileManager;
- (void)release;
- (unsigned long long)retainCount;
- (id)autorelease;
- (id)createTempFileBasedOnName:(id)arg1 hfsType:(unsigned int)arg2 hfsCreator:(unsigned int)arg3 hfsFlags:(unsigned short)arg4;
- (BOOL)existingPath:(id)arg1 toFSRef:(void *)arg2;
- (BOOL)existingPath:(id)arg1 toFSSpec:(void *)arg2;
- (id)attributesOfItemAtPath:(id)arg1 error:(id *)arg2;
- (BOOL)setAttributes:(id)arg1 ofItemAtPath:(id)arg2 error:(id *)arg3;
- (id)kindStringForFile:(id)arg1;
- (id)kindStringForFileWithName:(id)arg1 hfsType:(unsigned int)arg2 hfsCreator:(unsigned int)arg3 hfsFlags:(unsigned short)arg4;
- (id)displayNameOfFileWithName:(id)arg1 hfsFlags:(unsigned short)arg2;
- (id)MIMETypeOfPathExtension:(id)arg1;

@end

@interface IMFileTransfer : NSObject
{
    NSURL *_localURL;
    NSData *_localBookmark;
    double _lastUpdatedInterval;
    double _lastAveragedInterval;
    unsigned long long _lastAveragedBytes;
    NSString *_guid;
    NSDate *_startDate;
    NSDate *_createdDate;
    int _transferState;
    BOOL _isIncoming;
    NSString *_filename;
    NSURL *_transferDataURL;
    NSString *_utiType;
    NSString *_mimeType;
    unsigned int _hfsType;
    unsigned short _hfsFlags;
    unsigned int _hfsCreator;
    NSString *_accountID;
    NSString *_otherPerson;
    unsigned long long _currentBytes;
    unsigned long long _totalBytes;
    unsigned long long _averageTransferRate;
    BOOL _isDirectory;
    BOOL _shouldAttemptToResume;
    int _error;
    NSString *_errorDescription;
    BOOL _wasRegisteredAsStandalone;
    BOOL _shouldForceArchive;
    NSDictionary *_localUserInfo;
}

+ (id)_invalidCharactersForFileTransferName;
+ (BOOL)_doesLocalURLRequireArchiving:(id)arg1;
- (void)dealloc;
- (id)_initWithGUID:(id)arg1 filename:(id)arg2 isDirectory:(BOOL)arg3 localURL:(id)arg4 account:(id)arg5 otherPerson:(id)arg6 totalBytes:(unsigned long long)arg7 hfsType:(unsigned int)arg8 hfsCreator:(unsigned int)arg9 hfsFlags:(unsigned short)arg10 isIncoming:(BOOL)arg11;
- (void)_setAccount:(id)arg1 otherPerson:(id)arg2;
@property(retain, nonatomic, setter=_setStartDate:) NSDate *startDate; // @synthesize startDate=_startDate;
- (void)_setCurrentBytes:(unsigned long long)arg1 totalBytes:(unsigned long long)arg2;
- (void)_setAveragedTransferRate:(unsigned long long)arg1 lastAveragedInterval:(double)arg2 lastAveragedBytes:(unsigned long long)arg3;
- (void)_setDirectory:(BOOL)arg1 hfsType:(unsigned int)arg2 hfsCreator:(unsigned int)arg3 hfsFlags:(unsigned short)arg4;
- (void)_clear;
- (void)_updateWithDictionaryRepresentation:(id)arg1;
- (id)_dictionaryRepresentation;
- (void)_calculateTypeInformation;
@property(readonly, nonatomic) BOOL canBeAccepted;
@property(readonly, retain, nonatomic) NSString *displayName;
@property(readonly, nonatomic) BOOL existsAtLocalPath;
@property(retain, nonatomic, setter=_setTransferDataURL:) NSURL *transferDataURL; // @synthesize transferDataURL=_transferDataURL;
@property(retain, nonatomic, setter=_setLocalPath:) NSString *localPath;
@property(retain, nonatomic, setter=_setLocalURL:) NSURL *localURL;
@property(readonly, retain, nonatomic) NSString *mimeType; // @synthesize mimeType=_mimeType;
@property(retain, nonatomic) NSString *type; // @synthesize type=_utiType;
@property(nonatomic) unsigned int hfsType; // @synthesize hfsType=_hfsType;
- (id)description;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_localUserInfo;
@property(nonatomic, setter=_setForceArchive:) BOOL shouldForceArchive; // @synthesize shouldForceArchive=_shouldForceArchive;
@property(nonatomic, setter=setRegisteredAsStandalone:) BOOL wasRegisteredAsStandalone; // @synthesize wasRegisteredAsStandalone=_wasRegisteredAsStandalone;
@property(retain, nonatomic, setter=_setErrorDescription:) NSString *errorDescription; // @synthesize errorDescription=_errorDescription;
@property(nonatomic, setter=_setError:) int error; // @synthesize error=_error;
@property(nonatomic) BOOL shouldAttemptToResume; // @synthesize shouldAttemptToResume=_shouldAttemptToResume;
@property(nonatomic) BOOL isDirectory; // @synthesize isDirectory=_isDirectory;
@property(nonatomic) unsigned long long averageTransferRate; // @synthesize averageTransferRate=_averageTransferRate;
@property(nonatomic) unsigned long long totalBytes; // @synthesize totalBytes=_totalBytes;
@property(nonatomic) unsigned long long currentBytes; // @synthesize currentBytes=_currentBytes;
@property(retain, nonatomic) NSString *otherPerson; // @synthesize otherPerson=_otherPerson;
@property(retain, nonatomic) NSString *accountID; // @synthesize accountID=_accountID;
@property(nonatomic) unsigned int hfsCreator; // @synthesize hfsCreator=_hfsCreator;
@property(nonatomic) unsigned short hfsFlags; // @synthesize hfsFlags=_hfsFlags;
@property(retain, nonatomic) NSString *filename; // @synthesize filename=_filename;
@property(nonatomic) BOOL isIncoming; // @synthesize isIncoming=_isIncoming;
@property(nonatomic, setter=_setTransferState:) int transferState; // @synthesize transferState=_transferState;
@property(retain, nonatomic) NSDate *createdDate; // @synthesize createdDate=_createdDate;
@property(retain, nonatomic) NSString *guid; // @synthesize guid=_guid;
@property(readonly, nonatomic) unsigned long long _lastAveragedBytes; // @synthesize _lastAveragedBytes;
@property(nonatomic, setter=_setLastAveragedInterval:) double _lastAveragedInterval; // @synthesize _lastAveragedInterval;
@property(nonatomic, setter=_setLastUpdatedInterval:) double _lastUpdatedInterval; // @synthesize _lastUpdatedInterval;
@property(retain, nonatomic) NSData *localBookmark; // @synthesize localBookmark=_localBookmark;
@property(readonly, retain, nonatomic) NSURL *localURLWithoutBookmarkResolution; // @synthesize localURLWithoutBookmarkResolution=_localURL;

@end

@interface IMFromSuperParserContext : IMAttributedStringParserContext
{
    NSMutableArray *_inlinedFileTransferGUIDs;
    NSMutableArray *_standaloneFileTransferGUIDs;
}

- (id)initWithAttributedString:(id)arg1;
- (void)dealloc;
- (id)name;
- (id)resultsForLogging;
- (void)parserDidStart:(id)arg1;
- (void)parser:(id)arg1 foundAttributes:(id)arg2 inRange:(struct _NSRange)arg3;
- (void)parserDidStart:(id)arg1 bodyAttributes:(id)arg2;
- (void)parser:(id)arg1 foundAttributes:(id)arg2 inRange:(struct _NSRange)arg3 characters:(id)arg4;
- (void)parser:(id)arg1 foundAttributes:(id)arg2 inRange:(struct _NSRange)arg3 fileTransferGUID:(id)arg4 filename:(id)arg5 bookmark:(id)arg6 width:(id)arg7 height:(id)arg8;
@property(readonly, nonatomic) NSArray *standaloneFileTransferGUIDs; // @synthesize standaloneFileTransferGUIDs=_standaloneFileTransferGUIDs;
@property(readonly, nonatomic) NSArray *inlinedFileTransferGUIDs; // @synthesize inlinedFileTransferGUIDs=_inlinedFileTransferGUIDs;

@end

@interface IMXMLParserContext : NSObject
{
    NSData *_inContentAsData;
}

- (id)initWithContent:(id)arg1;
- (id)initWithContentAsData:(id)arg1;
- (void)dealloc;
- (void)reset;
- (id)inContent;
@property(readonly, retain) NSString *name;
@property(readonly, retain) NSArray *resultsForLogging;
@property(readonly, retain) NSData *inContentAsData; // @synthesize inContentAsData=_inContentAsData;

@end

@interface IMToSuperParserContext : IMXMLParserContext
{
    unsigned long long _underlineCount;
    unsigned long long _boldCount;
    unsigned long long _italicCount;
    unsigned long long _strikethroughCount;
    unsigned long long _messagePartNumber;
    NSMutableArray *_fontFamilyStack;
    NSMutableArray *_fontSizeStack;
    NSMutableArray *_linkStack;
    NSMutableArray *_backgroundColorStack;
    NSMutableArray *_foregroundColorStack;
    NSMutableDictionary *_currentAttributes;
    BOOL _didAddBodyAttributes;
    long long _baseWritingDirection;
    NSString *_backgroundColor;
    NSString *_foregroundColor;
    NSMutableAttributedString *_body;
    NSMutableArray *_fileTransferGUIDs;
}

- (void)dealloc;
- (void)reset;
- (id)name;
- (id)resultsForLogging;
- (void)_initIvars;
- (void)_clearIvars;
- (void)_updateFontFamily;
- (void)_updateFontSize;
- (void)incrementBoldCount;
- (void)decrementBoldCount;
- (void)incrementItalicCount;
- (void)decrementItalicCount;
- (void)incrementUnderlineCount;
- (void)decrementUnderlineCount;
- (void)incrementStrikethroughCount;
- (void)decrementStrikethroughCount;
- (void)_pushValue:(id)arg1 ontoStack:(id)arg2 attributeName:(id)arg3;
- (void)_popValueFromStack:(id)arg1 attributeName:(id)arg2;
- (void)pushFontFamily:(id)arg1;
- (void)popFontFamily;
- (void)pushFontSize:(id)arg1;
- (void)popFontSize;
- (void)pushLink:(id)arg1;
- (void)popLink;
- (void)pushBackgroundColor:(id)arg1;
- (void)popBackgroundColor;
- (void)pushForegroundColor:(id)arg1;
- (void)popForegroundColor;
- (void)_incrementMessagePartNumber;
- (void)appendString:(id)arg1;
- (void)appendFileTransferWithGUID:(id)arg1;
- (void)appendInlineImageWithGUID:(id)arg1 filename:(id)arg2 width:(long long)arg3 height:(long long)arg4;
@property(readonly, nonatomic) NSAttributedString *body;
@property(setter=setRightToLeft:) BOOL isRightToLeft;
@property long long baseWritingDirection; // @synthesize baseWritingDirection=_baseWritingDirection;
@property(retain, nonatomic) NSString *foregroundColor; // @synthesize foregroundColor=_foregroundColor;
@property(retain, nonatomic) NSString *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(retain, nonatomic) NSArray *fileTransferGUIDs; // @synthesize fileTransferGUIDs=_fileTransferGUIDs;

@end

@interface IMHTMLToSuperParserContext : IMToSuperParserContext
{
}

- (id)name;

@end

@interface IMInvocationQueue : NSObject
{
    id _delegate;
    id _target;
    double _dequeueRate;
    NSMutableArray *_queue;
    NSMutableArray *_options;
    NSProtocolChecker *_protocolChecker;
    BOOL _holdQueue;
}

- (id)init;
- (void)dealloc;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
@property(retain, nonatomic) Protocol *protocol;
@property(nonatomic) double dequeueRate; // @synthesize dequeueRate=_dequeueRate;
- (void)_stepQueueNotification:(id)arg1;
- (void)_holdQueueNotification:(id)arg1;
- (void)_releaseQueueNotification:(id)arg1;
- (void)_setQueueTimer;
- (BOOL)_invokeInvocation:(id)arg1;
- (void)_checkQueue;
- (unsigned long long)_optionsForInvocation:(id)arg1;
- (int)_numberOfLimitedMessagesInQueue;
- (int)_maxQueueLimitSize;
- (BOOL)_acceptsOptions:(unsigned long long)arg1;
- (BOOL)_replaceSimilarInvocation:(id)arg1;
- (BOOL)_insertInvocation:(id)arg1 options:(unsigned long long)arg2;
- (int)_enqueueInvocation:(id)arg1 options:(unsigned long long)arg2;
- (id)_dequeueInvocation;
- (void)removeAllInvocations;
- (void)invokeAll;
@property(readonly, nonatomic) unsigned long long count;
@property(readonly, nonatomic) BOOL isEmpty;
- (id)peek;
@property(readonly, nonatomic) BOOL holdQueue; // @synthesize holdQueue=_holdQueue;
@property(readonly, retain, nonatomic) NSProtocolChecker *protocolChecker; // @synthesize protocolChecker=_protocolChecker;
@property(readonly, retain, nonatomic) NSMutableArray *options; // @synthesize options=_options;
@property(readonly, retain, nonatomic) NSMutableArray *queue; // @synthesize queue=_queue;
@property(assign) id target; // @synthesize target=_target;
@property(assign) id delegate; // @synthesize delegate=_delegate;

@end

@interface IMThreadedWorkUnit : NSObject
{
    id _delegate;
    BOOL _kill;
    BOOL _inProgress;
    double _timeout;
    NSTimer *_timeoutTimer;
    BOOL _done;
}

- (void)_clearTimeoutTimer;
- (void)_timeoutHit:(id)arg1;
- (void)_setTimeoutTimer;
- (id)init;
- (void)dealloc;
- (void)_threadedDoStart;
- (void)_doSendDone;
- (void)_workerThread;
- (void)_timedOut;
- (void)_workerThreadFinished;
- (void)startThread;
- (void)_stopWatchingThread;
- (void)stopWatchingThread;
@property(readonly, nonatomic) BOOL done; // @synthesize done=_done;
@property(readonly, nonatomic) BOOL inProgress; // @synthesize inProgress=_inProgress;
@property(assign) id delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double timeout; // @synthesize timeout=_timeout;

@end

@interface IMKeychainPasswordFetcher : IMThreadedWorkUnit
{
    NSString *_service;
    NSString *_username;
    NSString *_password;
}

- (id)initWithUsername:(id)arg1 service:(id)arg2;
- (void)dealloc;
- (void)_workerThread;
- (void)_workerThreadFinished;
@property(retain, nonatomic) NSString *_password; // @synthesize _password;
@property(retain, nonatomic) NSString *_username; // @synthesize _username;
@property(retain, nonatomic) NSString *_service; // @synthesize _service;

@end

@interface IMLocalObject : NSObject
{
    id _internal;
}

+ (id)_registeredIMLocalObjectForPort:(unsigned int)arg1;
+ (void)_registerIMLocalObject:(id)arg1;
+ (void)_unregisterIMLocalObject:(id)arg1;
+ (void)initialize;
- (id)initWithTarget:(id)arg1 portName:(id)arg2 protocol:(id)arg3;
- (id)initWithTarget:(id)arg1 portName:(id)arg2 checkInPort:(BOOL)arg3 protocol:(id)arg4;
@property(nonatomic, assign) id target;
@property(nonatomic) int pid;
- (void)_clearPort:(BOOL)arg1;
- (void)dealloc;
- (void)_cancelHandlerCompleted;
- (void)_portDidBecomeInvalid;
- (void)terminated;
- (void)_systemShutdown:(id)arg1;
- (unsigned int)_port;
@property(readonly, nonatomic) NSString *portName;
- (void)setPortName:(id)arg1;
@property(readonly, nonatomic) NSMachPort *port;
- (BOOL)_handleInvocation:(id)arg1;
- (BOOL)handleInvocation:(id)arg1;
- (void)_handleNewInvocations;
- (void)_noteNewInvocation;
- (id)_peekInvocation;
- (void)_popInvocation;
- (void)_enqueueComponents:(id)arg1;
- (void)handleHeaderData:(unsigned long long *)arg1 headerLength:(unsigned long long)arg2 data:(char *)arg3 dataLength:(unsigned long long)arg4 fromPid:(int)arg5;
- (BOOL)isValidSelector:(SEL)arg1;
@property(readonly, nonatomic) BOOL isValid;
- (void)invalidate;
- (id)description;

@end

@interface IMLocalObjectInternal : NSObject
{
    NSRecursiveLock *_lock;
    id _target;
    unsigned int _port;
    struct dispatch_source_s *_source;
    struct dispatch_queue_s *_queue;
    struct dispatch_semaphore_s *_deathLock;
    NSString *_portName;
    NSProtocolChecker *_protocolChecker;
    int _pid;
    NSMutableArray *_componentQueue;
    NSLock *_componentQueueLock;
    NSRecursiveLock *_componentQueueProcessingLock;
    BOOL _pendingComponentQueueProcessing;
    BOOL _busyForwarding;
}

- (void)dealloc;

@end

@interface IMLockdownManager : NSObject
{
    int _state;
    BOOL _settingUpActivationState;
    BOOL _isBricked;
    BOOL _isInternalInstall;
    BOOL _isCarrierInstall;
    BOOL _hasShownMismatchedSIM;
    BOOL _hasShownWaitingAlertThisSession;
    NSString *_unqiueDeviceIdentifier;
    NSString *_inverseDeviceIdentifier;
}

+ (id)sharedInstance;
- (void)release;
- (unsigned long long)retainCount;
- (id)autorelease;
- (id)init;
- (void)dealloc;
- (BOOL)_hasEverRegistered;
- (void)_setHasEverRegistered:(BOOL)arg1;
- (void)_activationFailed;
- (void)_resetActivationState;
- (void)_setupActivationState;
@property(readonly, nonatomic) BOOL brickedDevice;
@property(readonly, nonatomic) BOOL isInternalInstall;
@property(readonly, nonatomic) BOOL isCarrierInstall;
@property(readonly, nonatomic) int lockdownState;
@property(readonly, nonatomic) NSString *uniqueDeviceIdentifier;
@property(readonly, nonatomic) NSString *inverseDeviceIdentifier;
- (struct OpaqueSecIdentityRef *)copyIdentity;
- (id)valueForDomain:(id)arg1 key:(id)arg2;
@property(retain, nonatomic) NSString *_inverseDeviceIdentifier; // @synthesize _inverseDeviceIdentifier;
@property(retain, nonatomic) NSString *_unqiueDeviceIdentifier; // @synthesize _unqiueDeviceIdentifier;
@property(nonatomic) BOOL _hasShownWaitingAlertThisSession; // @synthesize _hasShownWaitingAlertThisSession;
@property(nonatomic) BOOL _hasShownMismatchedSIM; // @synthesize _hasShownMismatchedSIM;
@property(nonatomic) BOOL _isCarrierInstall; // @synthesize _isCarrierInstall;
@property(nonatomic) BOOL _isInternalInstall; // @synthesize _isInternalInstall;
@property(nonatomic) BOOL _isBricked; // @synthesize _isBricked;
@property(nonatomic) BOOL _settingUpActivationState; // @synthesize _settingUpActivationState;
@property(nonatomic) int _state; // @synthesize _state;

@end

@interface IMLogging : NSObject
{
}

+ (void)initialize;
+ (BOOL)loggingEnabledForLevel:(int)arg1;
+ (void)logAtLevel:(int)arg1 type:(id)arg2 category:(id)arg3 format:(id)arg4;
+ (void)logAtLevel:(int)arg1 type:(id)arg2 category:(id)arg3 insertProcessInfo:(BOOL)arg4 format:(id)arg5;
+ (void)logAtLevel:(int)arg1 type:(id)arg2 category:(id)arg3 format:(id)arg4 arguments:(CDStruct_19b88e92 [1])arg5;
+ (void)logAtLevel:(int)arg1 type:(id)arg2 category:(id)arg3 insertProcessInfo:(BOOL)arg4 format:(id)arg5 arguments:(CDStruct_19b88e92 [1])arg6;
+ (id)logFileDirectory;
+ (id)dateFormatter;
+ (void)_appendString:(id)arg1 toFolder:(id)arg2 toFileNamed:(id)arg3;
+ (void)enableConsoleLoggingForLevel:(int)arg1;

@end

@interface IMNetworkConnectionMonitor : IMConnectionMonitor <IMSystemMonitorListener, IMReachabilityDelegate>
{
    IMReachability *_hostReachability;
    IMReachability *_ipReachability;
    unsigned int _hostFlags;
    unsigned int _ipFlags;
    BOOL _isConnected;
    BOOL _isSleeping;
}

- (void)dealloc;
- (void)_clearReachability:(id *)arg1 flags:(unsigned int *)arg2;
- (void)_doCallbackNow;
- (void)_doCallbackLater;
- (void)_setupReachability;
- (void)_verifyReachabilityMuchLater;
- (void)_lateReachabilityCheck;
- (void)reachabilityDidChange:(id)arg1;
- (void)systemWillSleep;
- (void)systemDidWake;
- (void)_setup;
- (void)goConnectedWithLocalSocketAddress:(id)arg1 remoteSocketAddress:(id)arg2;
- (void)goDisconnected;
- (BOOL)isImmediatelyReachable;
- (BOOL)isReachableAfterModemDial;
- (BOOL)startDialUp;
@property(nonatomic) BOOL _isSleeping; // @synthesize _isSleeping;
@property(nonatomic) BOOL _isConnected; // @synthesize _isConnected;
@property(nonatomic) unsigned int _ipFlags; // @synthesize _ipFlags;
@property(nonatomic) unsigned int _hostFlags; // @synthesize _hostFlags;
@property(retain, nonatomic) IMReachability *_ipReachability; // @synthesize _ipReachability;
@property(retain, nonatomic) IMReachability *_hostReachability; // @synthesize _hostReachability;

@end

@interface IMPair : NSObject <NSCopying>
{
    id _first;
    id _second;
}

+ (id)pairWithFirst:(id)arg1 second:(id)arg2;
- (id)initWithFirst:(id)arg1 second:(id)arg2;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
@property(retain) id second; // @synthesize second=_second;
@property(retain) id first; // @synthesize first=_first;

@end

@interface IMReachability : NSObject
{
    id <IMReachabilityDelegate> _delegate;
    BOOL _gettingFlags;
    unsigned int _flags;
    NSString *_description;
    void *_reachabilityRef;
}

+ (id)reachabilityForInternetConnection;
+ (id)reachabilityForLocalWiFi;
+ (id)reachabilityWithHostName:(id)arg1;
+ (id)reachabilityWithRemoteAddress:(id)arg1;
+ (id)reachabilityWithLocalAddress:(id)arg1 remoteAddress:(id)arg2;
- (id)_initWithReachabilityRef:(struct __SCNetworkReachability *)arg1 description:(id)arg2 delegate:(id)arg3;
- (id)initWithRemoteHost:(id)arg1 delegate:(id)arg2;
- (id)initWithLocalSocketAddress:(id)arg1 remoteSocketAddress:(id)arg2 delegate:(id)arg3;
- (void)dealloc;
- (id)description;
- (void)_handleCallbackForSCNetworkReachability:(struct __SCNetworkReachability *)arg1;
- (void)_forceGetFlagsIfNecessary;
@property(nonatomic) unsigned int flags; // @synthesize flags=_flags;
@property(readonly, nonatomic) unsigned int status;
@property(readonly, nonatomic) BOOL connectionRequired;
@property(nonatomic) void *reachabilityRef; // @synthesize reachabilityRef=_reachabilityRef;
@property(retain, nonatomic) NSString *reachabilityDescription; // @synthesize reachabilityDescription=_description;
@property(nonatomic) BOOL gettingFlags; // @synthesize gettingFlags=_gettingFlags;
@property(nonatomic, assign) id <IMReachabilityDelegate> delegate; // @synthesize delegate=_delegate;

@end

@interface IMRemoteObject : NSObject
{
    id _internal;
}

+ (id)_remoteObjects;
+ (void)_registerIMRemoteObject:(id)arg1;
+ (void)_unregisterIMRemoteObject:(id)arg1;
+ (void)initialize;
- (id)initWithPortName:(id)arg1 protocol:(id)arg2;
- (void)_cleanupMachBits;
- (void)finalize;
- (void)dealloc;
- (void)_portDidBecomeInvalid;
@property(readonly, nonatomic) BOOL isValid;
- (void)_systemShutdown:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (unsigned int)forwardComponentArray:(id)arg1;
- (void)forwardInvocation:(id)arg1;
@property double messageSendTimeout;
@property(readonly, nonatomic) NSString *portName;
- (void)setPortName:(id)arg1;
- (void)_informClientOfDisconnect;
- (void)invalidate;
- (id)description;
- (struct dispatch_queue_s *)_queue;

@end

@interface IMRemoteObjectBroadcaster : NSObject
{
    struct dispatch_queue_s *_queue;
}

+ (id)defaultBroadcaster;
- (void)release;
- (unsigned long long)retainCount;
- (id)autorelease;
- (id)init;
- (void)dealloc;
- (struct dispatch_queue_s *)_queue;
- (id)broadcastProxyForTarget:(id)arg1 protocol:(id)arg2;
- (id)broadcastProxyForTargets:(id)arg1 protocol:(id)arg2;
- (BOOL)isSendQueueEmpty;
- (void)flushProxy:(id)arg1;

@end

@interface IMRemoteObjectInternal : NSObject
{
    NSRecursiveLock *_lock;
    unsigned int _port;
    struct dispatch_source_s *_source;
    struct dispatch_queue_s *_queue;
    long long _deathPostPredicate;
    double _timeout;
    Protocol *_protocol;
    NSString *_portName;
    NSDate *_firstDateClientWasInformedOfDisconnected;
    BOOL _willBeTerminated;
}

@end

@interface IMRemoteProxy : NSObject
{
    id _target;
    SEL _selector;
    NSString *_identifier;
    BOOL _forwardInBackground;
    struct dispatch_queue_s *_queue;
    NSProtocolChecker *_protocolChecker;
}

- (id)initWithIdentifier:(id)arg1;
- (void)dealloc;
@property(copy) Protocol *remoteProtocol;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)flushSendQueue;
@property(retain, nonatomic) NSProtocolChecker *protocolChecker; // @synthesize protocolChecker=_protocolChecker;
@property(nonatomic) struct dispatch_queue_s *queue; // @synthesize queue=_queue;
@property BOOL forwardInBackground; // @synthesize forwardInBackground=_forwardInBackground;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
@property SEL action; // @synthesize action=_selector;
@property(assign) id target; // @synthesize target=_target;

@end

@interface IMSuddenTermination : NSObject
{
}

+ (void)enableWithKey:(id)arg1;
+ (void)disableWithKey:(id)arg1;

@end

@interface IMSuperToPlainParserContext : IMFromSuperParserContext
{
    NSMutableString *_plainString;
    BOOL _extractLinks;
}

- (id)initWithAttributedString:(id)arg1;
- (id)initWithAttributedString:(id)arg1 extractLinks:(BOOL)arg2;
- (void)dealloc;
- (id)name;
- (id)resultsForLogging;
@property(readonly, nonatomic) NSString *plainString;
- (void)parser:(id)arg1 foundAttributes:(id)arg2 inRange:(struct _NSRange)arg3 characters:(id)arg4;

@end

@interface IMSuperToSuperSanitizerContext : IMFromSuperParserContext
{
    NSMutableAttributedString *_content;
    NSMutableArray *_attachments;
    NSString *_backgroundColor;
    NSString *_foregroundColor;
    unsigned long long _offset;
    long long _baseWritingDirection;
    BOOL _extractAttachments;
    BOOL _hadBaseWritingDirectionAttribute;
}

- (id)initWithAttributedString:(id)arg1 extractAttachments:(BOOL)arg2;
- (void)dealloc;
- (id)name;
- (id)resultsForLogging;
- (void)parserDidStart:(id)arg1 bodyAttributes:(id)arg2;
- (void)parserDidEnd:(id)arg1;
- (void)parser:(id)arg1 foundAttributes:(id)arg2 inRange:(struct _NSRange)arg3 characters:(id)arg4;
- (void)parser:(id)arg1 foundAttributes:(id)arg2 inRange:(struct _NSRange)arg3 fileTransferGUID:(id)arg4 filename:(id)arg5 bookmark:(id)arg6 width:(id)arg7 height:(id)arg8;
@property(readonly, retain) NSArray *attachments; // @synthesize attachments=_attachments;
@property(readonly, retain) NSAttributedString *sanitizedContent; // @synthesize sanitizedContent=_content;

@end

@interface IMSystemMonitor : NSObject
{
    BOOL _willSleep;
    BOOL _screenLocked;
    BOOL _screensaverActive;
    BOOL _active;
    BOOL _backingUp;
    BOOL _switchedOut;
    NSMutableArray *_listeners;
    NSDate *_idleStart;
    NSTimer *_timer;
    NSString *_userID;
    double _delayTime;
    NSMutableArray *_earlyListeners;
    BOOL _usesPowerNotifications;
    BOOL _usesSystemIdleState;
}

+ (id)sharedMonitor;
- (void)release;
- (unsigned long long)retainCount;
- (id)autorelease;
- (id)init;
- (void)dealloc;
- (void)_deliverNotificationSelector:(SEL)arg1;
- (void)_systemDidWake;
- (void)_systemWillSleep;
- (void)_postScreenLocked;
- (void)_screenLocked:(id)arg1;
- (void)_screenUnlocked:(id)arg1;
- (void)_suspend:(id)arg1;
- (void)_resume:(id)arg1;
- (void)_postScreenSaverStarted;
- (void)_screenSaverStopped:(id)arg1;
- (void)_screenSaverStarted:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
@property(nonatomic, setter=setUsesPowerNotifications:) BOOL usesPowerNotifications; // @synthesize usesPowerNotifications=_usesPowerNotifications;
@property(nonatomic, setter=setUsesSystemIdleState:) BOOL usesSystemIdleState; // @synthesize usesSystemIdleState=_usesSystemIdleState;
- (void)_setIdleState:(BOOL)arg1;
- (void)_checkIdleTime:(id)arg1;
@property(readonly, nonatomic) BOOL isSystemIdle;
@property(readonly, nonatomic) double systemIdleTime;
@property(readonly, nonatomic) BOOL systemIsShuttingDown;
- (void)_systemWillShutdown;
- (void)_addEarlyListener:(id)arg1;
- (void)_removeEarlyListener:(id)arg1;
- (void)addListener:(id)arg1;
- (void)removeListener:(id)arg1;
- (void)_checkRestoredFromBackup;
- (void)_restoreDidStart;
- (void)_restoreDidStop;
- (void)_setupStateChanged;
- (void)_registerForRestoreNotifications;
- (void)_unregisterForRestoreNotifications;
@property(readonly, nonatomic) BOOL isSetup;
- (void)_handleLoginWindowNotification:(id)arg1;
- (void)_registerForLoginWindowNotifications;
- (void)_unregisterForLoginWindowNotifications;
@property(retain, nonatomic) NSMutableArray *_earlyListeners; // @synthesize _earlyListeners;
@property(nonatomic) double _delayTime; // @synthesize _delayTime;
@property(retain, nonatomic) NSString *_userID; // @synthesize _userID;
@property(retain, nonatomic) NSTimer *_timer; // @synthesize _timer;
@property(retain, nonatomic) NSDate *_idleStart; // @synthesize _idleStart;
@property(retain, nonatomic) NSMutableArray *_listeners; // @synthesize _listeners;
@property(nonatomic) BOOL isFastUserSwitched; // @synthesize isFastUserSwitched=_switchedOut;
@property(readonly, nonatomic) BOOL isBackingUp; // @synthesize isBackingUp=_backingUp;
@property(nonatomic, setter=setActive:) BOOL isActive; // @synthesize isActive=_active;
@property(readonly, nonatomic) BOOL isScreenSaverActive; // @synthesize isScreenSaverActive=_screensaverActive;
@property(readonly, nonatomic) BOOL isScreenLocked; // @synthesize isScreenLocked=_screenLocked;
@property(readonly, nonatomic) BOOL systemIsSleeping; // @synthesize systemIsSleeping=_willSleep;

@end

@interface IMSystemProxySettingsFetcher : NSObject
{
    id _delegate;
    NSString *_host;
    unsigned short _port;
    int _proxyProtocol;
    NSString *_proxyHost;
    unsigned short _proxyPort;
    NSString *_proxyAccount;
    NSString *_proxyPassword;
}

- (void)_callProxySettingsDelegateMethod;
- (void)_callAccountSettingsDelegateMethod;
- (void)_getProxyAccountAndPasswordFromKeychain;
- (void)_takeProxySettingsFromDictionary:(struct __CFDictionary *)arg1;
- (id)initWithHost:(id)arg1 port:(unsigned short)arg2 delegate:(id)arg3;
- (id)initWithProxyProtocol:(int)arg1 proxyHost:(id)arg2 proxyPort:(unsigned short)arg3 delegate:(id)arg4;
- (void)retrieveProxySettings;
- (void)retrieveProxyAccountSettings;
- (void)dealloc;
@property(copy, nonatomic) NSString *_proxyPassword; // @synthesize _proxyPassword;
@property(copy, nonatomic) NSString *_proxyAccount; // @synthesize _proxyAccount;
@property(nonatomic) unsigned short _proxyPort; // @synthesize _proxyPort;
@property(copy, nonatomic) NSString *_proxyHost; // @synthesize _proxyHost;
@property(nonatomic) int _proxyProtocol; // @synthesize _proxyProtocol;
@property(nonatomic) unsigned short _port; // @synthesize _port;
@property(copy, nonatomic) NSString *_host; // @synthesize _host;
@property(assign) id delegate; // @synthesize delegate=_delegate;

@end

@interface IMTimer : NSObject
{
    id _timer;
    id _target;
    NSDictionary *_userInfo;
    NSString *_name;
    double _timeInterval;
    SEL _selector;
    BOOL _wakeDevice;
}

- (id)initWithTimeInterval:(double)arg1 name:(id)arg2 shouldWake:(BOOL)arg3 target:(id)arg4 selector:(SEL)arg5 userInfo:(id)arg6;
- (void)setFireTimeInterval:(double)arg1;
- (void)invalidate;
- (void)dealloc;

@end

@interface IMUserNotification : NSObject
{
    id _reserved;
}

+ (id)userNotificationWithIdentifier:(id)arg1 timeout:(double)arg2 alertLevel:(unsigned long long)arg3 displayFlags:(unsigned long long)arg4 displayInformation:(id)arg5;
+ (id)userNotificationWithIdentifier:(id)arg1 title:(id)arg2 message:(id)arg3 defaultButton:(id)arg4 alternateButton:(id)arg5 otherButton:(id)arg6;
- (id)_initWithIdentifier:(id)arg1 timeout:(double)arg2 displayFlags:(unsigned long long)arg3 displayInformation:(id)arg4;
- (void)dealloc;
@property(readonly, retain, nonatomic) id identifier;
@property(readonly, nonatomic) double timeout;
@property(readonly, nonatomic) unsigned long long displayFlags;
@property(readonly, retain, nonatomic) NSDictionary *displayInformation;
@property(readonly, nonatomic) unsigned long long response;
@property(retain, nonatomic) NSDictionary *userInfo;
@property(readonly, nonatomic) unsigned long long responseFlags;
@property(readonly, retain, nonatomic) NSDictionary *responseInformation;
- (void)_setResponseFlags:(unsigned long long)arg1 responseInformation:(id)arg2;

@end

@interface IMUserNotificationCenter : NSObject
{
    NSMutableDictionary *_identifierToIMUserNotificationQueueMap;
    NSMutableDictionary *_identifierToListenerQueueMap;
    NSMutableDictionary *_identifierToBlockQueueMap;
    NSMutableDictionary *_identifierToRunLoopSourcesMap;
    NSMutableDictionary *_identifierToCFUserNotificationMap;
}

+ (id)sharedInstance;
- (void)release;
- (unsigned long long)retainCount;
- (id)autorelease;
- (void)dealloc;
- (id)_frontUserNotificationForIdentifier:(id)arg1;
- (id)_frontListenerForIdentifier:(id)arg1;
- (id)_frontBlockForIdentifier:(SEL)arg1;
- (id)_dequeueUserNotificationForIdentifier:(id)arg1;
- (id)_dequeueListenerForIdentifier:(id)arg1;
- (id)_dequeueBlockForIdentifier:(SEL)arg1;
- (void)_enqueueUserNotification:(id)arg1 forIdentifier:(id)arg2;
- (void)_enqueueListener:(id)arg1 forIdentifier:(id)arg2;
- (void)_enqueueBlock:(id)arg1 forIdentifier:(void)arg2;
- (void)_cancelActiveUserNotificationForIdentifier:(id)arg1;
- (void)_displayNextUserNotificationForIdentifier:(id)arg1;
- (void)_handleUserNotification:(struct __CFUserNotification *)arg1 responseFlags:(unsigned long long)arg2;
- (void)addUserNotification:(id)arg1 listener:(id)arg2;
- (void)addUserNotification:(id)arg1 listener:(id)arg2 completionHandler:(id)arg3;
- (unsigned long long)countForIdentifier:(id)arg1;
- (void)removeListener:(id)arg1;
- (void)removeAllListeners;
@property(retain, nonatomic) NSMutableDictionary *identifierToCFUserNotificationMap; // @synthesize identifierToCFUserNotificationMap=_identifierToCFUserNotificationMap;
@property(retain, nonatomic) NSMutableDictionary *identifierToRunLoopSourcesMap; // @synthesize identifierToRunLoopSourcesMap=_identifierToRunLoopSourcesMap;
@property(retain, nonatomic) NSMutableDictionary *identifierToBlockQueueMap; // @synthesize identifierToBlockQueueMap=_identifierToBlockQueueMap;
@property(retain, nonatomic) NSMutableDictionary *identifierToListenerQueueMap; // @synthesize identifierToListenerQueueMap=_identifierToListenerQueueMap;
@property(retain, nonatomic) NSMutableDictionary *identifierToIMUserNotificationQueueMap; // @synthesize identifierToIMUserNotificationQueueMap=_identifierToIMUserNotificationQueueMap;

@end

@interface IMXMLParser : NSObject <NSXMLParserDelegate>
{
    NSXMLParser *_parser;
    IMXMLParserContext *_context;
    IMXMLParserFrame *_topFrame;
    NSMutableArray *_otherFrames;
    struct _TidyDoc *_tidyDoc;
    struct __CFDictionary *_framespace;
}

+ (id)sharedInstance;
- (void)release;
- (unsigned long long)retainCount;
- (id)autorelease;
- (void)_setupTidy;
- (void)_teardownTidy;
- (id)_newDataByTidyingData:(id)arg1;
- (BOOL)parseContext:(id)arg1;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 foundIgnorableWhitespace:(id)arg2;
- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;

@end

@interface IMXMLReparser : NSObject <NSXMLParserDelegate>
{
    NSXMLParser *_parser;
    NSMutableString *_output;
    IMXMLReparserContext *_context;
    NSError *_error;
    unsigned long long _depth;
}

- (BOOL)parseWithContext:(id)arg1;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;

@end

@interface IMXMLReparserContext : NSObject
{
    NSString *_inContent;
    NSString *_outContent;
    NSArray *_attributesToPreserve;
    NSDictionary *_attributesToMerge;
    NSError *_error;
}

- (id)initWithContent:(id)arg1 attributesToPreserve:(id)arg2 attributesToMerge:(id)arg3;
- (void)dealloc;
- (void)_setOutContent:(id)arg1 error:(id)arg2;
@property(readonly, nonatomic) NSDictionary *attributesToMerge; // @synthesize attributesToMerge=_attributesToMerge;
@property(readonly, nonatomic) NSArray *attributesToPreserve; // @synthesize attributesToPreserve=_attributesToPreserve;
@property(readonly, nonatomic) NSString *outContent; // @synthesize outContent=_outContent;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, retain) NSString *_inContent; // @synthesize _inContent;

@end

@interface NSArray (FezAdditions)
- (id)firstObject;
- (BOOL)containsObjectIdenticalTo:(id)arg1;
- (long long)indexOfObject:(id)arg1 matchingComparison:(SEL)arg2;
- (BOOL)containsObject:(id)arg1 matchingComparison:(SEL)arg2;
- (id)arrayByApplyingSelectorWithValues:(SEL)arg1 toObject:(id)arg2;
- (id)arrayByFilteringOutBySelector:(SEL)arg1 withObject:(id)arg2;
- (id)arrayByFilteringWithBlock:(id)arg1;
- (id)arrayByApplyingBlock:(id)arg1;
- (id)arrayByApplyingBlock:(id)arg1 filter:(void)arg2;
@end

@interface NSAttributedString (FezAdditions)
- (BOOL)attribute:(id)arg1 existsInRange:(struct _NSRange)arg2;
- (id)trimmedString;
@end

@interface NSBundle (FezBundleHelpers)
- (id)_cachedMainBundleResourcePath;
@end

@interface NSData (FezAdditions)
+ (id)dataWithHexString:(id)arg1;
+ (id)dataWithRandomBytes:(unsigned long long)arg1;
- (id)hexStringOfBytes:(char *)arg1 withLength:(int)arg2;
- (id)hexString;
@end

@interface NSData (FezSecurityAdditions)
- (id)CRAM_MD5DataWithKey:(id)arg1;
- (id)CRAM_MD5HexStringWithKey:(id)arg1;
@property(readonly, nonatomic) NSData *SHA1Data;
@property(readonly, nonatomic) NSString *SHA1HexString;
@end

@interface NSDate (FezAdditions)
+ (id)dateWithISOFormatString:(id)arg1;
- (long long)dayComponent;
- (long long)daysAgo;
@end

@interface NSDateFormatter (RTLAdditions)
+ (BOOL)isDateFormatRTL;
@end

@interface NSDictionary (FezAdditions)
+ (id)_dictionaryWithData:(id)arg1 isPlist:(BOOL)arg2 allowedClasses:(id)arg3;
+ (id)dictionaryWithPlistData:(id)arg1;
+ (id)dictionaryWithArchiveData:(id)arg1 allowedClasses:(id)arg2;
+ (id)dictionaryWithArchiveData:(id)arg1;
- (id)keysOfChangedEntriesComparedTo:(id)arg1;
- (id)plistData;
- (id)archiveData;
- (id)dictionaryFromChanges:(id)arg1;
@end

@interface NSDictionary (HFSFileAttributes)
@property(readonly, nonatomic) unsigned short fileHFSFlags;
@property(readonly, nonatomic) unsigned long long fileHFSResourceForkSize;
@end

@interface NSError (FezAdditions)
+ (id)genericErrorWithFile:(const char *)arg1 function:(const char *)arg2 lineNumber:(long long)arg3;
@end

@interface NSFileManager (FezAdditions)
- (id)_randomTemporaryPathWithSuffix:(id)arg1;
- (id)_randomTemporaryPathWithFileName:(id)arg1;
- (BOOL)_isPathOnMissingVolume:(id)arg1;
- (BOOL)makeDirectoriesInPath:(id)arg1 mode:(unsigned long long)arg2;
- (id)uniqueFilename:(id)arg1 atPath:(id)arg2 ofType:(id)arg3;
- (id)createUniqueDirectoryWithName:(id)arg1 atPath:(id)arg2 ofType:(id)arg3;
- (BOOL)_moveItemAtPath:(id)arg1 toPath:(id)arg2 uniquePath:(id *)arg3 error:(id *)arg4 asCopy:(BOOL)arg5;
- (BOOL)moveItemAtPath:(id)arg1 toPath:(id)arg2 uniquePath:(id *)arg3 error:(id *)arg4;
- (BOOL)copyItemAtPath:(id)arg1 toPath:(id)arg2 uniquePath:(id *)arg3 error:(id *)arg4;
@end

@interface NSInvocation (IMInvocationQueueAdditions)
- (BOOL)wantsReturnValue;
@end

@interface NSMutableArray (FezAdditions)
+ (id)nonRetainingArray;
- (id)removeFirstObject;
@end

@interface NSMutableAttributedString (FezAdditions)
- (void)trimWhitespace;
- (void)replaceNewlinesWithSpaces;
- (void)replaceAttribute:(id)arg1 value:(id)arg2 withValue:(id)arg3;
- (void)removeCharactersWithAttribute:(id)arg1;
@end

@interface NSMutableDictionary (IMFoundation_Additions)
+ (id)nonRetainingDictionary;
@end

@interface NSMutableSet (FezAdditions)
+ (id)nonRetainingSet;
@end

@interface NSMutableString (FezAdditions)
- (void)replaceNewlinesWithSpaces;
@end

@interface NSNumber (FezAdditions)
- (id)localizedString;
@end

@interface NSObject (DelayedPerformAdditions)
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 ignoreMenuTracking:(BOOL)arg4;
@end

@interface NSObject (FezAdditions)
- (BOOL)isNull;
@end

@interface NSString (FezAdditions)
+ (id)stringGUID;
+ (id)stringGUIDForObject:(id)arg1;
+ (id)randomString;
+ (id)generatedRoomNameForGroupChat;
- (BOOL)isEqualToIgnoringCase:(id)arg1;
- (BOOL)isDirectory;
- (unsigned int)hexValue;
- (unsigned int)unsignedIntValue;
- (long long)localizedCompareToString:(id)arg1;
- (BOOL)localizedHasPrefix:(id)arg1 caseSensitive:(BOOL)arg2;
- (id)trimmedString;
- (id)stringByRemovingURLEscapes;
- (id)stringByAddingURLEscapes;
- (id)urlFromString;
- (id)stringWithDefaultServerIfNeeded:(id)arg1;
- (BOOL)_appearsToBePhoneNumber;
- (BOOL)isPhone;
- (BOOL)isICQ;
- (BOOL)isICQorPhone;
- (id)stringByResolvingAndStandardizingPath;
- (id)commaSeparatedComponents;
- (struct _NSRange)rangeOfNewlineInRange:(struct _NSRange)arg1;
- (id)stringByRemovingWhitespace;
- (id)uniqueSavePath;
- (id)stringByStrippingControlCharacters;
- (id)stringByRemovingCharactersFromSet:(id)arg1;
- (BOOL)roomNameIsProbablyAutomaticallyGenerated;
@end

@interface NSString (MobileMeHelpers)
@property(readonly, nonatomic) NSString *mobileMeDomain;
@property(readonly, nonatomic) BOOL hasMobileMeSuffix;
@property(readonly, nonatomic) NSString *stripMobileMSuffixIfPresent;
@end

@interface NSUserDefaults (SpecificDomainAdditions)
+ (id)agentObjectForKey:(id)arg1;
+ (id)appObjectForKey:(id)arg1;
+ (void)setObject:(id)arg1 forKey:(id)arg2 inDomain:(id)arg3;
+ (id)objectForKey:(id)arg1 inDomain:(id)arg2;
@end

@interface NetworkChangeNotifier : NSObject <IMSystemMonitorListener, IMConnectionMonitorDelegate>
{
    struct __SCDynamicStore *_store;
    struct __CFRunLoopSource *_runLoopSource;
    struct _DNSServiceRef_t *_dnsService;
    struct __CFRunLoopSource *_dnsServiceRunLoopSource;
    NSString *_myIP;
    NSArray *_myIPs;
    IMConnectionMonitor *_connectionMonitor;
    BOOL _lastPostedNetworkUp;
}

+ (id)sharedNotifier;
+ (BOOL)enableNotifications;
+ (void)disableNotifications;
- (void)_clearIPCache;
- (void)systemWillSleep;
- (void)systemDidWake;
- (BOOL)_listenForChanges;
- (id)init;
- (void)dealloc;
@property(readonly, nonatomic) NSArray *myIPAddresses;
@property(readonly, nonatomic) NSString *myIPAddress;
@property(readonly, nonatomic) unsigned short nextAvailablePort;
@property(readonly, nonatomic) struct _DNSServiceRef_t *sharedDNSService;
- (void)_clearSharedDNSService;
@property(readonly, nonatomic) struct __SCDynamicStore *getDynamicStore;
- (void)connectionMonitorDidUpdate:(id)arg1;
@property(readonly, nonatomic) BOOL isNetworkUp;
@property(nonatomic) BOOL lastPostedNetworkUp; // @synthesize lastPostedNetworkUp=_lastPostedNetworkUp;
@property(retain, nonatomic) IMConnectionMonitor *connectionMonitor; // @synthesize connectionMonitor=_connectionMonitor;
@property(retain, nonatomic) NSArray *myIPs; // @synthesize myIPs=_myIPs;
@property(retain, nonatomic) NSString *myIP; // @synthesize myIP=_myIP;
@property(nonatomic) struct __CFRunLoopSource *dnsServiceRunLoopSource; // @synthesize dnsServiceRunLoopSource=_dnsServiceRunLoopSource;
@property(nonatomic) struct _DNSServiceRef_t *dnsService; // @synthesize dnsService=_dnsService;
@property(nonatomic) struct __CFRunLoopSource *runLoopSource; // @synthesize runLoopSource=_runLoopSource;
@property(nonatomic) struct __SCDynamicStore *store; // @synthesize store=_store;

@end

