/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import <AddressBook/AddressBook.h>
#import <InstantMessage/IMService.h>
#import <Quartz/Quartz.h>
#import <WebKit/WebKit.h>
#import <QuickLook/QuickLook.h>

#import "NSPreferences.h"
#import "IMCore.h"
#import "IMFoundation.h"

@protocol TranscriptFragmentProvider, IKPictureTakerVideoReceiver;

@class VCChannelNegotiation, iTunesApplication, VCChannel;
@class ChatInputLine, StatusController, PeopleList, ShadowView, ServicePopUp;
@class AVChatWindow, AnimatingTabView, FezWebView, ChatViewController;
@class ChatMiniwindowController, PeoplePicker, FezImageView, VideoRecordingAdapter;
@class VideoProcessor, AuxVideoReceiver, RemoteAuxVideoMuxer;
@class QLPreviewPanel, QLPreviewView, QLPreviewSlideshow;
@class CIKernel, QCImage, QCPatchController;
@class Animator, FileTransfer, NSExtendedBox, AbbreviatingTextField, VolumeIndicator, MultiBuddyImageView, AVChatParticipant;
@class FetchICEDataOp, CollapseView, ExtendedComboBox, ABPeoplePickerView;
@class ILMediaBrowserView, VCInfoTable, VideoConferenceLayerView, VideoControlsOverlay, MenuButton;
@class StretchyImageView, FZLargeTypeView, ABPhoneFormatter, VCCamera, FezMPEG4AACAudioRecorder, Texture;
@class ExtendedSplitView, ChatVewDragDestinationHelper, ChatViewTimeFormatHelper, ChatViewScrollHelper;
@class ChatViewDDHelper, ChatViewQLHelper, TranscriptStyleController, DDHighlightsView;
@class FezAVRecorder, CustomWindow, JabberAuthRequest, QLAuxVideoReceiver, FZVideoConferenceController, Tooltip, EffectView, FezCellTipWindow;
@class ChatWindowController, NSSoundPopUpButton, ExtendedProgressIndicator, GradientView, LockButton, SecueWindowTitleCell, ARDLocalDesktopImage;
@class AVChat, ActiveChat, VCNotifier, AVSegmentedControl, ARDWarningView, ARDHUDPanel, ARDPIPButton, ARDImageView, FullScreenWindow, AudioRecordingAdapter;
@class DotMacCaps, PeopleListItem, OpenGLLayerModel, VideoChatController, PeopleListController;
@class DOMNode, DOMDocumentFragment, FrameReader, FileTransferRequest, FezH264VideoRecorder, ChooseBuddyButton, ExtendedTextField, LinkSheetController;
@class ChatNotifier, ChatFieldEditor, ChatViewDragDestinationHelper, ExtendedSplitViewGrabber, WindowDraggingTabView, MyNameControl, SFCertificateView, URLFetcher;
@class OpenGLVideoConferenceLayer, AudioConferenceView, SecureWindowTitleCell, PresenceTooltip, Service, OpenGLNSViewLayerWindow, ViewTable, GLFBO, GLSLProgram;
@class IMAuxVideoProvider, FZLargeTypeController, ValidationObject, IMSharedPixelBufferPool, NSDataRetainingImage, Prefs_MsgCompose;
@class SFCertificateTrustPanel, _GetVCChannelOp, _GetCertificateOp;

@interface ReadOnlyInstantMessage : NSObject
- (id)sender;
- (id)text;
@end

@interface VideoConferenceMultiController : NSObject
@end

struct AudioBuffer {
    unsigned int mNumberChannels;
    unsigned int mDataByteSize;
    void *mData;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioChannelDescription {
    unsigned int mChannelLabel;
    unsigned int mChannelFlags;
    float mCoordinates[3];
};

struct AudioChannelLayout {
    unsigned int mChannelLayoutTag;
    unsigned int mChannelBitmap;
    unsigned int mNumberChannelDescriptions;
    struct AudioChannelDescription mChannelDescriptions[1];
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct OpaqueAudioConverter;

struct OpaqueFigByteStream;

struct OpaqueFigFilePath;

struct OpaqueFigFormatWriter;

struct OpaqueSecCertificateRef;

struct OpaqueSecIdentityRef;

struct OpaqueSecKeyRef;

struct OpaqueVTCompressionSession;

struct OpaqueVTPixelTransferSession;

struct _RectPosition {
    int horiz;
    int vert;
};

struct __CFArray;

struct __CFDictionary;

struct __CVBuffer;

struct __CVOpenGLBufferPool;

struct __CVOpenGLTextureCache;

struct __GLIContextRec;

struct __GLIFunctionDispatchRec {
    void *accum;
    void *alpha_func;
    void *are_textures_resident;
    void *array_element;
    void *begin;
    void *bind_texture;
    void *bitmap;
    void *blend_func;
    void *call_list;
    void *call_lists;
    void *clear;
    void *clear_accum;
    void *clear_color;
    void *clear_depth;
    void *clear_index;
    void *clear_stencil;
    void *clip_plane;
    void *color3b;
    void *color3bv;
    void *color3d;
    void *color3dv;
    void *color3f;
    void *color3fv;
    void *color3i;
    void *color3iv;
    void *color3s;
    void *color3sv;
    void *color3ub;
    void *color3ubv;
    void *color3ui;
    void *color3uiv;
    void *color3us;
    void *color3usv;
    void *color4b;
    void *color4bv;
    void *color4d;
    void *color4dv;
    void *color4f;
    void *color4fv;
    void *color4i;
    void *color4iv;
    void *color4s;
    void *color4sv;
    void *color4ub;
    void *color4ubv;
    void *color4ui;
    void *color4uiv;
    void *color4us;
    void *color4usv;
    void *color_mask;
    void *color_material;
    void *color_pointer;
    void *copy_pixels;
    void *copy_tex_image1D;
    void *copy_tex_image2D;
    void *copy_tex_sub_image1D;
    void *copy_tex_sub_image2D;
    void *cull_face;
    void *delete_lists;
    void *delete_textures;
    void *depth_func;
    void *depth_mask;
    void *depth_range;
    void *disable;
    void *disable_client_state;
    void *draw_arrays;
    void *draw_buffer;
    void *draw_elements;
    void *draw_pixels;
    void *edge_flag;
    void *edge_flag_pointer;
    void *edge_flagv;
    void *enable;
    void *enable_client_state;
    void *end;
    void *end_list;
    void *eval_coord1d;
    void *eval_coord1dv;
    void *eval_coord1f;
    void *eval_coord1fv;
    void *eval_coord2d;
    void *eval_coord2dv;
    void *eval_coord2f;
    void *eval_coord2fv;
    void *eval_mesh1;
    void *eval_mesh2;
    void *eval_point1;
    void *eval_point2;
    void *feedback_buffer;
    void *finish;
    void *flush;
    void *fogf;
    void *fogfv;
    void *fogi;
    void *fogiv;
    void *front_face;
    void *frustum;
    void *gen_lists;
    void *gen_textures;
    void *get_booleanv;
    void *get_clip_plane;
    void *get_doublev;
    void *get_error;
    void *get_floatv;
    void *get_integerv;
    void *get_lightfv;
    void *get_lightiv;
    void *get_mapdv;
    void *get_mapfv;
    void *get_mapiv;
    void *get_materialfv;
    void *get_materialiv;
    void *get_pixel_mapfv;
    void *get_pixel_mapuiv;
    void *get_pixel_mapusv;
    void *get_pointerv;
    void *get_polygon_stipple;
    void *get_string;
    void *get_tex_envfv;
    void *get_tex_enviv;
    void *get_tex_gendv;
    void *get_tex_genfv;
    void *get_tex_geniv;
    void *get_tex_image;
    void *get_tex_level_parameterfv;
    void *get_tex_level_parameteriv;
    void *get_tex_parameterfv;
    void *get_tex_parameteriv;
    void *hint;
    void *index_mask;
    void *index_pointer;
    void *indexd;
    void *indexdv;
    void *indexf;
    void *indexfv;
    void *indexi;
    void *indexiv;
    void *indexs;
    void *indexsv;
    void *indexub;
    void *indexubv;
    void *init_names;
    void *interleaved_arrays;
    void *is_enabled;
    void *is_list;
    void *is_texture;
    void *light_modelf;
    void *light_modelfv;
    void *light_modeli;
    void *light_modeliv;
    void *lightf;
    void *lightfv;
    void *lighti;
    void *lightiv;
    void *line_stipple;
    void *line_width;
    void *list_base;
    void *load_identity;
    void *load_matrixd;
    void *load_matrixf;
    void *load_name;
    void *logic_op;
    void *map1d;
    void *map1f;
    void *map2d;
    void *map2f;
    void *map_grid1d;
    void *map_grid1f;
    void *map_grid2d;
    void *map_grid2f;
    void *materialf;
    void *materialfv;
    void *materiali;
    void *materialiv;
    void *matrix_mode;
    void *mult_matrixd;
    void *mult_matrixf;
    void *new_list;
    void *normal3b;
    void *normal3bv;
    void *normal3d;
    void *normal3dv;
    void *normal3f;
    void *normal3fv;
    void *normal3i;
    void *normal3iv;
    void *normal3s;
    void *normal3sv;
    void *normal_pointer;
    void *ortho;
    void *pass_through;
    void *pixel_mapfv;
    void *pixel_mapuiv;
    void *pixel_mapusv;
    void *pixel_storef;
    void *pixel_storei;
    void *pixel_transferf;
    void *pixel_transferi;
    void *pixel_zoom;
    void *point_size;
    void *polygon_mode;
    void *polygon_offset;
    void *polygon_stipple;
    void *pop_attrib;
    void *pop_client_attrib;
    void *pop_matrix;
    void *pop_name;
    void *prioritize_textures;
    void *push_attrib;
    void *push_client_attrib;
    void *push_matrix;
    void *push_name;
    void *raster_pos2d;
    void *raster_pos2dv;
    void *raster_pos2f;
    void *raster_pos2fv;
    void *raster_pos2i;
    void *raster_pos2iv;
    void *raster_pos2s;
    void *raster_pos2sv;
    void *raster_pos3d;
    void *raster_pos3dv;
    void *raster_pos3f;
    void *raster_pos3fv;
    void *raster_pos3i;
    void *raster_pos3iv;
    void *raster_pos3s;
    void *raster_pos3sv;
    void *raster_pos4d;
    void *raster_pos4dv;
    void *raster_pos4f;
    void *raster_pos4fv;
    void *raster_pos4i;
    void *raster_pos4iv;
    void *raster_pos4s;
    void *raster_pos4sv;
    void *read_buffer;
    void *read_pixels;
    void *rectd;
    void *rectdv;
    void *rectf;
    void *rectfv;
    void *recti;
    void *rectiv;
    void *rects;
    void *rectsv;
    void *render_mode;
    void *rotated;
    void *rotatef;
    void *scaled;
    void *scalef;
    void *scissor;
    void *select_buffer;
    void *shade_model;
    void *stencil_func;
    void *stencil_mask;
    void *stencil_op;
    void *tex_coord1d;
    void *tex_coord1dv;
    void *tex_coord1f;
    void *tex_coord1fv;
    void *tex_coord1i;
    void *tex_coord1iv;
    void *tex_coord1s;
    void *tex_coord1sv;
    void *tex_coord2d;
    void *tex_coord2dv;
    void *tex_coord2f;
    void *tex_coord2fv;
    void *tex_coord2i;
    void *tex_coord2iv;
    void *tex_coord2s;
    void *tex_coord2sv;
    void *tex_coord3d;
    void *tex_coord3dv;
    void *tex_coord3f;
    void *tex_coord3fv;
    void *tex_coord3i;
    void *tex_coord3iv;
    void *tex_coord3s;
    void *tex_coord3sv;
    void *tex_coord4d;
    void *tex_coord4dv;
    void *tex_coord4f;
    void *tex_coord4fv;
    void *tex_coord4i;
    void *tex_coord4iv;
    void *tex_coord4s;
    void *tex_coord4sv;
    void *tex_coord_pointer;
    void *tex_envf;
    void *tex_envfv;
    void *tex_envi;
    void *tex_enviv;
    void *tex_gend;
    void *tex_gendv;
    void *tex_genf;
    void *tex_genfv;
    void *tex_geni;
    void *tex_geniv;
    void *tex_image1D;
    void *tex_image2D;
    void *tex_parameterf;
    void *tex_parameterfv;
    void *tex_parameteri;
    void *tex_parameteriv;
    void *tex_sub_image1D;
    void *tex_sub_image2D;
    void *translated;
    void *translatef;
    void *vertex2d;
    void *vertex2dv;
    void *vertex2f;
    void *vertex2fv;
    void *vertex2i;
    void *vertex2iv;
    void *vertex2s;
    void *vertex2sv;
    void *vertex3d;
    void *vertex3dv;
    void *vertex3f;
    void *vertex3fv;
    void *vertex3i;
    void *vertex3iv;
    void *vertex3s;
    void *vertex3sv;
    void *vertex4d;
    void *vertex4dv;
    void *vertex4f;
    void *vertex4fv;
    void *vertex4i;
    void *vertex4iv;
    void *vertex4s;
    void *vertex4sv;
    void *vertex_pointer;
    void *viewport;
    void *blend_func_separate;
    void *blend_color;
    void *blend_equation;
    void *lock_arrays_EXT;
    void *unlock_arrays_EXT;
    void *client_active_texture;
    void *active_texture;
    void *multi_tex_coord1d;
    void *multi_tex_coord1dv;
    void *multi_tex_coord1f;
    void *multi_tex_coord1fv;
    void *multi_tex_coord1i;
    void *multi_tex_coord1iv;
    void *multi_tex_coord1s;
    void *multi_tex_coord1sv;
    void *multi_tex_coord2d;
    void *multi_tex_coord2dv;
    void *multi_tex_coord2f;
    void *multi_tex_coord2fv;
    void *multi_tex_coord2i;
    void *multi_tex_coord2iv;
    void *multi_tex_coord2s;
    void *multi_tex_coord2sv;
    void *multi_tex_coord3d;
    void *multi_tex_coord3dv;
    void *multi_tex_coord3f;
    void *multi_tex_coord3fv;
    void *multi_tex_coord3i;
    void *multi_tex_coord3iv;
    void *multi_tex_coord3s;
    void *multi_tex_coord3sv;
    void *multi_tex_coord4d;
    void *multi_tex_coord4dv;
    void *multi_tex_coord4f;
    void *multi_tex_coord4fv;
    void *multi_tex_coord4i;
    void *multi_tex_coord4iv;
    void *multi_tex_coord4s;
    void *multi_tex_coord4sv;
    void *load_transpose_matrixd;
    void *load_transpose_matrixf;
    void *mult_transpose_matrixd;
    void *mult_transpose_matrixf;
    void *compressed_tex_image3D;
    void *compressed_tex_image2D;
    void *compressed_tex_image1D;
    void *compressed_tex_sub_image3D;
    void *compressed_tex_sub_image2D;
    void *compressed_tex_sub_image1D;
    void *get_compressed_tex_image;
    void *secondary_color3b;
    void *secondary_color3bv;
    void *secondary_color3d;
    void *secondary_color3dv;
    void *secondary_color3f;
    void *secondary_color3fv;
    void *secondary_color3i;
    void *secondary_color3iv;
    void *secondary_color3s;
    void *secondary_color3sv;
    void *secondary_color3ub;
    void *secondary_color3ubv;
    void *secondary_color3ui;
    void *secondary_color3uiv;
    void *secondary_color3us;
    void *secondary_color3usv;
    void *secondary_color_pointer;
    void *vertex_array_range_EXT;
    void *flush_vertex_array_range_EXT;
    void *draw_range_elements;
    void *color_table;
    void *color_table_parameterfv;
    void *color_table_parameteriv;
    void *copy_color_table;
    void *get_color_table;
    void *get_color_table_parameterfv;
    void *get_color_table_parameteriv;
    void *color_sub_table;
    void *copy_color_sub_table;
    void *convolution_filter1D;
    void *convolution_filter2D;
    void *convolution_parameterf;
    void *convolution_parameterfv;
    void *convolution_parameteri;
    void *convolution_parameteriv;
    void *copy_convolution_filter1D;
    void *copy_convolution_filter2D;
    void *get_convolution_filter;
    void *get_convolution_parameterfv;
    void *get_convolution_parameteriv;
    void *get_separable_filter;
    void *separable_filter2D;
    void *get_histogram;
    void *get_histogram_parameterfv;
    void *get_histogram_parameteriv;
    void *get_minmax;
    void *get_minmax_parameterfv;
    void *get_minmax_parameteriv;
    void *histogram;
    void *minmax;
    void *reset_histogram;
    void *reset_minmax;
    void *tex_image3D;
    void *tex_sub_image3D;
    void *copy_tex_sub_image3D;
    void *combiner_parameterfv_NV;
    void *combiner_parameterf_NV;
    void *combiner_parameteriv_NV;
    void *combiner_parameteri_NV;
    void *combiner_input_NV;
    void *combiner_output_NV;
    void *final_combiner_input_NV;
    void *get_combiner_input_parameterfv_NV;
    void *get_combiner_input_parameteriv_NV;
    void *get_combiner_output_parameterfv_NV;
    void *get_combiner_output_parameteriv_NV;
    void *get_final_combiner_input_parameterfv_NV;
    void *get_final_combiner_input_parameteriv_NV;
    void *combiner_stage_parameterfv_NV;
    void *get_combiner_stage_parameterfv_NV;
    void *texture_range_APPLE;
    void *get_tex_parameter_pointerv_APPLE;
    void *blend_equation_separate_EXT;
    void *sample_coverage;
    void *sample_pass;
    void *pn_trianglesi_ATI;
    void *pn_trianglesf_ATI;
    void *gen_fences_APPLE;
    void *delete_fences_APPLE;
    void *set_fence_APPLE;
    void *is_fence_APPLE;
    void *test_fence_APPLE;
    void *finish_fence_APPLE;
    void *test_object_APPLE;
    void *finish_object_APPLE;
    void *bind_program_ARB;
    void *delete_programs_ARB;
    void *gen_programs_ARB;
    void *is_program_ARB;
    void *vertex_attrib1s_ARB;
    void *vertex_attrib1f_ARB;
    void *vertex_attrib1d_ARB;
    void *vertex_attrib2s_ARB;
    void *vertex_attrib2f_ARB;
    void *vertex_attrib2d_ARB;
    void *vertex_attrib3s_ARB;
    void *vertex_attrib3f_ARB;
    void *vertex_attrib3d_ARB;
    void *vertex_attrib4s_ARB;
    void *vertex_attrib4f_ARB;
    void *vertex_attrib4d_ARB;
    void *vertex_attrib4Nub_ARB;
    void *vertex_attrib1sv_ARB;
    void *vertex_attrib1fv_ARB;
    void *vertex_attrib1dv_ARB;
    void *vertex_attrib2sv_ARB;
    void *vertex_attrib2fv_ARB;
    void *vertex_attrib2dv_ARB;
    void *vertex_attrib3sv_ARB;
    void *vertex_attrib3fv_ARB;
    void *vertex_attrib3dv_ARB;
    void *vertex_attrib4bv_ARB;
    void *vertex_attrib4sv_ARB;
    void *vertex_attrib4iv_ARB;
    void *vertex_attrib4ubv_ARB;
    void *vertex_attrib4usv_ARB;
    void *vertex_attrib4uiv_ARB;
    void *vertex_attrib4fv_ARB;
    void *vertex_attrib4dv_ARB;
    void *vertex_attrib4Nbv_ARB;
    void *vertex_attrib4Nsv_ARB;
    void *vertex_attrib4Niv_ARB;
    void *vertex_attrib4Nubv_ARB;
    void *vertex_attrib4Nusv_ARB;
    void *vertex_attrib4Nuiv_ARB;
    void *vertex_attrib_pointer_ARB;
    void *enable_vertex_attrib_array_ARB;
    void *disable_vertex_attrib_array_ARB;
    void *get_vertex_attribdv_ARB;
    void *get_vertex_attribfv_ARB;
    void *get_vertex_attribiv_ARB;
    void *get_vertex_attrib_pointerv_ARB;
    void *program_env_parameter4d_ARB;
    void *program_env_parameter4dv_ARB;
    void *program_env_parameter4f_ARB;
    void *program_env_parameter4fv_ARB;
    void *program_local_parameter4d_ARB;
    void *program_local_parameter4dv_ARB;
    void *program_local_parameter4f_ARB;
    void *program_local_parameter4fv_ARB;
    void *get_program_env_parameterdv_ARB;
    void *get_program_env_parameterfv_ARB;
    void *get_program_local_parameterdv_ARB;
    void *get_program_local_parameterfv_ARB;
    void *program_string_ARB;
    void *get_program_string_ARB;
    void *get_programiv_ARB;
    void *enable_vertex_attrib_ARB;
    void *disable_vertex_attrib_ARB;
    void *is_vertex_attrib_enabled_ARB;
    void *map_vertex_attrib1d_ARB;
    void *map_vertex_attrib1f_ARB;
    void *map_vertex_attrib2d_ARB;
    void *map_vertex_attrib2f_ARB;
    void *point_parameterf;
    void *point_parameterfv;
    void *point_parameteri;
    void *point_parameteriv;
    void *fog_coordf;
    void *fog_coordfv;
    void *fog_coordd;
    void *fog_coorddv;
    void *fog_coord_pointer;
    void *vertex_array_parameteri_EXT;
    void *bind_vertex_array_EXT;
    void *delete_vertex_arrays_EXT;
    void *gen_vertex_arrays_EXT;
    void *is_vertex_array_EXT;
    void *element_pointer_APPLE;
    void *draw_element_array_APPLE;
    void *draw_range_element_array_APPLE;
    void *weightbv_ARB;
    void *weightsv_ARB;
    void *weightiv_ARB;
    void *weightfv_ARB;
    void *weightdv_ARB;
    void *weightubv_ARB;
    void *weightusv_ARB;
    void *weightuiv_ARB;
    void *weight_pointer_ARB;
    void *vertex_blend_ARB;
    void *multi_draw_arrays;
    void *multi_draw_elements;
    void *window_pos2d;
    void *window_pos2dv;
    void *window_pos2f;
    void *window_pos2fv;
    void *window_pos2i;
    void *window_pos2iv;
    void *window_pos2s;
    void *window_pos2sv;
    void *window_pos3d;
    void *window_pos3dv;
    void *window_pos3f;
    void *window_pos3fv;
    void *window_pos3i;
    void *window_pos3iv;
    void *window_pos3s;
    void *window_pos3sv;
    void *active_stencil_face_EXT;
    void *stencil_op_separate_ATI;
    void *stencil_func_separate_ATI;
    void *flush_render_APPLE;
    void *finish_render_APPLE;
    void *swap_APPLE;
    void *delete_object_ARB;
    void *get_handle_ARB;
    void *detach_object_ARB;
    void *create_shader_object_ARB;
    void *shader_source_ARB;
    void *compile_shader_ARB;
    void *create_program_object_ARB;
    void *attach_object_ARB;
    void *link_program_ARB;
    void *use_program_object_ARB;
    void *validate_program_ARB;
    void *uniform1f_ARB;
    void *uniform2f_ARB;
    void *uniform3f_ARB;
    void *uniform4f_ARB;
    void *uniform1i_ARB;
    void *uniform2i_ARB;
    void *uniform3i_ARB;
    void *uniform4i_ARB;
    void *uniform1fv_ARB;
    void *uniform2fv_ARB;
    void *uniform3fv_ARB;
    void *uniform4fv_ARB;
    void *uniform1iv_ARB;
    void *uniform2iv_ARB;
    void *uniform3iv_ARB;
    void *uniform4iv_ARB;
    void *uniform_matrix2fv_ARB;
    void *uniform_matrix3fv_ARB;
    void *uniform_matrix4fv_ARB;
    void *get_object_parameterfv_ARB;
    void *get_object_parameteriv_ARB;
    void *get_info_log_ARB;
    void *get_attached_objects_ARB;
    void *get_uniform_location_ARB;
    void *get_active_uniform_ARB;
    void *get_uniformfv_ARB;
    void *get_uniformiv_ARB;
    void *get_shader_source_ARB;
    void *bind_attrib_location_ARB;
    void *get_active_attrib_ARB;
    void *get_attrib_location_ARB;
    void *clamp_color_ARB;
    void *gen_queries;
    void *delete_queries;
    void *is_query;
    void *begin_query;
    void *end_query;
    void *get_queryiv;
    void *get_query_objectiv;
    void *get_query_objectuiv;
    void *bind_buffer;
    void *delete_buffers;
    void *gen_buffers;
    void *is_buffer;
    void *buffer_data;
    void *buffer_sub_data;
    void *get_buffer_sub_data;
    void *map_buffer;
    void *unmap_buffer;
    void *get_buffer_parameteriv;
    void *get_buffer_pointerv;
    void *depth_bounds_EXT;
    void *draw_buffers_ARB;
    void *is_shader;
    void *is_program;
    void *get_shaderiv;
    void *get_programiv;
    void *get_shader_info_log;
    void *get_program_info_log;
    void *stencil_func_separate;
    void *stencil_mask_separate;
    void *multi_draw_element_array_APPLE;
    void *multi_draw_range_element_array_APPLE;
    void *is_renderbuffer_EXT;
    void *bind_renderbuffer_EXT;
    void *delete_renderbuffers_EXT;
    void *gen_renderbuffers_EXT;
    void *renderbuffer_storage_EXT;
    void *get_renderbuffer_parameteriv_EXT;
    void *is_framebuffer_EXT;
    void *bind_framebuffer_EXT;
    void *delete_framebuffers_EXT;
    void *gen_framebuffers_EXT;
    void *check_framebuffer_status_EXT;
    void *framebuffer_texture1D_EXT;
    void *framebuffer_texture2D_EXT;
    void *framebuffer_texture3D_EXT;
    void *framebuffer_renderbuffer_EXT;
    void *get_framebuffer_attachment_parameteriv_EXT;
    void *generate_mipmap_EXT;
    void *buffer_parameteri_APPLE;
    void *flush_mapped_buffer_range_APPLE;
    void *program_env_parameters4fv_EXT;
    void *program_local_parameters4fv_EXT;
    void *object_purgeable_APPLE;
    void *object_unpurgeable_APPLE;
    void *get_object_parameteriv_APPLE;
    void *program_parameteri_EXT;
    void *framebuffer_texture_EXT;
    void *framebuffer_texture_layer_EXT;
    void *framebuffer_texture_face_EXT;
    void *bind_buffer_range_EXT;
    void *bind_buffer_offset_EXT;
    void *bind_buffer_base_EXT;
    void *begin_transform_feedback_EXT;
    void *end_transform_feedback_EXT;
    void *transform_feedback_varyings_EXT;
    void *get_transform_feedback_varying_EXT;
    void *get_integer_indexedv_EXT;
    void *get_boolean_indexedv_EXT;
    void *uniform_buffer_EXT;
    void *get_uniform_buffer_size_EXT;
    void *get_uniform_buffer_offset_EXT;
    void *clear_colorIi_EXT;
    void *clear_colorIui_EXT;
    void *tex_parameterIiv_EXT;
    void *tex_parameterIuiv_EXT;
    void *get_tex_parameterIiv_EXT;
    void *get_tex_parameterIuiv_EXT;
    void *vertex_attribI1i_EXT;
    void *vertex_attribI2i_EXT;
    void *vertex_attribI3i_EXT;
    void *vertex_attribI4i_EXT;
    void *vertex_attribI1ui_EXT;
    void *vertex_attribI2ui_EXT;
    void *vertex_attribI3ui_EXT;
    void *vertex_attribI4ui_EXT;
    void *vertex_attribI1iv_EXT;
    void *vertex_attribI2iv_EXT;
    void *vertex_attribI3iv_EXT;
    void *vertex_attribI4iv_EXT;
    void *vertex_attribI1uiv_EXT;
    void *vertex_attribI2uiv_EXT;
    void *vertex_attribI3uiv_EXT;
    void *vertex_attribI4uiv_EXT;
    void *vertex_attribI4bv_EXT;
    void *vertex_attribI4sv_EXT;
    void *vertex_attribI4ubv_EXT;
    void *vertex_attribI4usv_EXT;
    void *vertex_attribI_pointer_EXT;
    void *get_vertex_attribIiv_EXT;
    void *get_vertex_attribIuiv_EXT;
    void *uniform1ui_EXT;
    void *uniform2ui_EXT;
    void *uniform3ui_EXT;
    void *uniform4ui_EXT;
    void *uniform1uiv_EXT;
    void *uniform2uiv_EXT;
    void *uniform3uiv_EXT;
    void *uniform4uiv_EXT;
    void *get_uniformuiv_EXT;
    void *bind_frag_data_location_EXT;
    void *get_frag_data_location_EXT;
    void *color_mask_indexed_EXT;
    void *enable_indexed_EXT;
    void *disable_indexed_EXT;
    void *is_enabled_indexed_EXT;
    void *uniform_matrix2x3fv;
    void *uniform_matrix3x2fv;
    void *uniform_matrix2x4fv;
    void *uniform_matrix4x2fv;
    void *uniform_matrix3x4fv;
    void *uniform_matrix4x3fv;
    void *blit_framebuffer_EXT;
    void *renderbuffer_storage_multisample_EXT;
    void *begin_conditional_render_NV;
    void *end_conditional_render_NV;
    void *get_attached_shaders;
};

struct opaqueFigFormatDescription;

typedef struct {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    struct {
    } *_field5;
} CDAnonymousStruct5;

typedef struct {
    char *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
} CDAnonymousStruct9;

typedef struct {
    float left;
    float right;
    float leftBottom;
    float rightBottom;
    float leftTop;
    float rightTop;
} CDAnonymousStruct8;

typedef struct {
    struct {
        float _field1[6];
        float _field2;
        float _field3;
    } _field1;
    int _field2;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field3[3];
    NSSize _field4;
} CDAnonymousStruct10;

typedef struct {
    float frustum[6];
    float cameraHeight;
    float cameraDistance;
} CDAnonymousStruct2;

typedef struct {
    char *_field1;
    char _field2;
    char _field3;
    char _field4;
    char _field5;
    void *_field6;
} CDAnonymousStruct6;

typedef struct {
    int _field1[3];
    int _field2;
    char _field3;
} CDAnonymousStruct4;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDAnonymousStruct1;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDAnonymousStruct7;

typedef struct {
    int contourType;
    int intParam1;
    int intParam2;
    float floatParam1;
    float floatParam2;
} CDAnonymousStruct3;

/*
 * File: /Applications/iChat.app/Contents/MacOS/iChat
 * Arch: Intel 80x86 (i386)
 */

@protocol AccountBuddyListProtocol
- (unsigned int)sortOrderForIMHandle:(id)fp8 inGroup:(id)fp12;
- (id)buddyList;
- (void)setBuddyProperties:(id)fp8 buddyPictures:(id)fp12;
- (BOOL)removeIMHandle:(id)fp8 fromGroups:(id)fp12;
- (BOOL)addIMHandle:(id)fp8 toGroups:(id)fp12 atLocation:(int)fp16;
- (BOOL)removePeople:(id)fp8 fromGroups:(id)fp12;
- (BOOL)addPeople:(id)fp8 toGroups:(id)fp12 atLocation:(int)fp16;
- (void)addBuddyToBuddyList:(id)fp8;
@end

@protocol AccountChatProtocol
- (id)chatWithID:(id)fp8;
- (id)chatWithRoomName:(id)fp8;
- (void)setIMHandle:(id)fp8 isIgnored:(BOOL)fp12 inChat:(id)fp16;
- (void)leaveChatRoom:(id)fp8;
- (int)sendMessage:(id)fp8 toChat:(id)fp12;
- (void)respond:(BOOL)fp8 toInvitationToChat:(id)fp12;
- (void)inviteIMHandle:(id)fp8 toChat:(id)fp12 withMessage:(id)fp16;
- (id)goToChatNamed:(id)fp8 useRoomName:(BOOL)fp12 forceDisplay:(BOOL)fp16;
- (id)goToChatNamed:(id)fp8 useRoomName:(BOOL)fp12;
- (struct _FZChatRoomValidity)validityOfChatRoomName:(id)fp8;
- (BOOL)validateChatRoomName:(id)fp8 reason:(id *)fp12;
- (id)chatIDForRoomName:(id)fp8;
- (void)rememberChat:(id)fp8;
- (void)reconnectChat:(id)fp8;
- (void)forgetChat:(id)fp8;
- (void)refreshChatRegistration:(id)fp8;
- (void)forgetAllChats;
@end

@protocol AccountSessionProtocol
- (void)requestGroups;
- (void)chat:(id)fp8 statusChanged:(int)fp12;
- (void)chat:(id)fp8 showError:(id)fp12;
- (void)chat:(id)fp8 member:(id)fp12 statusChanged:(int)fp16;
- (void)handleChat:(id)fp8 messageReceived:(id)fp12;
- (void)groupsChanged:(id)fp8 error:(id)fp12;
- (void)buddyPictureChanged:(id)fp8 imageData:(id)fp12 imageHash:(id)fp16;
- (void)buddyPropertiesChanged:(id)fp8;
- (void)directIMRequestFrom:(id)fp8 invitation:(id)fp12;
- (void)invitedToChat:(id)fp8 isChatRoom:(BOOL)fp12 invitation:(id)fp16;
@end

@protocol ChatViewer
- (void)displayChat:(id)fp8;
- (id)displayChatForIMHandle:(id)fp8 style:(int)fp12;
- (id)createUIForChat:(id)fp8;
- (id)createChatUIWithIMHandles:(id)fp8 style:(int)fp12;
- (id)createChatWindowWithIMHandles:(id)fp8 style:(int)fp12;
- (id)visibleChatWithID:(id)fp8;
- (id)visibleChatToHookUpWithIMHandle:(id)fp8;
- (void)doAddBuddyCommandForIMHandle:(id)fp8 withWindow:(id)fp12;
- (void)showInfoForIMHandle:(id)fp8;
- (void)showProfileForIMHandle:(id)fp8;
- (id)chooserWindow;
- (id)windowForSheet;
@end

@protocol ChooseBuddyButtonDelegate
@end

@protocol DDHighlightsDataSource <NSObject>
- (id)highlightsViewHighlightObjects:(id)fp8;
- (id)highlightsView:(id)fp8 framesOfHighlightObject:(id)fp12;
- (BOOL)highlightsView:(id)fp8 allowsHighlightForObject:(id)fp12;
@end

@protocol FezAVRecordingAdapter <NSObject>
- (void)prepare;
- (void)start;
- (void)stop;
@end

@protocol FezAudioRecordingAdapter <FezAVRecordingAdapter>
@end

@protocol FezHotKeyHandler
- (void)handleHotKey:(int)fp8;
@end

@protocol FezVideoRecordingAdapter <FezAVRecordingAdapter>
- (NSSize)inputSize;
@end

@protocol FileDragOutViewDelegate <NSObject>
- (BOOL)fileDragOutView:(id)fp8 shouldDragFile:(id)fp12;
- (void)fileDragOutView:(id)fp8 file:(id)fp12 draggedTo:(id)fp16;
- (void)fileDragOutView:(id)fp8 fileDoubleClicked:(id)fp12;
@end

@protocol FileTransferFragmentProvider <TranscriptFragmentProvider>
- (id)fragmentForGUID:(id)fp8 filename:(id)fp12 bookmark:(id)fp16;
- (id)fragmentForGUID:(id)fp8 filename:(id)fp12 width:(double)fp16 height:(double)fp24;
@end

@protocol FileTransferIconLoaderDelegate
- (void)fileTransferIconDidLoad:(id)fp8;
@end

@protocol FrameListener <NSObject>
- (void)frameNotifier:(id)fp8 postedNewFrame:(id)fp12 fromSource:(id)fp16;
@end

@protocol IKPictureTakerVideoProvider
- (void)startGrabbingForReceiver:(id)fp8;
- (void)stopGrabbing;
- (BOOL)canStartGrabbing;
@end

@protocol IMActionsControllerHandler
- (id)performActionsForEvent:(int)fp8 withIMHandle:(id)fp12 withObject:(id)fp16 withChat:(id)fp20 silent:(BOOL)fp24;
@end

@protocol IMAuxVideoProvider
- (oneway void)provideFrameAtFramerate:(double)fp8;
- (oneway void)setBufferPoolDescription:(id)fp8 audioDeviceUID:(id)fp12 channels:(id)fp16;
- (oneway void)disconnectAndActivate:(BOOL)fp8;
- (oneway void)performActionForControlWithDictionaryRepresentation:(id)fp8;
@end

@protocol IMAuxVideoReceiver
- (oneway void)provider:(id)fp8 bundleID:(id)fp12 connectWithPixelFormat:(unsigned long)fp16 videoStills:(BOOL)fp20 replacement:(BOOL)fp24 audioChannels:(int)fp28 controlsDictionary:(id)fp32;
- (oneway void)provider:(id)fp8 sentBuffer:(int)fp12 withAttachments:(id)fp16;
- (oneway void)provider:(id)fp8 updateControlBarFromDictionaryRepresentation:(id)fp12;
@end

@protocol IMPreferencePaneControllerProtocol
- (void)updateBottomText;
@end

@protocol IMPreferencePaneProtocol
- (void)setDelegate:(id)fp8;
- (void)clearWarnings;
- (void)updateAccountActive;
- (void)updateAccountState;
- (void)loadAccount:(id)fp8;
- (id)prefView;
@end

@protocol IMPreferencePaneUserSetupProtocol
- (id)firstResponderForIdentifier:(id)fp8;
- (id)generateAccountForType:(id)fp8 canContinueSetup:(char *)fp12;
- (id)loadSettings;
- (id)accountTypeIdentifiers;
- (id)accountTypeNames;
- (id)accountTypePanes;
@end

@protocol IMScreenSaverMonitorListener
- (void)screenSaverDidStart;
- (void)screenSaverDidStop;
- (void)screenLocked;
- (void)screenUnlocked;
@end

@protocol PeopleListDelegate
- (id)peopleList:(id)fp8 alternateStatusTextForIMHandle:(id)fp12;
- (id)peopleList:(id)fp8 alternateNameTextForIMHandle:(id)fp12;
- (float)peopleList:(id)fp8 alphaForStatus:(unsigned int)fp12;
- (id)peopleList:(id)fp8 addablePeople:(id)fp12;
- (BOOL)peopleList:(id)fp8 canRemoveRows:(id)fp12;
- (void)peopleList:(id)fp8 deleteGroup:(id)fp12;
- (id)peopleList:(id)fp8 filterIMHandleFromPasteboard:(id)fp12;
- (void)peopleList:(id)fp8 setGroupsSortOrder:(id)fp12;
- (BOOL)peopleList:(id)fp8 addPersonWithoutID:(id)fp12;
- (id)peopleList:(id)fp8 siblingsForIMHandle:(id)fp12;
- (BOOL)peopleList:(id)fp8 people:(id)fp12 draggedFromGroups:(id)fp16 toGroup:(id)fp20 atLocation:(unsigned int)fp24 copying:(BOOL)fp28;
- (BOOL)peopleList:(id)fp8 pastePeople:(id)fp12 intoGroup:(id)fp16;
- (BOOL)peopleList:(id)fp8 deletePeople:(id)fp12;
- (id)peopleList:(id)fp8 menuForGroup:(id)fp12;
- (void)peopleListSelectedItemInfoChanged:(id)fp8;
- (id)propertiesForGroup:(id)fp8;
@end

@protocol QLPreviewSlideshowDelegate
- (void)slideshowGoToNextItem:(id)fp8;
- (id)currentSlideshowItem;
- (id)nextSlideshowItem;
@end

@protocol QLPreviewViewDelegate <NSObject>
@end

@protocol ShowMessagesDelegate
- (void)chatView:(id)fp8 canShowMessages:(BOOL)fp12;
@end

@protocol TranscriptFragmentProvider <NSObject>
- (id)role;
- (id)fragmentIdForMessage:(id)fp8;
- (id)initWithTranscriptStyleController:(id)fp8;
- (void)transcriptWillLoad;
- (void)transcriptDidLoad;
- (void)nameDisplayChanged:(id)fp8;
- (id)fragmentForMessage:(id)fp8;
- (id)appendFragmentForMessage:(id)fp8 toNode:(id)fp12;
- (void)removeFragmentForMessage:(id)fp8;
- (void)addFragmentIdPropertiesToElement:(id)fp8 forMessage:(id)fp12;
@end

@protocol TranscriptStylePluginProtocol
+ (BOOL)initializeClass:(id)fp8;
+ (void)terminateClass;
@end

@protocol VCRenderDelegateProtocol
- (int)processCVPixelBuffer:(struct __CVBuffer *)fp8 intoCVPixelBuffer:(struct __CVBuffer *)fp12 withHint:(id)fp16;
- (int)resizeRemoteVideoForUserID:(id)fp8 outBuffer:(struct __CVBuffer *)fp12;
@end

@protocol VideoConferenceDelegateProtocol
- (void)vcc:(id)fp8 initiateConferenceStartedForParty:(id)fp12;
- (void)vcc:(id)fp8 initiateConferenceCompletedForParty:(id)fp12 partyInfo:(id)fp16;
- (void)vcc:(id)fp8 partyConnected:(id)fp12;
- (void)vcc:(id)fp8 partyHungUp:(id)fp12;
- (void)vcc:(id)fp8 party:(id)fp12 didMute:(BOOL)fp16;
- (void)vcc:(id)fp8 party:(id)fp12 didPause:(BOOL)fp16;
- (void)vcc:(id)fp8 partyCancelled:(id)fp12;
- (void)vcc:(id)fp8 conferenceAttempted:(id)fp12;
- (void)vccInsufficientBandwidth:(id)fp8 forParty:(id)fp12 partyInfo:(id)fp16;
- (void)vccNetworkTimeout:(id)fp8;
- (void)vccLocalVideoError:(id)fp8;
- (void)vcc:(id)fp8 noPacketsFromParty:(id)fp12 partyInfo:(id)fp16;
- (void)vcc:(id)fp8 party:(id)fp12 didStall:(BOOL)fp16;
- (BOOL)shouldAcceptIncomingVideoConferenceRequestFromUser:(id)fp8 callbackInfo:(id)fp12;
- (BOOL)shouldAcceptIncomingVideoConferenceRequestFromUser:(id)fp8;
- (BOOL)vcc:(id)fp8 isRemoteCertificateValid:(struct OpaqueSecCertificateRef *)fp12 forUser:(id)fp16;
- (void)vcc:(id)fp8 securityChangedForUser:(id)fp12;
- (void)vccLocalCertNotAccepted:(id)fp8;
- (void)vccRemoteCertNotAccepted:(id)fp8 forParty:(id)fp12;
- (BOOL)vcc:(id)fp8 userRequestedAuxiliaryInput:(id)fp12;
- (void)vcc:(id)fp8 user:(id)fp12 approvedAuxiliaryInput:(BOOL)fp16;
@end

@interface ABPerson (Fez)
+ (id)cardFromPasteboardContent:(id)fp8;
+ (id)cardFromVCardData:(id)fp8;
- (BOOL)mergeVCardWithABPerson:(id)fp8;
- (id)mergedAddressBookMatch;
- (BOOL)openInAddressBookAndEdit:(BOOL)fp8;
- (BOOL)blockingIMHandlePictures;
- (void)setBlockingIMHandlePictures:(BOOL)fp8;
@end

@interface Account : IMAccount <AccountSessionProtocol, AccountBuddyListProtocol, AccountChatProtocol>
{
    BOOL _dontPostNotifications;
    BOOL _needToFlushBuddyList;
    SFCertificateTrustPanel *_trustPanel;
}

- (void)clearServiceCaches;
- (void)dealloc;
- (void)setSigning:(struct OpaqueSecCertificateRef *)fp8 encryption:(struct OpaqueSecCertificateRef *)fp12;
- (void)showFailedCertificateDialog;
- (void)logoutAccount;
- (void)askAboutEncryptionIfNecessary;
- (void)showForgotPasswordDialog;
- (void)_setTimersForNotJustLoggedIn;
- (void)setAccountLoginStatus:(int)fp8 errorMessage:(id)fp12 reason:(unsigned int)fp16;
- (void)joinBookmarkedChatRooms;
- (void)nowLoggedIn;
- (void)nowLoggedOut;
- (id)imHandleForGuid:(id)fp8;
- (void)_ensureGroupsExists:(id)fp8;
- (BOOL)addPeople:(id)fp8 toGroups:(id)fp12 atLocation:(int)fp16;
- (BOOL)removePeople:(id)fp8 fromGroups:(id)fp12;
- (BOOL)addIMHandle:(id)fp8 toGroups:(id)fp12 atLocation:(int)fp16;
- (BOOL)removeIMHandle:(id)fp8 fromGroups:(id)fp12;
- (void)addBuddyToBuddyList:(id)fp8;
- (void)_reconnectChat:(id)fp8 toIncomingID:(id)fp12;
- (id)_createInstantMessage:(id)fp8 chatID:(id)fp12;
- (id)_createFZMessage:(id)fp8;
- (id)_createChatWithID:(id)fp8 message:(id)fp12 style:(int)fp16 isInvitationMessage:(BOOL)fp20;
- (void)forgetAllChats;
- (void)refreshChatRegistration:(id)fp8;
- (id)_chatWithID:(id)fp8;
- (id)chatWithID:(id)fp8;
- (void)rememberChat:(id)fp8;
- (void)forgetChat:(id)fp8;
- (void)reconnectChat:(id)fp8;
- (id)chatWithRoomName:(id)fp8;
- (BOOL)validateChatRoomName:(id)fp8 reason:(id *)fp12;
- (BOOL)_registerChat:(id)fp8 withMessage:(id)fp12;
- (id)goToChatNamed:(id)fp8 useRoomName:(BOOL)fp12;
- (id)goToChatNamed:(id)fp8 useRoomName:(BOOL)fp12 forceDisplay:(BOOL)fp16;
- (void)inviteIMHandle:(id)fp8 toChat:(id)fp12 withMessage:(id)fp16;
- (void)respond:(BOOL)fp8 toInvitationToChat:(id)fp12;
- (int)sendMessage:(id)fp8 toChat:(id)fp12;
- (void)leaveChatRoom:(id)fp8;
- (void)setIMHandle:(id)fp8 isIgnored:(BOOL)fp12 inChat:(id)fp16;
- (id)_attachURL:(id)fp8 andSubject:(id)fp12 toAttributedString:(id)fp16;
- (void)_handleChat:(id)fp8 messageReceived:(id)fp12;
- (void)invitedToChat:(id)fp8 isChatRoom:(BOOL)fp12 invitation:(id)fp16;
- (void)certificateTrustSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)loginStatusChanged:(unsigned int)fp8 message:(id)fp12 reason:(unsigned int)fp16 properties:(id)fp20;
- (void)groupsChanged:(id)fp8 error:(id)fp12;
- (void)directIMRequestFrom:(id)fp8 invitation:(id)fp12;
- (void)handleChat:(id)fp8 messageReceived:(id)fp12;
- (void)chat:(id)fp8 member:(id)fp12 statusChanged:(int)fp16;
- (void)chat:(id)fp8 showError:(id)fp12;
- (void)chat:(id)fp8 statusChanged:(int)fp12;
- (Class)imHandleClass;

@end

@interface AIMAccount : Account
{
    int _dotMacCertifiability;
    DotMacCaps *_dotMacCaps;
}

- (void)dealloc;
- (void)setPassword:(id)fp8;
- (int)dotMacCertifiability;
- (void)clearDotMacCaps;
- (void)activateEncryptionIfPossible;
- (void)openEncryptionAssistant;
- (void)determineDotMacCertifiability;
- (void)_finishedGettingDotMacCaps:(id)fp8;
- (id)dotMacCaps;
- (void)_dotMacCertifiabilityDetermined:(id)fp8;
- (void)askAboutEncryptionIfNecessary;
- (void)_notJustLoggedIn;
- (void)showFailedCertificateDialog;
- (void)showForgotPasswordDialog;

@end

@interface ARDFileTransferButton : NSButton
{
    id _dragDelegate;
    IMHandle *_targetIMHandle;
    BOOL _remote;
    BOOL _dropDestination;
}

- (void)_updateImage;
- (void)awakeFromNib;
- (void)dealloc;
- (void)setRemote:(BOOL)fp8;
- (BOOL)isRemote;
- (void)_setDropDestination:(BOOL)fp8;
- (void)setTargetIMHandle:(id)fp8;
- (id)targetIMHandle;
- (void)_doBlink:(BOOL)fp8;
- (void)_blink:(int)fp8;
- (void)_springLoad;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)concludeDragOperation:(id)fp8;
- (BOOL)wantsPeriodicDraggingUpdates;

@end

@interface AVChatController : NSWindowController
{
    AVChatWindow *_avWindow;
    AnimatingTabView *_phaseTab;
    VolumeIndicator *_volumeIndicator;
    AVSegmentedControl *_chatControls;
    NSSlider *_volumeSlider;
    StretchyImageView *_volumeDownIcon;
    StretchyImageView *_volumeUpIcon;
    NSButton *_textReplyButton;
    NSAlert *_ardUpgradeCloseAlert;
    VCNotifier *_notifier;
    AVChat *_avChat;
    BOOL _handledAVShutdown;
    BOOL _windowIsClosing;
    ActiveChat *_textReply;
    NSMutableString *_errorReporterLog;
    int _errorCount;
    NSString *_lastError;
    BOOL _displayingPreview;
    VCChannelNegotiation *_ardUpgradeNegotiation;
    BOOL _showedMenuExtra;
    FezAVRecorder *_avRecorder;
    VideoRecordingAdapter *_videoRecordingAdapter;
    AudioRecordingAdapter *_audioRecordingAdapter;
    NSMutableArray *_recordingFileNames;
    NSMutableArray *_recordingNegotiationQueue;
    NSTimer *_recordingIndicatorTimer;
    BOOL _recordingIndicatorOn;
    NSTabView *_invitedPhaseTabView;
    NSTabView *_sourceTabView;
    NSView *_liveSourceView;
    NSTabViewItem *_liveSourceTabViewItem;
    BOOL _isSilent;
    NSString *_fileName;
    FZLargeTypeController *_largeTypeController;
}

+ (BOOL)isVideoController;
+ (id)_controllerForChatInitiatedBy:(id)fp8;
+ (id)_warnTitleVideo:(BOOL)fp8 ARD:(BOOL)fp12;
+ (void)_warnWithReason:(id)fp8 video:(BOOL)fp12 ARD:(BOOL)fp16;
+ (void)_warnMaxVideo:(BOOL)fp8;
+ (void)_warnMultiway:(BOOL)fp8 allPeople:(id)fp12 offenders:(id)fp16 offerText:(BOOL)fp20;
+ (id)_controllerWithAVChat:(id)fp8 ardRequest:(id)fp12 notifier:(id)fp16;
+ (BOOL)isInvitationTo:(id)fp8 anARDUpgrade:(unsigned int)fp12;
+ (id)_beginNewInvitationTo:(id)fp8 isVideo:(BOOL)fp12 withARDRole:(unsigned int)fp16;
+ (id)initiateInvitationTo:(id)fp8 isVideo:(BOOL)fp12 withARDRole:(unsigned int)fp16;
+ (void)_showVideoChatErrorAlert:(id)fp8;
+ (id)buildPersistentInvitationFrom:(id)fp8 isVideo:(BOOL)fp12 notifier:(id)fp16;
+ (id)receiveInvitationFrom:(id)fp8 isVideo:(BOOL)fp12 notifier:(id)fp16;
+ (id)showARDUpgradeRequest:(id)fp8 notifier:(id)fp12;
- (id)description;
- (id)chatControls;
- (void)largeTypeControllerClosing:(id)fp8;
- (void)displayFullScreenString:(id)fp8 forTime:(double)fp12;
- (id)_initWithAVChat:(id)fp8 ardRequest:(id)fp12 notifier:(id)fp16;
- (unsigned int)effectiveARDRole;
- (void)_vcCapsChanged;
- (void)windowDidLoad;
- (void)sendToItunes:(id)fp8;
- (void)endConferenceEvenWithARDUpgradeSheet:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)addVolumeIndicatorObservers;
- (void)removeVolumeIndicatorObservers;
- (BOOL)windowShouldClose:(id)fp8;
- (void)windowWillClose:(id)fp8;
- (void)dealloc;
- (void)windowDidBecomeKeyWindow;
- (void)windowDidResignKeyWindow;
- (id)avChat;
- (id)avWindow;
- (BOOL)isVideo;
- (id)notifier;
- (id)recordingFileNames;
- (id)ardUpgradeNegotiation;
- (void)showSelectedBuddyInfo:(id)fp8;
- (void)showSelectedBuddyProfile:(id)fp8;
- (void)showInAddressBook:(id)fp8;
- (void)addABuddy:(id)fp8;
- (void)startChat:(id)fp8;
- (void)sendMessage:(id)fp8;
- (void)sendDirectMessage:(id)fp8;
- (void)composeEMail:(id)fp8;
- (void)sendFile:(id)fp8;
- (id)_buildTextReply;
- (void)textReplyVC:(id)fp8;
- (void)cancelARDSession:(id)fp8;
- (void)inviteToARDAsClient:(id)fp8;
- (void)inviteToARDAsServer:(id)fp8;
- (void)acceptAndClearVCNotifier;
- (void)acceptVC:(id)fp8;
- (void)declineVC:(id)fp8;
- (id)textReply;
- (void)_setTextReply:(id)fp8;
- (void)endConference:(id)fp8;
- (void)updatePhaseTabWithState:(unsigned int)fp8;
- (void)endPreview;
- (void)_scheduleToggleRecordingIndicator:(BOOL)fp8;
- (void)_timerToggleRecordingIndicator;
- (void)showRecordingIndicator:(BOOL)fp8;
- (void)_showRecordingIndicatorOn:(BOOL)fp8;
- (void)_updateLocalUI;
- (void)toggleMute:(id)fp8;
- (void)togglePause:(id)fp8;
- (void)volumeChanged:(id)fp8;
- (void)toggleFullScreen:(id)fp8;
- (id)_remoteIMHandles;
- (void)toggleRecording:(id)fp8;
- (id)layerView;
- (BOOL)isFullScreen;
- (void)_inviteAlertDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)inviteIMHandles:(id)fp8;
- (void)addParticipant:(id)fp8;
- (void)_addiChatTheaterApplications:(id)fp8 toMenu:(id)fp12;
- (id)extraMenuItemsForAVSegmentedControl:(id)fp8;
- (id)extraMenuItemsForChooseBuddyButton:(id)fp8;
- (void)avSegmentedControl:(id)fp8 addIMHandle:(id)fp12;
- (id)_filterIMHandlesForAddButton:(id)fp8;
- (id)avSegmentedControl:(id)fp8 filterIMHandles:(id)fp12;
- (id)chooseBuddyButton:(id)fp8 filterIMHandles:(id)fp12;
- (void)updateAddBuddyButton;
- (void)removeParticipantWithID:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)restoreMenuExtraState;
- (void)postARDNotificationToMenuExtra;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)ARDUpgradeRequestChangedState;
- (void)finishARDUpgrade;
- (id)shortWindowTitle;
- (id)longWindowTitle;
- (void)_updateWindowTitle;
- (void)windowDidResize:(id)fp8;
- (NSRect)_textReplyWindowFrame;
- (void)positionARDUpgradeRequestWindow;
- (void)tabView:(id)fp8 willSwitchFromTab:(int)fp12 toTab:(int)fp16 effect:(int *)fp20 direction:(int *)fp24;
- (void)_updateAddBuddyButtonState;
- (id)_dragTypes;
- (BOOL)_getInvitablePeople:(id *)fp8 fromPasteboard:(id)fp12;
- (unsigned int)_operationForDrag:(id)fp8 onPartyID:(id)fp12 isFiles:(char *)fp16;
- (BOOL)_performDragOperation:(id)fp8 onPartyID:(id)fp12 confirmFileSend:(BOOL)fp16;
- (id)_errorLogForNoPackets:(id)fp8 isAudio:(BOOL)fp12;
- (id)_errorLogForDict:(id)fp8 isVideo:(BOOL)fp12;
- (id)_sanitizedErrorLogForDict:(id)fp8;
- (void)_addToErrorReporterLog:(id)fp8;
- (void)_membershipChanged;
- (void)avChat:(id)fp8 addedParticipant:(id)fp12;
- (void)avChat:(id)fp8 removedParticipant:(id)fp12;
- (void)avChatParticipantOrderFinalized:(id)fp8;
- (void)logError:(id)fp8 forParticipant:(id)fp12;
- (void)avChat:(id)fp8 participant:(id)fp12 changedFromState:(unsigned int)fp16 toState:(unsigned int)fp20;
- (BOOL)avChat:(id)fp8 startARDClientToParticipant:(id)fp12;
- (void)avChatIrisStateChanged:(id)fp8;
- (void)avChat:(id)fp8 blockedByFileTransfer:(BOOL)fp12;
- (void)avChat:(id)fp8 remoteParticipantMuteOrPausedChanged:(id)fp12;
- (void)avChat:(id)fp8 remoteParticipantNetworkStallChanged:(id)fp12;
- (void)avChatLocalNetworkStallChanged:(id)fp8;
- (void)_securityAlertDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_endChatWithSecurityError;
- (void)avChat:(id)fp8 securityChangedFromLevel:(int)fp12 toLevel:(int)fp16;
- (id)avChat:(id)fp8 bitmapDataForParticipant:(id)fp12;
- (void)avChat:(id)fp8 participantBeganAuxiliaryInput:(id)fp12;
- (void)avChat:(id)fp8 participantEndedAuxiliaryInput:(id)fp12;
- (void)avChat:(id)fp8 participantBeganAuxiliaryReplacement:(id)fp12;
- (void)avChat:(id)fp8 participantEndedAuxiliaryReplacement:(id)fp12;
- (id)errorString;
- (id)errorReporterLog;
- (id)vcErrorReport;
- (void)showErrorReportAndCloseWindowIfNecessaryForChat:(id)fp8;
- (id)_windowForSecurityAlert:(id)fp8;
- (id)secureWindowCertificates:(id)fp8;
- (void)handleShutdownAVConference:(id)fp8;
- (void)_showErrorReporterThenInvoke:(id)fp8;
- (id)defaultSaveName;
- (void)selectPhaseTabWithIdentifier:(id)fp8;
- (BOOL)startAVRecorder;
- (void)_requestRecordingPermissionForParticipant:(id)fp8;
- (void)_recordRequestDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)avChat:(id)fp8 participantRequestedRecording:(id)fp12;
- (void)avChat:(id)fp8 participantGrantedRecording:(id)fp12;
- (void)avChat:(id)fp8 participantDeniedRecording:(id)fp12;
- (void)_recordingFailed;
- (void)avChat:(id)fp8 participantBeginRecording:(id)fp12;
- (void)avChat:(id)fp8 participantFinishedRecording:(id)fp12;
- (void)requestRecording;
- (void)stopRecording;
- (void)clearRecordingFileNames;
- (void)setIsSilent:(BOOL)fp8;

@end

@interface AudioChatController : AVChatController <FezHotKeyHandler>
{
    NSView *_contentContainer;
    NSButton *_recordingButton;
    AbbreviatingTextField *_messageField;
    AbbreviatingTextField *_statusField;
    NSProgressIndicator *_progressIndicator;
    ARDWarningView *_ARDWarningView;
    NSBox *_box;
    AudioConferenceView *_conferenceView;
    BOOL _referToConnectionDoctor;
    BOOL _recordingUnderNegotiation;
    BOOL _recordingNegotiationStatusInConferenceView;
    ARDHUDPanel *_hudPanel;
    ARDPIPButton *_hudPIPButton;
}

- (void)awakeFromNib;
- (void)_positionRecordingButton;
- (id)windowNibName;
- (void)_setupARDWarning:(id)fp8;
- (void)_fixGradient;
- (void)_setupTabForARDChat:(id)fp8;
- (void)_removeContentView;
- (void)windowDidLoad;
- (NSRect)window:(id)fp8 willPositionSheet:(id)fp12 usingRect:(NSRect)fp16;
- (void)windowWillClose:(id)fp8;
- (float)_heightForTab:(id)fp8;
- (void)_setupAutoresizingForTabView:(BOOL)fp8;
- (void)_fitPhaseTab;
- (void)_addParticipantsToConferenceView:(id)fp8;
- (void)selectPhaseTabWithIdentifier:(id)fp8;
- (id)_stringForLocalState:(unsigned int)fp8 reason:(unsigned int)fp12;
- (id)longWindowTitle;
- (NSRect)_textReplyWindowFrame;
- (void)showRecordingIndicator:(BOOL)fp8;
- (void)_showRecordingIndicatorOn:(BOOL)fp8;
- (void)avChat:(id)fp8 securityChangedFromLevel:(int)fp12 toLevel:(int)fp16;
- (void)_setMessage:(id)fp8;
- (void)showARDWarningHelp:(id)fp8;
- (void)removeParticipantWithID:(id)fp8;
- (void)_ARDServerSessionDidBegin:(BOOL)fp8;
- (void)ARDUpgradeRequestChangedState;
- (void)finishARDUpgrade;
- (void)handleHotKey:(int)fp8;
- (void)dealloc;
- (void)switchView:(id)fp8;
- (void)logError:(id)fp8 forParticipant:(id)fp12;
- (void)avChat:(id)fp8 addedParticipant:(id)fp12;
- (void)avChat:(id)fp8 participant:(id)fp12 changedFromState:(unsigned int)fp16 toState:(unsigned int)fp20;
- (void)avChatIrisStateChanged:(id)fp8;
- (void)_clearMessage;
- (void)_informUserRecordingNegotiationBeginning;
- (void)requestRecording;
- (void)avChat:(id)fp8 participantGrantedRecording:(id)fp12;
- (void)avChat:(id)fp8 participantDeniedRecording:(id)fp12;
- (void)stopRecording;
- (void)avChat:(id)fp8 participantBeginRecording:(id)fp12;
- (void)avChat:(id)fp8 participantFinishedRecording:(id)fp12;

@end

@interface ARDFullScreenClientController : AudioChatController
{
    ARDImageView *_clientView;
    ShadowView *_shadowView;
    NSScrollView *_scrollView;
    BOOL _endConferenceWhenDone;
    BOOL _inTransition;
    BOOL _sentConnection;
    BOOL _closeWindowAfterTransition;
    NSWindow *_mainWindow;
    NSImageView *_freezeFrame;
    FullScreenWindow *_fullScreenWindow;
    struct _RectPosition _HUDPosition;
    unsigned int _HUDScreenIndex;
    float _HUDTitleMargin;
    NSRect _cachedLocalVisibleRect;
    ARDLocalDesktopImage *_localDesktop;
    NSTimer *_localSnapshotTimer;
    NSMutableArray *_otherDisplays;
    NSRect _cachedFullscreenARDRect;
    CAAnimation *_animation;
    int _mainWindowState;
}

- (void)windowDidLoad;
- (void)dealloc;
- (BOOL)isClientConnected;
- (void)setColorQualityLevel:(int)fp8;
- (void)_closeHUD;
- (void)_disconnectClient;
- (BOOL)avChat:(id)fp8 startARDClientToParticipant:(id)fp12;
- (BOOL)isShowingRemoteScreen;
- (int)_HUDScreenIndex;
- (void)_adjustHudPanelLevelBehindDock:(BOOL)fp8;
- (int)ARDWindowState;
- (void)setARDWindowState:(int)fp8;
- (void)_loadHUDPosition;
- (void)_saveHUDPosition;
- (void)_makeARDViewKey;
- (void)transitionDidFinish:(id)fp8;
- (NSRect)_currentHUDContentFrame;
- (NSRect)_HUDContentFrameWithImageSize:(NSSize)fp8 relativeTo:(NSRect)fp16;
- (void)_setHUDContentFrame:(NSRect)fp8 animate:(BOOL)fp24;
- (void)_snapHUDPanel;
- (NSRect)_clientViewFrame;
- (struct CGImage *)localImageScreenshot;
- (id)remoteImageScreenshot;
- (void)_switchScreenNow:(id)fp8;
- (void)_switchScreen;
- (void)animationDidStop:(id)fp8 finished:(BOOL)fp12;
- (void)_transitionToRemote:(BOOL)fp8 swap:(BOOL)fp12;
- (void)_startLocalSnapshotTimer;
- (void)_stopLocalSnapshotTimer;
- (void)_localPipImageRefresh:(id)fp8;
- (void)_transitionComplete:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)_updateControllerState;
- (id)_windowTitleForRemote:(BOOL)fp8;
- (void)_updateControllerStateForRemote:(BOOL)fp8;
- (void)finishARDUpgrade;
- (void)_showControllerAndPrepare;
- (void)_centerRemoteViewInFullScreen;
- (void)transferFile:(id)fp8;
- (void)switchView:(id)fp8;
- (void)showRemoteScreen:(id)fp8;
- (void)showLocalScreen:(id)fp8;
- (void)avChat:(id)fp8 participant:(id)fp12 changedFromState:(unsigned int)fp16 toState:(unsigned int)fp20;
- (void)endConference:(id)fp8;
- (void)_handleSystemScreenChange:(id)fp8;
- (void)_mainWindowDidResize:(id)fp8;
- (void)_mainWindowDidBecomeKey:(id)fp8;
- (void)_mainWindowDidResignKey:(id)fp8;
- (void)_ardViewDidResignKey:(id)fp8;
- (void)_hudPanelWillClose:(id)fp8;
- (void)_hudPanelDidMove:(id)fp8;
- (void)windowWillClose:(id)fp8;
- (void)tabView:(id)fp8 willSwitchFromTab:(int)fp12 toTab:(int)fp16 effect:(int *)fp20 direction:(int *)fp24;
- (void)_authorizeFileTransferFrom:(id)fp8 to:(id)fp12 toServer:(BOOL)fp16;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)windowDidBecomeKey;
- (void)windowDidResignKey;
- (void)authenticationSucceededForView:(id)fp8;
- (void)authenticationFailedForView:(id)fp8;
- (void)connectionFailedForView:(id)fp8 error:(int)fp12;
- (void)screenDrawProgressDidUpdateForView:(id)fp8;
- (void)viewDidChangeFrame:(id)fp8;
- (void)resolutionDidChangeForView:(id)fp8;
- (void)communicationInterruptedForView:(id)fp8;
- (void)userPictureDidChangeForView:(id)fp8;
- (void)displayInfoDidChangeForView:(id)fp8;
- (void)curtainedStateDidChangeForView:(id)fp8;
- (void)fileTransmitRequestForView:(id)fp8 localFilePaths:(id)fp12 remoteFilePath:(id)fp16;
- (void)fileReceiveRequestForView:(id)fp8 remoteFilePaths:(id)fp12 localFilePath:(id)fp16;

@end

@interface ARDHUDPanel : NSPanel
{
    BOOL _mouseIsDown;
    BOOL _didPerformMove;
}

- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (double)animationResizeTime:(NSRect)fp8;
- (void)_finishWindowDrag;
- (void)sendEvent:(id)fp8;

@end

/*@interface ARDImageView : RFBImageView
{
    BOOL _resigned;
    int _state;
    unsigned int _options;
    BOOL _mouseIsOverClient;
    BOOL _trackingAreaSet;
}

- (id)initWithFrame:(NSRect)fp8;
- (void)dealloc;
- (BOOL)resigned;
- (void)setResigned:(BOOL)fp8;
- (void)drawRect:(NSRect)fp8;
- (int)remoteEventState;
- (void)setRemoteEventState:(int)fp8;
- (void)_clearTrackingAreas;
- (void)updateTrackingAreas;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;

@end*/

@interface ARDLocalDesktopImage : NSObject
{
    NSSet *_fezWindows;
    unsigned int _fezCID;
    unsigned int _displayID;
}

- (id)init;
- (void)dealloc;
- (unsigned int)displayID;
- (void)setDisplayID:(unsigned int)fp8;
- (void)_setWindowNumbersToIgnore:(id)fp8;
- (struct CGImage *)_captureWindows:(unsigned int *)fp8 count:(int)fp12;
- (struct CGImage *)snapshotIgnoringWindows:(id)fp8;

@end

@interface ARDOverlayContentView : NSView
{
}

- (id)initWithFrame:(NSRect)fp8;
- (void)drawRect:(NSRect)fp8;

@end

@interface CustomFrameSavingWindow : NSWindow
{
    id _frameSaveDelegate;
    NSString *_autosaveFrameName;
    BOOL _restoringWindowFrame;
    BOOL _registered;
}

+ (NSRect)autosavedRectForFrameName:(id)fp8;
+ (void)saveRect:(NSRect)fp8 forFrameName:(id)fp24;
- (void)_restoreFrameFromAutosaveName;
- (NSRect)savedFrameForName:(id)fp8;
- (NSRect)savedFrame;
- (id)targetedFrameAutosaveName;
- (void)dealloc;
- (void)setTargetedFrameAutosaveName:(id)fp8;
- (id)frameSaveDelegate;
- (void)setFrameSaveDelegate:(id)fp8;
- (id)targetView;
- (NSRect)rectToSave;
- (void)saveFrameIfNecessary;
- (void)_customWindowDidMoveNotification:(id)fp8;
- (void)_customWindowDidResizeNotification:(id)fp8;

@end

@interface SecureWindow : CustomFrameSavingWindow
{
    AbbreviatingTextField *_titleView;
    SecureWindowTitleCell *_titleCell;
    LockButton *_lockButton;
    Animator *_animator;
    float _expandPhase;
    BOOL _expanded;
    BOOL _animates;
    id _certDelegate;
}

- (id)initWithContentRect:(NSRect)fp8 styleMask:(unsigned int)fp24 backing:(unsigned int)fp28 defer:(BOOL)fp32;
- (void)awakeFromNib;
- (void)dealloc;
- (float)_minXCoord;
- (float)_collapsedBoundry;
- (float)_expandedBoundry;
- (float)_expandPhase;
- (NSRect)_lockButtonFrame;
- (void)_adjustLockButtonFrame;
- (void)_setupLockButton;
- (BOOL)_isTitleHidden;
- (id)_customTitleCell;
- (NSRect)_realTitleFrame;
- (NSRect)_customTitleFrame;
- (void)_adjustTitleCellFrame;
- (void)_setupTitleView;
- (void)_adjustTitleBarViews;
- (void)setAnimates:(BOOL)fp8;
- (BOOL)animates;
- (void)_lockClicked:(id)fp8;
- (void)animator:(id)fp8 doStep:(float)fp12 lastStep:(BOOL)fp16;
- (void)windowDidResize:(id)fp8;
- (BOOL)isLockExpanded;
- (void)expandLock:(BOOL)fp8;
- (BOOL)isLockVisible;
- (void)showLock:(BOOL)fp8;
- (void)setSecurityLevel:(int)fp8;
- (int)securityLevel;
- (void)setUsesWhiteLockButton:(BOOL)fp8;
- (BOOL)usesWhiteLockButton;
- (void)setLockTitle:(id)fp8;
- (id)lockTitle;
- (id)lockButton;
- (void)setCertificateDelegate:(id)fp8;
- (id)certificateDelegate;
- (id)_certificates;
- (id)_trustPolicies;
- (void)_updateLockUI;
- (void)showCertificates;
- (void)certificatesChanged;
- (void)certificateSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (id)_secureWindowMenuTitle:(id)fp8;

@end

@interface AVChatWindow : SecureWindow
{
    double _resizeTime;
}

- (void)setConstantAnimationResizeTime:(double)fp8;
- (double)animationResizeTime:(NSRect)fp8;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (void)setAlphaValue:(float)fp8;

@end

@interface ARDOverlayWindow : AVChatWindow
{
}

- (id)initWithContentRect:(NSRect)fp8 styleMask:(unsigned int)fp24 backing:(unsigned int)fp28 defer:(BOOL)fp32;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (void)setTitle:(id)fp8;
- (void)configureContentView;

@end

@interface ARDPIPButton : NSButton
{
    id _dragDelegate;
    BOOL _remote;
    BOOL _dropDestination;
    NSString *_remoteName;
    NSTrackingArea *_trackingArea;
    NSExtendedBox *_labelBox;
    AbbreviatingTextField *_label;
}

- (void)awakeFromNib;
- (void)dealloc;
- (id)hitTest:(NSPoint)fp8;
- (void)setFrameSize:(NSSize)fp8;
- (void)drawRect:(NSRect)fp8;
- (void)_updateTracking;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (void)_setLabelText:(id)fp8;
- (void)_setDropDestination:(BOOL)fp8;
- (void)setRemote:(BOOL)fp8;
- (BOOL)isRemote;
- (void)setRemoteName:(id)fp8;
- (id)remoteName;
- (void)_doBlink:(BOOL)fp8;
- (void)_blink:(int)fp8;
- (void)_springLoad;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)concludeDragOperation:(id)fp8;
- (BOOL)wantsPeriodicDraggingUpdates;

@end

@interface ARDWarningView : NSView
{
    GradientView *_gradientView;
    NSTextField *_message;
    NSImageView *_icon;
    NSButton *_help;
    NSExtendedBox *_box;
}

- (id)initWithFrame:(NSRect)fp8;
- (void)dealloc;
- (float)autosizeHeight;
- (void)setStringValue:(id)fp8;
- (id)stringValue;

@end

@interface AVChat : NSObject <VideoConferenceDelegateProtocol, FrameListener>
{
    BOOL _suppressBeginChat;
    NSMutableArray *_participants;
    IMHandle *_initiator;
    AVChatParticipant *_localParticipant;
    unsigned int _localState;
    AVChatController *_owner;
    AVChatController *_ardUpgradeController;
    BOOL _isCaller;
    unsigned int _sessionID;
    BOOL _isVideo;
    BOOL _dataOut;
    BOOL _dataIn;
    BOOL _didRemoteMute;
    BOOL _didRemotePause;
    BOOL _localNetworkStall;
    BOOL _remoteNetworkStall;
    BOOL _participantOrderFinal;
    int _addableParticipants;
    int _addStatus;
    int _errorCode;
    NSDictionary *_errorDict;
    NSDate *_dateCreated;
    NSDate *_dateEnded;
    NSString *_participantNames;
    FZVideoConferenceController *_vcc;
    NSData *_connectData;
    NSDictionary *_callerProperties;
    NSMutableDictionary *_unknownPartyStates;
    int _securityLevel;
    BOOL _securityExpectedByInitiator;
    BOOL _isListening;
    BOOL _isCounterProposalConnect;
    BOOL _hasPendingAccept;
    BOOL _hasPendingInit;
    BOOL _isTerminating;
    BOOL _needToSendEndConferenceNotification;
    BOOL _Q8IrisOpen;
    int _fileTransferState;
    NSTimer *_screenSaverBlockingTimer;
    BOOL _usingCoercedIDs;
    NSString *_GUID;
    BOOL _silentConference;
    BOOL _recordingRequested;
    NSMutableDictionary *_recordingNegotiations;
    unsigned int _lastRecordingNegotiationID;
    NSMutableDictionary *_vcPartyIDToRecordingNegotiationID;
    unsigned int _oldAVManagerState;
    BOOL _auxVideoRunningOrUnderNegotiation;
    BOOL _auxInputAllowed;
    BOOL _watchingForAuxVideo;
}

+ (int)maxRemoteParticipantsVideo:(BOOL)fp8;
+ (id)allowedClassesForArchives;
+ (void)_updateActiveConference;
+ (id)chatWithSessionID:(unsigned int)fp8;
+ (id)chatList;
+ (id)connectedChat;
+ (id)activeChat;
+ (BOOL)activeChatPreventsTheater;
+ (BOOL)_anyOfTheseParticipants:(id)fp8 matchAnyOfTheseIMHandles:(id)fp12;
+ (BOOL)isIMHandleInActiveConference:(id)fp8;
+ (id)avChatInvitedByIMHandle:(id)fp8;
+ (id)avChatWaitingForReplyFromIMHandle:(id)fp8;
+ (void)endAllChats;
+ (void)_blockConnectedConferenceByFileTransfer:(BOOL)fp8;
+ (void)fileTransferDidStart;
+ (void)fileTransferDidEnd;
+ (void)_doSendUpdate;
+ (void)_sendUpdate;
+ (id)currentAVChatInfo;
+ (void)getVideoStillForIMHandle:(id)fp8 data:(id *)fp12 result:(unsigned int *)fp16;
+ (BOOL)isStateFinal:(unsigned int)fp8;
+ (BOOL)isStateActive:(unsigned int)fp8;
+ (id)vcResponseInfoWithSessionID:(unsigned int)fp8 ICEData:(id)fp12 ardChannelInfo:(id)fp16 forParticipant:(id)fp20 relaySupported:(BOOL)fp24;
+ (id)vcResponseInfoWithSessionID:(unsigned int)fp8;
- (void)_updateIMHandleInBuddyList:(id)fp8;
- (void)_noteStatusChangesForParticipant:(id)fp8;
- (void)_insertRemoteParticipant:(id)fp8 atIndex:(unsigned int)fp12;
- (void)_removeRemoteParticipant:(id)fp8;
- (BOOL)_moveVCPartyID:(id)fp8 toIndex:(unsigned int)fp12 inCount:(unsigned int)fp16;
- (void)_finalizeParticipantOrder:(id)fp8 andNotify:(BOOL)fp12;
- (id)_processNuggets:(id)fp8 filterEndedState:(BOOL)fp12 convertFromDict:(BOOL)fp16;
- (void)_removeParticipantsNotInNuggets:(id)fp8;
- (void)_updateParticipantsWithData:(id)fp8;
- (BOOL)_imHandlesRequireCoercedIDs:(id)fp8;
- (void)_initParticipantsWithIMHandles:(id)fp8 ARDRole:(unsigned int)fp12;
- (void)_initParticipantsWithNuggets:(id)fp8;
- (BOOL)_participantsCheckOut;
- (id)initPersistentAVChatWith:(id)fp8 invitedBy:(id)fp12 ARDRole:(unsigned int)fp16 sessionID:(unsigned int)fp20 video:(BOOL)fp24;
- (BOOL)canUseRelay;
- (unsigned int)_initialRelayStatus;
- (id)_initWith:(id)fp8 invitedBy:(id)fp12 ARDRole:(unsigned int)fp16 sessionID:(unsigned int)fp20 video:(BOOL)fp24 extraProperties:(id)fp28;
- (void)_setCallerProperties:(id)fp8;
- (id)initIncomingFrom:(id)fp8 isVideo:(BOOL)fp12 callerProperties:(id)fp16;
- (id)initOutgoingTo:(id)fp8 isVideo:(BOOL)fp12 ARDRole:(unsigned int)fp16;
- (void)_participantBeginRecording:(id)fp8 withID:(unsigned int)fp12;
- (void)_participantFinishedRecording:(id)fp8 withID:(unsigned int)fp12;
- (BOOL)recordingRequested;
- (void)_requestRecordingOnBehalfOf:(id)fp8 withID:(unsigned int)fp12;
- (void)requestRecording;
- (void)respondToRecordingRequestFromParticipant:(id)fp8 canRecord:(BOOL)fp12;
- (void)_participantRequestedRecording:(id)fp8 withID:(unsigned int)fp12;
- (void)_participantDeniedRecording:(id)fp8 forParticipant:(id)fp12 withID:(unsigned int)fp16;
- (void)_broadcastRecordingBeginForParticipant:(id)fp8 withID:(unsigned int)fp12;
- (void)_participantGrantedRecording:(id)fp8 forParticipant:(id)fp12 withID:(unsigned int)fp16;
- (void)recordingFinished;
- (void)_sendRecordingMessageToParticipant:(id)fp8 type:(unsigned int)fp12 forParticipant:(id)fp16 onBehalfOf:(id)fp20 withID:(unsigned int)fp24;
- (void)_handleRecordingMessageFromParticipant:(id)fp8 type:(unsigned int)fp12 userInfo:(id)fp16;
- (void)_prepareConnectionForParticipant:(id)fp8;
- (void)handleGenericAVMessageFromParticipant:(id)fp8 type:(unsigned int)fp12 userInfo:(id)fp16;
- (void)_destroyTimer:(id *)fp8;
- (void)dealloc;
- (id)description;
- (void)setOwner:(id)fp8;
- (void)unsetOwner:(id)fp8;
- (void)setARDUpgradeController:(id)fp8;
- (void)_blockByFileTransfer:(BOOL)fp8;
- (BOOL)isBlockedByFileTransfer;
- (id)owner;
- (id)ARDUpgradeController;
- (unsigned int)sessionID;
- (void)setGUID:(id)fp8;
- (id)GUID;
- (id)callerProperties;
- (id)otherIMHandle;
- (id)account;
- (id)initiatorIMHandle;
- (id)initiatorParticipant;
- (id)localParticipant;
- (id)participants;
- (id)remoteParticipants;
- (int)numActiveParticipants;
- (BOOL)_allParticipantsUsingICE;
- (void)_refreshAddableParticipants;
- (int)addableParticipants;
- (int)addStatus;
- (id)stringForAddStatus:(int)fp8;
- (id)stringForAddStatus;
- (int)addStatusForIMHandle:(id)fp8 asVideo:(BOOL)fp12 ardRole:(unsigned int)fp16;
- (BOOL)canAddIMHandle:(id)fp8;
- (id)participantMatchingIMHandle:(id)fp8;
- (id)_participantMatchingVCPartyID:(id)fp8;
- (id)vcPartyIDForIMHandle:(id)fp8;
- (id)participantWithID:(id)fp8;
- (void)removeParticipantWithID:(id)fp8;
- (id)orderedRemotePartyIDs;
- (void)finalizeOrderWithVideoFrom:(id)fp8;
- (void)setConferenceSilent:(BOOL)fp8;
- (BOOL)isConferenceSilent;
- (BOOL)isCaller;
- (BOOL)isVideo;
- (BOOL)isAOLInterop;
- (int)securityLevel;
- (int)_theoreticalSecurityLevel;
- (int)_currentSecurityLevel;
- (void)_updateSecurity;
- (BOOL)_allParticipantsCanBeSecure;
- (void)_setupIdentity;
- (void)_serviceCapsChanged:(id)fp8;
- (id)_currentAVChatInfo;
- (void)_updatePeopleListARDStatus;
- (void)startARDClientToParticipant:(id)fp8;
- (void)sendARDFileTransferAuthorization:(id)fp8 to:(id)fp12;
- (BOOL)isStateFinal;
- (BOOL)isActive;
- (unsigned int)localState;
- (void)_setCreationDate;
- (void)setDateCreated:(id)fp8;
- (id)dateCreated;
- (void)setDateEnded:(id)fp8;
- (id)dateEnded;
- (void)_blockScreenSaver:(id)fp8;
- (void)_subscribeToVCNotifications;
- (void)beginChat;
- (void)endChat;
- (void)endChatWithReason:(unsigned int)fp8;
- (void)endChatWithError:(int)fp8;
- (void)_endChatWithReason:(unsigned int)fp8 andError:(int)fp12;
- (void)_setStateDisconnected;
- (BOOL)dataOut;
- (BOOL)dataIn;
- (unsigned int)ardRole;
- (void)participant:(id)fp8 changedFromState:(unsigned int)fp12 toState:(unsigned int)fp16;
- (id)inviteesInfoAsPlist:(BOOL)fp8 account:(id)fp12;
- (void)inviteAll;
- (void)cancelInvitation;
- (void)_sendVCUpdateTo:(id)fp8 skipConnected:(BOOL)fp12;
- (void)invite:(id)fp8;
- (void)acceptInvitation:(BOOL)fp8;
- (BOOL)connectDataIsProbablyNAT;
- (void)_connectTo:(id)fp8 withData:(id)fp12;
- (void)startVCOnMainThread:(id)fp8;
- (void)_reportError:(id)fp8;
- (void)_counterPropose:(id)fp8;
- (void)_relayPropose:(id)fp8;
- (void)_configureVCCRecv;
- (void)_configureVCC;
- (void)connectProc:(id)fp8;
- (int)errorCode;
- (id)errorDictionary;
- (void)_setErrorDictionary:(id)fp8;
- (void)_setActiveConference;
- (unsigned int)sessionId;
- (id)vcErrorReport;
- (void)setMute:(BOOL)fp8;
- (BOOL)isMute;
- (void)toggleMute;
- (void)setPaused:(BOOL)fp8;
- (BOOL)isPaused;
- (void)togglePaused;
- (BOOL)isQ8IrisOpen;
- (void)setRemoteMute:(BOOL)fp8;
- (BOOL)isRemoteMute;
- (void)toggleRemoteMute;
- (void)setRemotePaused:(BOOL)fp8;
- (BOOL)isRemotePaused;
- (void)toggleRemotePaused;
- (BOOL)isChatMute;
- (void)toggleChatMute;
- (BOOL)isChatPaused;
- (void)toggleChatPaused;
- (BOOL)didRemoteMute;
- (BOOL)didRemotePause;
- (BOOL)isLocalNetworkStalled;
- (BOOL)isRemoteNetworkStalled;
- (float)audioVolume;
- (void)setAudioVolume:(float)fp8;
- (void)notifySystemVC:(BOOL)fp8;
- (void)_imHandleStatusChanged:(id)fp8;
- (void)_initiatorInfoChanged:(id)fp8;
- (void)_inviteeInfoChanged:(id)fp8;
- (BOOL)_checkVCResponseDict:(id)fp8;
- (void)_mainThreadFinishPrepareConnectionForInvitedParty:(id)fp8;
- (void)_threadedPrepareConnectionForInvitedParty:(id)fp8;
- (void)handleVideoConferenceNotification:(id)fp8;
- (id)userIDForPartyID:(id)fp8;
- (void)_unknownParty:(id)fp8 didConnect:(BOOL)fp12;
- (void)_unknownParty:(id)fp8 muteOrPause:(unsigned int)fp12 didChange:(BOOL)fp16;
- (void)_vccInitDidFinish;
- (void)vcc:(id)fp8 initiateConferenceStartedForParty:(id)fp12;
- (void)_vccInitiateConferenceCompleted:(id)fp8;
- (void)vcc:(id)fp8 initiateConferenceCompletedForParty:(id)fp12 partyInfo:(id)fp16;
- (void)_partyConnected:(id)fp8;
- (void)vcc:(id)fp8 partyConnected:(id)fp12;
- (void)_partyHungUp:(id)fp8;
- (void)vcc:(id)fp8 partyHungUp:(id)fp12;
- (void)_partyDidMute:(id)fp8;
- (void)vcc:(id)fp8 party:(id)fp12 didMute:(BOOL)fp16;
- (void)_partyDidPause:(id)fp8;
- (void)vcc:(id)fp8 party:(id)fp12 didPause:(BOOL)fp16;
- (void)_partyCancelled:(id)fp8;
- (void)vcc:(id)fp8 partyCancelled:(id)fp12;
- (void)vcc:(id)fp8 conferenceAttempted:(id)fp12;
- (void)_insufficientBandwidth:(id)fp8;
- (void)vccInsufficientBandwidth:(id)fp8 forParty:(id)fp12 partyInfo:(id)fp16;
- (void)_networkTimeout:(id)fp8;
- (void)vccNetworkTimeout:(id)fp8;
- (void)_localVideoError:(id)fp8;
- (void)vccLocalVideoError:(id)fp8;
- (void)_noPackets:(id)fp8;
- (void)vcc:(id)fp8 noPacketsFromParty:(id)fp12 partyInfo:(id)fp16;
- (void)_networkStall:(id)fp8;
- (void)vcc:(id)fp8 party:(id)fp12 didStall:(BOOL)fp16;
- (void)_getLocalVCConnectionData:(id)fp8;
- (id)getLocalVCConnectionDataForRemoteUserID:(id)fp8;
- (id)_shouldAcceptIncomingVideoConferenceRequestFromUser:(id)fp8;
- (BOOL)shouldAcceptIncomingVideoConferenceRequestFromUser:(id)fp8 callbackInfo:(id)fp12;
- (BOOL)shouldAcceptIncomingVideoConferenceRequestFromUser:(id)fp8;
- (void)_networkValidateCertificateDataForUser:(id)fp8;
- (BOOL)vcc:(id)fp8 isRemoteCertificateValid:(struct OpaqueSecCertificateRef *)fp12 forUser:(id)fp16;
- (BOOL)vcc:(id)fp8 isUserLikelyAIM59OrBelow:(id)fp12;
- (void)_networkSecurityChangedForUser:(id)fp8;
- (void)vcc:(id)fp8 securityChangedForUser:(id)fp12;
- (void)vccLocalCertNotAccepted:(id)fp8;
- (void)_partyHasInvalidCert:(id)fp8;
- (void)vccRemoteCertNotAccepted:(id)fp8 forParty:(id)fp12;
- (BOOL)isAuxVideoRunningOrUnderNegotiation;
- (void)setAuxVideoRunningOrUnderNegotiation:(BOOL)fp8;
- (BOOL)_shouldAllowIncomingAuxVideo;
- (BOOL)_shouldAllowOutgoingAuxVideo;
- (void)_removeAllEndedParticipantsInAuxVideo;
- (void)_userRequestedAuxiliaryInput:(id)fp8;
- (BOOL)vcc:(id)fp8 userRequestedAuxiliaryInput:(id)fp12;
- (void)_user:(id)fp8 approvedAuxiliaryInput:(BOOL)fp12;
- (void)_userApprovedAuxiliaryInput:(id)fp8;
- (void)_userDeclinedAuxiliaryInput:(id)fp8;
- (void)vcc:(id)fp8 user:(id)fp12 approvedAuxiliaryInput:(BOOL)fp16;
- (void)_userEndedAuxiliaryInput:(id)fp8;
- (void)_userBeganAuxiliaryInput:(id)fp8;
- (void)vcc:(id)fp8 userBeganAuxiliaryInput:(id)fp12;
- (void)vcc:(id)fp8 userEndedAuxiliaryInput:(id)fp12;
- (void)readyForAuxVideo;
- (void)_startAuxVideo;
- (void)_setupAuxVideo;
- (void)_setWatchingForAuxVideo:(BOOL)fp8;
- (void)frameNotifier:(id)fp8 postedNewFrame:(id)fp12 fromSource:(id)fp16;
- (void)_endAuxInput;
- (void)_auxVideoControllerChangedState:(id)fp8;
- (void)_auxVideoControllerChangedReplacementMode:(id)fp8;
- (void)invalidateParticipantNames;
- (id)participantNames;

@end

@interface AVChat (Scripting)
- (id)scriptID;
- (id)scriptService;
- (id)scriptAVType;
- (id)scriptScreenSharingRole;
- (id)scriptParticipants;
- (id)scriptShowFullScreen;
- (void)setScriptShowFullScreen:(id)fp8;
- (id)scriptShowLocalVideo;
- (void)setScriptShowLocalVideo:(id)fp8;
- (id)scriptPaused;
- (void)setScriptPaused:(id)fp8;
- (id)scriptMuted;
- (void)setScriptMuted:(id)fp8;
- (id)scriptStarted;
- (id)scriptUpdated;
- (id)scriptInvitation;
- (id)scriptSecure;
- (id)scriptActive;
- (id)scriptAVConnectionState;
- (id)objectSpecifier;
- (void)stopChatScriptCommand:(id)fp8;
- (void)requestRecordingScriptCommand:(id)fp8;
- (void)stopRecordingScriptCommand:(id)fp8;
- (void)acceptInvitationScriptCommand:(id)fp8;
- (void)declineInvitationScriptCommand:(id)fp8;
- (void)takeVideoSnapshotScriptCommand:(id)fp8;
@end

@interface AVChatCancelInvitationOp : ExtendedOperation
{
    IMHandle *_imHandle;
}

- (id)initWithIMHandle:(id)fp8;
- (void)dealloc;
- (void)didFinish;

@end

@interface AVChatController (Scripting)
- (void)acceptInvitationScriptCommand:(id)fp8;
- (void)declineInvitationScriptCommand:(id)fp8;
@end

@interface AVChatNegotiationOp : ExtendedOperation
{
    AVChatParticipant *_participant;
    BOOL _useICE;
    FetchICEDataOp *_fetchICEDataOp;
    ExtendedOperation *_ardChannelOp;
    NSDictionary *_result;
}

- (id)initWithParticipant:(id)fp8;
- (void)dealloc;
- (void)createChildOperations;

@end

@interface AVChatResponseOp : AVChatNegotiationOp
{
    int _response;
    NSDictionary *_callerProperties;
    unsigned int _sessionID;
}

- (void)dealloc;
- (id)initWithParticipant:(id)fp8 response:(int)fp12;
- (void)createChildOperations;
- (void)_sendMessageToBuddy:(id)fp8 result:(id)fp12;
- (void)didFinish;
- (void)main;

@end

@interface AVChatCounterProposalOp : AVChatResponseOp
{
}

- (void)_sendMessageToBuddy:(id)fp8 result:(id)fp12;

@end

@interface AVChatInvitationOp : AVChatNegotiationOp
{
    NSMutableDictionary *_inviteesInfo;
    BOOL _audioOnly;
}

- (id)initWithParticipant:(id)fp8;
- (void)dealloc;
- (void)createChildOperations;
- (void)didFinish;
- (void)main;

@end

@interface AVChatParticipant : NSObject
{
    IMHandle *_imHandle;
    IMHandle *_inviter;
    AVChat *_avChat;
    BOOL _sendingAudio;
    BOOL _sendingVideo;
    BOOL _sendingAuxVideo;
    unsigned int _ardRole;
    BOOL _audioMuted;
    BOOL _videoPaused;
    BOOL _networkStalled;
    unsigned int _state;
    unsigned int _avRelayStatus;
    unsigned int _chatEndedReason;
    int _chatError;
    NSString *_rawErrorString;
    NSString *_errorString;
    NSData *_localICEData;
    NSData *_remoteICEData;
    VCChannel *_ARDChannel;
    BOOL _usingICE;
    VCChannelNegotiation *_ARDChannelNegotiation;
    NSData *_ARDEncryptionKey;
    BOOL _ARDAuthorized;
    NSMutableDictionary *_incomingVCChannelNegotiations;
    NSMutableDictionary *_outgoingVCChannelNegotiations;
    NSOperationQueue *_messagingQueue;
    NSTimer *_connectTimeoutTimer;
    BOOL _isInitiator;
    BOOL _isAOLInterop;
    BOOL _isRecording;
    NSString *_vcPartyID;
    struct OpaqueSecCertificateRef *_savedCertificate;
    unsigned int _ARDFileTransferIndex;
    NSMutableIndexSet *_ARDFileTransferUsedIndexes;
    /*struct {
        int;
        int [2];
    } *_RFBConnectionResult;*/
    BOOL _vcSecurityVerified;
}

- (id)description;
- (id)init;
- (id)_initAs:(id)fp8 invitedBy:(id)fp12 sendingAudio:(BOOL)fp16 sendingVideo:(BOOL)fp20 usingICE:(BOOL)fp24 ARDRole:(unsigned int)fp28 toChat:(id)fp32 inState:(unsigned int)fp36 withError:(int)fp40 andReason:(unsigned int)fp44 andVCPartyID:(id)fp48 account:(id)fp52;
- (id)initAs:(id)fp8 invitedBy:(id)fp12 ARDRole:(unsigned int)fp16 toChat:(id)fp20 account:(id)fp24;
- (id)initWithStatusNugget:(id)fp8 andChat:(id)fp12 account:(id)fp16;
- (void)_cleanupARDResult;
- (void)disconnectFromAVChat;
- (void)dealloc;
- (id)imHandle;
- (id)invitedBy;
- (BOOL)vcSecurityVerified;
- (void)setVCSecurityVerified:(BOOL)fp8;
- (id)avChat;
- (id)name;
- (BOOL)isInitiator;
- (BOOL)isLocalParticipant;
- (unsigned int)reasonChatEnded;
- (int)error;
- (id)remoteErrorParticipant;
- (void)_getErrorString:(id *)fp8 rawString:(id *)fp12 forError:(int)fp16;
- (void)_generateErrorStrings;
- (id)rawErrorString;
- (id)errorString;
- (id)errorStringFor:(int)fp8;
- (void)_setError:(int)fp8;
- (void)_enqueueOperation:(id)fp8;
- (void)sendInvitation;
- (void)cancelInvitation;
- (void)sendVCUpdate;
- (void)sendResponse:(int)fp8;
- (void)sendCounterProposal;
- (void)sendRelayProposal;
- (void)receivedRelayProposalRequestWithConnectionData:(id)fp8;
- (void)receivedRelayProposalAcceptWithConnectionData:(id)fp8;
- (void)setWaitingToConnect:(BOOL)fp8;
- (void)resetWaitingToConnectTimer;
- (void)_connectTimeout:(id)fp8;
- (id)outgoingARDUpgradeRequest;
- (void)requestARDUpgrade:(unsigned int)fp8;
- (void)ARDChannelDidConnect:(id)fp8;
- (void)setARDRole:(unsigned int)fp8;
- (BOOL)createVCChannelRequestWithInfo:(id)fp8 isUpgrade:(BOOL)fp12;
- (void)handleVCChannelMessage:(unsigned int)fp8 userInfo:(id)fp12;
- (void)setRemoteICEData:(id)fp8;
- (id)remoteICEData;
- (id)getLocalICEData;
- (id)rebuildLocalICEData;
- (BOOL)isUsingICE;
- (CDAnonymousStruct5 *)_newConnectionAuthorization;
- (void)_authorizeARDClientIfPossible;
- (void)_connectClientIfPossible;
- (void)authorizeARDClient;
- (void)setARDAuthorized;
- (id)ARDChannelNegotiation;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)closeARDChannel;
- (BOOL)isSendingAudio;
- (BOOL)isSendingVideo;
- (BOOL)isSendingAuxVideo;
- (void)setSendingAuxVideo:(BOOL)fp8;
- (unsigned int)ardRole;
- (BOOL)isAudioMuted;
- (void)setAudioMuted:(BOOL)fp8;
- (BOOL)isVideoPaused;
- (void)setVideoPaused:(BOOL)fp8;
- (BOOL)isNetworkStalled;
- (void)setNetworkStalled:(BOOL)fp8;
- (BOOL)isAOLInterop;
- (void)setAOLInterop:(BOOL)fp8;
- (BOOL)isRecording;
- (void)setRecording:(BOOL)fp8;
- (unsigned int)avRelayStatus;
- (void)setAVRelayStatus:(unsigned int)fp8;
- (id)vcPartyID;
- (void)setVCPartyID:(id)fp8;
- (id)statusNugget;
- (struct OpaqueSecCertificateRef *)certificate;
- (void)setSavedCertificate:(struct OpaqueSecCertificateRef *)fp8;
- (void)requestIconIfNecessary;
- (void)_doARDFileTransferSource:(id)fp8 destination:(id)fp12 send:(BOOL)fp16;
- (void)sendARDFileTransferAuthorizationSource:(id)fp8 destination:(id)fp12 toServer:(BOOL)fp16;
- (BOOL)_checkARDFileTransferIndex:(unsigned int)fp8;
- (void)authorizeARDFileTransfer:(id)fp8;
- (id)connectedUDPSocket;
- (id)encryptionKey;
- (id)remoteIPPort;
- (unsigned int)state;
- (void)setState:(unsigned int)fp8;
- (void)setStateToEndedWithReason:(unsigned int)fp8 andError:(int)fp12;
- (void)_setState:(unsigned int)fp8 withReason:(unsigned int)fp12 andError:(int)fp16;

@end

@interface AVChatParticipantStatusNugget : NSObject <NSCoding>
{
    NSString *_imHandleName;
    NSString *_imHandleID;
    NSString *_invitedBy;
    NSString *_vcPartyID;
    BOOL _sendingAudio;
    BOOL _sendingVideo;
    BOOL _usingICE;
    unsigned int _ardRole;
    unsigned int _state;
    int _error;
    unsigned int _reason;
}

+ (id)nuggetWithDictionaryDescription:(id)fp8;
- (id)initWithParticipant:(id)fp8;
- (void)_configureWithDictionaryDescription:(id)fp8;
- (id)dictionaryDescription;
- (void)dealloc;
- (id)name;
- (id)ID;
- (id)invitedBy;
- (id)vcPartyID;
- (BOOL)sendingAudio;
- (BOOL)sendingVideo;
- (BOOL)isUsingICE;
- (unsigned int)ardRole;
- (unsigned int)state;
- (int)error;
- (unsigned int)reason;
- (void)setVCPartyID:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;

@end

@interface AVChatUpdateOp : ExtendedOperation
{
    IMHandle *_imHandle;
    NSData *_updateData;
}

- (id)initWithIMHandle:(id)fp8 data:(id)fp12;
- (void)dealloc;
- (void)didFinish;

@end

@interface AVCloseButton : NSButton
{
    BOOL _small;
}

- (void)_configureImages;
- (void)awakeFromNib;
- (void)setSmall:(BOOL)fp8;
- (void)setMouseOver:(BOOL)fp8;
- (void)setMouseOver:(BOOL)fp8 down:(BOOL)fp12;
- (void)mouseDown:(id)fp8;

@end

@interface AVParticipantView : NSView
{
    AVChatParticipant *_participant;
    BOOL _isLocalParticipant;
    BOOL _invitedByMe;
    BOOL _isNotifier;
    IMHandle *_jabberIMHandle;
    FileTransfer *_fileTransfer;
    VCChannelNegotiation *_ardUpgradeNegotiation;
    BOOL _hasDropHighlight;
    BOOL _whiteText;
    int _stage;
    int _previousStage;
    int _recordingStage;
    NSTimer *_recordingMessageTimer;
    Animator *_animator;
    float _animationDistance;
    int _configurationAt;
    int _configurationTo;
    int _configurationNext;
    int _viewTag;
    int _buttonTag;
    NSView *_invitedContainer;
    NSExtendedBox *_invitedBGView;
    AbbreviatingTextField *_invitedNameField;
    AbbreviatingTextField *_invitedStatusField;
    NSView *_connectedContainer;
    NSTabView *_connectedTabView;
    AbbreviatingTextField *_connectedNameField;
    AVCloseButton *_connectedCloseButton;
    VolumeIndicator *_vuMeter;
    NSTextField *_connectedARDField;
    MultiBuddyImageView *_connectedIconView;
    ShadowView *_shadowView;
    NSView *_statusContainer;
    NSExtendedBox *_statusBGView;
    MultiBuddyImageView *_statusIconView;
    AbbreviatingTextField *_statusLine1;
    AbbreviatingTextField *_statusLine2;
    ExtendedProgressIndicator *_spinner;
    AVCloseButton *_closeButton;
    float _statusTextDwForSpinner;
    StretchyImageView *_notifierGreenBGView;
    StretchyImageView *_notifierMediumView;
    NSTextField *_notifierNumberField;
    Animator *_notifierAnimator;
    BOOL _hasShownTimestamp;
}

+ (id)centeredImageFromBaseImageName:(id)fp8 overlayColor:(id)fp12 inRect:(NSRect)fp16 maxSize:(NSSize)fp32 inView:(id)fp40;
+ (id)bannerCloseImageWithSize:(unsigned int)fp8 mouseState:(unsigned int)fp12;
- (void)_removeInvitedContainer;
- (void)_removeConnectedContainer;
- (void)willBeRemoved;
- (id)_notificationString:(id)fp8;
- (void)_setupInvitedContainer;
- (void)_startVUMeter;
- (void)_arrangeAudioOnlyUI;
- (void)_showBuddyPictureShadow:(BOOL)fp8;
- (void)_setupAudioOnlyUI;
- (void)resizeSubviewsWithOldSize:(NSSize)fp8;
- (void)_pictureChanged:(id)fp8;
- (void)_setupConnectedContainer;
- (void)_setStatusTextColor:(id)fp8;
- (void)_setStatusTextAlpha:(float)fp8;
- (void)setStatusText:(id)fp8;
- (void)_insetView:(id)fp8 left:(float)fp12 right:(float)fp16;
- (id)_remoteParticipantNames;
- (void)showTimeField;
- (void)_getEffectiveEndedReason:(unsigned int *)fp8 error:(int *)fp12;
- (id)_callerParticipant;
- (void)_setupStatusContainer;
- (id)_initWithParticipant:(id)fp8 jabberIMHandle:(id)fp12 fileTransfer:(id)fp16 isNotifier:(BOOL)fp20 ardUpgrade:(id)fp24 saveNib:(BOOL)fp28;
- (id)initWithParticipant:(id)fp8 isNotifier:(BOOL)fp12 ardUpgrade:(id)fp16 saveNib:(BOOL)fp20;
- (id)initAsJabberAuth:(id)fp8 isNotifier:(BOOL)fp12;
- (id)initAsFileTransfer:(id)fp8 isNotifier:(BOOL)fp12;
- (void)awakeFromNib;
- (void)dealloc;
- (id)participant;
- (id)jabberIMHandle;
- (void)_stopNotifierThrob;
- (void)_setupNumberFieldInBGFrame:(NSRect)fp8;
- (void)_setupNotifierUIWithNumber:(BOOL)fp8;
- (void)startMultiwayThrob;
- (float)dxToFitText;
- (void)updateNotifierUI;
- (float)bannerHeight;
- (void)setUsesWhiteText:(BOOL)fp8;
- (BOOL)usesWhiteText;
- (void)setHasDropHighlight:(BOOL)fp8;
- (BOOL)hasDropHighlight;
- (void)drawRect:(NSRect)fp8;
- (void)_updateStatusLineWidths;
- (void)_startSpinner;
- (void)_stopSpinner;
- (void)setSpinnerValue:(double)fp8;
- (double)spinnerValue;
- (void)showCloseButtonOver:(BOOL)fp8 down:(BOOL)fp12;
- (void)hideCloseButton;
- (NSRect)closeButtonFrame;
- (void)_clearTrackingRects;
- (BOOL)updateMouseTracking:(BOOL)fp8 checkingMouse:(BOOL)fp12 atWindowCoordinates:(NSPoint)fp16;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (void)viewWillMoveToWindow:(id)fp8;
- (float)animator:(id)fp8 contourForProgress:(float)fp12;
- (void)_updateNotifierProgress:(float)fp8;
- (void)animator:(id)fp8 doStep:(float)fp12 lastStep:(BOOL)fp16;
- (BOOL)isInvited;
- (void)startConnecting;
- (void)_animateTo:(int)fp8;
- (void)_showStatus;
- (void)_hideStatus;
- (void)_updateConnectedUIConfiguration;
- (void)connect;
- (void)_timedSetRecordingStage:(id)fp8;
- (void)_setRecordingStage:(int)fp8;
- (void)recordingPermissionRequested;
- (void)recordingPermissionGranted;
- (void)recordingPermissionDenied;
- (void)recordingPermissionForgotten;
- (void)finishARDUpgrade;
- (BOOL)isConnected;
- (void)disconnect;
- (BOOL)isDisconnected;
- (void)_mouseUpOutsideCloseButton:(id)fp8;
- (void)closeParticipant:(id)fp8;

@end

@interface AVSegmentedControl : NSSegmentedControl <NSMenuDelegate>
{
    id _avSegmentedControlTarget;
    NSMenu *_addBuddyMenu;
    BOOL _menuIsValid;
    BOOL _registered;
    Account *_account;
    BOOL _muted;
    BOOL _paused;
    BOOL _muteAllowed;
    BOOL _pauseAllowed;
    BOOL _showingPause;
    BOOL _shouldShowPause;
}

+ (Class)cellClass;
- (int)segmentForTag:(int)fp8;
- (void)_configureButtons;
- (void)dealloc;
- (void)awakeFromNib;
- (void)_flagsChanged:(id)fp8;
- (void)setFullScreenEnabled:(BOOL)fp8;
- (void)setAddTooltip:(id)fp8;
- (void)setAddEnabled:(BOOL)fp8;
- (BOOL)isAddEnabled;
- (void)setMuted:(BOOL)fp8;
- (BOOL)isMuted;
- (void)setMuteAllowed:(BOOL)fp8;
- (BOOL)isMuteAllowed;
- (void)setPauseAllowed:(BOOL)fp8;
- (BOOL)isPauseAllowed;
- (void)setPaused:(BOOL)fp8;
- (BOOL)isPaused;
- (void)_showPauseUI;
- (void)_showMuteUI;
- (void)setActionTarget:(id)fp8;
- (void)_sendActionForSegmentType:(int)fp8;
- (void)selfAction:(id)fp8;
- (void)_personSelected:(id)fp8;
- (void)_addItemForAccount:(id)fp8 atIndex:(int *)fp12;
- (void)_addItemForIMHandle:(id)fp8 toMenu:(id)fp12 atIndex:(int)fp16 showingDetails:(BOOL)fp20;
- (void)_addItemForEmptyList;
- (void)_registerForNotifications;
- (void)_rebuildMenuIfNecessary;
- (void)menuWillOpen:(id)fp8;
- (void)invalidateAddMenu;
- (void)setAccount:(id)fp8;
- (BOOL)performKeyEquivalent:(id)fp8;

@end

@interface AVSlider : NSControl
{
    id _delegate;
    double _minValue;
    double _maxValue;
    float _leftCapWidth;
    float _rightCapWidth;
    NSImage *_backgroundImage;
    NSImage *_thumbImage;
    BOOL _drawsBorder;
    BOOL _mouseDown;
}

+ (Class)cellClass;
- (void)awakeFromNib;
- (void)_clearImages;
- (void)dealloc;
- (void)_generateBackgroundImage:(NSRect)fp8;
- (void)_generateThumbImage:(NSRect)fp8;
- (NSRect)_thumbRect;
- (void)drawRect:(NSRect)fp8;
- (void)setFrameSize:(NSSize)fp8;
- (double)minValue;
- (void)setMinValue:(double)fp8;
- (double)maxValue;
- (void)setMaxValue:(double)fp8;
- (void)_trackMouseFrom:(NSPoint)fp8 trackWidth:(float)fp16;
- (void)mouseDown:(id)fp8;
- (BOOL)drawsBorder;
- (void)setDrawsBorder:(BOOL)fp8;
- (float)rightCapWidth;
- (void)setRightCapWidth:(float)fp8;
- (float)leftCapWidth;
- (void)setLeftCapWidth:(float)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;

@end

@interface AVTimeSlider : AVSlider
{
    NSDictionary *_fontAttributes;
}

- (void)awakeFromNib;
- (void)dealloc;
- (id)_attributedStringForTimeInterval:(double)fp8 negative:(BOOL)fp16;
- (void)_drawText;
- (void)drawRect:(NSRect)fp8;

@end

@interface AVVolumeSlider : AVSlider
{
    NSButton *_muteButton;
    double _preMuteDoubleValue;
}

- (void)_createMuteButton;
- (void)awakeFromNib;
- (void)dealloc;
- (void)_toggleMute:(id)fp8;
- (void)setDoubleValue:(double)fp8;
- (void)mouseDown:(id)fp8;

@end

@interface AbbreviatingTextField : NSTextField
{
    BOOL _verticallyCentered;
    NSShadow *_shadow;
    BOOL _sendsActionOnClick;
    NSString *_axDescriptionAttribute;
}

- (void)_commonInitForTextField;
- (id)initWithFrame:(NSRect)fp8;
- (id)initWithCoder:(id)fp8;
- (void)dealloc;
- (void)setShadow:(id)fp8;
- (id)shadow;
- (void)_setColor:(id)fp8 offset:(float)fp12 blurRadius:(float)fp16;
- (void)setNoShadow;
- (void)setWhiteBevel;
- (void)setStrongBlackShadow;
- (void)setVerticallyCentered:(BOOL)fp8;
- (BOOL)isVerticallyCentered;
- (void)drawRect:(NSRect)fp8;
- (void)setSendsActionOnClick:(BOOL)fp8;
- (BOOL)sendsActionOnClick;
- (void)_sendAction;
- (void)mouseDown:(id)fp8;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)performClick:(id)fp8;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(NSPoint)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityTitleAttribute;
- (id)accessibilityDescriptionAttribute;
- (void)setLocalizedAccessibilityDescriptionAttribute:(id)fp8;

@end

@interface AccessibilityIgnoredButton : NSButton
{
}

- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeNames;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilityAttributeValue:(id)fp8;

@end

@interface Account (Scripting)
- (void)loginScriptCommand:(id)fp8;
- (void)logoutScriptCommand:(id)fp8;
- (void)sendScriptCommand:(id)fp8;
- (id)objectSpecifier;
- (void)setScriptName:(id)fp8;
- (id)scriptName;
- (void)setScriptImage:(id)fp8;
- (id)scriptImage;
- (void)setScriptEnabled:(BOOL)fp8;
- (BOOL)scriptEnabled;
- (void)setScriptServiceStatus:(id)fp8;
- (id)scriptServiceStatus;
- (void)setScriptServiceStatusMessage:(id)fp8;
- (id)scriptServiceStatusMessage;
- (id)scriptServiceType;
- (id)scriptConnectionStatus;
- (id)buddies;
- (id)valueInBuddiesWithName:(id)fp8;
- (id)valueInBuddiesWithUniqueID:(id)fp8;
- (id)scriptChats;
- (id)valueInScriptChatsWithUniqueID:(id)fp8;
- (id)valueInScriptChatsWithName:(id)fp8;
- (id)scriptTextChats;
- (id)objectInScriptTextChatsAtIndex:(unsigned int)fp8;
- (id)valueInScriptTextChatsWithUniqueID:(id)fp8;
- (id)valueInScriptTextChatsWithName:(id)fp8;
- (id)scriptAVChats;
- (id)objectInScriptAVChatsAtIndex:(unsigned int)fp8;
- (id)valueInScriptAVChatsWithUniqueID:(id)fp8;
- (id)scriptAudioChats;
- (id)objectInScriptAudioChatsAtIndex:(unsigned int)fp8;
- (id)valueInScriptAudioChatsWithUniqueID:(id)fp8;
- (id)scriptVideoChats;
- (id)objectInScriptVideoChatsAtIndex:(unsigned int)fp8;
- (id)valueInScriptVideoChatsWithUniqueID:(id)fp8;
@end

@interface AccountPreferencesTableCell : NSTextFieldCell
{
}

- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)drawInteriorWithFrame:(NSRect)fp8 inView:(id)fp24;

@end

@interface AccountPreferencesTableCell (AccountPreferencesTableCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityAttributeValue:(id)fp8;
- (id)accessibilityValueAttribute;
@end

@interface ActionsController : NSObject
{
    NSPopUpButton *_eventsPopUp;
    NSButton *_playSoundCheckbox;
    NSButton *_repeatSoundCheckbox;
    NSButton *_speakCheckbox;
    NSButton *_bounceDockCheckbox;
    NSButton *_repeatBounceCheckbox;
    NSButton *_runAppleScriptCheckbox;
    NSButton *_oneShotCheckbox;
    NSPopUpButton *_appleScriptPopup;
    NSTextField *_oneShotLineTwo;
    NSSoundPopUpButton *_soundsPopUp;
    NSSlider *_volumeSlider;
    IMHandle *_buddy;
    NSMutableDictionary *_actionSet;
    int _eventNumber;
    BOOL _eventActionsChanged;
    BOOL _actionsChanged;
    id _delegate;
    NSArray *_availableScripts;
}

+ (id)localizedTitleForIMEvent:(int)fp8;
+ (void)willSleepNotification:(id)fp8;
+ (void)didWakeNotification:(id)fp8;
+ (void)initialize;
+ (id)_prefsKey:(id)fp8;
+ (id)fullPathOfSoundInActions:(id)fp8;
+ (BOOL)continuousVCRingEnabled;
+ (void)setContinuousVCRingEnabled:(BOOL)fp8;
+ (void)_adjustSpeechVolume;
+ (BOOL)_speakText:(id)fp8;
+ (void)_rebounce:(id)fp8;
+ (void)cancelRebounces;
+ (void)_appDidBecomeActive:(id)fp8;
+ (void)_repeatSound:(id)fp8;
+ (void)_playSoundFromFile:(id)fp8 repeat:(BOOL)fp12;
+ (void)_stopRepeatingSoundFromFile:(id)fp8;
+ (id)_actionsForEvent:(int)fp8 withIMHandle:(id)fp12;
+ (void)_setActions:(id)fp8 forEvent:(int)fp12 withIMHandle:(id)fp16;
+ (void)_announceEvent:(int)fp8 withIMHandle:(id)fp12 withObject:(id)fp16 forChat:(id)fp20;
+ (BOOL)_shouldBeSilentForIMHandle:(id)fp8;
+ (BOOL)executeAppleScriptHandlersForEvent:(int)fp8 withIMHandle:(id)fp12 withObject:(id)fp16;
+ (BOOL)executeAppleScriptHandlersForEvent:(int)fp8 withIMHandle:(id)fp12 withObject:(id)fp16 withChat:(id)fp20;
+ (id)_buildActionsForEvent:(int)fp8 withIMHandle:(id)fp12;
+ (void)_executeAppleScriptHandlersForEventDictionary:(id)fp8;
+ (void)stopEventActions:(id)fp8;
+ (void)failedEventHandlerAlertDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)setDelegate:(id)fp8;
- (void)awakeFromNib;
- (void)dealloc;
- (BOOL)hasChangesPending;
- (void)_rememberEventChanges;
- (void)complete;
- (void)saveChanges;
- (void)loadFromDefaults;
- (void)setBuddy:(id)fp8;
- (void)_actionsDidChange:(id)fp8;
- (id)buddy;
- (void)_updateEventsPopUpIcons;
- (void)_addItemWithTag:(int)fp8;
- (void)_fillEventsPopUpWith:(int)fp8;
- (void)fillEventsPopUp:(BOOL)fp8;
- (void)menuNeedsUpdate:(id)fp8;
- (void)_addScriptsToPopUpFromPath:(id)fp8;
- (void)_fillAppleScriptPopup;
- (void)_enableOneShot:(BOOL)fp8;
- (id)_actionsForEvent:(int)fp8;
- (void)_updateActions;
- (void)eventSelected:(id)fp8;
- (BOOL)_anyActionsChecked;
- (void)_actionsChanged;
- (void)actionChecked:(id)fp8;
- (void)soundSelected:(id)fp8;
- (void)controlTextDidChange:(id)fp8;
- (void)volumeChanged:(id)fp8;
- (void)appleScriptSelected:(id)fp8;
- (void)noAvailableScripts:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (id)titleForSoundFile:(id)fp8;
- (void)_createiChatScriptDirectoryIfNecessary;
- (void)_selectScriptWithFilename:(id)fp8;
- (void)_displayAlertForCouldNotCopyScript:(id)fp8;
- (void)_overwriteScriptAlertDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_selectAppleScriptPathDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)findScriptFile:(id)fp8;
- (void)revealAppleScriptDirectory:(id)fp8;

@end

@interface ActionsControllerHandler : NSObject <IMActionsControllerHandler>
{
}

+ (id)sharedInstance;
- (id)performActionsForEvent:(int)fp8 withIMHandle:(id)fp12 withObject:(id)fp16 withChat:(id)fp20 silent:(BOOL)fp24;

@end

@interface Chat : NSObject <FZSecureObject>
{
    BOOL _isInNotifier;
    BOOL _isMessageContainer;
    int _buildCount;
    Account *_account;
    int _style;
    int _unreadMessages;
    NSString *_subject;
    NSMutableArray *_messages;
    NSMutableArray *_allPeople;
    ChatWindowController *_chatWindowController;
    NSString *_transcript;
    NSString *_address;
    NSString *_cachedDisplayAddress;
    NSMutableDictionary *_properties;
    int _securityLevel;
    NSMutableArray *_queuedMessages;
    BOOL _useRoomName;
    int _startingIndex;
    IMHandle *_myHandle;
    BOOL _verifiedToParticipant;
    unsigned int _displayStartIndex;
    NSArray *_displayMesageArray;
    int _msgQueueIndex;
    NSDocument *_chatDoc;
    NSString *_GUID;
    unsigned int _overallChatStatus;
    BOOL _suppressEncryptionMessages;
    NSArray *_myAddressableNames;
    NSMutableDictionary *_recentMessagesBySender;
    NSMutableDictionary *_ddResults;
}

+ (id)createChatRoomName;
+ (id)chatList;
+ (void)setViewer:(id)fp8;
+ (id)viewer;
- (id)init;
- (id)initWithAccount:(id)fp8 style:(int)fp12;
- (void)_ddScannerBuilt:(id)fp8;
- (void)setTranscript:(id)fp8;
- (id)transcript;
- (void)dealloc;
- (void)addToChatList;
- (void)_removeFromChatList;
- (void)beginBuildMode;
- (void)endBuildMode;
- (BOOL)isInBuildMode;
- (BOOL)verifiedToParticipant;
- (void)setVerifiedToParticipant:(BOOL)fp8;
- (BOOL)isComposing;
- (BOOL)isMessageContainer;
- (BOOL)isActive;
- (BOOL)isChat;
- (int)style;
- (void)setStyle:(int)fp8;
- (void)setSuppressEncryptionMessages:(BOOL)fp8;
- (BOOL)suppressEncryptionMessages;
- (void)_notifyStatusChanged;
- (unsigned int)numberOfUnreadMessages;
- (BOOL)hasUnreadMessages;
- (void)setUnreadMessages:(BOOL)fp8;
- (BOOL)hasUnsentMessages;
- (id)account;
- (id)otherIMHandle;
- (id)_otherIMHandleOrChatroom;
- (id)otherPeople;
- (BOOL)fromMe;
- (id)subject;
- (id)displayAddress;
- (id)address;
- (unsigned int)displayStartIndex;
- (void)setDisplayStartIndex:(unsigned int)fp8;
- (id)messagesToDisplay;
- (id)messagesToSave;
- (id)messages;
- (unsigned int)finishedMessageCount;
- (id)allPeople;
- (id)visibleParticipants;
- (id)peopleDeciding;
- (id)myHandle;
- (id)dateCreated;
- (id)dateModified;
- (id)description;
- (id)valueOfProperty:(id)fp8;
- (void)setValue:(id)fp8 ofProperty:(id)fp12;
- (BOOL)isInNotifier;
- (void)setIsInNotifier:(BOOL)fp8;
- (id)firstInterestingMessage;
- (id)lastMessage;
- (id)lastInterestingMessage;
- (void)setGUID:(id)fp8;
- (id)GUID;
- (id)myAddressableNames;
- (void)setMyAddressableNames:(id)fp8;
- (id)ddScannerResultsForIMHandle:(id)fp8;
- (void)_removeDDResults:(id)fp8 forSender:(id)fp12;
- (void)_removeDDResultsForMessage:(id)fp8;
- (void)_addDDResults:(id)fp8 forSender:(id)fp12;
- (void)_addDDResultsForMessage:(id)fp8;
- (BOOL)hasUIRepresentation;
- (id)chatController;
- (id)chatWindowController;
- (void)setChatWindowController:(id)fp8;
- (void)accountLoginStatusDidChange;
- (id)chatDoc;
- (void)setChatDoc:(id)fp8;
- (BOOL)isOpenInWindow;
- (void)notifyOpenedByChatController:(id)fp8;
- (id)window;
- (void)display;
- (void)removePermanently;
- (BOOL)useRoomName;
- (void)setUseRoomName:(BOOL)fp8;
- (id)prefKey;
- (id)savedPrefKey;
- (id)metadataDictionary;
- (id)dataRepresentation;
- (id)savedDataRepresentation;
- (id)autosavedDataRepresentation;
- (id)persistentDataRepresentation;
- (id)_dataRepresentationWithDisplayedMessages:(BOOL)fp8 limit:(unsigned int)fp12;
- (id)defaultSaveName;
- (void)setSecurityLevel:(int)fp8;
- (int)securityLevel;
- (BOOL)canBeSecure;
- (unsigned int)overallChatStatus;
- (void)_newMessageAdded:(id)fp8;
- (void)_ddScanRecentMessages:(id)fp8;
- (void)_ddScanRecentMessagesFromSender:(id)fp8;

@end

@interface ActiveChat : Chat
{
    NSString *_previousTranscriptPath;
    BOOL _active;
    int _joinState;
    BOOL _displayOnJoin;
    BOOL _finishedByMe;
    BOOL _announcePeople;
    BOOL _silent;
    NSMutableArray *_curPeople;
    NSMutableSet *_peopleDeciding;
    NSMutableSet *_ignoredPeople;
    NSString *_ID;
    NSTimer *_autosaveTimer;
    NSDate *_lastSaveDate;
    NSMutableSet *_associatedPeople;
    NSMutableDictionary *_peopleMappings;
    NSTimer *_autoreplyTimer;
    BOOL _alreadyReplied;
    AVChatController *_pendingVCDecline;
    BOOL _canAutoReply;
    BOOL _needsToSendAutoReply;
    BOOL _iDisabledEncryption;
    NSMutableArray *_orderedChatters;
}

+ (id)_unjoinedChatWithIMHandle:(id)fp8;
- (void)savedChatDidLoad:(id)fp8;
- (void)setOtherIMHandle:(id)fp8 verified:(BOOL)fp12;
- (void)setOtherIMHandle:(id)fp8;
- (void)_setAutoReplied:(BOOL)fp8;
- (void)_clearAutorepliedFlagTimer:(id)fp8;
- (void)_autoreplyToMsg:(id)fp8 whenMyStatusIs:(unsigned int)fp12;
- (id)initAsContainerForMessage:(id)fp8;
- (id)initWithAccount:(id)fp8 style:(int)fp12;
- (id)initWithMessage:(id)fp8 style:(int)fp12;
- (void)loadAccountPreferences;
- (void)dealloc;
- (void)resetAssociatedIMHandles;
- (id)associatedIMHandles;
- (BOOL)isIMHandleAssociatedWithChat:(id)fp8;
- (void)_watchIMHandle:(id)fp8;
- (void)unassociateIMHandleWithChat:(id)fp8;
- (void)associateIMHandleWithChat:(id)fp8;
- (id)ID;
- (void)setID:(id)fp8;
- (BOOL)isComposing;
- (void)setAccount:(id)fp8;
- (id)visibleParticipants;
- (void)_noteOrderedRecentChattersChanged;
- (id)orderedRecentChatters;
- (id)orderedRecentChatters:(unsigned int)fp8;
- (void)setPeople:(id)fp8;
- (BOOL)isActive;
- (void)setDisplayOnJoin:(BOOL)fp8;
- (int)joinState;
- (void)setJoining;
- (void)nowAnnouncePeople;
- (void)setHasJoined:(BOOL)fp8;
- (id)curPeople;
- (id)otherPeople;
- (id)peopleDeciding;
- (void)setSubject:(id)fp8;
- (void)setMyHandle:(id)fp8;
- (void)setAddress:(id)fp8;
- (BOOL)_changesSinceSave;
- (BOOL)autoSave;
- (void)_startAutosaveTimer;
- (void)_autosaveTimerFired;
- (void)_destroyTimer:(id *)fp8;
- (void)notifyUser;
- (void)notifyUserAndBeSilent:(BOOL)fp8;
- (BOOL)respondToInvitation:(BOOL)fp8;
- (void)finish;
- (void)_finishedWithMessage:(id)fp8;
- (BOOL)wasFinishedByMe;
- (id)_silentPrefKey;
- (void)setSilent:(BOOL)fp8;
- (BOOL)isSilent;
- (void)_postNotificationName:(id)fp8 key:(id)fp12 object:(id)fp16 key:(id)fp20 object:(id)fp24 key:(id)fp28 object:(id)fp32;
- (void)_postMemberChange:(id)fp8 status:(int)fp12;
- (void)showError:(id)fp8;
- (void)_doPendingVCDecline;
- (void)setPendingVCDecline:(id)fp8;
- (BOOL)canBeSecure;
- (void)setSecurityLevel:(int)fp8;
- (void)_showSecurityChangedWhileComposingSheet;
- (void)_showEncryptedDisabledSheet;
- (void)_showEncryptedChatFailedSheet;
- (void)_showUnexpectedPlaintextSheet;
- (id)_processMessageForActionsIfNeccessary:(id)fp8;
- (void)addMessage:(id)fp8 atEnd:(BOOL)fp12 replacingMessageAtIndex:(int)fp16 isSystemMessage:(BOOL)fp20;
- (void)_unreadMessageDisplayed:(id)fp8;
- (void)addMessage:(id)fp8 atEnd:(BOOL)fp12 replacingMessageAtIndex:(int)fp16;
- (void)addMessagesAtFrontQuietly:(id)fp8;
- (int)indexOfMessage:(id)fp8;
- (unsigned int)_findUnfinishedMessageFrom:(id)fp8;
- (void)addMessage:(id)fp8 isSystemMessage:(BOOL)fp12;
- (void)addMessage:(id)fp8;
- (void)addInitialComposeMessage;
- (void)removeInitialComposeMessage;
- (void)addStatusChangeString:(id)fp8 subject:(id)fp12;
- (void)addAnnouncementString:(id)fp8;
- (void)addAnnouncementString:(id)fp8 subject:(id)fp12;
- (void)notifyMessageAdded:(id)fp8;
- (void)rejoin;
- (BOOL)sendMessage:(id)fp8;
- (void)setAnnouncePeople:(BOOL)fp8;
- (void)_removeDeciding:(id)fp8;
- (void)addIMHandle:(id)fp8;
- (void)removeIMHandle:(id)fp8;
- (void)inviteIMHandle:(id)fp8 withMessage:(id)fp12;
- (void)invitePeople:(id)fp8 withMessage:(id)fp12;
- (void)_deferredNotifyIMHandleInfoChanged:(id)fp8;
- (void)notifyIMHandleInfoChanged:(id)fp8;
- (void)_setOverallChatStatus:(unsigned int)fp8;
- (BOOL)_recomputeOverallChatStatusQuietly:(BOOL)fp8;
- (void)_imHandleStatusChanged:(id)fp8;
- (void)setIMHandle:(id)fp8 isIgnored:(BOOL)fp12;
- (void)accountLoginStatusDidChange;
- (BOOL)imHandleIsIgnored:(id)fp8;
- (void)_quietlyRemoveIMHandle:(id)fp8;
- (void)_member:(id)fp8 statusChanged:(int)fp12;

@end

@interface ActiveChat (PersistentChatAdditions)
+ (id)resurrectChatFromInfoDictionary:(id)fp8;
- (id)imNameFromThread:(id)fp8;
- (id)chatNameFromThread:(id)fp8;
- (id)threadFromIMName:(id)fp8;
- (id)threadFromChatName:(id)fp8;
- (void)_setPreviousTranscriptPath:(id)fp8;
- (void)_setStartingIndex:(int)fp8;
- (void)clearMessages:(id)fp8;
- (id)persistentChatInfo;
@end

@interface AddBuddy : NSObject
{
    BOOL _lockAccountSelection;
    ServicePopUp *_toAccountPopup;
    NSView *_topReferenceView;
    NSWindow *_proposedNewRecordWindow;
    ExtendedComboBox *_proposedAccountNameTextField;
    ExtendedComboBox *_proposedFirstNameTextField;
    ExtendedComboBox *_proposedLastNameTextField;
    CollapseView *_groupsCollapseView;
    CollapseView *_accountCollapseView;
    NSPopUpButton *_proposedGroupPopUpButton;
    NSButton *_proposedAddButton;
    NSWindow *_recordWindow;
    NSTabView *_tabView;
    CollapseView *_accountsCollapseView;
    NSView *_pickerArea;
    NSTextField *_addCardTitle;
    NSButton *_disclosure;
    NSView *_contentView;
    NSView *_titleView;
    ABPeoplePickerView *_pickerView;
    PeoplePicker *_picker;
    NSWindow *_buddyWindow;
    IMHandle *_person;
    ABPerson *_abPerson;
    NSArray *_groups;
    NSArray *_imHandles;
    Account *_account;
    NSMutableArray *_abAddressesCache;
    NSMutableArray *_abFirstNameCache;
    NSMutableArray *_abLastNameCache;
    NSMutableDictionary *_abFirstNameToLastNameCache;
    NSMutableDictionary *_abLastNameToFirstNameCache;
    IMHandle *_cachedSelectedIMHandle;
    ABPerson *_cachedSelectedPerson;
    NSString *_cachedKeyName;
    NSArray *_cachedPossibleNames;
    NSRect _originalBuddyListFrame;
    NSRect _initialSheetBuddyListFrame;
    NSRect _smallSheetBuddyListFrame;
    NSRect _largeSheetBuddyListFrame;
}

- (void)_configureServicePopup;
- (id)initWithAccount:(id)fp8;
- (void)_clearFields;
- (void)_removeSuffix;
- (void)_installSuffix:(id)fp8;
- (void)_setupNewRecordSheet;
- (void)_setAccountName:(id)fp8 service:(id)fp12 force:(BOOL)fp16;
- (id)_itemsInField:(id)fp8;
- (id)insertHandlesIntoABPerson:(id)fp8;
- (void)_registerForNotifications;
- (void)awakeFromNib;
- (void)dealloc;
- (void)setAccountSelectionLocked:(BOOL)fp8;
- (void)_configureTitleForLockedIMHandle;
- (void)setIMHandle:(id)fp8;
- (void)setABPerson:(id)fp8;
- (void)setBuddyWindow:(id)fp8;
- (void)setTargetGroup:(id)fp8;
- (void)setGroups:(id)fp8;
- (void)openForABPerson:(id)fp8 groups:(id)fp12 buddyWindow:(id)fp16;
- (void)openForIMHandle:(id)fp8 groups:(id)fp12 buddyWindow:(id)fp16;
- (void)openForNewIMHandleWithGroups:(id)fp8 buddyWindow:(id)fp12;
- (void)addressBookChanged:(id)fp8;
- (void)textDidEndEditing:(id)fp8;
- (void)controlTextDidChange:(id)fp8;
- (void)_controlTextDidChange:(id)fp8;
- (void)comboBoxWillPopUp:(id)fp8;
- (void)comboBoxWillDismiss:(id)fp8;
- (void)comboBoxSelectionDidChange:(id)fp8;
- (void)comboBoxSelectionIsChanging:(id)fp8;
- (void)_peoplePickerValueUpdated:(id)fp8;
- (void)_peoplePickerPaletteUpdated:(id)fp8;
- (void)_peoplePickerPalettePropertyChanged:(id)fp8;
- (void)_accountStatusChanged:(id)fp8;
- (BOOL)_isAccountUserCustomized;
- (void)_synchronizeDisclosureArea;
- (void)_validateAddButton;
- (void)_configurePeoplePickerPaletteForMe;
- (id)_selectedGroup;
- (BOOL)_firstNameCustomized;
- (BOOL)_lastNameCustomized;
- (BOOL)_firstOrLastNameCustomized;
- (void)_updateFromABPersonForce:(BOOL)fp8 setAsNotAutoFilled:(BOOL)fp12;
- (void)_updateFromABPerson;
- (BOOL)_abPersonAndFieldsAreTheSame;
- (BOOL)isPickerVisible;
- (id)selectedCard;
- (id)selectedAccount;
- (id)selectedService;
- (void)openCardList:(id)fp8;
- (void)displayPeoplePickerSheet:(id)fp8;
- (void)recordSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)displayRecordSheet:(id)fp8;
- (void)dismissRecordSheet:(id)fp8;
- (void)changeToAccount:(id)fp8;
- (void)chooseAccountName:(id)fp8;
- (void)switchTab:(id)fp8;
- (void)acceptRecord:(id)fp8;
- (void)_acceptEntry;
- (void)extendedComboBoxDidPressEnter:(id)fp8;
- (void)cancelChanges:(id)fp8;
- (void)togglePickerView:(id)fp8;
- (id)_selectedIMHandleForABPerson:(id)fp8;
- (BOOL)_fillAccountInformationIfNecessary;
- (void)nameChanged:(id)fp8;
- (id)_completedAccount;
- (id)_completedFirstName;
- (id)_completedLastName;
- (id)_possibleFirstNames;
- (id)_possibleLastNames;
- (int)numberOfItemsInComboBox:(id)fp8;
- (id)comboBox:(id)fp8 objectValueForItemAtIndex:(int)fp12;
- (unsigned int)comboBox:(id)fp8 indexOfItemWithStringValue:(id)fp12;
- (id)comboBox:(id)fp8 completedString:(id)fp12;
- (void)_rebuildAddressBookInformation;

@end

@interface AnamorphicSampler : CIFilter
{
    CIImage *inputImage;
    CIVector *inputSize;
    CIKernel *_kernelHorizontal;
    CIKernel *_kernelVertical;
}

- (id)scalingTableForSourceSize:(struct CGSize)fp8 destinationSize:(struct CGSize)fp16;
- (struct CGRect)regionOf:(int)fp8 destRect:(struct CGRect)fp12 userInfo:(id)fp28;
- (id)outputImage;

@end

@interface AnimatingTabView : NSTabView
{
    BOOL _transitionsEnabled;
    BOOL _synchronous;
    double _transitionTime;
    BOOL _wantsDrawTickle;
    EffectView *_effectView;
}

- (void)_commonInit;
- (id)initWithFrame:(NSRect)fp8;
- (id)initWithCoder:(id)fp8;
- (void)dealloc;
- (void)setTransitionsEnabled:(BOOL)fp8;
- (BOOL)areTransitionsEnabled;
- (void)setSynchronous:(BOOL)fp8;
- (BOOL)isSynchronous;
- (void)setTransitionTime:(double)fp8;
- (double)transitionTime;
- (BOOL)inTransition;
- (id)_imageOfCurrentTabView;
- (void)_notifyDelegate:(SEL)fp8;
- (void)_effectComplete;
- (void)selectTabViewItem:(id)fp8;
- (void)setEffectNeedsDisplay:(BOOL)fp8;
- (void)setOnlyUpdateWhenAsked:(BOOL)fp8;
- (BOOL)onlyUpdateWhenAsked;

@end

@interface FezExtendedTableView : NSTableView
{
    NSTextFieldCell *_messageCell;
    NSButtonCell *_triangleCell;
    unsigned int _delegateSelectors;
    BOOL _drawsStripes;
    BOOL _drawingStripes;
    BOOL _hasDropRange;
    struct _NSRange _dropRange;
    BOOL _smallGroupRows;
    float _normalRowHeight;
    float _groupRowHeight;
    NSMutableArray *_rowOrigins;
    BOOL _groupRowRolloversEnabled;
    BOOL _runningGroupAnimation;
    BOOL _allowsGroupRowDragging;
    BOOL _mouseIsDown;
    BOOL _mouseInside;
    int _mouseInsideTag;
    int _trackingRow;
    int _clickRow;
    BOOL _mouseDown;
    BOOL _trackingRectsEnabled;
    BOOL _redisplayOnMouseover;
    BOOL _tracksOnlyWhenWindowIsKey;
    BOOL _drawingRowsIntoImage;
    NSColor *_customHighlightColor;
    unsigned int _cellTipRow;
    BOOL _enableCellTips;
    FezCellTipWindow *_cellTipWindow;
    BOOL _drawsSelection;
    float _topGap;
    BOOL _refuseResponder;
    BOOL _panelNeedsToBecomeKey;
    BOOL _wasInPreviousButtonRect;
    NSPoint _previousPoint;
    long _previousRow;
    BOOL _drawsRightShadow;
    NSPoint _tooltipPoint;
    BOOL _tooltipPending;
    Tooltip *_tooltip;
    BOOL _tooltipBlocked;
    BOOL _celltipBlocked;
    BOOL _allowQuickTooltipPop;
    BOOL _tooltipTracksMouse;
    NSString *_headerString;
}

+ (NSRect)groupDisclosureIndicatorRectInRowRect:(NSRect)fp8 isDisclosed:(BOOL)fp24 indicatorImage:(id *)fp28;
- (void)_etvCommonInit;
- (id)initWithCoder:(id)fp8;
- (id)initWithFrame:(NSRect)fp8;
- (void)dealloc;
- (void)tile;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)setDataSource:(id)fp8;
- (id)dataSource;
- (void)setRefusesResponder:(BOOL)fp8;
- (BOOL)refusesResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)keyDown:(id)fp8;
- (void)viewDidMoveToWindow;
- (id)selectedRows;
- (BOOL)validateMenuItem:(id)fp8;
- (void)setRowNeedsDisplay:(unsigned int)fp8;
- (void)cut:(id)fp8;
- (void)copy:(id)fp8;
- (void)paste:(id)fp8;
- (void)delete:(id)fp8;
- (NSRect)_dropRect;
- (void)setDropRange:(struct _NSRange)fp8;
- (void)clearDropRange;
- (void)draggingExited:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)_drawDropHighlightBackgroundForRow:(int)fp8;
- (void)_drawDropHighlight;
- (float)normalRowHeight;
- (void)setRowHeight:(float)fp8;
- (void)setIntercellSpacing:(NSSize)fp8;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (void)setCustomHighlightColor:(id)fp8;
- (id)customHighlightColor;
- (void)setAllowsGroupRowDragging:(BOOL)fp8;
- (BOOL)allowsGroupRowDragging;
- (void)setDrawsStripes:(BOOL)fp8;
- (BOOL)drawsStripes;
- (void)_drawStripesInRect:(NSRect)fp8 startingAt:(float)fp24 endingAt:(float)fp28;
- (void)_drawStripesInRect:(NSRect)fp8;
- (id)_selectionColor;
- (void)setTopGap:(float)fp8;
- (float)topGap;
- (void)_drawCustomSelectionHighlight:(NSRect)fp8;
- (void)drawBackgroundInClipRect:(NSRect)fp8;
- (void)highlightSelectionInClipRect:(NSRect)fp8;
- (void)setDrawsSelection:(BOOL)fp8;
- (BOOL)drawsSelection;
- (void)_hideCellTip;
- (void)_updateCellTipWithPoint:(NSPoint)fp8;
- (BOOL)showCellTips;
- (void)setShowCellTips:(BOOL)fp8;
- (void)_updateRowOrigins;
- (void)setHasGroupRows:(BOOL)fp8;
- (void)setSmallGroupRows:(BOOL)fp8;
- (BOOL)smallGroupRows;
- (float)groupRowHeight;
- (void)rowHeightsChanged;
- (float)tableHeight;
- (NSRect)frameOfCellAtColumn:(int)fp8 row:(int)fp12;
- (int)rowAtPoint:(NSPoint)fp8;
- (NSRect)rectOfRow:(int)fp8;
- (int)numberOfRows;
- (void)noteNumberOfRowsChanged;
- (BOOL)hasHeader;
- (void)setHeaderString:(id)fp8;
- (id)headerString;
- (void)_drawGroupRowInRect:(NSRect)fp8 withTitle:(id)fp24 andNumber:(id)fp28 mouseDown:(BOOL)fp32 rowIndex:(int)fp36 isHeader:(BOOL)fp40;
- (void)drawRect:(NSRect)fp8;
- (void)setDrawsRightShadow:(BOOL)fp8;
- (BOOL)drawsRightShadow;
- (void)drawRow:(int)fp8 clipRect:(NSRect)fp12;
- (int)_rowAtEventLocation:(id)fp8;
- (void)_trackMouseDown:(id)fp8 inRow:(int)fp12 allowDrag:(BOOL)fp16;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (id)_menuForEvent:(id)fp8;
- (id)menuForEvent:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)setPanelNeedsToBecomeKey:(BOOL)fp8;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)mouseIsDownInView;
- (NSRect)visibleRect;
- (id)_imageOfGroupRow:(int)fp8 withNumberString:(id)fp12 drawWhiteBackground:(BOOL)fp16;
- (id)imageOfGroupRow:(int)fp8 drawWhiteBackground:(BOOL)fp12;
- (id)_imageOfGroupRow:(int)fp8 withNumberString:(id)fp12;
- (id)imageOfRows:(struct _NSRange)fp8 fraction:(float)fp16 shadow:(id)fp20;
- (id)_currentImageOfRowAtIndex:(int)fp8;
- (NSRect)_rectToMoveWithMinY:(float)fp8 range:(struct _NSRange)fp12 extraRow:(BOOL)fp20;
- (id)_imageOfRect:(NSRect)fp8;
- (void)_runAnimationAt:(NSPoint)fp8 headerBefore:(id)fp16 headerAfter:(id)fp20 rowsToMove:(id)fp24 howFar:(float)fp28 reveal:(BOOL)fp32 extraMovement:(float)fp36;
- (BOOL)runningGroupAnimation;
- (void)concealRowsInRange:(struct _NSRange)fp8;
- (void)finishConcealRowsInRange:(struct _NSRange)fp8;
- (void)revealRowsInRange:(struct _NSRange)fp8;
- (void)draggedImage:(id)fp8 endedAt:(NSPoint)fp12 operation:(unsigned int)fp20;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (void)tabletPoint:(id)fp8;
- (void)mouseUp:(id)fp8;
- (void)mouseDragged:(id)fp8;
- (void)rightMouseDown:(id)fp8;
- (void)rightMouseUp:(id)fp8;
- (void)otherMouseDown:(id)fp8;
- (void)otherMouseUp:(id)fp8;
- (void)rightMouseDragged:(id)fp8;
- (void)otherMouseDragged:(id)fp8;
- (void)_closeTooltip;
- (void)_abortTooltip;
- (void)cancelCelltips;
- (void)cancelTooltips;
- (void)_makeTooltipVisible;
- (void)_updateTooltip;
- (void)_showTooltip;
- (void)_delayTooltip;
- (void)_updateTooltipPoint:(NSPoint)fp8;
- (void)_setMouseInside:(BOOL)fp8;
- (BOOL)mouseInside;
- (int)previousHoveredRow;
- (void)_cancelMouseTracking;
- (void)_updateForMovementAtPoint:(NSPoint)fp8;
- (void)mouseMoved:(id)fp8;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (void)_windowDidResignKey:(id)fp8;
- (void)_appDidHide:(id)fp8;
- (void)_appResignedActive:(id)fp8;
- (void)_windowDidBecomeKey:(id)fp8;
- (void)_windowWillClose:(id)fp8;
- (void)_boundsChanged:(id)fp8;
- (void)_setTracking:(BOOL)fp8 window:(id)fp12;
- (void)setTracksOnlyWhenWindowIsKey:(BOOL)fp8;
- (BOOL)tracksOnlyWhenWindowIsKey;
- (void)setTrackingRectsEnabled:(BOOL)fp8;
- (BOOL)trackingRectsEnabled;
- (BOOL)redisplayCellsOnMouseover;
- (void)setRedisplayCellsOnMouseover:(BOOL)fp8;

@end

@interface AnimatingTableView : FezExtendedTableView
{
    BOOL _animationEnabled;
    BOOL _drawingRowIntoImageCache;
    NSMutableDictionary *_originsSnapshot;
    NSMutableArray *_prevRowOrigins;
    NSDate *_startTime;
    double _animationTime;
    struct _NSRange _movementRange;
    NSRect _movementRect;
    double _spline;
    NSMutableDictionary *_rowCache;
    NSTimer *_timer;
}

- (void)_clearRowCache;
- (void)removeFromSuperview;
- (void)_finishAnimation;
- (void)dealloc;
- (void)logDebugInfo;
- (NSPoint)_animatedRowOrigin:(int)fp8;
- (id)_prevRowOriginsFromSnapshot;
- (void)forgetIndexes;
- (void)rememberIndexes;
- (void)stepAnimation:(id)fp8;
- (void)animateMovementOverTime:(double)fp8;
- (void)setAnimationEnabled:(BOOL)fp8;
- (BOOL)isAnimationEnabled;
- (BOOL)drawsSelection;
- (void)_drawHighlightForRowCacheOfSize:(NSSize)fp8;
- (void)drawRow:(int)fp8 clipRect:(NSRect)fp12;
- (NSRect)rectOfRow:(int)fp8;
- (void)setDrawingIntoRowCache:(BOOL)fp8;
- (NSRect)frameOfCellAtColumn:(int)fp8 row:(int)fp12;
- (struct _NSRange)rowsInRect:(NSRect)fp8;
- (int)numberOfRows;
- (void)tile;
- (void)reloadData;
- (void)rowHeightsChanged;
- (void)concealRowsInRange:(struct _NSRange)fp8;
- (void)revealRowsInRange:(struct _NSRange)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityDescriptionAttribute;

@end

@interface Animator : NSObject
{
    NSTimer *_timer;
    NSDate *_startTime;
    id _target;
    double _animationTime;
    float _fps;
    CDAnonymousStruct3 _contour;
    void *_applyContour;
    float _linearProgress;
    float _progress;
    BOOL _reversed;
    BOOL _autoreverses;
}

+ (CDAnonymousStruct3)defaultContourForType:(int)fp8;
+ (BOOL)isContourValid:(CDAnonymousStruct3)fp8;
+ (float)applySimpleContour:(int)fp8 toValue:(float)fp12;
+ (float)applyContour:(CDAnonymousStruct3)fp8 toValue:(float)fp28;
+ (id)linearAnimatorWithTarget:(id)fp8 time:(double)fp12 fps:(float)fp20;
+ (id)easeOutAnimatorWithTarget:(id)fp8 time:(double)fp12 fps:(float)fp20;
+ (id)sineWaveAnimatorWithTarget:(id)fp8 time:(double)fp12 fps:(float)fp20;
- (id)initWithTarget:(id)fp8 time:(double)fp12 fps:(float)fp20 contour:(CDAnonymousStruct3)fp24;
- (void)_timerStep:(id)fp8;
- (void)setAutoreverses:(BOOL)fp8;
- (BOOL)autoreverses;
- (void)start;
- (void)startSynchronous;
- (void)reverse;
- (void)stop;
- (void)complete;
- (BOOL)isAnimating;
- (BOOL)isSynchronous;
- (BOOL)isReversed;
- (void)setAnimationTime:(double)fp8;
- (double)animationTime;
- (float)fps;
- (CDAnonymousStruct3)contour;
- (double)elapsedTime;
- (float)linearProgress;
- (float)progress;

@end

@interface AudioConferenceView : NSView
{
    AudioChatController *_acController;
    unsigned int _audioConferenceMode;
}

- (id)initWithFrame:(NSRect)fp8 controller:(id)fp24;
- (void)setAudioConferenceMode:(unsigned int)fp8;
- (unsigned int)audioConferenceMode;
- (id)_participantForDragInfo:(id)fp8;
- (void)_highlightParticipant:(id)fp8;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)concludeDragOperation:(id)fp8;
- (BOOL)isFlipped;
- (NSRect)_frameOfParticipantViewAtIndex:(int)fp8;
- (float)_heightAdjustmentForCount:(int)fp8;
- (void)_createGradient;
- (void)_adjustHeight;
- (void)setSpinnerVisibility:(int)fp8 forParticipant:(id)fp12;
- (void)setSpinnerValue:(double)fp8 forParticipant:(id)fp16;
- (unsigned int)_subviewIndexOfParticipant:(id)fp8;
- (unsigned int)_subviewIndexOfParticipantWithID:(id)fp8;
- (id)_viewForParticipant:(id)fp8;
- (void)_addParticipant:(id)fp8 saveNib:(BOOL)fp12;
- (void)addParticipant:(id)fp8;
- (void)addParticipants:(id)fp8;
- (void)removeParticipantWithID:(id)fp8;
- (int)participantCount;
- (BOOL)containsParticipantWithID:(id)fp8;
- (id)participants;
- (void)startConnectingParticipant:(id)fp8;
- (void)connectParticipant:(id)fp8;
- (void)disconnectParticipant:(id)fp8;
- (void)recordingPermissionRequestedForParticipant:(id)fp8;
- (void)recordingPermissionGrantedForParticipant:(id)fp8;
- (void)recordingPermissionDeniedForParticipant:(id)fp8;
- (void)recordingPermissionForgottenForParticipant:(id)fp8;
- (void)finishARDUpgradeForParticipant:(id)fp8;
- (void)_updateMouseTrackingAndRefresh:(BOOL)fp8;
- (void)refreshMouseTracking;
- (void)updateMouseTracking;

@end

@interface AudioRecordingAdapter : NSObject <FezAudioRecordingAdapter>
{
    CDAnonymousStruct7 _audioTimestamp;
    AVChat *_avChat;
    FezAVRecorder *_avRecorder;
    unsigned int _incomingDeviceID;
    void *_ioProcID;
    struct AudioStreamBasicDescription _incomingStreamDescription;
    NSMutableDictionary *_userIDsToChannels;
    char *_channelsInUse;
    int _channelsInUseCount;
    BOOL _compressingAudio;
    struct _opaque_pthread_t *_audioCompressionThread;
    struct _opaque_pthread_cond_t _inputAudioReadyCondition;
    struct _opaque_pthread_mutex_t _inputAudioReadyMutex;
    struct AudioChannelLayout _outputAudioChannelLayout;
    unsigned int _outputAudioChannelLayoutSize;
    struct AudioBufferList *_inputAudioRingBuffer;
    unsigned int _inputAudioRingBufferPacketLength;
    unsigned int _inputAudioRingBufferLengthInPackets;
    unsigned int _inputAudioRingBufferLengthInBytes;
    unsigned int _inputAudioRingBufferStartPosition;
    unsigned int _inputAudioRingBufferEndPosition;
}

- (id)init;
- (void)_cleanup;
- (void)dealloc;
- (struct AudioStreamBasicDescription)incomingStreamDescription;
- (void)setAVRecorder:(id)fp8;
- (void)setAVChat:(id)fp8;
- (void)prepare;
- (void)start;
- (void)stop;
- (BOOL)removeAudioForParticipant:(id)fp8;
- (BOOL)addAudioForParticipant:(id)fp8;
- (void)recordAudioForAllCurrentParticipants;
- (BOOL)setShouldRecordAudio:(BOOL)fp8 forChannel:(int)fp12;
- (BOOL)setShouldRecordAudio:(BOOL)fp8 forParticipant:(id)fp12;
- (void *)_audioCompressionThreadMethod;

@end

@interface AudioSampler : NSObject
{
    NSMutableSet *_localObservers;
    BOOL _micIrisClosed;
    NSMutableDictionary *_remoteObservers;
    NSTimer *_timer;
    FZVideoConferenceController *_vcc;
}

+ (id)sharedSampler;
- (id)init;
- (void)dealloc;
- (void)_broadcastLevel;
- (void)_startTimerIfNecessary;
- (void)_stopTimerIfPossible;
- (void)_handleMicChangeNotification:(id)fp8;
- (void)addLocalObserver:(id)fp8;
- (void)removeLocalObserver:(id)fp8;
- (void)addRemoteObserver:(id)fp8 forUserID:(id)fp12;
- (void)_clearRemoteObserversIfPossible;
- (void)removeRemoteObserverForUserID:(id)fp8;
- (void)removeRemoteObserver:(id)fp8;

@end

@interface Notifier : NSObject <NSWindowDelegate>
{
    NSWindow *_realWindow;
    CustomWindow *_floaterWindow;
    NSPoint _floaterOffset;
    float _prevRealHeight;
    BOOL _canHideShowRealWindow;
    int _stage;
    BOOL _respondedToInvite;
    int _inviteType;
    struct CGAffineTransform _finalXform;
    NSString *_openNoteID;
    NSDictionary *_eventActions;
    IMHandle *_sender;
    BOOL _beSilent;
    BOOL _forcedOrderFront;
    BOOL _shouldSwitchToBoundSpace;
}

+ (id)floaterBackgroundColor;
+ (void)addItemsToMenu:(id)fp8 atIndex:(unsigned int)fp12 fromData:(id)fp16 target:(id)fp20 action:(SEL)fp24;
+ (id)notifierWithType:(int)fp8 from:(id)fp12;
+ (id)notifierWithType:(int)fp8 fromID:(id)fp12;
+ (id)allNotifiers;
+ (id)staleNotifiersWithType:(int)fp8 fromID:(id)fp12;
+ (void)orderFrontNotifierWithID:(id)fp8;
- (id)init;
- (void)dealloc;
- (void)installSecurityNotificationsFrom:(id)fp8;
- (void)installRealWindowNotifications;
- (BOOL)respondedToInvite;
- (void)setRespondedToInvite:(BOOL)fp8;
- (int)inviteType;
- (void)setInviteType:(int)fp8;
- (BOOL)canHideShowRealWindow;
- (void)setCanHideShowRealWindow:(BOOL)fp8;
- (int)stage;
- (void)setStage:(int)fp8;
- (id)sender;
- (void)setSender:(id)fp8;
- (void)setupChildRelationshipWithNotifierMain:(BOOL)fp8;
- (id)openNoteID;
- (void)setOpenNoteID:(id)fp8;
- (NSPoint)floaterOffset;
- (void)setFloaterOffset:(NSPoint)fp8;
- (void)moveFloaterOffset:(NSSize)fp8;
- (float)previousRealHeight;
- (void)setPreviousRealHeight:(float)fp8;
- (BOOL)isActiveNotification;
- (BOOL)isStale;
- (id)floaterWindow;
- (id)realWindow;
- (void)setRealWindow:(id)fp8;
- (BOOL)_collidesWithExistingWindow:(NSRect)fp8;
- (void)positionRealWindowInCorner:(BOOL)fp8;
- (void)buildFloaterWindowWithFrame:(NSRect)fp8 styleMask:(int)fp24;
- (void)setAccessibilityDescription:(id)fp8;
- (void)setSilent:(BOOL)fp8;
- (BOOL)silent;
- (void)setEventActions:(id)fp8;
- (void)stopEventActions;
- (void)_addSelfToNotifierList;
- (BOOL)isRealWindowHidden;
- (void)updateLockUI;
- (void)_securityLevelChanged:(id)fp8;
- (struct CGAffineTransform)_xformForFloaterScale:(float)fp8;
- (void)_doAnimateFloaterDisplay;
- (void)animateFloaterDisplay;
- (void)_doFrameOfFloaterDisplay:(id)fp8;
- (void)floaterWillBecomeVisible;
- (void)floaterBecomingVisible;
- (void)forceOrderFrontRealWindow;
- (void)orderFrontRealWindow;
- (void)_animateRealDisplay:(id)fp8;
- (void)_doFrameOfRealDisplay:(id)fp8;
- (void)realWindowVisible;
- (BOOL)canShowRealWindow;
- (BOOL)canHideRealWindow;
- (void)_animateRealHiding;
- (void)_doFrameOfRealHiding:(id)fp8;
- (void)realWindowHiding;
- (void)_blockSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)closeDownShop:(BOOL)fp8;
- (void)_rejectNotificationAndCloseRealWindow:(BOOL)fp8;
- (void)rejectNotificationAndCloseRealWindow:(BOOL)fp8;
- (void)acceptNotification;
- (void)blockNotification;
- (void)_realWindowDidBecomeKey:(id)fp8;
- (void)_realWindowDidResize:(id)fp8;
- (void)_realWindowWillMiniaturize:(id)fp8;
- (void)_realWindowWillClose:(id)fp8;
- (void)_realWindowResignedMain:(id)fp8;
- (void)_realWindowBeginSheet:(id)fp8;
- (void)_realWindowEndSheet:(id)fp8;
- (void)_appWillHide:(id)fp8;
- (void)_appDidUnhide:(id)fp8;
- (void)windowWillClose:(id)fp8;
- (id)menuItemFormat;

@end

@interface BannerNotifier : Notifier
{
    AVParticipantView *_bannerView;
}

- (BOOL)isActiveNotification;
- (id)bannerView;
- (void)makeFloaterWindow;
- (void)dealloc;

@end

@interface AuthNotifier : BannerNotifier
{
    JabberAuthRequest *_authRequest;
}

+ (void)openOnJabberAuthRequestFrom:(id)fp8 withEventDictionary:(id)fp12;
- (id)bannerView;
- (id)authRequest;
- (id)initWithJabberAuthRequest:(id)fp8 withEventDictionary:(id)fp12;
- (void)closeDownShop:(BOOL)fp8;
- (void)dealloc;

@end

@interface AutoAway : NSObject <IMScreenSaverMonitorListener>
{
    NSPanel *_welcomeBackPanel;
    NSTextField *_messageField;
    NSButton *_dontShowAgainCheckbox;
    NSTimer *_autoAwayTimer;
    NSMutableDictionary *_welcomeBackAccounts;
    BOOL _welcomeBackPromptActive;
    BOOL _didGoIdle;
}

+ (void)install;
+ (int)welcomeBackMode;
+ (void)setWelcomeBackMode:(int)fp8;
+ (BOOL)autoAwayEnabled;
+ (void)setAutoAwayEnabled:(BOOL)fp8;
+ (double)autoAwayDelay;
+ (void)setAutoAwayDelay:(double)fp8;
+ (void)setAutoReplyEnabled:(BOOL)fp8;
- (id)init;
- (void)dealloc;
- (void)_returnAvailable;
- (void)_welcomeBack;
- (void)_myStatusChanged:(id)fp8;
- (void)_markWelcomeBackAccounts;
- (void)_autoAwayTimerFired;
- (void)_clearAutoAwayTimer;
- (void)_startAutoAwayTimer;
- (void)awakeFromNib;
- (void)goAvailable:(id)fp8;
- (void)dontGoAvailable:(id)fp8;
- (void)windowWillClose:(id)fp8;
- (void)screenSaverDidStart;
- (void)screenSaverDidStop;
- (void)screenLocked;
- (void)screenUnlocked;

@end

@interface AutoSendTextField : NSTextField
{
    NSDate *_firstKey;
    NSDate *_lastKey;
    NSTimer *_timer;
    unsigned int _nonEmpty:1;
    unsigned int _significantChange:1;
    unsigned int _dirty:1;
    unsigned int _sTermToggled:1;
}

+ (void)initialize;
- (void)prepareToRelease;
- (void)dealloc;
- (BOOL)textChangedSinceSent;
- (void)setDirty:(BOOL)fp8;
- (void)_autoSend:(int)fp8;
- (void)_timerFired;
- (BOOL)textView:(id)fp8 shouldChangeTextInRange:(struct _NSRange)fp12 replacementString:(id)fp20;
- (void)textDidChange:(id)fp8;

@end

@interface AuxVideoAlert : NSWindowController
{
}

+ (void)showAlert:(BOOL)fp8;
- (void)windowDidLoad;
- (void)windowWillClose:(id)fp8;
- (void)cancelAuxVideo:(id)fp8;

@end

@interface AuxVideoApps : NSObject
{
}

+ (id)applicationsSupportingAuxVideo;

@end

@interface AuxVideoController : NSObject
{
    BOOL _theaterDisabled;
    QLAuxVideoReceiver *_qlAuxVideoReceiver;
    RemoteAuxVideoMuxer *_remoteAuxVideoMuxer;
    NSMutableArray *_receivers;
    AuxVideoReceiver *_currentReceiver;
    BOOL _setFramerateScheduled;
    BOOL _setVideoSizeScheduled;
    double _frameRate;
    NSSize _videoSize;
    VideoProcessor *_videoProcessor;
    unsigned int _state;
}

+ (id)sharedController;
- (id)init;
- (void)dealloc;
- (id)receiverForBundleID:(id)fp8;
- (id)receiverForProviderID:(id)fp8;
- (id)currentReceiver;
- (id)providerBundleID;
- (BOOL)requestedOptimizeVideoStills;
- (BOOL)requestedReplacementMode;
- (unsigned int)state;
- (BOOL)isTheaterDisabled;
- (double)frameRate;
- (NSSize)videoSize;
- (BOOL)hasAudioProvider;
- (BOOL)hasVideoProvider;
- (void)_setFramerate:(id)fp8;
- (void)updateFramerateWith:(id)fp8;
- (void)_setVideoSize:(id)fp8;
- (void)setVideoSize:(NSSize)fp8;
- (void)setTheaterDisabled:(BOOL)fp8 forceDisconnect:(BOOL)fp12;
- (void)_setInputState:(unsigned int)fp8;
- (BOOL)startServerForQuickLookURLs:(id)fp8;
- (BOOL)startServerForProvider:(id)fp8 URL:(id)fp12;
- (void)stopServer;
- (void)beginAuxiliaryInput:(NSSize)fp8;
- (void)cancelAuxiliaryInput;
- (void)endAuxiliaryInput;
- (void)removeAuxVideoReceiver:(id)fp8;
- (void)remoteAuxVideoReceivePortDidDie;
- (void)auxVideoReceiverDidConnect:(id)fp8;
- (void)auxVideoReceiverDidDisconnect:(id)fp8;
- (void)auxVideoReceiver:(id)fp8 providedFrame:(struct __CVBuffer *)fp12;
- (void)auxVideoReceiver:(id)fp8 updateControlBarFromDictionaryRepresentation:(id)fp12;
- (id)currentControlBarDictionaryRepresentation;
- (void)performActionForControlWithIdentifier:(id)fp8 control:(id)fp12;
- (void)theaterScrollWheel:(id)fp8 atRelativePoint:(NSPoint)fp12;

@end

@interface AuxVideoReceiver : NSObject
{
    AuxVideoController *_auxVideoController;
    NSString *_bundleID;
    NSString *_providerID;
    IMSharedPixelBufferPool *_sharedBufferPool;
    BOOL _receivedFrameFromProvider;
    int _numAudioChannels;
    unsigned int _providerPixelFormat;
    double _frameRate;
    NSTimer *_activityTimeoutTimer;
    BOOL _requestedReplacementMode;
    BOOL _requestedOptimizeVideoStills;
    NSDictionary *_controls;
}

- (id)initWithAuxVideoController:(id)fp8 bundleID:(id)fp12 URL:(id)fp16;
- (void)_cleanup;
- (void)dealloc;
- (id)bundleID;
- (void)setProviderID:(id)fp8;
- (id)providerID;
- (BOOL)requestedOptimizeVideoStills;
- (BOOL)requestedReplacementMode;
- (int)numAudioChannels;
- (unsigned long)pixelFormat;
- (double)frameRate;
- (void)setFrameRate:(double)fp8;
- (void)_activityTimeout;
- (void)_registerActivity:(BOOL)fp8;
- (void)activateProvider;
- (void)deactivateProvider;
- (void)provider:(id)fp8 bundleID:(id)fp12 connectWithPixelFormat:(unsigned long)fp16 videoStills:(BOOL)fp20 replacement:(BOOL)fp24 audioChannels:(int)fp28 controlsDictionary:(id)fp32;
- (void)processBuffer:(int)fp8 withAttachments:(id)fp12;
- (void)performActionForControlWithIdentifier:(id)fp8 control:(id)fp12;
- (void)theaterScrollWheel:(id)fp8 atRelativePoint:(NSPoint)fp12;
- (id)currentControlBarDictionaryRepresentation;
- (void)setControls:(id)fp8;
- (void)updateControlBarFromDictionaryRepresentation:(id)fp8;

@end

@interface BlackNotifierContentView : NSView
{
}

- (id)initWithFrame:(NSRect)fp8;
- (void)drawRect:(NSRect)fp8;

@end

@interface BorderedButton : NSButton
{
}

+ (Class)cellClass;
- (void)_commonInit;
- (void)awakeFromNib;
- (id)initWithFrame:(NSRect)fp8;

@end

@interface BorderedButtonCell : NSButtonCell
{
}

- (void)drawInteriorWithFrame:(NSRect)fp8 inView:(id)fp24;
- (void)drawWithFrame:(NSRect)fp8 inView:(id)fp24;

@end

@interface BorderedProgressIndicator : NSProgressIndicator
{
}

- (void)awakeFromNib;
- (void)drawRect:(NSRect)fp8;

@end

@interface BuddyInfo : NSWindowController
{
    IMPerson *_person;
    NSArray *_imHandles;
    BOOL _profileViewsLayoutPending;
    BOOL _setFirstNamePending;
    BOOL _setLastNamePending;
    BOOL _setNicknamePending;
    BOOL _tryToMergeABPerson;
    BOOL _updatingUI;
    BOOL _fitProfile;
    ActionsController *_actionsController;
    NSWindow *_infoWindow;
    NSSegmentedControl *_tabControl;
    NSTabView *_tabView;
    NSTabViewItem *_profileTab;
    NSView *_profileContainer;
    NSTabViewItem *_actionsTab;
    NSTabViewItem *_addressCardTab;
    FezImageView *_abPicture;
    NSButton *_abAlwaysUsePictureButton;
    NSTextField *_abAlwaysUsePictureField;
    NSTextField *_abFirstNameField;
    NSTextField *_abLastNameField;
    NSTextField *_abNicknameField;
    NSTokenField *_abEmailField;
    NSTextField *_abAIMLabel;
    NSTokenField *_abAIMField;
    NSTextField *_abJabberLabel;
    NSTokenField *_abJabberField;
    NSButton *_abButton;
    NSMenu *_tokenMenu;
    NSWindow *_peoplePickerSheet;
    PeoplePicker *_peoplePicker;
    NSButton *_chooseCardButton;
}

+ (id)openForIMHandle:(id)fp8 showProfile:(BOOL)fp12;
+ (id)videoFrameProviderForPictureTaker:(id)fp8;
+ (void)pictureTakerDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
+ (void)openPictureIconWidgetWithImage:(id)fp8 forIMHandle:(id)fp12 allowEditing:(BOOL)fp16;
- (id)tabControl;
- (void)_setupMetrics;
- (id)_personName;
- (void)_updateWindowTitle;
- (void)windowDidLoad;
- (void)selectTab:(id)fp8;
- (void)actionsControllerChanged:(id)fp8;
- (void)windowWillClose:(id)fp8;
- (void)dealloc;
- (id)_bestCustomPicture;
- (void)_updatePictureUI;
- (void)_updateIMHandlesArrayWithABPerson:(id)fp8 orIMHandle:(id)fp12;
- (void)_updateUIWithNoBuddyList;
- (void)_updateUIWithABPerson;
- (void)_updateUIWithNoABPerson;
- (void)_updateUI;
- (id)tokenField:(id)fp8 shouldAddObjects:(id)fp12 atIndex:(unsigned int)fp16;
- (BOOL)control:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;
- (void)_abDBChanged:(id)fp8;
- (void)_setABPerson:(id)fp8;
- (void)_addIMHandlesToABPerson:(id)fp8 andSave:(BOOL)fp12;
- (void)_setABPerson:(id)fp8 addIMHandle:(BOOL)fp12;
- (id)_existingCardsWithFirstName:(id)fp8 lastName:(id)fp12 nickname:(id)fp16;
- (void)_createCardWithFirstName:(id)fp8 lastName:(id)fp12 nickname:(id)fp16 addIMHandle:(BOOL)fp20;
- (void)_createCardAndAddIMHandle:(BOOL)fp8;
- (void)_updateABPicture;
- (void)setPicture:(id)fp8;
- (void)toggleAlwaysUsePicture:(id)fp8;
- (void)_editPicture:(id)fp8;
- (void)_addEmails:(id)fp8 toABPerson:(id)fp12;
- (void)_mergeWith:(id)fp8;
- (void)_setName;
- (void)_setFirstName;
- (void)_setLastName;
- (void)_setNickname;
- (void)setFirstName:(id)fp8;
- (void)setLastName:(id)fp8;
- (void)setNickname:(id)fp8;
- (void)setAccountIDs:(id)fp8;
- (id)_selectedABPerson;
- (void)_peoplePickerDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_pickerDoubleClicked;
- (void)dismissPeoplePicker:(id)fp8;
- (void)_peoplePickerValueUpdated:(id)fp8;
- (void)addressBookButton:(id)fp8;
- (BOOL)tokenField:(id)fp8 hasMenuForRepresentedObject:(id)fp12;
- (id)tokenField:(id)fp8 menuForRepresentedObject:(id)fp12;
- (id)tokenField:(id)fp8 readFromPasteboard:(id)fp12;
- (void)startChat:(id)fp8;
- (void)inviteToAudioChat:(id)fp8;
- (void)inviteToVideoChat:(id)fp8;
- (void)inviteToARDAsClient:(id)fp8;
- (void)inviteToARDAsServer:(id)fp8;
- (void)sendMessage:(id)fp8;
- (void)sendDirectMessage:(id)fp8;
- (void)composeEMail:(id)fp8;
- (void)sendFile:(id)fp8;
- (void)toggleBuddy:(id)fp8;
- (void)block:(id)fp8;
- (void)requestValidation:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (NSSize)_windowSizeForTabSize:(NSSize)fp8;
- (float)_profileTabHeight;
- (NSSize)_maxSizeForProfile;
- (NSSize)_minSizeForProfile;
- (void)_updateMinMaxSizeForProfile;
- (void)_layoutProfileViews;
- (void)setProfileViewsNeedLayout;
- (void)_createProfileViews;
- (void)windowDidResize:(id)fp8;
- (NSRect)windowWillUseStandardFrame:(id)fp8 defaultFrame:(NSRect)fp12;

@end

@interface BuddyPicture : NSObject
{
    NSData *_data;
    NSDataRetainingImage *_image;
    NSSize _size;
    BOOL _animating;
    int _currentframe;
    int _frames;
    NSMutableDictionary *_frameDelays;
    NSBitmapImageRep *_animatedRep;
    BOOL _lookedForAnimatedRep;
    NSTimer *_animationStopTimer;
    NSDate *_lastDrawn;
    NSTimer *_animationTimer;
    NSString *_key;
    BOOL _pictureIsIcon;
    NSMutableSet *_cacheKeys;
}

+ (id)buddyPictureStore;
+ (id)keyForData:(id)fp8;
+ (void)rememberBuddyPicture:(id)fp8 withKey:(id)fp12;
+ (void)removeBuddyPicture:(id)fp8;
+ (id)buddyPictureForKey:(id)fp8;
+ (id)buddyPictureWithData:(id)fp8 key:(id)fp12;
+ (id)buddyPictureWithData:(id)fp8;
+ (id)buddyPictureWithImage:(id)fp8;
+ (void)initialize;
+ (void)_postCleanupNotification:(id)fp8;
+ (id)runLoopDrawingModes;
+ (void)_setupFramePulse;
+ (void)_cleanupFrameTimer;
+ (void)buddyPictureTimerFired:(id)fp8;
+ (void)_userSwitchedOut;
+ (void)_userSwitchedIn;
+ (void)enqueueBuddyPicturePost:(id)fp8;
- (void)_registerForPreferenceChanges;
- (id)init;
- (id)initWithData:(id)fp8 key:(id)fp12;
- (id)initWithData:(id)fp8;
- (id)initWithImage:(id)fp8 key:(id)fp12;
- (id)initWithImage:(id)fp8;
- (id)key;
- (void)dealloc;
- (void)_cleanupAnimationIfNecessary:(id)fp8;
- (void)_animationPrefsChanged:(id)fp8;
- (id)description;
- (id)data;
- (NSSize)size;
- (void)_cacheImage;
- (void)flushCaches;
- (BOOL)hasNiceAlpha;
- (id)image;
- (void)addToRecentPicturesWithUserInfo:(void *)fp8;
- (void)stopAnimation;
- (void)_noteLastDrawnTime;
- (void)_stepAnimationTimer:(id)fp8;
- (void)_synchronizeFrame:(float)fp8;
- (void)stepAnimation;
- (void)startAnimation;
- (float)nextFrameDelayForFrame:(int)fp8;
- (float)nextFrameDelay;
- (int)frames;
- (id)animatedRepresentation;
- (BOOL)shouldAnimate;
- (id)imageWithMaxSize:(NSSize)fp8 frame:(int)fp16;
- (id)imageWithMaxSize:(NSSize)fp8;
- (id)imageWithSize:(NSSize)fp8;
- (id)_dataRepresentation;
- (id)dataRepresentation;
- (id)TIFFRepresentation;
- (void)drawUncroppedInRect:(NSRect)fp8 inView:(id)fp24 operation:(unsigned int)fp28 fraction:(float)fp32 firstFrameOnly:(BOOL)fp36 scaled:(BOOL)fp40;
- (void)drawInRect:(NSRect)fp8 operation:(unsigned int)fp24 fraction:(float)fp28 firstFrameOnly:(BOOL)fp32 scaled:(BOOL)fp36;
- (void)drawInRect:(NSRect)fp8 operation:(unsigned int)fp24 fraction:(float)fp28 firstFrameOnly:(BOOL)fp32;
- (void)drawInRect:(NSRect)fp8 inView:(id)fp24 operation:(unsigned int)fp28 fraction:(float)fp32 firstFrameOnly:(BOOL)fp36;
- (void)drawInRect:(NSRect)fp8 inView:(id)fp24 operation:(unsigned int)fp28 fraction:(float)fp32 firstFrameOnly:(BOOL)fp36 scaled:(BOOL)fp40;
- (id)dataWithMaxSize:(NSSize)fp8 minSize:(NSSize)fp16 maxDataSize:(float)fp24 allowAnimated:(BOOL)fp28;
- (id)animatedGIFDataWithSize:(NSSize)fp8 minSize:(NSSize)fp16 maxDataSize:(float)fp24;
- (BOOL)pictureIsIcon;
- (void)setPictureIsIcon:(BOOL)fp8;

@end

@interface BuddyPictureCell : NSActionCell
{
    PeopleList *_peopleList;
    NSSize _iconSize;
}

- (id)initWithPeopleList:(id)fp8;
- (NSRect)rectOfPictureWithFrame:(NSRect)fp8 inView:(id)fp24;
- (void)setIconSize:(NSSize)fp8;
- (NSSize)iconSize;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)imHandle;
- (id)peopleListItem;
- (BOOL)shouldAnimate;
- (void)drawInteriorWithFrame:(NSRect)fp8 inView:(id)fp24;

@end

@interface BuddyPictureCell (BuddyPictureCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilityAttributeValue:(id)fp8;
- (id)accessibilityDescriptionAttribute;
- (id)accessibilityValueAttribute;
@end

@interface OpenGLLayerView : NSOpenGLView
{
    CIContext *_ciContext;
    OpenGLLayerModel *_layerModel;
    NSImage *_offscreenImage;
    float _bgRed;
    float _bgGreen;
    float _bgBlue;
    unsigned int _vramTextureId;
    VideoRecordingAdapter *_videoRecordingAdapter;
    BOOL _redrawPending;
    BOOL _redrawScheduled;
    NSDate *_lastRedraw;
}

- (id)_initWithFrame:(NSRect)fp8 masterContext:(id)fp24;
- (id)initWithFrame:(NSRect)fp8;
- (void)dealloc;
- (id)ciContext;
- (void)setLayerModel:(id)fp8;
- (id)layerModel;
- (void)_updateVirtualScreen;
- (void)handleVirtualScreenChangedNotificiation:(int)fp8;
- (void)viewDidMoveToWindow;
- (void)setFrameSize:(NSSize)fp8;
- (void)_setAutoscalesBoundsToPixelUnits:(BOOL)fp8;
- (BOOL)isOpaque;
- (void)draw;
- (id)bitmapImageFromSurfaceInRect:(NSRect)fp8;
- (id)bitmapImageFromSurface;
- (void)_updateLastDrawDate;
- (void)_recompositeLayers;
- (void)drawRect:(NSRect)fp8;
- (void)setLayerModelNeedsDisplay;
- (void)reshape;
- (void)update;
- (void)setBackgroundRed:(float)fp8 green:(float)fp12 blue:(float)fp16;
- (void)setBackgroundWhite:(float)fp8;
- (void)setBackgroundColor:(id)fp8;
- (NSSize)adjustWindow:(id)fp8 proposedSize:(NSSize)fp12;
- (BOOL)saveVideoSnapshotToFile:(id)fp8;
- (void)renderIntoContext:(id)fp8 width:(int)fp12 height:(int)fp16;
- (void)setRecordingAdapter:(id)fp8;

@end

@interface CameraPreferencesView : OpenGLLayerView
{
    OpenGLVideoConferenceLayer *_layer;
    NSRect _oldTrackingRect;
    BOOL _videoCapable;
    BOOL _abortedVideo;
    BOOL _videoIsStarted;
    NSString *_videoErrorMessage;
    BOOL _registeredForNotifications;
    BOOL _videoCapabilityIsKnown;
}

- (id)initWithFrame:(NSRect)fp8;
- (void)dealloc;
- (id)videoErrorMessage;
- (void)setVideoErrorMessage:(id)fp8;
- (id)layerName;
- (void)_createLayer;
- (void)clearKnownVideoState;
- (void)_irisStateNotification:(id)fp8;
- (void)_cameraChangedNotification:(id)fp8;
- (BOOL)videoIsStarted;
- (void)_removeCameraPrefsNotifications;
- (BOOL)canStartVideo;
- (void)startVideo;
- (void)restartVideo;
- (void)abortVideo;
- (void)stopVideo;
- (void)mouseDown:(id)fp8;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)fp8;
- (void)mouseDragged:(id)fp8;
- (void)setCameraOnState:(BOOL)fp8;
- (void)drawRect:(NSRect)fp8;
- (void)setFrame:(NSRect)fp8;
- (void)prepareOpenGL;

@end

@interface CameraPreferencesView (DragAndDrop)
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)concludeDragOperation:(id)fp8;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
@end

@interface CenteredView : NSView
{
    BOOL _horiz;
    BOOL _vert;
    NSView *_leftFitView;
}

- (void)superviewDidResize;
- (void)awakeFromNib;
- (void)dealloc;
- (void)setCenteredHoriz:(BOOL)fp8;
- (void)setCenteredVert:(BOOL)fp8;
- (BOOL)centeredHoriz;
- (BOOL)centeredVert;

@end

@interface CertController : NSObject
{
    NSMutableDictionary *_pendingRequests;
    NSTimer *_tickleTimer;
    BOOL _stopController;
}

+ (id)sharedInstance;
+ (BOOL)showPasswordButtonForRequest:(id)fp8;
+ (BOOL)showRevokeButtonForRequest:(id)fp8;
+ (id)failureStringForRequest:(id)fp8;
- (id)init;
- (void)dealloc;
- (id)_nearestDateToPoll;
- (void)_clearTimer;
- (void)_setTimerDate;
- (void)_setTimer;
- (void)_updateTimer;
- (void)_tickleCertRequest:(id)fp8;
- (void)_timerFired:(id)fp8;
- (void)pollRequestsNow;
- (void)setIsStopped:(BOOL)fp8;
- (BOOL)isStopped;
- (BOOL)requestExistsForAccount:(id)fp8;
- (id)scheduledCertRequestWithAccount:(id)fp8;
- (id)scheduledRenewCertRequestWithAccount:(id)fp8;
- (id)cancelAnyExistingRequestsForAccount:(id)fp8;
- (void)certificateTrustSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_failedSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (void)activateEncryptionForAccountIfPossible:(id)fp8;
- (void)_mainThreadActivateCertificate:(id)fp8;
- (void)activateCertificate:(struct OpaqueSecCertificateRef *)fp8 forAIMAccount:(id)fp12;
- (void)resurrectPendingCertRequests;
- (void)_handleCertificateRequestDateChanged:(id)fp8;
- (void)_handleCertificateRequestFinished:(id)fp8;

@end

@interface CertExpirationChecker : NSObject
{
    ValidationObject *_signingCertThread;
    ValidationObject *_encryptionCertThread;
    AIMAccount *_account;
}

+ (id)checkAccount:(id)fp8;
- (id)initWithAccount:(id)fp8;
- (void)dealloc;
- (void)_done;
- (void)validationObject:(id)fp8 screenName:(id)fp12 finishedWithResult:(unsigned int)fp16;
- (void)start;

@end

@interface CertRequest : NSObject
{
    URLFetcher *_intermediateFetcher;
    AIMAccount *_aimAccount;
    NSString *_userName;
    BOOL _shouldArchive;
    BOOL _backedUp;
    BOOL _gotIntermediate;
    BOOL _launchedDaemon;
    unsigned int _attempts;
    NSDate *_attentionDate;
    unsigned int _fallbackTimes;
    int _certRequestStatus;
    int _failureReason;
}

+ (void)downloadAndInstallIntermediate;
+ (id)_stringFromCertStatus:(int)fp8;
- (id)initWithAccount:(id)fp8;
- (void)dealloc;
- (void)urlFetcher:(id)fp8 fetchedResult:(id)fp12;
- (void)urlFetcher:(id)fp8 fetchFailedWithError:(id)fp12;
- (void)_sendOffIntermediateRequestIfNecessary;
- (void)setWhenNeedsAttentionInSeconds:(float)fp8;
- (void)setWhenNeedsAttention:(id)fp8;
- (id)whenNeedsAttention;
- (id)userName;
- (id)aimAccount;
- (int)status;
- (void)_resetNumberOfFallbackTimes;
- (void)_resetNumberOfAttempts;
- (void)_setNextTimeIntervalUsingFallbacks;
- (void)determineCertStatus;
- (void)tryToFetchCertNow;
- (void)performRequest;
- (void)stopRequest;
- (int)failureReason;
- (void)setFailureReason:(int)fp8;
- (id)description;
- (BOOL)_checkUsernameAndPassword;
- (void)_requestNewDotMacCertificate;
- (void)_checkCertProgress:(BOOL)fp8;
- (void)_postNotification:(id)fp8;
- (void)postNotification:(id)fp8;

@end

@interface CertViewer : NSWindowController
{
    NSTabView *_tabView;
    NSProgressIndicator *_progView;
    SFCertificateView *_signView;
    IMHandle *_pres;
    struct OpaqueSecCertificateRef *_signCert;
}

- (id)initWithIMHandle:(id)fp8;
- (id)windowNibName;
- (void)awakeFromNib;
- (void)dealloc;
- (void)_updateCertificate;
- (void)_setSigningCertificate:(struct OpaqueSecCertificateRef *)fp8;
- (void)windowWillClose:(id)fp8;

@end

@interface Chat (Scripting)
- (id)scriptID;
- (id)scriptService;
- (id)scriptParticipants;
- (id)scriptName;
- (id)scriptInvitationMessage;
- (id)scriptChatType;
- (id)scriptSubject;
- (id)scriptSecure;
- (id)scriptInvitation;
- (id)scriptJoinState;
- (id)scriptActive;
- (id)scriptStarted;
- (id)scriptUpdated;
- (id)objectSpecifier;
- (void)acceptInvitationScriptCommand:(id)fp8;
- (void)declineInvitationScriptCommand:(id)fp8;
- (void)sendInChatScriptCommand:(id)fp8;
@end

@interface Chat (TabSortingAdditions)
- (int)compareChat:(id)fp8;
@end

@interface ChatController : NSObject <PeopleListDelegate, NSAnimationDelegate, NSTextViewDelegate, ChooseBuddyButtonDelegate>
{
    BOOL _hasAwoken;
    NSRect _savedRect;
    BOOL _inTransition;
    BOOL _pendingShowParticipants;
    BOOL _windowClosing;
    NSImageView *_statusImage;
    AbbreviatingTextField *_statusText;
    NSExtendedBox *_statusArea;
    MyNameControl *_toPopup;
    BOOL _isStatusAreaVisible;
    NSArray *_possibleToParticipants;
    NSArray *_possibleFromParticipants;
    NSArray *_possibleAlternateToParticipants;
    NSArray *_possibleAlternateFromParticipants;
    ExtendedSplitViewGrabber *_inputLineGrabber;
    ExtendedSplitViewGrabber *_rejoinGrabber;
    ExtendedSplitViewGrabber *_emptyGrabber;
    NSTextField *_participantCount;
    NSView *_enclosingView;
    ChatInputLine *_inputLine;
    AbbreviatingTextField *_whyIsInputLineGoneField;
    WindowDraggingTabView *_inputLineTabView;
    NSView *_participantsArea;
    PeopleList *_peopleList;
    NSDrawer *_peopleDrawer;
    ChatViewController *_chatViewController;
    NSMenu *_chatContextMenu;
    ChooseBuddyButton *_chooseIDButton;
    float _initialMinWidth;
    NSPanel *_linkSheet;
    ExtendedTextField *_linkTextField;
    LinkSheetController *_linkSheetController;
    NSWindow *_inviteMsgSheet;
    NSTextField *_inviteMsgText;
    NSTextField *_inviteMsgLabel;
    NSString *_inviteMsg;
    BOOL _participantsWereVisible;
    NSView *_buttonArea;
    NSButton *_notifyAccept;
    NSButton *_joinAtLogin;
    NSButton *_notifyReject;
    NSButton *_notifyBlock;
    float _buttonAmountVisible;
    NSString *_origNotifyAcceptTitle;
    NSTabView *_notifyButtonTabView;
    NSButton *_rejoinChatButton;
    NSProgressIndicator *_joiningSpinner;
    NSViewAnimation *_statusViewAnimation;
    ChatFieldEditor *_fieldEditor;
    NSUndoManager *_undoManager;
    Chat *_chat;
    BOOL _primaryController;
    BOOL _chooseIDMenuIsValid;
    BOOL _isDeciding;
    BOOL _msgsHidden;
    BOOL _finishChatWhenClosed;
    BOOL _inputLineSpacerRemoved;
    ChatNotifier *_notifier;
    SecureWindow *_window;
    BOOL _resizingInputLine;
    float _inputLineRightMargin;
    CertViewer *_certViewer;
    BOOL _isInTab;
    BOOL _isResizing;
}

+ (id)chatControllerInstalledInView:(id)fp8;
- (void)chatWillBecomeVisibleInWindow:(id)fp8 resizeWindow:(BOOL)fp12;
- (void)chatWillBeRemovedFromWindow:(id)fp8;
- (BOOL)animationShouldStart:(id)fp8;
- (void)animationDidStop:(id)fp8;
- (void)animationDidEnd:(id)fp8;
- (void)_synchonizeStatusAreaItems;
- (BOOL)_isStatusAreaVisible;
- (void)_showStatusArea;
- (void)_hideStatusArea;
- (void)updateStatusArea;
- (void)_updateStatusGem:(id)fp8;
- (void)_updateStatus:(id)fp8;
- (void)_updatePossibleToFromParticipants;
- (void)_switchToIMHandleFromMenuItem:(id)fp8;
- (id)menuForMyRolloverButton:(id)fp8;
- (void)awakeFromNib;
- (void)setResizersVisible:(BOOL)fp8;
- (void)unhookResizers;
- (void)hookupResizersToSplitView:(id)fp8;
- (void)_finishChat;
- (void)_hideSpinner;
- (void)_showSpinner;
- (void)_showSpinnerSoon;
- (void)dealloc;
- (void)_windowDidResize:(id)fp8;
- (void)handleChatWindowClosing:(id)fp8;
- (id)window;
- (id)selectedIMHandles;
- (BOOL)isComposing;
- (id)account;
- (id)peopleList;
- (id)chat;
- (float)minWidth;
- (void)_loadRejoinButton;
- (void)setChat:(id)fp8;
- (void)setChatRoomName:(id)fp8;
- (BOOL)finishesChatWhenClosed;
- (void)setFinishesChatWhenClosed:(BOOL)fp8;
- (id)inputLine;
- (id)fieldEditor;
- (id)undoManager;
- (void)_updateInputLineAttachmentSupport;
- (BOOL)inputLineHasFocus;
- (void)setPrimaryChatController:(BOOL)fp8;
- (id)_activeChatChat;
- (BOOL)_serviceMightChat;
- (id)displayName:(BOOL)fp8;
- (void)_postDisplayNameChanged;
- (void)_postPeopleChanged;
- (int)joinState;
- (int)style;
- (id)people;
- (id)notifier;
- (BOOL)isActive;
- (BOOL)isInTab;
- (void)setIsInTab:(BOOL)fp8;
- (void)_fixBottomBorderThickness;
- (void)_clearCurrentPosition;
- (void)_saveCurrentPosition;
- (NSRect)_rectAdjustingForSavedPositionWithRect:(NSRect)fp8;
- (BOOL)isResizing;
- (void)_adjustInputLineHeightBy:(float)fp8 resizeWindow:(BOOL)fp12;
- (void)_setInputLineHeight:(float)fp8 resizeWindow:(BOOL)fp12;
- (void)_showInputLine:(BOOL)fp8;
- (void)_msgStyleChanged:(id)fp8;
- (float)_currentTextHeight;
- (void)controlTextDidChange:(id)fp8;
- (void)_inputLineDidEndLiveResize:(id)fp8;
- (BOOL)resizingInputLine;
- (BOOL)inputLineCanAttachFile;
- (id)enclosingView;
- (id)chatViewController;
- (id)_preparedFieldEditor;
- (void)makeInputLineKey;
- (void)insertText:(id)fp8;
- (void)paste:(id)fp8;
- (void)pasteAndMatchStyle:(id)fp8;
- (void)tabView:(id)fp8 willSwitchFromTab:(int)fp12 toTab:(int)fp16 effect:(int *)fp20 direction:(int *)fp24;
- (BOOL)isInputLineVisible;
- (void)_setUnjoinedState;
- (void)_setJoiningState;
- (void)_setJoinedState;
- (void)makeInputLineFlushLeft:(BOOL)fp8;
- (void)_accountLoginStatusChanged:(id)fp8;
- (void)_updateInputLineTabView:(id)fp8;
- (BOOL)canParticipantsBeVisible;
- (BOOL)_wereParticipantsVisible;
- (BOOL)areParticipantsVisible;
- (void)showParticipants:(id)fp8;
- (void)hideParticipants:(id)fp8;
- (void)toggleParticipants:(id)fp8;
- (void)personDoubleClicked:(id)fp8;
- (void)drawerDidOpen:(id)fp8;
- (void)drawerWillClose:(id)fp8;
- (void)toggleHidePictures:(id)fp8;
- (void)toggleHideAudioStatus:(id)fp8;
- (void)toggleHideVideoStatus:(id)fp8;
- (void)sortByStatus:(id)fp8;
- (void)sortByFirstName:(id)fp8;
- (void)sortByLastName:(id)fp8;
- (void)_updateAddBuddyButtonState;
- (BOOL)addNewIMHandles:(id)fp8;
- (void)_loadLinkNibIfNecessary;
- (void)addLink:(id)fp8;
- (void)acceptLinkText:(id)fp8;
- (void)cancelLinkSheet:(id)fp8;
- (void)removeLinkSheet:(id)fp8;
- (void)_linkSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (BOOL)textView:(id)fp8 clickedOnLink:(id)fp12 atIndex:(unsigned int)fp16;
- (BOOL)_sendMessage:(BOOL)fp8 forceEmpty:(BOOL)fp12 forceSend:(BOOL)fp16;
- (void)_clearInputLine;
- (void)joinAtLoginChanged:(id)fp8;
- (void)rejoinChat:(id)fp8;
- (void)cancelMessage:(id)fp8;
- (void)_sendMessage;
- (void)sendMessage:(id)fp8;
- (void)sendPartialMessage:(id)fp8;
- (BOOL)canSendPartialMessage;
- (BOOL)textField:(id)fp8 didChangeSignificantly:(int)fp12;
- (BOOL)control:(id)fp8 textShouldBeginEditing:(id)fp12;
- (void)sendSMS:(id)fp8;
- (void)composeEMail:(id)fp8;
- (void)sendFile:(id)fp8;
- (void)insertSmiley:(id)fp8;
- (void)setTranscriptStyleFromMenuItem:(id)fp8;
- (void)cancelARDSession:(id)fp8;
- (void)inviteToARDAsClient:(id)fp8;
- (void)inviteToARDAsServer:(id)fp8;
- (void)inviteToAudioChat:(id)fp8;
- (void)inviteToVideoChat:(id)fp8;
- (BOOL)canUseInputField;
- (void)clearUnreadMessageIfVisible:(id)fp8;
- (void)_reformatOutgoingColors;
- (void)_reformatOutgoingFonts;
- (void)_reformatOverrideIncoming;
- (void)_reformatOverrideIncomingFont;
- (void)_reformatOverrideIncomingColors;
- (void)_watchMessageAddressingChanged;
- (void)toggleRecipientBar:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)makeTextBigger:(id)fp8;
- (void)makeTextStandardSize:(id)fp8;
- (void)makeTextSmaller:(id)fp8;
- (void)_updateParticipantCount;
- (void)_chatOverallStatusChangedNotification:(id)fp8;
- (void)_memberChanged:(id)fp8;
- (void)finishChat:(id)fp8;
- (void)ignore:(id)fp8;
- (void)toggleQuietMode:(id)fp8;
- (void)showInBuddyList:(id)fp8;
- (void)showSelectedBuddyInfo:(id)fp8;
- (void)showSelectedBuddyProfile:(id)fp8;
- (void)showInAddressBook:(id)fp8;
- (void)addABuddy:(id)fp8;
- (void)deleteSelectedBuddies:(id)fp8;
- (void)requestValidation:(id)fp8;
- (void)block:(id)fp8;
- (void)searchInSpotlight:(id)fp8;
- (void)_chatStatusChanged:(id)fp8;
- (void)_chatComposingStatusChanged:(id)fp8;
- (void)_chatErrorPosted:(id)fp8;
- (void)_showErrorSheet:(id)fp8;
- (void)_personInfoChanged:(id)fp8;
- (void)buddySelected:(id)fp8;
- (BOOL)chooseBuddyButton:(id)fp8 allowIMHandle:(id)fp12;
- (id)peopleList:(id)fp8 alternateNameTextForIMHandle:(id)fp12;
- (id)peopleList:(id)fp8 alternateStatusTextForIMHandle:(id)fp12;
- (float)peopleList:(id)fp8 alphaForStatus:(unsigned int)fp12;
- (id)propertiesForGroup:(id)fp8;
- (id)peopleList:(id)fp8 siblingsForIMHandle:(id)fp12;
- (BOOL)canAddPeople;
- (BOOL)lastMessageIsVisible;
- (id)peopleList:(id)fp8 addablePeople:(id)fp12;
- (void)peopleList:(id)fp8 setGroupsSortOrder:(id)fp12;
- (BOOL)peopleList:(id)fp8 canRemoveRows:(id)fp12;
- (void)peopleList:(id)fp8 deleteGroup:(id)fp12;
- (BOOL)peopleList:(id)fp8 deletePeople:(id)fp12;
- (void)_syncPeopleWithChat;
- (void)_adjustChatStyleAndLockUI:(BOOL)fp8;
- (void)chatWindowRevealed:(BOOL)fp8;
- (BOOL)peopleList:(id)fp8 pastePeople:(id)fp12 intoGroup:(id)fp16;
- (void)_peopleChanged;
- (BOOL)peopleListAboutToResort:(id)fp8;
- (id)peopleList:(id)fp8 filterIMHandleFromPasteboard:(id)fp12;
- (BOOL)peopleList:(id)fp8 addPersonWithoutID:(id)fp12;
- (BOOL)peopleList:(id)fp8 people:(id)fp12 draggedFromGroups:(id)fp16 toGroup:(id)fp20 atLocation:(unsigned int)fp24 copying:(BOOL)fp28;
- (id)peopleList:(id)fp8 menuForGroup:(id)fp12;
- (void)peopleListSelectedItemInfoChanged:(id)fp8;
- (id)peopleListService:(id)fp8;
- (id)secureWindowCertificates:(id)fp8;
- (id)secureWindowTrustPolicies:(id)fp8;
- (void)_chatSecurityLevelChanged:(id)fp8;
- (void)_syncLockState;
- (void)_hideLockMessage:(id)fp8;
- (void)_showLockMessage:(id)fp8;
- (void)_updateLockUIFromPreviousLevel:(int)fp8;
- (void)_requestCertificates;
- (void)_accountCapabilitiesChanged:(id)fp8;
- (void)_certificatesChanged:(id)fp8;
- (void)_chatStyleChanged:(id)fp8;
- (BOOL)isInTransition;
- (void)setInTransition:(BOOL)fp8;
- (void)setIsDeciding:(BOOL)fp8 doKnockKnock:(BOOL)fp12 withChatNotifier:(id)fp16;
- (void)forgetNotifier:(id)fp8;
- (BOOL)isDeciding;
- (void)setVisiblePortionOfNotifyButtons:(float)fp8 showInputLine:(BOOL)fp12;
- (void)acceptNotification:(id)fp8;
- (void)rejectNotification:(id)fp8;
- (void)blockNotification:(id)fp8;
- (void)_loadInviteNibIfNecessary;
- (void)_runInviteSheetForInvitees:(id)fp8;
- (void)acceptInviteMessage:(id)fp8;
- (void)cancelInviteMessage:(id)fp8;
- (void)_inviteMsgDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)scrollToBottom:(id)fp8;
- (void)clearTranscript:(id)fp8;
- (void)markTranscript:(id)fp8;
- (id)quicklookPreviewPanelDataSource;
- (void)showFindPanel:(id)fp8;
- (void)findNext:(id)fp8;
- (void)findPrevious:(id)fp8;
- (void)copySelectionToFindPboard:(id)fp8;
- (void)toggleHideSmileys:(id)fp8;
- (void)chooseBackgroundImage:(id)fp8;
- (void)clearBackground:(id)fp8;
- (void)toggleShowPictures:(id)fp8;
- (void)toggleShowNames:(id)fp8;
- (void)setChatShowsNames:(id)fp8;
- (void)setChatShowsPictures:(id)fp8;
- (void)setChatShowsNamesAndPictures:(id)fp8;
- (void)_savePanelDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)saveChatAs:(id)fp8;

@end

@interface ChatDoc : NSDocument <QLPreviewPanelDelegate, QLPreviewPanelDataSource>
{
    Chat *_chat;
    SecureWindow *_chatWindow;
    NSView *_chatView;
    ChatController *_controller;
    ChatMiniwindowController *_miniwindowController;
    unsigned int _loadedNib:1;
    NSWindow *_printingWindow;
    NSPrintOperation *_printingOperation;
    BOOL _saving;
    QLPreviewPanel *_previewPanel;
}

- (void)dealloc;
- (void)_setChat:(id)fp8;
- (id)chat;
- (id)controller;
- (void)_forceNibLoading;
- (void)makeWindowControllers;
- (id)windowNibName;
- (void)windowControllerDidLoadNib:(id)fp8;
- (id)displayName;
- (void)_updateDisplayName;
- (void)windowDidResize:(id)fp8;
- (id)windowWillReturnFieldEditor:(id)fp8 toObject:(id)fp12;
- (id)window;
- (void)_setFirstResponder;
- (NSRect)windowWillUseStandardFrame:(id)fp8 defaultFrame:(NSRect)fp12;
- (void)saveDocumentTo:(id)fp8;
- (BOOL)readFromURL:(id)fp8 ofType:(id)fp12 error:(id *)fp16;
- (BOOL)loadDataRepresentation:(id)fp8 ofType:(id)fp12;
- (id)dataRepresentationOfType:(id)fp8;
- (void)updateChangeCount:(unsigned int)fp8;
- (void)close;
- (BOOL)windowShouldClose:(id)fp8;
- (void)quickLook:(id)fp8;
- (BOOL)acceptsPreviewPanelControl:(id)fp8;
- (void)beginPreviewPanelControl:(id)fp8;
- (void)endPreviewPanelControl:(id)fp8;
- (int)numberOfPreviewItemsInPreviewPanel:(id)fp8;
- (id)previewPanel:(id)fp8 previewItemAtIndex:(int)fp12;
- (NSRect)previewPanel:(id)fp8 sourceFrameOnScreenForPreviewItem:(id)fp12;
- (void)toggleParticipants:(id)fp8;
- (void)toggleHidePictures:(id)fp8;
- (void)toggleHideAudioStatus:(id)fp8;
- (void)toggleHideVideoStatus:(id)fp8;
- (void)composeEMail:(id)fp8;
- (void)setTranscriptStyleFromMenuItem:(id)fp8;
- (void)inviteToVideoChat:(id)fp8;
- (void)inviteToAudioChat:(id)fp8;
- (void)toggleHideSmileys:(id)fp8;
- (void)toggleShowNames:(id)fp8;
- (void)toggleShowPictures:(id)fp8;
- (void)setChatShowsNames:(id)fp8;
- (void)setChatShowsPictures:(id)fp8;
- (void)setChatShowsNamesAndPictures:(id)fp8;
- (void)showInAddressBook:(id)fp8;
- (void)showFindPanel:(id)fp8;
- (void)findNext:(id)fp8;
- (void)findPrevious:(id)fp8;
- (void)copySelectionToFindPboard:(id)fp8;
- (void)makeTextBigger:(id)fp8;
- (void)makeTextSmaller:(id)fp8;
- (void)makeTextStandardSize:(id)fp8;
- (void)printOperationDidRun:(id)fp8 success:(BOOL)fp12 contextInfo:(void *)fp16;
- (void)printShowingPrintPanel:(BOOL)fp8;
- (id)imHandleToGetInfoOn;
- (void)showSelectedBuddyInfo:(id)fp8;
- (void)showSelectedBuddyProfile:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;

@end

@interface ChatFieldEditor : NSTextView <NSOpenSavePanelDelegate>
{
    IMHandle *_attachmentRecipient;
    BOOL _allowsAttachments;
    BOOL _allowsInlineImages;
    NSView *_forwardingView;
    BOOL _isChat;
}

- (id)initWithFrame:(NSRect)fp8;
- (void)dealloc;
- (BOOL)validateUserInterfaceItem:(id)fp8;
- (void)addFontTrait:(id)fp8;
- (void)toggleContinuousSpellChecking:(id)fp8;
- (void)toggleGrammarChecking:(id)fp8;
- (void)toggleSmartInsertDelete:(id)fp8;
- (void)toggleAutomaticQuoteSubstitution:(id)fp8;
- (void)toggleAutomaticLinkDetection:(id)fp8;
- (void)toggleAutomaticDataDetection:(id)fp8;
- (void)toggleAutomaticDashSubstitution:(id)fp8;
- (void)toggleAutomaticTextReplacement:(id)fp8;
- (void)toggleAutomaticSpellingCorrection:(id)fp8;
- (void)changeFont:(id)fp8;
- (void)setMarkedText:(id)fp8 selectedRange:(struct _NSRange)fp12;
- (void)insertText:(id)fp8;
- (void)setKeyForwardingView:(id)fp8;
- (id)keyForwardingView;
- (void)keyDown:(id)fp8;
- (void)_setAllowsAttachments:(BOOL)fp8;
- (void)_setAllowsInlineImages:(BOOL)fp8;
- (void)setIsChatChat:(BOOL)fp8;
- (void)setAttachmentRecipient:(id)fp8;
- (BOOL)canAttachFile;
- (BOOL)canFileBeAttachedInline:(id)fp8;
- (void)_showAttachErrorSheetWithMessage:(id)fp8;
- (id)nonImageFilesFromFiles:(id)fp8;
- (BOOL)_insertAttachedFile:(id)fp8 isInline:(BOOL)fp12;
- (BOOL)insertAttachedFile:(id)fp8;
- (BOOL)insertAttachedFiles:(id)fp8;
- (id)attachedFileFrom:(id)fp8;
- (void)sendFile:(id)fp8;
- (void)copySelectionToFindPboard:(id)fp8;
- (void)_attachmentChosen:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (BOOL)panel:(id)fp8 isValidFilename:(id)fp12;
- (id)acceptableDragTypes;
- (id)readablePasteboardTypes;
- (void)_getIMHandleURL:(id *)fp8 andText:(id *)fp12 fromPasteboard:(id)fp16;
- (BOOL)readSelectionFromPasteboard:(id)fp8 type:(id)fp12;
- (BOOL)_readSelectionFromPasteboard:(id)fp8 types:(id)fp12;
- (void)_clearParagraphStyle;
- (BOOL)_applyDragAndDropFormatting:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)concludeDragOperation:(id)fp8;
- (id)writablePasteboardTypes;
- (BOOL)writeSelectionToPasteboard:(id)fp8 type:(id)fp12;
- (void)paste:(id)fp8;
- (void)pasteAndMatchStyle:(id)fp8;
- (id)selectedLink_adjustingSelection:(BOOL)fp8;
- (void)applyLinkToSelection:(id)fp8;
- (BOOL)insertLinkAtSelection:(id)fp8 withText:(id)fp12;
- (void)setTypingAttributes:(id)fp8;
- (void)_setTypingAttributesForSelection:(struct _NSRange)fp8;
- (void)_fixAttrsOnSelectionChange:(id)fp8;
- (void)changeDocumentBackgroundColor:(id)fp8;

@end

@interface ChatFieldEditorTextStorage : NSTextStorage
{
    NSMutableAttributedString *_storage;
}

- (id)init;
- (void)dealloc;
- (id)string;
- (id)attributesAtIndex:(unsigned int)fp8 effectiveRange:(struct _NSRange *)fp12;
- (void)replaceCharactersInRange:(struct _NSRange)fp8 withString:(id)fp16;
- (void)setAttributes:(id)fp8 range:(struct _NSRange)fp12;
- (void)fixFontAttributeInRange:(struct _NSRange)fp8;

@end

@interface ChatInputLine : AutoSendTextField
{
    NSButton *_smileyButton;
    Chat *_chat;
}

- (unsigned int)validModesForFontPanel:(id)fp8;
- (void)awakeFromNib;
- (void)dealloc;
- (void)viewDidEndLiveResize;
- (id)_preparedFieldEditor;
- (void)setChat:(id)fp8;
- (id)_chatFieldEditor;
- (void)insertSmiley:(id)fp8;
- (void)pickSmiley:(id)fp8;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (id)accessibilityAttributeValue:(id)fp8;

@end

@interface ChatInputLineCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(NSRect)fp8 inView:(id)fp24;
- (void)editWithFrame:(NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 event:(id)fp36;
- (void)selectWithFrame:(NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 start:(int)fp36 length:(int)fp40;
- (void)_drawFocusRingWithFrame:(NSRect)fp8;

@end

@interface ChatMiniwindowController : NSObject
{
    NSWindow *_window;
    Chat *_chat;
    NSTimer *_miniwindowTimer;
}

- (id)initWithWindow:(id)fp8;
- (void)setWindow:(id)fp8;
- (void)dealloc;
- (id)chat;
- (void)setChat:(id)fp8;
- (void)_updateMiniwindowImage;
- (void)windowDidMiniaturize:(id)fp8;
- (void)windowDidDeminiaturize:(id)fp8;
- (void)_needsDrawFromAnimate:(id)fp8;
- (void)_chatChanged:(id)fp8;

@end

@interface ChatNotifier : Notifier
{
    BOOL _msgsHidden;
    ActiveChat *_chat;
    NSString *_autosaveFrameName;
    ChatController *_controller;
    FezWebView *_realChatView;
    ChatViewController *_realChatViewController;
    NSView *_notifierClipView;
    FezWebView *_notifierChatView;
    ChatViewController *_notifierChatViewController;
    NSRect _originalFrame;
    NSSize _origTranscriptSize;
    BOOL _shouldRestoreSize;
    NSPoint _realMsgFloaterOffset;
    NSRect _messagePreviewRect;
}

+ (NSSize)minChatSizeForScale:(float)fp8;
+ (void)openOnChat:(id)fp8;
+ (void)openOnChat:(id)fp8 silently:(BOOL)fp12;
- (void)dealloc;
- (void)_makeRealWindowMsgRect:(NSRect *)fp8 message:(id)fp12;
- (void)_installChatViewInFrame:(NSRect)fp8 hideMessages:(BOOL)fp24;
- (void)_makeFloaterWindowWithMessageRect:(NSRect)fp8 knockKnock:(BOOL)fp24;
- (void)_sizeWindowsToMessagePreview;
- (id)initWithChat:(id)fp8 silently:(BOOL)fp12;
- (id)initWithChat:(id)fp8;
- (void)disconnectFromChatController:(id)fp8;
- (id)menuItemFormat;
- (void)closeDownShop:(BOOL)fp8;
- (void)updateLockUI;
- (void)_animateRealSizeRestore;
- (void)acceptNotification;
- (void)clearKnockKnock;
- (void)_realWindowDidResize:(id)fp8;
- (void)realWindowHiding;
- (void)realWindowVisible;

@end

@interface ChatTranscriptFinder : NSObject
{
    NSOperationQueue *_opQueue;
    NSArray *_searchScope;
}

+ (id)sharedInstance;
- (id)init;
- (void)dealloc;
- (void)_savedChatPathChanged:(id)fp8;
- (void)_findRecentTranscriptForIMHandle:(id)fp8 notifyChat:(id)fp12 maxMessageLimit:(unsigned int)fp16;
- (void)findRecentTranscriptForIMHandle:(id)fp8 notifyChat:(id)fp12 maxMessageLimit:(unsigned int)fp16;

@end

@interface ChatTranscriptLoader : NSObject
{
    NSOperationQueue *_opQueue;
}

+ (id)sharedInstance;
- (id)init;
- (void)dealloc;
- (void)_loadSavedChats:(id)fp8 notifyChat:(id)fp12 maxMessageLimit:(unsigned int)fp16 deleteWhenDone:(BOOL)fp20;
- (void)loadSavedChats:(id)fp8 notifyChat:(id)fp12 maxMessageLimit:(unsigned int)fp16 deleteWhenDone:(BOOL)fp20;
- (void)loadSavedChatFromPath:(id)fp8 notifyChat:(id)fp12 deleteWhenDone:(BOOL)fp16;

@end

@interface ChatViewHelper : NSObject
{
    ChatViewController *_chatViewController;
}

- (id)initWithChatViewController:(id)fp8;
- (id)chatViewController;

@end

@interface ChatViewBuddyPictureHelper : ChatViewHelper
{
}

- (id)initWithChatViewController:(id)fp8;
- (void)dealloc;
- (void)_personPictureChangedNotification:(id)fp8;
- (void)_personInfoChangedNotification:(id)fp8;

@end

@interface ChatViewController : NSObject
{
    NSMenu *_viewMenu;
    NSTextField *_textField;
    NSMenuItem *_balloonMenuItem;
    Chat *_chat;
    ChatController *_chatController;
    FezWebView *_webView;
    ChatViewDragDestinationHelper *_dragHelper;
    ChatViewTimeFormatHelper *_timeFormatHelper;
    ChatViewBuddyPictureHelper *_buddyPictureHelper;
    ChatViewScrollHelper *_scrollHelper;
    ChatViewDDHelper *_ddHelper;
    ChatViewQLHelper *_qlHelper;
    TranscriptStyleController *_transcriptStyleController;
    Class _transcriptStyleControllerClass;
    int _viewFlags;
    BOOL _pinToBottomOnResize;
    BOOL _needsNewLayout;
    BOOL _isLoading;
    BOOL _canShowMessages;
    id <ShowMessagesDelegate> _showMessagesDelegate;
    BOOL _aboutBlankHandled;
    BOOL _delayScrolling;
    NSMutableArray *_loadingIdentifiers;
    int _changeCount;
    int _changeCountForTranscriptStyleController;
}

+ (void)initialize;
+ (int)flagsToSave;
- (void)_rethrowException:(id)fp8;
- (id)init;
- (void)dealloc;
- (void)_initWebView;
- (void)awakeFromNib;
- (void)invalidate;
- (id)textField;
- (id)webView;
- (void)setWebView:(id)fp8;
- (id)chat;
- (void)setChat:(id)fp8;
- (void)restoreTranscriptRendererFromPrefs;
- (void)restoreTranscriptPrefs;
- (void)finishLoad;
- (void)_setRenderer:(id)fp8;
- (BOOL)changeToNewRenderer:(Class)fp8;
- (id)renderer;
- (void)loadBaseDocument;
- (void)beginChanges;
- (void)endChanges;
- (void)_layoutIfNecessary;
- (void)setNeedsNewLayout:(BOOL)fp8;
- (void)willBecomeVisible;
- (void)willBecomeInvisible;
- (void)restoreSavedScrollPosition:(float)fp8;
- (float)savedScrollPosition;
- (void)scrollFromPosition:(float)fp8 toPosition:(float)fp12 smoothly:(BOOL)fp16;
- (void)scrollToPosition:(float)fp8 smoothly:(BOOL)fp12;
- (void)scrollToEndSmoothly:(BOOL)fp8;
- (void)scrollToBeginningSmoothly:(BOOL)fp8;
- (void)scrollHelperDidFinishScrolling;
- (void)_addInfoBannerMessage:(id)fp8 date:(id)fp12;
- (id)_infoBannerForMessage:(id)fp8;
- (void)addChatInfoBannerForMessage:(id)fp8;
- (void)_syncDeletedMessage;
- (void)_syncDDResultsForMessage:(id)fp8;
- (void)rebuildMessageBodies:(id)fp8;
- (void)_chatMessagesChanged:(id)fp8;
- (void)insertAllMessages;
- (void)clearAllMessages;
- (void)clearDDResults;
- (BOOL)_forwardViewFlagsToRenderer:(int)fp8;
- (void)setViewFlag:(int)fp8 toValue:(BOOL)fp12;
- (void)setViewFlags:(int)fp8;
- (BOOL)isViewFlagOn:(int)fp8;
- (int)viewFlags;
- (void)saveViewFlags;
- (void)reformatOutgoingColors;
- (void)reformatOutgoingFonts;
- (void)watchMessageAddressing;
- (void)reformatOverrideIncoming;
- (void)reformatOverrideIncomingFont;
- (void)reformatOverrideIncomingColors;
- (void)_setShowsPictures:(BOOL)fp8 names:(BOOL)fp12;
- (BOOL)setBackgroundImageFile:(id)fp8;
- (void)restoreDefaultBackground;
- (void)clearUnreadMessageIfVisible;
- (BOOL)lastMessageIsVisible;
- (void)_boundsChanged:(id)fp8;
- (void)addSampleMessage:(id)fp8;
- (void)setSampleChat;
- (NSRect)messagePreviewBounds;
- (NSRect)boundsOfMessage:(id)fp8;
- (BOOL)shouldPinToBottom;
- (BOOL)validateMenuItem:(id)fp8;
- (void)undo:(id)fp8;
- (void)paste:(id)fp8;
- (void)copySelectionToFindPboard:(id)fp8;
- (BOOL)canMakeTextLarger;
- (void)makeTextLarger:(id)fp8;
- (BOOL)canMakeTextSmaller;
- (void)makeTextSmaller:(id)fp8;
- (BOOL)canMakeTextStandardSize;
- (void)makeTextStandardSize:(id)fp8;
- (void)toggleHideSmileys:(id)fp8;
- (void)chooseBackgroundImage:(id)fp8;
- (void)chooseBackgroundImagOpenPanelDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)clearBackground:(id)fp8;
- (void)toggleShowPictures:(id)fp8;
- (void)toggleShowNames:(id)fp8;
- (void)setChatShowsNames:(id)fp8;
- (void)setChatShowsPictures:(id)fp8;
- (void)setChatShowsNamesAndPictures:(id)fp8;
- (void)setTranscriptStyleFromMenuItem:(id)fp8;
- (int)loadCacheCount;
- (void)_increaseResourceLoadCountForURL:(id)fp8;
- (void)_decreaseResourceLoadCountForURL:(id)fp8;
- (id)webView:(id)fp8 identifierForInitialRequest:(id)fp12 fromDataSource:(id)fp16;
- (id)webView:(id)fp8 resource:(id)fp12 willSendRequest:(id)fp16 redirectResponse:(id)fp20 fromDataSource:(id)fp24;
- (void)webView:(id)fp8 resource:(id)fp12 didFailLoadingWithError:(id)fp16 fromDataSource:(id)fp20;
- (void)webView:(id)fp8 resource:(id)fp12 didFinishLoadingFromDataSource:(id)fp16;
- (void)webView:(id)fp8 didFinishLoadForFrame:(id)fp12;
- (BOOL)webView:(id)fp8 doCommandBySelector:(SEL)fp12;
- (void)webView:(id)fp8 willPerformDragSourceAction:(int)fp12 fromPoint:(NSPoint)fp16 withPasteboard:(id)fp24;
- (id)webView:(id)fp8 contextMenuItemsForElement:(id)fp12 defaultMenuItems:(id)fp16;
- (id)webView:(id)fp8 plugInViewWithArguments:(id)fp12;
- (BOOL)webView:(id)fp8 validateUserInterfaceItem:(id)fp12 defaultValidation:(BOOL)fp16;
- (void)fezWebView:(id)fp8 setFrameSize:(NSSize)fp12;
- (void)fezWebViewWillStartLiveResize:(id)fp8;
- (void)fezWebViewDidEndLiveResize:(id)fp8;
- (void)fezWebViewDidMoveToSuperview:(id)fp8;
- (void)fezWebViewRemoveFromSuperview:(id)fp8;
- (void)fezWebViewDidMoveToWindow:(id)fp8;
- (BOOL)fezWebView:(id)fp8 keyDown:(id)fp12;
- (void)fezWebViewShouldRegisterForDraggedTypes:(id)fp8;
- (unsigned int)fezWebView:(id)fp8 draggingEntered:(id)fp12;
- (unsigned int)fezWebView:(id)fp8 draggingUpdated:(id)fp12;
- (void)fezWebView:(id)fp8 draggingExited:(id)fp12;
- (BOOL)fezWebView:(id)fp8 prepareForDragOperation:(id)fp12;
- (BOOL)fezWebView:(id)fp8 performDragOperation:(id)fp12;
- (void)fezWebView:(id)fp8 concludeDragOperation:(id)fp12;
- (id)quicklookPreviewPanelDataSource;
- (void)webView:(id)fp8 decidePolicyForNavigationAction:(id)fp12 request:(id)fp16 frame:(id)fp20 decisionListener:(id)fp24;
- (void)webView:(id)fp8 decidePolicyForNewWindowAction:(id)fp12 request:(id)fp16 newFrameName:(id)fp20 decisionListener:(id)fp24;
- (id)showMessagesDelegate;
- (void)setShowMessagesDelegate:(id)fp8;

@end

@interface ChatViewDDHelper : ChatViewHelper <DDHighlightsDataSource>
{
    DDHighlightsView *_highlightsView;
    NSMutableDictionary *_ddMessageCache;
    NSMutableDictionary *_ddNodeCache;
    NSMutableDictionary *_ddResultCache;
}

- (BOOL)_connectHighlightsView;
- (void)_disconnectHighlightsView;
- (id)initWithChatViewController:(id)fp8;
- (void)dealloc;
- (BOOL)updateConnection;
- (void)resetResults;
- (void)didAddDDResult:(id)fp8 message:(id)fp12 node:(id)fp16 result:(id)fp20;
- (void)didRemoveDDResult:(id)fp8;
- (void)didScroll;
- (void)removeHighlights;
- (void)reloadHighlights;
- (void)hideHighlights;
- (void)recomputeLayout;
- (id)highlightsViewHighlightObjects:(id)fp8;
- (id)highlightsView:(id)fp8 framesOfHighlightObject:(id)fp12;
- (BOOL)highlightsView:(id)fp8 allowsHighlightForObject:(id)fp12;
- (id)highlightsView:(id)fp8 relatedObjectsForObject:(id)fp12;
- (BOOL)highlightsView:(id)fp8 wantsToHandleEvent:(id)fp12 onHighlightObject:(id)fp16;
- (void)highlightsView:(id)fp8 handleEvent:(id)fp12 onHighlightObject:(id)fp16;
- (id)highlightsView:(id)fp8 menuForEvent:(id)fp12 onHighlightObject:(id)fp16;

@end

@interface ChatViewDragDestinationHelper : ChatViewHelper
{
    BOOL _willAddNewInvitees;
    NSMutableArray *_newInvitees;
    BOOL _addIMHandlesToChat;
    BOOL _shouldForwardDragEvent;
}

+ (id)supportedDragTypes;
- (id)editor;
- (BOOL)isSenderFromMyWindow:(id)fp8;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)concludeDragOperation:(id)fp8;
- (BOOL)wantsPeriodicDraggingUpdates;

@end

@interface ChatViewPasteboardHelper : ChatViewHelper
{
}

- (id)_inlineStyleForTextNode:(id)fp8 usingComputedStyle:(id)fp12;
- (BOOL)_generatePasteboardContentFromNode_r:(id)fp8 plaintextBody:(id)fp12 mixedBody:(id)fp16 htmlBody:(id)fp20 foundStart:(char *)fp24 foundEnd:(char *)fp28 range:(id)fp32 depth:(int)fp36 endsWithBreak:(char *)fp40;
- (void)_generatePasteboardContentForRange:(id)fp8 plaintextBody:(id)fp12 mixedBody:(id)fp16 htmlBody:(id)fp20;
- (void)copyDOMRange:(id)fp8 toPasteboard:(id)fp12;

@end

@interface ChatViewQLHelper : ChatViewHelper <QLPreviewPanelDataSource, QLPreviewPanelDelegate>
{
    NSMutableArray *_previewItems;
    QLPreviewPanel *_panel;
}

- (id)initWithChatViewController:(id)fp8;
- (void)dealloc;
- (void)messagesChanged;
- (void)resetMessages;
- (void)addFileTransfersForMessage:(id)fp8;
- (void)removeFileTransfersForMessage:(id)fp8;
- (void)setQuicklookPreviewPanel:(id)fp8;
- (unsigned int)numberOfPreviewItemsInPreviewPanel:(id)fp8;
- (id)previewPanel:(id)fp8 previewItemAtIndex:(unsigned int)fp12;
- (NSRect)previewPanel:(id)fp8 sourceFrameOnScreenForPreviewItem:(id)fp12;

@end

@interface ChatViewQLHelperPreviewItem : NSObject <QLPreviewItem>
{
    ChatViewQLHelper *_helper;
    ReadOnlyInstantMessage *_instantMessage;
    NSDictionary *_attributes;
}

- (id)initWithInstantMessage:(id)fp8 attributes:(id)fp12 helper:(id)fp16;
- (void)dealloc;
- (id)guid;
- (id)instantMessage;
- (id)previewItemURL;
- (NSRect)previewBounds;

@end

@interface ChatViewScrollHelper : ChatViewHelper
{
    Animator *_currentScrollerAnimation;
    float _startingValue;
    float _endingValue;
}

- (id)initWithChatViewController:(id)fp8;
- (void)dealloc;
- (float)scrollPositionForDocumentHeight:(float)fp8 clipRect:(NSRect)fp12;
- (void)setScrollPositionToEnd;
- (void)scrollFromPosition:(float)fp8 toPosition:(float)fp12 smoothly:(BOOL)fp16;
- (BOOL)isScrolling;
- (void)animator:(id)fp8 doStep:(float)fp12 lastStep:(BOOL)fp16;
- (void)scrollToPosition:(float)fp8 smoothly:(BOOL)fp12;
- (void)scrollToEndSmoothly:(BOOL)fp8;
- (void)scrollToBeginningSmoothly:(BOOL)fp8;
- (float)savedScrollPosition;
- (void)restoreSavedScrollPositionFromNumber:(id)fp8;
- (void)restoreSavedScrollPosition:(float)fp8;

@end

@interface ChatViewTimeFormatHelper : ChatViewHelper
{
    NSTimer *_dailyRebuildTimer;
}

+ (id)midnight;
- (id)initWithChatViewController:(id)fp8;
- (void)dealloc;
- (void)clear;
- (void)reset;
- (void)dateDisplayChanged;
- (void)_dateDisplayChanged:(id)fp8;
- (void)_dateOrTimeFormatsChanged:(id)fp8;

@end

@interface ChatWindowController : NSWindowController <NSTableViewDelegate, NSTabViewDelegate, NSSplitViewDelegate, QLPreviewPanelDelegate, QLPreviewPanelDataSource>
{
    AnimatingTabView *_chatTabView;
    NSExtendedBox *_chatListTitle;
    AnimatingTableView *_chatTable;
    NSView *_chatViewContainer;
    NSButton *_choosePersonButton;
    ExtendedSplitView *_splitView;
    NSMenu *_tabContextMenu;
    MenuButton *_actionButton;
    NSTimer *_chatAnimationTimer;
    float _animationStep;
    NSTimer *_blinkChatsTimer;
    float _blinkProgress;
    ChatMiniwindowController *_miniwindowController;
    NSMutableArray *_chatAnimationProgresses;
    NSMutableArray *_lastReadMessage;
    NSMutableArray *_chats;
    NSMutableArray *_chatControllers;
    int _coalesceCount;
    BOOL _animateWhenEnded;
    BOOL _pendingResort;
    BOOL _pendingUpdateNumber;
    BOOL _pendingSync;
    BOOL _closing;
    BOOL _dontResizeWindowNextSidebarChange;
    NSRect _frameToResurrect;
    NSMutableSet *_savedSelection;
    struct CGAffineTransform _finalXform;
    NSTimer *_notifierAnimationTimer;
    NSDate *_notifierStartTime;
    float _notifierAnimationTime;
    NSWindow *_notifierWindow;
    NSRect _targetRect;
    NSRect _startRect;
    int _targetNotifierRow;
    NSWindow *_secondaryNotifierWindow;
    NSTimer *_sidebarAnimationTimer;
    NSDate *_sidebarStartTime;
    BOOL _expandSidebar;
    BOOL _wasSidebarVisibleWhenNotifierAnimationStarted;
    BOOL _shouldChangeSidebarWidth;
    NSRect _savedRect;
    NSPrintOperation *_printingOperation;
    QLPreviewPanel *_previewPanel;
    id /*<QLPreviewPanelDelegate><QLPreviewPanelDataSource>*/ _previewPanelDataSource;
}

+ (BOOL)wantsCollectedChats;
+ (void)registerChatWindowController:(id)fp8;
+ (void)unregisterChatWindowController:(id)fp8;
+ (id)allChatWindowControllers;
+ (unsigned int)openTabbedChatWindows;
+ (id)existingChatWithIMHandle:(id)fp8;
+ (id)chatWindowControllerSuitableForAddingChat:(id)fp8;
+ (void)openChat:(id)fp8;
+ (void)displayChat:(id)fp8;
+ (void)displayChat:(id)fp8 fromNotifierWindow:(id)fp12;
+ (id)displayChatForIMHandle:(id)fp8 style:(int)fp12;
+ (id)visibleChatToHookUpWithIMHandle:(id)fp8;
+ (id)visibleChatWithID:(id)fp8;
+ (id)createUIForChat:(id)fp8;
+ (id)createChatWindowWithIMHandles:(id)fp8 style:(int)fp12;
+ (BOOL)canCollectChat:(id)fp8;
- (id)init;
- (void)cleanUp;
- (void)dealloc;
- (void)windowDidLoad;
- (NSRect)windowWillUseStandardFrame:(id)fp8 defaultFrame:(NSRect)fp12;
- (void)_setNotifierWindowProgress:(float)fp8;
- (void)_installSnapshotOfNotifierIntoWindow:(id)fp8;
- (void)stepNotifierAnimation:(id)fp8;
- (void)_startNotifierAnimationTimer;
- (void)animateNotifierWindowToRect:(NSRect)fp8;
- (void)showWindow:(id)fp8;
- (int)activeNotifierTargetRow;
- (void)_getIMHandles:(id *)fp8 andGroups:(id *)fp12 fromPasteboard:(id)fp16 allowDuplicates:(BOOL)fp20;
- (id)tableView:(id)fp8 cellTipForRow:(int)fp12;
- (id)_imHandlePropertyListArrayForRows:(id)fp8;
- (BOOL)tableView:(id)fp8 writeRowsWithIndexes:(id)fp12 toPasteboard:(id)fp16;
- (unsigned int)tableView:(id)fp8 validateDrop:(id)fp12 proposedRow:(int)fp16 proposedDropOperation:(unsigned int)fp20;
- (BOOL)tableView:(id)fp8 acceptDrop:(id)fp12 row:(int)fp16 dropOperation:(unsigned int)fp20;
- (BOOL)tableView:(id)fp8 shouldDrawWhenMovingFrom:(NSPoint)fp12 toPoint:(NSPoint)fp20;
- (BOOL)_mouseInButtons:(id)fp8 trackMouse:(BOOL)fp12;
- (BOOL)tableView:(id)fp8 mouseDown:(id)fp12;
- (void)setResurrectedFrame:(NSRect)fp8;
- (void)dontResizeWindowNextSidebarChange;
- (void)_sidebarAnimationWillStart;
- (void)_sidebarAnimationDidFinish;
- (BOOL)isInSmallMode;
- (NSRect)fullSidebarFrame;
- (BOOL)isSidebarAnimating;
- (BOOL)isSidebarVisible;
- (void)_setSidebarVisiblePercent:(float)fp8;
- (void)stepSidebarAnimation:(id)fp8;
- (void)_startSidebarAnimationTimer;
- (void)_clearCurrentPosition;
- (void)_saveCurrentPosition;
- (NSRect)_rectAdjustingForSavedPositionWithRect:(NSRect)fp8;
- (void)showSidebar:(id)fp8;
- (void)hideSidebar:(id)fp8;
- (void)_forgetSelection;
- (void)_rememberSelection;
- (void)_restoreSelection;
- (void)_resortNow;
- (void)_resort;
- (void)beginChangesNoAnimation;
- (void)beginChanges;
- (void)endChanges;
- (BOOL)makingChanges;
- (NSRect)splitView:(id)fp8 effectiveRect:(NSRect)fp12 forDrawnRect:(NSRect)fp28 ofDividerAtIndex:(int)fp44;
- (void)_showCellTipsIfNecessary;
- (void)_fixMinWidthForSplitView;
- (void)splitView:(id)fp8 resizeSubviewsWithOldSize:(NSSize)fp12;
- (float)splitView:(id)fp8 constrainMinCoordinate:(float)fp12 ofSubviewAt:(int)fp16;
- (float)splitView:(id)fp8 constrainMaxCoordinate:(float)fp12 ofSubviewAt:(int)fp16;
- (void)splitViewWillResizeSubviews:(id)fp8;
- (void)splitViewDidResizeSubviews:(id)fp8;
- (BOOL)splitView:(id)fp8 canCollapseSubview:(id)fp12;
- (void)sizeToFitForSplitView:(id)fp8;
- (float)splitView:(id)fp8 constrainSplitPosition:(float)fp12 ofSubviewAt:(int)fp16;
- (id)targetViewForCustomSavingWindow:(id)fp8;
- (BOOL)shouldSaveFrameForWindow:(id)fp8;
- (BOOL)isNotifier;
- (id)controllerForChat:(id)fp8;
- (id)currentChat;
- (id)currentChatController;
- (id)_contextChat;
- (id)_contextChatController;
- (id)chats;
- (int)numberOfUnreadMessages;
- (int)numberOfChats;
- (id)chatAtIndex:(int)fp8;
- (id)tableView:(id)fp8 objectValueForRow:(int)fp12;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableViewSelectionDidChange:(id)fp8;
- (BOOL)containsChat:(id)fp8;
- (BOOL)canCollectChat:(id)fp8;
- (void)windowDidDeminiaturize:(id)fp8;
- (void)windowDidExpose:(id)fp8;
- (void)windowDidMove:(id)fp8;
- (void)windowDidResize:(id)fp8;
- (void)windowDidResignMain:(id)fp8;
- (void)windowDidResignKey:(id)fp8;
- (void)windowDidBecomeMain:(id)fp8;
- (void)windowShouldCloseForUnsentAlertDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)windowShouldCloseAlertDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (id)_alertTextForUnreadMessages:(int)fp8;
- (BOOL)windowShouldClose:(id)fp8;
- (void)windowDidBecomeKey:(id)fp8;
- (void)cancelActiveNotifierAnimations;
- (void)windowWillClose:(id)fp8;
- (BOOL)_moveChatFromIndex:(unsigned int)fp8 toIndex:(unsigned int)fp12;
- (void)_synchronizeChatAndTableForced:(BOOL)fp8;
- (void)selectChat:(id)fp8;
- (void)_updateDisplayName;
- (void)_reallyUpdateNumberOfChats;
- (void)_updateNumberOfChats;
- (void)addChatInvite:(id)fp8 withNotifierWindow:(id)fp12;
- (void)addChat:(id)fp8 atIndex:(int)fp12 withController:(id)fp16;
- (void)addChat:(id)fp8 atIndex:(int)fp12;
- (void)addChat:(id)fp8;
- (void)addChat:(id)fp8 withController:(id)fp12;
- (void)removeChat:(id)fp8;
- (void)tabShouldCloseAlertDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_closeChatAfterVerification:(id)fp8;
- (void)closeHighlightedTabItem;
- (void)closeChat:(id)fp8;
- (void)closeCurrentChat:(id)fp8;
- (void)displayChat:(id)fp8;
- (id)visibleChatWithID:(id)fp8;
- (id)visibleChatToHookUpWithIMHandle:(id)fp8;
- (id)visibleChatToHookUpWithIMHandles:(id)fp8;
- (void)_chatAddedToList:(id)fp8;
- (void)_chatRemovedFromList:(id)fp8;
- (void)_chatOverallStatusChanged:(id)fp8;
- (void)_chatUnreadStatusChanged:(id)fp8;
- (void)_chatStatusChanged:(id)fp8;
- (void)_chatMembersChanged:(id)fp8;
- (void)_personChanged:(id)fp8;
- (id)windowWillReturnFieldEditor:(id)fp8 toObject:(id)fp12;
- (id)windowWillReturnUndoManager:(id)fp8;
- (void)_updateSelectedRow;
- (BOOL)chatIsRecent:(id)fp8;
- (id)drawMessageForChat:(id)fp8;
- (BOOL)chatIsPulsing:(id)fp8;
- (float)pulseProgressForChat:(id)fp8;
- (BOOL)chatIsAnimating:(id)fp8;
- (float)animationProgressForChat:(id)fp8;
- (void)_clearAnimationTimer;
- (void)_setAnimationTimer;
- (void)_checkAnimationTimer;
- (void)_animateChats:(id)fp8;
- (void)selectChatAction:(id)fp8;
- (id)displayNewChatWithIMHandles:(id)fp8 style:(int)fp12;
- (void)choosePerson:(id)fp8;
- (void)_moveSelectedChatIndex:(int)fp8;
- (void)gotoNextChat:(id)fp8;
- (void)gotoPreviousChat:(id)fp8;
- (void)swipeWithEvent:(id)fp8;
- (void)saveDocumentTo:(id)fp8;
- (void)toggleParticipants:(id)fp8;
- (void)toggleHidePictures:(id)fp8;
- (void)toggleHideAudioStatus:(id)fp8;
- (void)toggleHideVideoStatus:(id)fp8;
- (void)sortByStatus:(id)fp8;
- (void)sortByFirstName:(id)fp8;
- (void)sortByLastName:(id)fp8;
- (void)addLink:(id)fp8;
- (void)sendSMS:(id)fp8;
- (void)addABuddy:(id)fp8;
- (void)deleteSelectedBuddies:(id)fp8;
- (void)composeEMail:(id)fp8;
- (void)sendFile:(id)fp8;
- (void)attachFile:(id)fp8;
- (void)insertSmiley:(id)fp8;
- (void)setTranscriptStyleFromMenuItem:(id)fp8;
- (void)toggleHideSmileys:(id)fp8;
- (void)chooseBackgroundImage:(id)fp8;
- (void)clearTranscript:(id)fp8;
- (void)markTranscript:(id)fp8;
- (void)clearBackground:(id)fp8;
- (void)toggleShowNames:(id)fp8;
- (void)toggleRecipientBar:(id)fp8;
- (void)toggleShowPictures:(id)fp8;
- (void)setChatShowsNames:(id)fp8;
- (void)setChatShowsPictures:(id)fp8;
- (void)setChatShowsNamesAndPictures:(id)fp8;
- (void)makeTextBigger:(id)fp8;
- (void)makeTextStandardSize:(id)fp8;
- (void)makeTextSmaller:(id)fp8;
- (void)ignore:(id)fp8;
- (void)toggleQuietMode:(id)fp8;
- (void)showFindPanel:(id)fp8;
- (void)findNext:(id)fp8;
- (void)findPrevious:(id)fp8;
- (void)copySelectionToFindPboard:(id)fp8;
- (void)inviteToVideoChat:(id)fp8;
- (void)inviteToAudioChat:(id)fp8;
- (void)cancelARDSession:(id)fp8;
- (void)inviteToARDAsClient:(id)fp8;
- (void)inviteToARDAsServer:(id)fp8;
- (void)block:(id)fp8;
- (void)showInAddressBook:(id)fp8;
- (void)showInBuddyList:(id)fp8;
- (void)showSelectedBuddyInfo:(id)fp8;
- (void)showSelectedBuddyProfile:(id)fp8;
- (void)requestValidation:(id)fp8;
- (void)searchInSpotlight:(id)fp8;
- (void)closeTab:(id)fp8;
- (void)otherChatsShouldCloseForUnsentAlertDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)closeOtherTabs:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)quickLook:(id)fp8;
- (BOOL)acceptsPreviewPanelControl:(id)fp8;
- (void)_updateQuickLookPreviewPanel;
- (void)beginPreviewPanelControl:(id)fp8;
- (void)endPreviewPanelControl:(id)fp8;
- (int)numberOfPreviewItemsInPreviewPanel:(id)fp8;
- (id)previewPanel:(id)fp8 previewItemAtIndex:(int)fp12;
- (NSRect)previewPanel:(id)fp8 sourceFrameOnScreenForPreviewItem:(id)fp12;
- (void)printOperationDidRun:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)printDocument:(id)fp8;
- (void)tabView:(id)fp8 willSwitchFromTab:(int)fp12 toTab:(int)fp16 effect:(int *)fp20 direction:(int *)fp24;
- (void)_needsDrawFromAnimate:(id)fp8;

@end

@interface MenuButton : NSButton
{
    NSPopUpButtonCell *_popUpCell;
    NSString *_axDescription;
    BOOL _overlayStyle;
}

- (void)dealloc;
- (void)setUsesMenu:(BOOL)fp8;
- (BOOL)usesMenu;
- (void)runPopUpInFrame:(NSRect)fp8 ofView:(id)fp24;
- (BOOL)_runPopUp;
- (BOOL)sendAction:(SEL)fp8 to:(id)fp12;
- (void)mouseDown:(id)fp8;
- (void)rightMouseDown:(id)fp8;
- (void)performClick:(id)fp8;
- (void)setAccessibilityDescription:(id)fp8;
- (id)accessibilityDescriptionAttribute;
- (id)accessibilityAttributeNames;
- (void)setOverlayStyle:(BOOL)fp8;
- (BOOL)isOverlayStyle;
- (void)drawRect:(NSRect)fp8;

@end

@interface ChooseBuddyButton : MenuButton
{
    Account *_account;
    int _buddiesShown;
    IMHandle *_selectedIMHandle;
    BOOL _registered;
    BOOL _menuIsValid;
    NSArray *_cachedPresentites;
    NSWindow *_customIDSheet;
    ExtendedComboBox *_customIDText;
    NSButton *_customIDOK;
    ServicePopUp *_customIDService;
}

- (void)awakeFromNib;
- (void)dealloc;
- (id)account;
- (void)setAccount:(id)fp8;
- (id)selectedIMHandle;
- (void)_registerForNotifications;
- (void)_invalidateMenu:(id)fp8;
- (id)_addItemForIMHandle:(id)fp8 toMenu:(id)fp12 showingDetails:(BOOL)fp16;
- (id)_addItemForEmptyList;
- (id)_addItemForAccount:(id)fp8 atTop:(BOOL)fp12;
- (void)_loadChooseIDNibIfNecessary;
- (void)_rebuildBuddyMenu;
- (BOOL)validateMenuItem:(id)fp8;
- (void)_recacheIMHandleInformation;
- (void)windowDidBecomeMain:(id)fp8;
- (int)numberOfItemsInComboBox:(id)fp8;
- (id)comboBox:(id)fp8 objectValueForItemAtIndex:(int)fp12;
- (unsigned int)comboBox:(id)fp8 indexOfItemWithStringValue:(id)fp12;
- (id)comboBox:(id)fp8 completedString:(id)fp12;
- (void)invalidateMenu;
- (void)runPopUpInFrame:(NSRect)fp8 ofView:(id)fp24;
- (void)_selectIMHandle:(id)fp8;
- (void)_personSelected:(id)fp8;
- (void)chooseCustomID:(id)fp8;
- (void)customIDServiceSelected:(id)fp8;
- (void)selectedAccountStatusChanged:(id)fp8;
- (void)windowDidUpdate:(id)fp8;
- (void)acceptCustomID:(id)fp8;
- (void)cancelCustomID:(id)fp8;
- (void)_chooseIDDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (int)buddiesShown;
- (void)setBuddiesShown:(int)fp8;

@end

@interface CollapseView : NSClipView
{
    float _expandedHeight;
}

- (id)initWithFrame:(NSRect)fp8;
- (void)awakeFromNib;
- (BOOL)isCollapsed;
- (id)_highestAncestor:(id)fp8;
- (void)_resizeWindowToFrame:(NSRect)fp8 animate:(BOOL)fp24;
- (void)collapse:(BOOL)fp8;
- (void)collapse:(BOOL)fp8 animate:(BOOL)fp12;
- (void)toggleCollapsed:(id)fp8;
- (void)takeStateFromSender:(id)fp8;

@end

@interface CompositionList : QCPlugIn
{
    NSMutableArray *_effectsArray;
    NSMutableArray *_pageList;
    unsigned int _pageIndex;
    unsigned int _previousIndex;
    NSDictionary *_normalDesc;
    BOOL _updateOutput;
}

+ (int)executionMode;
+ (int)timeMode;
+ (id)attributes;
- (id)init;
- (void)dealloc;
- (void)_repositoryUpdated;
- (void)_loadAllEffects;
- (void)_rebuildBankList;
- (BOOL)startExecution:(id)fp8;
- (void)enableExecution:(id)fp8;
- (BOOL)execute:(id)fp8 atTime:(double)fp12 withArguments:(id)fp20;

@end

@interface ConfigKeyEditor : NSTextView
{
    id _master;
    NSNumber *_virtualKey;
    unsigned int _modifiers;
    id _textField;
    BOOL _operationModeEnabled;
    unsigned int _savedHotKeyOperatingMode;
}

- (void)_disableHotKeyOperationMode;
- (void)_restoreHotKeyOperationMode;
- (void)_windowDidBecomeKeyNotification:(id)fp8;
- (void)_windowDidResignKeyNotification:(id)fp8;
- (id)initConfigKeyEditorWithMaster:(id)fp8;
- (void)dealloc;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)mouseDown:(id)fp8;
- (void)keyDown:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (BOOL)performKeyEquivalent:(id)fp8;
- (id)key;
- (id)modifier;
- (id)textField;
- (void)setTextField:(id)fp8;

@end

@interface CoreGraphicsUtilities : NSObject
{
}

+ (struct CGImage *)CGImageFromNSBitmapImageRep:(id)fp8;
+ (struct CGImage *)CGImageFromNSImage:(id)fp8;

@end

@interface CustomImageView : NSImageView
{
}

- (void)mouseDown:(id)fp8;

@end

@interface CustomMessageTableView : FezExtendedTableView
{
}

- (void)_userSelectTextOfNextCellInSameColumn;

@end

@interface CustomWindow : SecureWindow
{
    Notifier *_notifier;
    BOOL _blackNotifier;
    NSMutableArray *_keyDownQueue;
    BOOL _useClientDragging;
}

- (void)setBlackNotifier:(BOOL)fp8;
- (BOOL)blackNotifier;
- (void)setWindowLevel;
- (void)setTitle:(id)fp8;
- (void)setNotifier:(id)fp8;
- (void)moveWindow:(id)fp8;
- (void)sendEvent:(id)fp8;

@end

@interface DaemonListenerStub : NSObject
{
}

- (oneway void)invitedToChat:(id)fp8 isChatRoom:(BOOL)fp12 invitation:(id)fp16;
- (oneway void)account:(id)fp8 directIMRequestFrom:(id)fp12 invitation:(id)fp16;
- (oneway void)chat:(id)fp8 statusChanged:(int)fp12;
- (oneway void)chat:(id)fp8 messageReceived:(id)fp12;
- (oneway void)chat:(id)fp8 showError:(id)fp12;
- (oneway void)chat:(id)fp8 member:(id)fp12 statusChanged:(int)fp16;
- (oneway void)account:(id)fp8 invitedToVC:(id)fp12 properties:(id)fp16;
- (oneway void)account:(id)fp8 responseToVCRequest:(id)fp12 properties:(id)fp16;
- (oneway void)account:(id)fp8 cancelVCInviteFrom:(id)fp12;
- (oneway void)account:(id)fp8 counterProposalFrom:(id)fp12 properties:(id)fp16;
- (oneway void)account:(id)fp8 updateVCFrom:(id)fp12 data:(id)fp16;
- (oneway void)account:(id)fp8 handleAVMessage:(id)fp12 sessionID:(unsigned int)fp16 type:(unsigned int)fp20 userInfo:(id)fp24;
- (oneway void)showInvalidCertNotificationForAccount:(id)fp8;
- (oneway void)showForgotPasswordNotificationForAccount:(id)fp8;
- (oneway void)daemonPersistentProperty:(id)fp8 changedTo:(id)fp12;
- (oneway void)currentAVChatInfoRequestedWithTransactionID:(unsigned int)fp8;
- (oneway void)audioReflectorRequested:(BOOL)fp8 transactionID:(unsigned int)fp12;
- (oneway void)videoStillForPersonRequested:(id)fp8 withTransactionID:(unsigned int)fp12;
- (oneway void)vcCapabilitiesChanged:(unsigned long long)fp8;
- (oneway void)setupComplete;
- (void)myPictureDataChanged:(id)fp8;

@end

@interface DefaultApplicationPopUpButton : NSPopUpButton
{
    NSURL *_appURL;
    int _index;
    NSArray *_schemes;
}

- (id)mainScheme;
- (void)setHandler:(id)fp8 forScheme:(id)fp12;
- (id)imageForURL:(id)fp8;
- (int)addItemToPopup:(id)fp8;
- (void)populateSchemeHandlerPopupWithURL:(id)fp8;
- (id)copyDefaultURLForScheme:(id)fp8;
- (void)selectDefaultMailClientAtIndex:(int)fp8;
- (void)selectItemInPopup:(id)fp8;
- (void)setNewApplication;
- (void)selectNewAppSelected:(id)fp8;
- (void)sheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)configurePopUpForURLSchemes:(id)fp8 usingExampleURLString:(id)fp12;

@end

@interface DisclosureButton : NSButton
{
}

- (void)awakeFromNib;

@end

@interface DotMacCertHelper : NSObject
{
}

+ (int)dotMacCertRequestStatusForUser:(id)fp8;
+ (int)requestDotMacIdentityCertForUser:(id)fp8 remainingTime:(int *)fp12;
+ (int)renewDotMacIdentityForUser:(id)fp8 remainingTime:(int *)fp12;
+ (BOOL)certificateIsPresentForUser:(id)fp8;
+ (struct OpaqueSecCertificateRef *)copyCertificateForLocalDotMacAccount:(id)fp8;
+ (struct OpaqueSecIdentityRef *)copyIdentityForLocalDotMacAccount:(id)fp8;
+ (BOOL)dotMacAccountNeedsRenewal:(id)fp8;
+ (int)installIntermediateInKeychain:(id)fp8;
+ (BOOL)hasPendingRequestsForUser:(id)fp8;

@end

@interface EffectView : NSView
{
    NSImage *_startImage;
    NSImage *_endImage;
    NSDate *_startTime;
    double _effectTime;
    int _effect;
    int _direction;
    float _prevProgress;
    BOOL _manuallyInvalidate;
}

- (id)initWithFrame:(NSRect)fp8 startImage:(id)fp24 endImage:(id)fp28;
- (void)dealloc;
- (void)doEffect:(int)fp8 direction:(int)fp12 time:(double)fp16;
- (void)_doFadeEffect:(float)fp8 inRect:(NSRect)fp12;
- (void)_doSlideEffect:(float)fp8 inRect:(NSRect)fp12 moveOld:(BOOL)fp28 moveNew:(BOOL)fp32;
- (void)_doZoomEffect:(float)fp8 inRect:(NSRect)fp12 scale:(BOOL)fp28;
- (void)_doSplitEffect:(float)fp8 inRect:(NSRect)fp12 horiz:(BOOL)fp28 wipe:(BOOL)fp32;
- (void)_setNeedsDisplay;
- (void)drawRect:(NSRect)fp8;
- (void)setManualInvalidation:(BOOL)fp8;
- (BOOL)doingEffect;
- (void)stopEffect;

@end

@interface EffectsPickerController : NSObject <FrameListener>
{
    QCCompositionPickerPanel *_picker;
    Texture *_texture;
    BOOL _isRunning;
    double _lastDeliveredFrameTime;
    unsigned int _maxFPS;
}

+ (void)showEffectsPanel;
+ (void)hideEffectsPanel;
+ (BOOL)isVisible;
- (id)init;
- (void)dealloc;
- (void)setMaxFPS:(unsigned int)fp8;
- (unsigned int)maxFPS;
- (void)startVideo;
- (void)stopVideo;
- (BOOL)isVisible;
- (void)_didEndFullScreen:(id)fp8;
- (void)showEffectsPanel;
- (void)hideEffectsPanel;
- (void)frameNotifier:(id)fp8 postedNewFrame:(id)fp12 fromSource:(id)fp16;
- (void)windowDidBecomeKey:(id)fp8;
- (void)windowDidResignKey:(id)fp8;
- (void)windowWillClose:(id)fp8;
- (void)windowDidExpose:(id)fp8;
- (id)_setPosterFrameForFile:(id)fp8 composition:(id)fp12;
- (id)_posterFrameForFile:(id)fp8 composition:(id)fp12;
- (void)_compositionBackdropChanged:(id)fp8;
- (void)compositionPickerView:(id)fp8 didSelectComposition:(id)fp12;
- (void)compositionPickerView:(id)fp8 didLoadComposition:(id)fp12;
- (void)compositionPickerView:(id)fp8 willSelectComposition:(id)fp12;
- (unsigned int)compositionPickerView:(id)fp8 draggingEnteredComposition:(id)fp12 sender:(id)fp16;
- (BOOL)compositionPickerView:(id)fp8 performDragOperationOnComposition:(id)fp12 sender:(id)fp16;
- (BOOL)compositionPickerView:(id)fp8 keyDown:(id)fp12;

@end

@interface EffectsPickerImageCache : NSObject
{
}

+ (id)sharedInstance;
+ (id)_cachePath;
- (BOOL)imageExistsForKey:(id)fp8;
- (id)imageForKey:(id)fp8;
- (void)setImage:(id)fp8 forKey:(id)fp12;
- (void)cleanCacheExceptForKeys:(id)fp8;
- (void)removeImageForKey:(id)fp8;

@end

@interface EncryptionAssistantController : NSObject
{
    NSWindow *_certAsstWindow;
    NSButton *_goBackButton;
    NSButton *_continueButton;
    NSButton *_learnMoreButton;
    NSTabView *_tabView;
    NSTabViewItem *_contactingTab;
    NSProgressIndicator *_contactingDotmacSpinner;
    NSTextField *_contactingDotmacText;
    NSTabViewItem *_encryptionTab;
    NSButton *_useCertCheckbox;
    NSTabViewItem *_finishTab;
    NSTextField *_doneText;
    NSImageView *_donePic;
    NSTextField *_currentTitle;
    NSString *_resultTitle;
    NSString *_aimAccount;
    NSString *_password;
    BOOL _disableGoBack;
    BOOL _showRevokeButton;
    NSTabViewItem *_firstTab;
    AIMAccount *_aimAccountObject;
    BOOL _showServerProcessingText;
    BOOL _showEncryptionActiveText;
}

+ (id)openForAIMAccount:(id)fp8;
+ (void)showCertFailedWithDictionary:(id)fp8;
+ (void)showCertFailedAlertForAccount:(id)fp8 withTitle:(id)fp12 andError:(id)fp16;
+ (void)checkCertExpirationForAccount:(id)fp8;
- (id)account;
- (void)_showWindow;
- (void)dealloc;
- (void)_updateTitle;
- (void)_setConclusionTitle:(id)fp8;
- (void)_updateContinueDone:(BOOL)fp8;
- (void)awakeFromNib;
- (id)initWithAIMAccount:(id)fp8;
- (void)tabView:(id)fp8 willSelectTabViewItem:(id)fp12;
- (void)tabView:(id)fp8 didSelectTabViewItem:(id)fp12;
- (void)goBack:(id)fp8;
- (void)continueDone:(id)fp8;
- (void)revokeCertificate:(id)fp8;
- (void)tellMeMore:(id)fp8;
- (void)_finishedGettingCertStatus:(id)fp8;
- (void)_retrieveDotMacCertWithPassword:(id)fp8;

@end

@interface EncryptionExampleView : NSImageView
{
    NSTextFieldCell *_titleCell;
    NSTextFieldCell *_headerCell;
}

- (void)_commonInit;
- (id)initWithFrame:(NSRect)fp8;
- (void)awakeFromNib;
- (void)dealloc;
- (void)drawRect:(NSRect)fp8;

@end

@interface ErrorReport : NSObject
{
    NSMutableString *_fullReport;
}

- (id)initWithDescription:(id)fp8;
- (void)dealloc;
- (id)fullReport;
- (void)_threadedSubmitProblemReport:(struct __CFDictionary *)fp8;
- (void)send;

@end

@interface ErrorReporterController : NSObject <NSWindowDelegate>
{
    NSWindow *_errorReporterSheet;
    NSTextField *_textualDescription;
    NSTextView *_errorLogTextView;
    NSTextView *_supportTextView;
    NSButton *_sendButton;
    NSButton *_dontSendButton;
    NSButton *_revealButton;
    NSBox *_revealBox;
    AVChatController *_chatController;
    NSInvocation *_endingCallback;
    BOOL _displayedAsSheet;
    BOOL _revealBoxShown;
    float _fullSizeFrameAdditionalHeight;
    float _minWidth;
    float _largeSizeMinHeight;
    ErrorReport *_errorReport;
}

+ (void)presentErrorReporterForChatController:(id)fp8 asSheet:(BOOL)fp12 thenInvoke:(id)fp16;
- (id)initForAVChatController:(id)fp8 asSheet:(BOOL)fp12 thenInvoke:(id)fp16;
- (void)_setupSupportString;
- (void)_setupErrorReport;
- (void)sendToApple:(id)fp8;
- (void)dontSendToApple:(id)fp8;
- (void)_hideRevealBox;
- (void)_showRevealBox;
- (void)revealButtonPressed:(id)fp8;
- (void)_sheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)dealloc;

@end

@interface ExtendedComboBox : NSComboBox
{
    BOOL _allowsLineBreaks;
    BOOL _passesReturnKey;
    BOOL _allowsRichText;
    ServicePopUp *_servicePopUp;
    NSString *_prefKey;
    BOOL _autoFilled;
    NSString *_suffix;
    id _returnDelegate;
}

- (id)init;
- (void)_installCustomCell;
- (void)dealloc;
- (BOOL)passesReturnEvent;
- (void)setPassesReturnEvent:(BOOL)fp8;
- (void)setReturnDelegate:(id)fp8;
- (void)setAllowsLineBreaks:(BOOL)fp8;
- (BOOL)allowsLineBreaks;
- (void)setAllowsRichText:(BOOL)fp8;
- (BOOL)allowsRichText;
- (void)keyDown:(id)fp8;
- (id)_suffixAttributes;
- (void)setSuffix:(id)fp8;
- (id)suffix;
- (BOOL)textView:(id)fp8 doCommandBySelector:(SEL)fp12;
- (void)textDidChange:(id)fp8;
- (struct _NSRange)textView:(id)fp8 willChangeSelectionFromCharacterRange:(struct _NSRange)fp12 toCharacterRange:(struct _NSRange)fp20;
- (void)setStringValue:(id)fp8;
- (BOOL)isPopUpButtonVisible;
- (void)setPopUpButtonVisible:(BOOL)fp8;
- (void)setObjectValue:(id)fp8;
- (BOOL)isAutoFilled;
- (void)setAutoFilled:(BOOL)fp8;
- (void)updateNumberOfVisibleItems;
- (id)_prefKey;
- (void)setRecentsListPrefKey:(id)fp8;
- (id)recentsListPrefKey;
- (void)loadLastRecentValue;
- (void)updateRecentsList;
- (void)saveRecentsList;
- (void)textDidEndEditing:(id)fp8;
- (BOOL)becomeFirstResponder;

@end

@interface ExtendedProgressIndicator : NSProgressIndicator
{
    NSMutableDictionary *_attributes;
    BOOL _attributesSet;
    NSTimer *_timer2;
}

- (id)initWithFrame:(NSRect)fp8;
- (void)_invalidateTimer;
- (void)dealloc;
- (void)updateProgress:(id)fp8;
- (void)_enableCUIprogress:(BOOL)fp8;
- (void)drawRect:(NSRect)fp8;

@end

@interface ExtendedSlider : NSSlider
{
    StretchyImageView *_backgroundImage;
}

- (void)awakeFromNib;
- (void)setEnabled:(BOOL)fp8;

@end

@interface ExtendedSliderCell : NSSliderCell
{
    NSImage *_knobImage;
    NSImage *_knobDownImage;
    NSRect _knobSourceRect;
}

- (id)init;
- (void)dealloc;
- (void)drawKnob:(NSRect)fp8;
- (void)_drawTickMarks;
- (void)drawWithFrame:(NSRect)fp8 inView:(id)fp24;

@end

@interface ExtendedSplitView : NSSplitView
{
    NSString *_autosaveName;
    int _savedSplitPosition;
    int _minSavedSplitPosition;
}

+ (id)_keyForSavingSplitviewWithName:(id)fp8;
- (id)initWithFrame:(NSRect)fp8;
- (void)setMinSavedSplitPosition:(int)fp8;
- (int)minSavedSplitPosition;
- (void)_rememberSavedSplitViewPosition;
- (void)_setPositionFromAutosaveName;
- (void)rememberCurrentSplitPosition;
- (int)savedSplitPosition;
- (void)setSavedSplitPosition:(int)fp8;
- (int)splitPosition;
- (void)setSplitPosition:(int)fp8;
- (id)autosaveName;
- (void)setAutosaveName:(id)fp8;
- (void)adjustSubviews;
- (float)dividerThickness;
- (void)drawDividerInRect:(NSRect)fp8;
- (BOOL)isOpaque;
- (id)accessibilityAttributeValue:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)sizeToFitContents;

@end

@interface ExtendedSplitViewGrabber : NSView
{
    ExtendedSplitView *_splitView;
    NSPoint _startPoint;
    NSRect _startFrame;
}

- (id)initWithFrame:(NSRect)fp8;
- (void)drawRect:(NSRect)fp8;
- (void)setSplitView:(id)fp8;
- (BOOL)mouseDownCanMoveWindow;
- (BOOL)prepareForDragOperation:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)mouseUp:(id)fp8;
- (void)resetCursorRects;
- (void)mouseDragged:(id)fp8;

@end

@interface ExtendedTextField : NSTextField
{
    BOOL _allowsLineBreaks;
    NSString *_suffix;
    BOOL _autoFilled;
    BOOL _allowsRichText;
}

- (id)init;
- (void)dealloc;
- (void)setAllowsLineBreaks:(BOOL)fp8;
- (BOOL)allowsLineBreaks;
- (void)setAllowsRichText:(BOOL)fp8;
- (BOOL)allowsRichText;
- (BOOL)textView:(id)fp8 doCommandBySelector:(SEL)fp12;
- (void)textDidChange:(id)fp8;
- (BOOL)isAutoFilled;
- (void)setAutoFilled:(BOOL)fp8;
- (id)_suffixAttributes;
- (void)setSuffix:(id)fp8;
- (id)suffix;
- (struct _NSRange)textView:(id)fp8 willChangeSelectionFromCharacterRange:(struct _NSRange)fp12 toCharacterRange:(struct _NSRange)fp20;
- (void)textDidEndEditing:(id)fp8;
- (BOOL)becomeFirstResponder;
- (void)setObjectValue:(id)fp8;
- (void)setStringValue:(id)fp8;

@end

@interface FPS : NSObject
{
    int _frames;
    double _frameTime;
    double _lastTime;
    NSString *_name;
}

- (id)initWithName:(id)fp8;
- (void)countFrame;

@end

@interface FTUBackgroundView : NSView
{
    NSBox *_backgroundView;
}

- (void)drawRect:(NSRect)fp8;

@end

@interface FZBezelWindow : NSPanel
{
}

- (id)initWithContentRect:(NSRect)fp8 styleMask:(unsigned int)fp24 backing:(unsigned int)fp28 defer:(BOOL)fp32;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (void)resignMainWindow;

@end

@interface FZLargeTypeController : NSWindowController <NSAnimationDelegate>
{
    FZLargeTypeView *largeTypeView;
    NSString *_phoneString;
    BOOL _closing;
    BOOL _fadeIn;
    id _delegate;
}

+ (id)displayString:(id)fp8 forTime:(double)fp12 delegate:(id)fp20;
- (id)initWithString:(id)fp8 delegate:(id)fp12;
- (void)unsetDelegate:(id)fp8;
- (void)dealloc;
- (void)awakeFromNib;
- (void)windowDidLoad;
- (void)stupidKitWorkaround;
- (id)windowNibName;
- (void)animationDidStop:(id)fp8;
- (void)animationDidEnd:(id)fp8;
- (void)_fadeInTimer:(id)fp8;
- (void)_startTimer;
- (void)fadeIn:(id)fp8;
- (void)fadeOut:(id)fp8;
- (void)showWindow:(id)fp8;
- (void)windowWillClose:(id)fp8;
- (void)close;

@end

@interface FZLargeTypeView : NSView
{
    NSString *_phoneString;
    NSDictionary *_attributes;
    ABPhoneFormatter *_formatter;
}

- (NSRect)contentRectForString;
- (void)setPhoneString:(id)fp8;
- (void)setAttributes:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)drawRect:(NSRect)fp8;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)mouseDown:(id)fp8;

@end

@interface FZVideoConferenceController : VideoConferenceMultiController <NetworkChangeNotificationListener>
{
    int _initStatus;
    BOOL _everOpenedCamera;
    BOOL _openCameraRequired;
    BOOL _recacheSelectedCamera;
    VCCamera *_cachedSelectedCamera;
    int _localVideoClientCount;
    int _localAudioClientCount;
    int _audioReflectorClientCount;
    BOOL _restartPreviewAtWake;
    BOOL _openCameraAtWake;
}

+ (BOOL)hasBeenInitialized;
+ (id)sharedInstance;
+ (id)newcameraList;
+ (void)_setServiceVCCaps:(unsigned long long)fp8 toCaps:(unsigned long long)fp16;
+ (void)pushCachedVCCapsToDaemon;
+ (void)setHasActiveConference:(BOOL)fp8;
+ (void)vcMicrophoneChanged:(id)fp8;
+ (BOOL)_updateSoftwareInputForCameras:(id)fp8 mics:(id)fp12;
+ (void)vcHardwareChanged:(id)fp8 duringLaunch:(BOOL)fp12;
+ (void)vcHardwareChangedBroadcastChanges:(id)fp8;
+ (BOOL)cameraConnected;
+ (BOOL)microphoneConnected;
+ (BOOL)hasActiveConference;
+ (BOOL)canBeARDServer;
+ (BOOL)cameraCapable;
+ (BOOL)microphoneCapable;
+ (BOOL)softwareCameraEnabled;
+ (void)_setSoftwareCameraEnabled:(BOOL)fp8;
+ (BOOL)softwareMicrophoneEnabled;
+ (void)_setSoftwareMicrophoneEnabled:(BOOL)fp8;
+ (BOOL)blockMicStatus;
+ (void)setBlockMicStatus:(BOOL)fp8;
+ (BOOL)blockCameraStatus;
+ (void)setBlockCameraStatus:(BOOL)fp8;
+ (BOOL)blockARDStatus;
+ (void)setBlockARDStatus:(BOOL)fp8;
+ (BOOL)ardMuxingSupported;
+ (BOOL)multiCapableVideo:(BOOL)fp8;
+ (BOOL)multiAudioCapable;
+ (BOOL)multiVideoCapable;
+ (void)currentAVChatInfoChanged:(id)fp8;
+ (void)_enableSoftwareCamera;
+ (void)_disableSoftwareCamera:(id)fp8;
+ (void)_enableSoftwareMicrophone;
+ (void)_disableSoftwareMicrophone:(id)fp8;
+ (void)_auxVideoControllerChangedState:(id)fp8;
+ (void)vcCapabilitiesChanged:(unsigned long long)fp8;
+ (void)broadcastVCCapabilites;
- (void)setDelegate:(id)fp8;
- (BOOL)isVCCReady;
- (void)initVCC;
- (void)_initVCCOnThread:(id)fp8;
- (void)_initVCCDidFinishNotification:(id)fp8;
- (void)_doInitVCCDidFinish;
- (void)shutdownAV;
- (id)init;
- (void)dealloc;
- (void)_postPrefsChangedNotification:(id)fp8;
- (void)_hardwareCapsNotification:(id)fp8;
- (unsigned long long)basicVCCapabilitiesCanAudio:(char *)fp8 canVideo:(char *)fp12;
- (BOOL)canHostMultiVideo:(BOOL)fp8;
- (BOOL)canRecordVideo:(BOOL)fp8;
- (void)systemWillSleep;
- (void)systemDidWake;
- (void)systemNetworkDidChange;
- (BOOL)getLocalVideoTextureBuffer:(CDAnonymousStruct9 *)fp8;
- (BOOL)isLocalVideoChanged;
- (void)_removedClient;
- (BOOL)addLocalVideoClient;
- (BOOL)removeLocalVideoClient;
- (void)addLocalAudioClient;
- (void)removeLocalAudioClient;
- (void)restartPreviewIfNecessary;
- (BOOL)startReflector;
- (BOOL)stopReflector;
- (id)preferredMic:(id)fp8;
- (BOOL)setPreferredMic;
- (BOOL)selectMicrophone:(id)fp8;
- (id)_defaultMicrophoneFromList:(id)fp8;
- (id)_UIDFromMicrophone:(id)fp8;
- (void)_selectSoundOutputDevice;
- (BOOL)selectSoundOutputDevice:(id)fp8;
- (id)soundOutputdeviceNamePref;
- (void)setSystemMute:(BOOL)fp8;
- (BOOL)haveBluetooth;
- (id)bluetoothHeadsetMic;
- (id)bluetoothHeadsetSpeaker;
- (BOOL)haveBluetoothHeadset;
- (BOOL)usingBluetoothHeadset;
- (BOOL)setUsingBluetoothHeadset:(BOOL)fp8;
- (BOOL)openCamera;
- (void)__iChatCancelPreview;
- (int)cancelPreview;
- (void)__iChatCloseCamera;
- (BOOL)closeCamera;
- (id)realCameraInList:(id)fp8;
- (BOOL)currentCameraIsQ8;
- (BOOL)getCameraIrisState;
- (BOOL)getMicrophoneIrisState;
- (BOOL)selectVCCamera:(id)fp8 andUpdatePref:(BOOL)fp12;
- (BOOL)selectVCCamera:(id)fp8;
- (void)_selectCamera;
- (id)_defaultCameraFromList:(id)fp8;
- (void)forceCameraRecache;
- (id)selectedCamera;
- (void)setCameraSettingsFromDefaults;
- (BOOL)setColor:(float)fp8;
- (float)color;
- (BOOL)setBrightness:(float)fp8;
- (float)brightness;
- (BOOL)setContrast:(float)fp8;
- (float)contrast;
- (BOOL)setFocus:(float)fp8;
- (float)focus;
- (BOOL)setSharpness:(float)fp8;
- (float)sharpness;
- (int)lightingProfile;

@end

@interface FetchICEDataOp : ExtendedOperation
{
    AVChatParticipant *_participant;
    NSData *_ICEData;
}

- (id)initWithParticipant:(id)fp8;
- (void)dealloc;
- (void)main;
- (id)ICEData;

@end

@interface FezAVRecorder : NSObject
{
    id _delegate;
    NSString *_outputFilePathName;
    BOOL _isRecording;
    BOOL _didRecordVideo;
    NSLock *_fileWriterLock;
    struct OpaqueFigFilePath *_outputFilePathRef;
    struct OpaqueFigByteStream *_outputByteStreamRef;
    struct OpaqueFigFormatWriter *_outputFormatWriterRef;
    CDAnonymousStruct7 _firstFrameTime;
    NSObject<FezAudioRecordingAdapter> *_audioAdapter;
    FezMPEG4AACAudioRecorder *_audioRecorder;
    NSObject<FezVideoRecordingAdapter> *_videoAdapter;
    FezH264VideoRecorder *_videoRecorder;
    CDAnonymousStruct7 _refFirstPresentationTime;
}

- (id)init;
- (void)_cleanup;
- (void)dealloc;
- (id)fileWriterLock;
- (void)setOutputFilePathName:(id)fp8;
- (id)outputFilePathName;
- (void)setAudioAdapter:(id)fp8;
- (id)audioAdapter;
- (void)setVideoAdapter:(id)fp8;
- (id)videoAdapter;
- (BOOL)didRecordVideo;
- (void)setDidRecordVideo:(BOOL)fp8;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (long)prepareRecording;
- (long)startRecording;
- (long)saveRecording;
- (long)cancelRecording;
- (CDAnonymousStruct7)normalizeDuration:(CDAnonymousStruct7)fp8;
- (CDAnonymousStruct7)normalizePresentationTime:(CDAnonymousStruct7)fp8;
- (void)recordFrame:(struct __CVBuffer *)fp8;
- (void)recordAudioBufferList:(struct AudioBufferList *)fp8 description:(struct AudioStreamBasicDescription)fp12 channelLayout:(struct AudioChannelLayout *)fp52 channelLayoutSize:(unsigned long)fp56 presentationTime:(CDAnonymousStruct7)fp60;
- (void)recorder:(id)fp8 didEncounterError:(long)fp12;
- (void)audioRecordingAdapter:(id)fp8 didEncounterError:(long)fp12;
- (void)videoRecordingAdapter:(id)fp8 didEncounterError:(long)fp12;

@end

@interface FezApplication : NSApplication
{
    id _keyEventHandler;
    int _dockUnreadCount;
}

- (void)finishLaunching;
- (void)dealloc;
- (void)sendEvent:(id)fp8;
- (id)keyEventHandler;
- (void)setKeyEventHandler:(id)fp8;
- (BOOL)isModifierKeyDown:(unsigned int)fp8;
- (void)_updateBadge;
- (int)applicationBadgeUnreadCount;
- (void)setApplicationBadgeUnreadCount:(int)fp8;

@end

@interface FezApplication (SecureWindowMenuTitle)
- (void)addWindowsItem:(id)fp8 title:(id)fp12 filename:(BOOL)fp16;
- (void)changeWindowsItem:(id)fp8 title:(id)fp12 filename:(BOOL)fp16;
@end

@interface FezCellTipView : NSView
{
    NSAttributedString *_cellTip;
}

- (void)setAttributedCellTip:(id)fp8;
- (id)attributedCellTip;
- (void)drawRect:(NSRect)fp8;

@end

@interface FezCellTipWindow : NSWindow
{
    FezCellTipView *_cellTipView;
}

- (id)init;
- (void)dealloc;
- (void)setCellTip:(id)fp8;
- (id)cellTip;

@end

@interface FezCreateCommand : NSCreateCommand
{
}

- (id)performDefaultImplementation;
- (id)_retrieveObjectOfClass:(Class)fp8 named:(id)fp12;
- (id)_retrieveParticipantsArrayNamed:(id)fp8;
- (id)_retrieveAccountNamed:(id)fp8;
- (id)_retrieveStringNamed:(id)fp8;
- (int)_retrieveIntNamed:(id)fp8;
- (BOOL)_retrieveBoolNamed:(id)fp8;
- (BOOL)_verifyParticipants:(id)fp8 areOnService:(id)fp12;
- (id)_genericIMFromIMHandle:(id)fp8 withText:(id)fp12;
- (id)_createTextChatWithService:(id)fp8 participants:(id)fp12 name:(id)fp16 invitation:(id)fp20;
- (id)_createTextChat;
- (id)_createAVChat;

@end

@interface FezDeleteCommand : NSDeleteCommand
{
}

- (id)performDefaultImplementation;

@end

@interface FezH264VideoRecorder : NSObject
{
    FezAVRecorder *_avRecorder;
    NSObject<FezVideoRecordingAdapter> *_videoAdapter;
    BOOL _didRecordVideo;
    struct OpaqueFigFormatWriter *_figFormatWriterRef;
    int _outputVideoTrackID;
    BOOL _compressingVideo;
    BOOL _readyToCompressFrame;
    struct __CFArray *_bufferedCompressedVideoFrames;
    struct OpaqueVTCompressionSession *_compressionSessionRef;
    struct _opaque_pthread_t *_videoCompressionThread;
    struct _opaque_pthread_cond_t _inputVideoReadyCondition;
    struct _opaque_pthread_mutex_t _inputVideoReadyMutex;
    struct __CVBuffer *_currentFrame;
    CDAnonymousStruct7 _currentFrameTime;
    CDAnonymousStruct7 _currentFrameDuration;
    CDAnonymousStruct7 _refEncodedFrameDuration;
    CDAnonymousStruct7 _refEncodedFramePresentationTime;
}

- (void *)_videoCompressionThreadMethod;
- (long)_flushBufferedVideo;
- (id)initWithAVRecorder:(id)fp8;
- (void)_cleanup;
- (void)dealloc;
- (void)setFigFormatWriter:(struct OpaqueFigFormatWriter *)fp8;
- (void)setVideoRecordingAdapter:(id)fp8;
- (long)prepareRecording;
- (long)startRecording;
- (long)saveRecording;
- (long)cancelRecording;
- (void)recordFrame:(struct __CVBuffer *)fp8;

@end

@interface FezHotKeyManager : NSObject
{
    NSMutableDictionary *_handlers;
}

+ (id)sharedInstance;
+ (int)enableSystemHotKey:(unsigned int)fp8;
+ (int)disableSystemHotKey:(unsigned int)fp8;
- (id)init;
- (void)dealloc;
- (int)registerHotKey:(unsigned int)fp8 keyCode:(unsigned short)fp12 keyMask:(unsigned int)fp16 handler:(id)fp20;
- (int)unregisterHotKey:(unsigned int)fp8;
- (void)triggerHotKeyEvent:(unsigned int)fp8;

@end

@interface FezIKPictureTakerVideoReceiver : NSObject <IKPictureTakerVideoProvider, FrameListener>
{
    id <IKPictureTakerVideoReceiver> _receiver;
    FrameReader *_frameReader;
    NSOpenGLContext *_glContext;
    struct __CVBuffer *_readBuffer;
}

+ (id)sharedInstance;
- (struct __CVBuffer *)_textureToCVPixelBuffer:(id)fp8;
- (id)init;
- (void)dealloc;
- (void)handleVirtualScreenChangedNotificiation:(int)fp8;
- (void)frameNotifier:(id)fp8 postedNewFrame:(id)fp12 fromSource:(id)fp16;
- (void)startGrabbingForReceiver:(id)fp8;
- (void)stopGrabbing;
- (BOOL)canStartGrabbing;

@end

@interface FezImageView : NSImageView
{
    NSPoint _lastMouseDownLocation;
    NSImage *_placeholderImage;
    NSArray *_buddyPictures;
    NSString *_baseFilename;
    NSString *_filePath;
    BOOL _drawsFocusRing;
    BOOL _allowsDrag;
    SEL _doubleAction;
}

- (void)_commonImageViewInit;
- (id)initWithFrame:(NSRect)fp8;
- (void)dealloc;
- (id)initWithCoder:(id)fp8;
- (void)_sendAction:(SEL)fp8;
- (void)_sendAction;
- (void)_sendDoubleAction;
- (BOOL)acceptsFirstResponder;
- (void)_buddyPictureNeedsDrawFromAnimate:(id)fp8;
- (void)_setImageAndNotifyTarget:(id)fp8;
- (NSRect)frameForImage;
- (void)_drawFocusRing;
- (void)drawRect:(NSRect)fp8;
- (id)imagePreservingOriginalImage;
- (void)setBuddyPicture:(id)fp8;
- (id)buddyPicture;
- (void)setBuddyPictures:(id)fp8;
- (void)setImage:(id)fp8;
- (void)setImage:(id)fp8 isIcon:(BOOL)fp12;
- (id)image;
- (BOOL)validateMenuItem:(id)fp8;
- (void)cut:(id)fp8;
- (void)copy:(id)fp8;
- (void)paste:(id)fp8;
- (void)delete:(id)fp8;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)fp8;
- (id)_dragImageOfSize:(NSSize)fp8;
- (unsigned int)draggingEntered:(id)fp8;
- (void)concludeDragOperation:(id)fp8;
- (void)mouseDragged:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)performClick:(id)fp8;
- (void)keyDown:(id)fp8;
- (SEL)doubleAction;
- (void)setDoubleAction:(SEL)fp8;
- (BOOL)allowsDrag;
- (void)setAllowsDrag:(BOOL)fp8;
- (BOOL)drawsFocusRing;
- (void)setDrawsFocusRing:(BOOL)fp8;
- (id)fullPath;
- (void)setFullPath:(id)fp8;
- (id)baseFilename;
- (void)setBaseFilename:(id)fp8;
- (id)buddyPictures;
- (id)placeholderImage;
- (void)setPlaceholderImage:(id)fp8;

@end

@interface FezImageView (FezImageViewAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (id)accessibilityRoleAttribute;
- (id)accessibilityDescriptionAttribute;
@end

@interface FezMPEG4AACAudioRecorder : NSObject
{
    FezAVRecorder *_avRecorder;
    NSObject<FezAudioRecordingAdapter> *_audioAdapter;
    BOOL _isRecording;
    struct OpaqueFigFormatWriter *_figFormatWriterRef;
    int _outputAudioTrackID;
    BOOL _didSetUpAudioConverter;
    struct OpaqueAudioConverter *_audioConverter;
    struct AudioStreamBasicDescription _inputStreamDescription;
    struct AudioStreamBasicDescription _actualInputStreamDescription;
    BOOL _didSetUpCompressedStreamDescription;
    struct AudioStreamBasicDescription _outputStreamDescription;
    struct opaqueFigFormatDescription *_fileAudioFormatDescription;
    CDAnonymousStruct7 _currentOutputPTS;
    long long _outputPTSDelta;
    struct AudioBufferList *_bufferListToCompress;
}

- (id)initWithAVRecorder:(id)fp8;
- (void)_cleanup;
- (void)dealloc;
- (BOOL)isRecording;
- (void)setFigFormatWriter:(struct OpaqueFigFormatWriter *)fp8;
- (void)setAudioRecordingAdapter:(id)fp8;
- (struct AudioStreamBasicDescription)actualInputStreamDescription;
- (void)clearBufferListToCompress;
- (struct AudioBufferList *)bufferListToCompress;
- (long)prepareRecording;
- (long)startRecording;
- (long)saveRecording;
- (long)cancelRecording;
- (void)recordAudioBufferList:(struct AudioBufferList *)fp8 description:(struct AudioStreamBasicDescription)fp12 channelLayout:(struct AudioChannelLayout *)fp52 channelLayoutSize:(unsigned long)fp56 presentationTime:(CDAnonymousStruct7)fp60;

@end

@interface FezPreferences : NSPreferences
{
}

+ (void)initialize;
- (id)init;
- (NSSize)preferencesContentSize;
- (BOOL)usesNewLayout;
- (BOOL)usesButtons;
- (id)windowWillReturnFieldEditor:(id)fp8 toObject:(id)fp12;
- (void)windowWillClose:(id)fp8;
- (NSSize)windowWillResize:(id)fp8 toSize:(NSSize)fp12;
- (id)selectModuleOfClass:(Class)fp8;
- (void)_selectModuleOwner:(id)fp8;
- (void)cancel:(id)fp8;

@end

@interface FezQCRenderer : QCRenderer
{
}

+ (BOOL)requires8BitInternalBuffers;
+ (id)defaultRenderingOptions;
- (id)init;
- (void)dealloc;

@end

/*@interface FezTokenAttachmentCell : NSTokenAttachmentCell
{
    BOOL _hasImage;
}

- (NSSize)cellSizeForBounds:(NSRect)fp8;
- (NSRect)titleRectForBounds:(NSRect)fp8;
- (void)setHasImage:(BOOL)fp8;

@end*/

@interface FezWebView : WebView
{
    NSObject *_dragDestinationDelegate;
    NSObject *_keyDownDelegate;
    NSObject *_viewDelegate;
}

- (id)dragDestinationDelegate;
- (void)setDragDestinationDelegate:(id)fp8;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)concludeDragOperation:(id)fp8;
- (BOOL)wantsPeriodicDraggingUpdates;
- (id)keyDownDelegate;
- (void)setKeyDownDelegate:(id)fp8;
- (void)keyDown:(id)fp8;
- (id)viewDelegate;
- (void)setViewDelegate:(id)fp8;
- (void)setFrameSize:(NSSize)fp8;
- (void)viewWillStartLiveResize;
- (void)viewDidEndLiveResize;
- (void)viewDidMoveToSuperview;
- (void)removeFromSuperview;
- (void)viewDidMoveToWindow;

@end

@interface Fezz : NSObject <ChatViewer, FezHotKeyHandler, NSApplicationDelegate>
{
    NSMenuItem *_smsMenuItem;
    NSMenuItem *_smileyMenuItem;
    NSMenuItem *_balloonMenuItem;
    NSMenuItem *_firstServiceStatusItem;
    NSMenuItem *_closeChatMenuItem;
    NSMenuItem *_closeWindowMenuItem;
    NSMenuItem *_myStatusMenuItem;
    NSMenuItem *_accountsMenuItem;
    NSMenuItem *_firstPeopleListMenuItem;
    NSMenuItem *_avMenuItem;
    NSMenu *_avMenu;
    StatusController *_statusController;
    StatusController *_dockStatusController;
    NSArray *_inviteData;
    NSMutableArray *_aeQueue;
    BOOL _setupComplete;
    BOOL _connectedToDaemon;
    NSMenuItem *_switchToMenuItem;
    int _switchToMenuIndex;
    NSWindow *_chooserWindow;
    NSMutableDictionary *_hotKeyInfo;
    NSDictionary *_buddyIconDownloadInfo;
    int _numberOfUnreadMessagesBeforeActivationEvent;
    BOOL _disableDockIconClickPerformsActivateRecentChat;
    BOOL _finishedLaunching;
    BOOL _finishedDelayedLaunching;
    BOOL _finishedDefferredLaunching;
    BOOL _terminating;
    NSMutableArray *_filesToOpen;
}

+ (id)sharedInstance;
+ (void)showCouldNotConnectDialog;
+ (void)connectAndAutoLogin;
+ (unsigned int)numberOfUnreadMessages;
+ (BOOL)hasUnsentMessages;
- (id)init;
- (void)dealloc;
- (id)_openFile:(id)fp8;
- (void)openFilesAfterLaunch;
- (BOOL)application:(id)fp8 openFile:(id)fp12;
- (BOOL)applicationShouldOpenUntitledFile:(id)fp8;
- (void)_orderFrontAllActiveWindows;
- (unsigned int)applicationShouldTerminate:(id)fp8;
- (BOOL)_appHasOpenUnminiaturizedWindows;
- (void)_temporarilyDisableDockIconClickPerformsActivateRecentChat;
- (void)_reenableDockIconClickPerformsActivateRecentChat;
- (void)applicationWillUnhide:(id)fp8;
- (void)applicationDidUnhide:(id)fp8;
- (void)applicationWillBecomeActive:(id)fp8;
- (void)applicationDidBecomeActive:(id)fp8;
- (BOOL)applicationShouldHandleReopen:(id)fp8 hasVisibleWindows:(BOOL)fp12;
- (void)handleHotKey:(int)fp8;
- (id)windowForSheet;
- (BOOL)isChatViewerOpen;
- (void)openChat:(id)fp8;
- (void)displayChat:(id)fp8;
- (id)displayChatForIMHandle:(id)fp8 style:(int)fp12;
- (id)createChatWindowWithIMHandles:(id)fp8 style:(int)fp12;
- (id)createChatUIWithIMHandles:(id)fp8 style:(int)fp12;
- (id)createUIForChat:(id)fp8;
- (id)visibleChatToHookUpWithIMHandle:(id)fp8;
- (id)visibleChatWithID:(id)fp8;
- (void)doAddBuddyCommandForIMHandle:(id)fp8 withWindow:(id)fp12;
- (void)showInfoForIMHandle:(id)fp8;
- (void)showProfileForIMHandle:(id)fp8;
- (id)chooserWindow;
- (id)statusController;

@end

@interface Fezz (FezzActions)
- (void)showAbout:(id)fp8;
- (void)showPrefs:(id)fp8;
- (void)showVideoPrefs:(id)fp8;
- (void)sendSMS:(id)fp8;
- (void)newChat:(id)fp8;
- (void)newChatWithPerson:(id)fp8;
- (void)goToChat:(id)fp8;
- (void)_togglePeopleList:(id)fp8;
- (void)toggleAccountConnection:(id)fp8;
- (void)showPeopleListControllerSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)showPeopleListController:(id)fp8;
- (void)showPeopleListControllerWithActivate:(id)fp8;
- (void)showFileTransferManager:(id)fp8;
- (void)showChatList:(id)fp8;
- (void)inviteToAudioChat:(id)fp8;
- (void)inviteToVideoChat:(id)fp8;
- (void)inviteToARDAsClient:(id)fp8;
- (void)inviteToARDAsServer:(id)fp8;
- (void)cancelARDSession:(id)fp8;
- (void)showVCInfo:(id)fp8;
- (void)resetBackground:(id)fp8;
- (void)showSelfPreview:(id)fp8;
- (void)_shareWithiChatTheaterChoosingDocuments:(BOOL)fp8;
- (void)shareAppWithiChatTheater:(id)fp8;
- (void)shareAppWithiChatTheaterSelected:(id)fp8;
- (void)shareWithiChatTheater:(id)fp8;
- (void)shareiPhotoWithiChatTheater:(id)fp8;
- (void)showAddressBook:(id)fp8;
- (void)changeBuddyPicture:(id)fp8;
- (void)toggleNameDisplay:(id)fp8;
- (void)toggleEffectsPalette:(id)fp8;
- (void)togglePublishMic:(id)fp8;
- (void)togglePublishCamera:(id)fp8;
- (void)togglePublishARD:(id)fp8;
- (void)deleteSelectedBuddies:(id)fp8;
- (void)showMyProfile:(id)fp8;
- (void)shopForiChatProducts:(id)fp8;
- (void)provideBetaFeedback:(id)fp8;
- (void)ignore:(id)fp8;
- (void)block:(id)fp8;
- (void)toggleHidePictures:(id)fp8;
- (void)toggleHideAudioStatus:(id)fp8;
- (void)toggleHideVideoStatus:(id)fp8;
- (void)toggleShowOfflines:(id)fp8;
- (void)toggleArrangesByGroup:(id)fp8;
- (void)toggleUsesOfflineGroup:(id)fp8;
- (void)sortByStatus:(id)fp8;
- (void)sortByFirstName:(id)fp8;
- (void)sortByLastName:(id)fp8;
- (void)addABuddy:(id)fp8;
- (void)toggleHideSmileys:(id)fp8;
- (void)toggleHideLocalVideo:(id)fp8;
- (void)toggleRecording:(id)fp8;
- (BOOL)forwardValidateMenuItem:(id)fp8 toController:(id)fp12;
- (void)toggleMute:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
@end

@interface Fezz (FezzAdditions)
- (void)registerGlobalHotKey;
- (void)unregisterGlobalHotKey;
- (void)setupComplete:(id)fp8;
- (void)_resurrectPersistentChats;
- (void)_persistCurrentChats;
- (void)_updateAVMenu;
- (void)_initAVMenu;
- (void)_createCacheFolder;
- (void)_saveCameraSettings;
- (void)_prepareInternals;
- (void)_createDownloadsFolder;
- (void)createRequiredFolders;
- (void)_checkCertExpiration;
- (void)_runTestsIfRequested;
- (void)_finishDeferredLaunching;
- (void)_deferredApplicationDidFinishLaunching;
- (void)_setupViceroy;
- (void)_timeZoneChanged;
- (void)_delayedApplicationLoading;
- (void)_addressBookChanged:(id)fp8;
- (void)_daemonConnected;
- (void)applicationDidFinishLaunching:(id)fp8;
- (void)applicationWillTerminate:(id)fp8;
- (void)_updateUnreadBadge:(id)fp8;
- (void)setPrefersCloseChat:(BOOL)fp8;
- (void)windowDidBecomeKey:(id)fp8;
- (BOOL)activateRecentChat;
- (id)_otherSMSMenuItem;
- (void)_removeSMSMenuIfNeeded;
- (void)_removeOpenRecentMenu;
- (void)_updateBuddyListMenu:(id)fp8;
- (void)updatePeopleListWindowItem;
- (id)applicationDockMenu:(id)fp8;
- (void)_dockItemPicked:(id)fp8;
- (BOOL)willRunFTU;
- (void)afterLaunchMakeObject:(id)fp8 performSelector:(SEL)fp12;
- (BOOL)deferredLaunchComplete;
- (BOOL)delayedLaunchComplete;
- (BOOL)isAppLaunching;
- (BOOL)isAppTerminating;
- (void)_populateChatMenuItems;
- (void)awakeFromNib;
- (void)setChooserWindow:(id)fp8;
- (void)_setImage:(id)fp8 forIMHandle:(id)fp12 allowEditing:(BOOL)fp16;
- (void)_cleanUpDownloadWithError:(BOOL)fp8;
- (void)urlFetcher:(id)fp8 fetchedResult:(id)fp12;
- (void)urlFetcher:(id)fp8 fetchFailedWithError:(id)fp12;
- (void)_setImageAtURL:(id)fp8 forIMHandle:(id)fp12 allowEditing:(BOOL)fp16;
- (void)_installAEHandlers;
- (void)_handleAEQueue;
- (id)_imHandlesWithIDs:(id)fp8 forAccount:(id)fp12;
- (id)_imHandlesWithCardUIDs:(id)fp8 forSpecificAccount:(id)fp12;
- (id)_imHandlesWithCardUIDs:(id)fp8 forAccount:(id)fp12 preferOnline:(BOOL)fp16;
- (id)_handleTextComposeRequestFor:(id)fp8 style:(int)fp12 roomName:(id)fp16 message:(id)fp20;
- (BOOL)_confirmActionWithMessage:(id)fp8 info:(id)fp12 button:(id)fp16;
- (BOOL)_confirmAndInviteToAVChatVideo:(BOOL)fp8 imHandles:(id)fp12;
- (BOOL)_confirmAndGoToChatRoom:(id)fp8 account:(id)fp12;
- (BOOL)_handleRequestFor:(id)fp8 style:(int)fp12 roomName:(id)fp16 message:(id)fp20;
- (void)_handleGURLAppleEvent:(id)fp8 reply:(id)fp12;
@end

@interface Fezz (PersistentChatAdditions)
+ (void)_mtFinishedLoadingSavedChat:(id)fp8;
+ (void)_bgLoadSavedChats:(id)fp8;
+ (void)resurrectPersistentChats;
+ (void)savePersistentChats;
+ (void)savePersistentChatSelections;
+ (id)persistentChatInfo;
+ (id)persistentChatSelectionInfo;
@end

@interface Fezz (SelfTestExtensions)
- (id)imHandleForIteration:(int)fp8;
- (id)messageForIteration:(int)fp8;
- (id)chatWindowControllerForIteration:(int)fp8;
- (void)verifyLoginAndSendAnIM;
- (void)verifyResponseToIMAndStartAV;
- (void)verifyAVIsRunningAndCloseWindow;
- (void)verifyAddedBuddyAndStartAV;
- (void)verifyVideoIsRunningAndTryAudio;
- (void)startAudio;
- (void)verifyAudioIsRunningAndStartNewIteration;
- (void)loginIfNecessary;
- (void)application:(id)fp8 runTest:(unsigned int)fp12 duration:(double)fp16;
@end

@interface FileDragOutView : NSImageView
{
    FileTransfer *_file;
    id <FileDragOutViewDelegate> _delegate;
    NSPoint _clickLoc;
}

- (void)setDelegate:(id)fp8;
- (void)_updateImage;
- (void)setFile:(id)fp8;
- (id)file;
- (void)dealloc;
- (void)mouseDown:(id)fp8;
- (void)mouseDragged:(id)fp8;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)fp8;

@end

@interface FileNotifier : BannerNotifier
{
    FileTransferRequest *_fileRequest;
    FileTransfer *_file;
    BOOL _wasClicked;
}

+ (void)openOnFileTransferRequest:(id)fp8;
- (id)initWithFileTransfer:(id)fp8;
- (id)menuItemFormat;
- (id)bannerView;
- (BOOL)isActiveNotification;
- (void)updateLockUI;
- (void)dealloc;
- (void)closeDownShop:(BOOL)fp8;
- (void)realWindowVisible;

@end

@interface FileSender : NSObject <FileTransferIconLoaderDelegate, NSOpenSavePanelDelegate>
{
    NSPanel *_confirmPanel;
    NSTextField *_messageField;
    NSButton *_dontAskAgainBox;
    NSImageView *_fileIcon;
    NSArray *_filePaths;
    IMHandle *_receiver;
    NSWindow *_originatingWindow;
    NSPoint _centerPointInWindow;
}

+ (BOOL)isDirectory:(id)fp8;
+ (BOOL)isEmptyDirectory:(id)fp8;
+ (void)runEmptyDirectoryAlert;
+ (void)showAlertFor:(id)fp8 isIMAttachment:(BOOL)fp12 fileCount:(int)fp16 message:(id)fp20 inWindow:(id)fp24;
+ (BOOL)validatePasteboard:(id)fp8 forIMHandle:(id)fp12 showAlert:(BOOL)fp16 inWindow:(id)fp20;
+ (void)sendFiles:(id)fp8 toIMHandle:(id)fp12 atPosition:(NSPoint)fp16 inWindow:(id)fp24 confirm:(BOOL)fp28;
+ (void)sendFile:(id)fp8 toIMHandle:(id)fp12 atPosition:(NSPoint)fp16 inWindow:(id)fp24 confirm:(BOOL)fp28;
+ (BOOL)sendFilesOnPasteboard:(id)fp8 toIMHandle:(id)fp12 atPosition:(NSPoint)fp16 inWindow:(id)fp24 confirm:(BOOL)fp28 showAlert:(BOOL)fp32;
+ (void)sendFileToIMHandle:(id)fp8 inWindow:(id)fp12;
- (id)initWithFiles:(id)fp8 receiver:(id)fp12 position:(NSPoint)fp16 inWindow:(id)fp24;
- (void)dealloc;
- (void)_sendFile;
- (void)fileTransferIconDidLoad:(id)fp8;
- (void)_runConfirmPanel;
- (void)_confirmSend:(BOOL)fp8;
- (void)start:(id)fp8;
- (void)cancel:(id)fp8;
- (void)_runOpenPanel;
- (void)_openPanelDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (BOOL)panel:(id)fp8 isValidFilename:(id)fp12;

@end

@interface FileTransfer : IMFileTransfer <FileTransferIconLoaderDelegate, QLPreviewItem>
{
    NSImage *_icon;
    BOOL _iconWasGuessedFromTransferInformation;
    IMHandle *_otherPersonAsIMHandle;
    NSURL *_deadFile;
}

- (void)dealloc;
- (id)otherPersonAsIMHandle;
- (id)errorString;
- (void)_updateWithDictionaryRepresentation:(id)fp8;
- (void)fileTransferIconDidLoad:(id)fp8;
- (void)_updateIconUsingFileTransferInformation;
- (void)_updateIconUsingLocalPath;
- (id)icon;
- (void)_setIcon:(id)fp8;
- (id)previewItemURL;
- (id)previewItemTitle;

@end

@interface FileTransfer (Scripting)
- (id)scriptID;
- (id)scriptName;
- (id)scriptDirection;
- (id)scriptService;
- (id)scriptFilePath;
- (id)scriptParticipant;
- (id)scriptTransferSize;
- (id)scriptTransferProgress;
- (id)scriptSecure;
- (id)scriptTransferStatus;
- (id)scriptStarted;
- (void)acceptTransferCommand:(id)fp8;
- (void)declineTransferCommand:(id)fp8;
- (id)objectSpecifier;
@end

@interface FileTransferCenter : IMFileTransferCenter
{
}

+ (void)initialize;
+ (Class)fileTransferClass;
- (void)removeTransfer:(id)fp8;
- (void)_handleAllFileTransfers:(id)fp8;
- (void)_handleStandaloneFileTransferRegistered:(id)fp8;

@end

@interface FileTransferFragment : NSObject <DOMEventListener>
{
    DOMDocumentFragment *_fragment;
    BOOL _mouseDown;
    DOMNode *_statusTextNode;
    int _statusIconAction;
    DOMNode *_statusNode;
    NSString *_statusId;
    DOMNode *_iconNode;
    NSString *_iconId;
    FileTransfer *_file;
    NSString *_filename;
    TranscriptStyleController *_style;
}

- (id)fragment;
- (id)initWithFileTransfer:(id)fp8 inChat:(id)fp12;
- (void)dealloc;
- (void)handleEvent:(id)fp8;
- (void)_updateFileTransferStatusIcon;
- (void)_fileXferUpdated:(id)fp8;
- (void)_flagsChanged:(id)fp8;

@end

/*@interface FileTransferFragmentProvider : TranscriptFragmentProvider <FileTransferFragmentProvider>
{
    NSMutableDictionary *_guidToDOMElementMap;
}

+ (void)initialize;
- (id)initWithTranscriptStyleController:(id)fp8;
- (void)dealloc;
- (id)role;
- (void)transcriptWillLoad;
- (void)_fileTransferUpdated:(id)fp8;
- (id)fragmentForGUID:(id)fp8 filename:(id)fp12 width:(double)fp16 height:(double)fp24;
- (id)fragmentForGUID:(id)fp8 filename:(id)fp12 bookmark:(id)fp16;

@end*/

@interface FileTransferIconLoader : NSObject
{
    NSOperationQueue *_queue;
}

+ (id)sharedInstance;
- (id)init;
- (void)dealloc;
- (void)cancelNotificationsForDelegate:(id)fp8;
- (void)queueURL:(id)fp8 bookmark:(id)fp12 forSize:(float)fp16 withDelegate:(id)fp20;
- (void)queueURL:(id)fp8 forSize:(float)fp12 withDelegate:(id)fp16;

@end

@interface FileTransferIconLoaderOperation : NSOperation
{
    NSURL *_url;
    NSData *_bookmark;
    id <FileTransferIconLoaderDelegate> _delegate;
    struct CGSize _thumbnailSize;
    NSDictionary *_options;
}

- (id)init;
- (void)dealloc;
- (void)_notifyDelegate:(id)fp8;
- (void)main;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (struct CGSize)thumbnailSize;
- (void)setThumbnailSize:(struct CGSize)fp8;
- (id)bookmark;
- (void)setBookmark:(id)fp8;
- (id)url;
- (void)setUrl:(id)fp8;

@end

@interface FileTransferManager : NSWindowController <QLPreviewPanelDataSource, QLPreviewPanelDelegate>
{
    NSButton *_clearButton;
    NSTextField *_countField;
    ViewTable *_table;
    BOOL _securityDialogInProgress;
    NSMutableArray *_securityDialogQueue;
    QLPreviewPanel *_previewPanel;
}

+ (BOOL)checkSavePath:(id)fp8 forFileTransfer:(id)fp12 postingErrorToWindow:(id)fp16;
+ (void)_savePanelDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
+ (void)_replaceSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
+ (void)fileTransfer:(id)fp8 saveAs:(id)fp12 attachedToWindow:(id)fp16;
+ (void)fileTransfer:(id)fp8 saveTo:(id)fp12 attachedToWindow:(id)fp16;
+ (void)fileTransfer:(id)fp8 saveTo:(id)fp12 attachedToWindow:(id)fp16 forceReplace:(BOOL)fp20;
+ (void)fileTransfer:(id)fp8 saveTo:(id)fp12 attachedToWindow:(id)fp16 automaticallyRename:(BOOL)fp20;
+ (void)fileTransfer:(id)fp8 saveTo:(id)fp12 attachedToWindow:(id)fp16 forceReplace:(BOOL)fp20 automaticallyRename:(BOOL)fp24;
+ (id)publicizeInlineImageWithGUID:(id)fp8 filename:(id)fp12;
+ (id)sharedInstance;
- (void)awakeFromNib;
- (void)windowDidLoad;
- (NSRect)windowWillUseStandardFrame:(id)fp8 defaultFrame:(NSRect)fp12;
- (BOOL)windowShouldClose:(id)fp8;
- (void)windowWillClose:(id)fp8;
- (void)dealloc;
- (void)_countChanged;
- (id)_viewForTransferGUID:(id)fp8;
- (void)_addTransfer:(id)fp8;
- (void)_scrollToBottom;
- (void)_handleRefreshAllTransfers:(id)fp8;
- (void)_handleTransferCreated:(id)fp8;
- (void)_handleTransferRemoved:(id)fp8;
- (id)_transfersMatchingCondition:(int)fp8 wantsGUIDs:(BOOL)fp12;
- (void)_removeTransfersMatchingCondition:(int)fp8;
- (void)deleteSelectedRowsInViewTable:(id)fp8;
- (void)showWindowAndMakeKey:(BOOL)fp8;
- (void)showWindow:(id)fp8;
- (void)showTransfer:(id)fp8;
- (void)clearTransfers:(id)fp8;
- (void)selectAll:(id)fp8;
- (void)selectionDidChangeForViewTable:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)_fileTransferIconUpdated:(id)fp8;
- (void)quickLook:(id)fp8;
- (void)quicklookSelectedRowsInViewTable:(id)fp8;
- (BOOL)acceptsPreviewPanelControl:(id)fp8;
- (void)beginPreviewPanelControl:(id)fp8;
- (void)endPreviewPanelControl:(id)fp8;
- (id)_qlPreviewItems;
- (int)numberOfPreviewItemsInPreviewPanel:(id)fp8;
- (id)previewPanel:(id)fp8 previewItemAtIndex:(int)fp12;
- (BOOL)previewPanel:(id)fp8 handleEvent:(id)fp12;
- (NSRect)previewPanel:(id)fp8 sourceFrameOnScreenForPreviewItem:(id)fp12;

@end

@interface FileTransferRequest : NSWindowController <FileDragOutViewDelegate>
{
    NSExtendedBox *_box;
    NSView *_bannerContainer;
    AVParticipantView *_bannerView;
    FileDragOutView *_fileIconView;
    NSTextField *_filenameField;
    NSTextField *_descriptionField;
    NSTabView *_buttonTabView;
    NSButton *_notifyAccept;
    NSButton *_notifyReject;
    NSButton *_notifyBlock;
    NSButton *_notifyOK;
    FileNotifier *_notifier;
    FileTransfer *_file;
    int _action;
}

+ (id)fileTransferRequestWithFile:(id)fp8 notifier:(id)fp12;
- (id)_initWithIncomingFile:(id)fp8 notifier:(id)fp12;
- (id)fileTransfer;
- (void)setNotifier:(id)fp8;
- (void)windowWillClose:(id)fp8;
- (void)dealloc;
- (void)_flagsChanged:(id)fp8;
- (NSRect)windowWillUseStandardFrame:(id)fp8 defaultFrame:(NSRect)fp12;
- (void)windowDidLoad;
- (void)_handleUpdated:(id)fp8;
- (void)_handleRemoved:(id)fp8;
- (void)_securityLevelChanged:(id)fp8;
- (void)acceptButtonPressed:(id)fp8;
- (BOOL)fileDragOutView:(id)fp8 shouldDragFile:(id)fp12;
- (void)fileDragOutView:(id)fp8 file:(id)fp12 draggedTo:(id)fp16;
- (void)fileDragOutView:(id)fp8 fileDoubleClicked:(id)fp12;
- (void)rejectButtonPressed:(id)fp8;
- (void)blockButtonPressed:(id)fp8;
- (void)contextUpdated:(id)fp8;

@end

@interface ViewTableRow : NSView
{
    NSView *_containerView;
    BOOL _selected;
}

- (void)awakeFromNib;
- (id)initWithNibNamed:(id)fp8 saveNib:(BOOL)fp12;
- (void)dealloc;
- (BOOL)isSelected;
- (void)selectedDidChange;
- (void)windowKeyChanged;
- (void)_setSelected:(BOOL)fp8;
- (void)_setSelected;
- (void)_deselect;
- (void)_setSingleSelection;
- (void)_extendSelection;
- (void)mouseDown:(id)fp8;
- (void)rightMouseDown:(id)fp8;

@end

@interface FileTransferView : ViewTableRow <FileDragOutViewDelegate>
{
    FileTransfer *_fileTransfer;
    BOOL _canUpdate;
    FileDragOutView *_fileIcon;
    NSButton *_lockButton;
    NSTextField *_fileNameField;
    NSTextField *_statusField;
    NSProgressIndicator *_progressBar;
    NSButton *_stopButton;
    NSButton *_revealButton;
    NSMenu *_contextMenu;
    NSImage *_pressedCancel;
    NSImage *_selectedCancel;
    NSImage *_activeCancel;
}

+ (id)_bytesTransferredPerSecondforTransfer:(id)fp8;
+ (id)_timeRemainingStringWithProgress:(double)fp8 forTransfer:(id)fp16;
+ (id)kindStringForFileTransfer:(id)fp8;
+ (id)statusStringForFileTransfer:(id)fp8;
- (id)initWithFileTransfer:(id)fp8 saveNib:(BOOL)fp12;
- (id)fileTransfer;
- (id)fileIcon;
- (void)awakeFromNib;
- (void)dealloc;
- (void)_removeProgressBar;
- (void)_setupLockButton;
- (void)_updateButtons;
- (void)_update:(id)fp8;
- (void)viewDidMoveToWindow;
- (void)_updateTextColor;
- (void)windowKeyChanged;
- (void)selectedDidChange;
- (id)hitTest:(NSPoint)fp8;
- (float)dwToFit;
- (void)acceptTransfer:(id)fp8;
- (void)stopTransfer:(id)fp8;
- (void)revealInFinder:(id)fp8;
- (BOOL)fileDragOutView:(id)fp8 shouldDragFile:(id)fp12;
- (void)fileDragOutView:(id)fp8 file:(id)fp12 draggedTo:(id)fp16;
- (void)fileDragOutView:(id)fp8 fileDoubleClicked:(id)fp12;

@end

@interface FindPanelController : NSWindowController
{
    NSTextField *searchTextField;
    NSTextField *statusTextField;
    int _lastFindPasteboardChangeCount;
}

+ (id)sharedController;
- (id)windowNibName;
- (id)windowFrameAutosaveName;
- (void)updateFindPasteboardFromSearchField;
- (void)_updateSearchFieldFromFindPasteboard;
- (id)_searchString;
- (id)_searchTarget;
- (BOOL)_doSearchForString:(id)fp8 direction:(BOOL)fp12 caseSensitive:(BOOL)fp16 inTarget:(id)fp20;
- (void)_setStatus:(id)fp8;
- (void)_findWithDirection:(BOOL)fp8 caseSensitive:(BOOL)fp12;
- (BOOL)readyToFind;
- (void)findNext:(id)fp8;
- (void)findPrevious:(id)fp8;
- (void)selectText;

@end

@interface FrameNotifier : NSObject
{
    id _delegate;
    NSArray *_runloopModes;
    NSRecursiveLock *_notifierLock;
    NSMutableDictionary *_threadNotifiersForThread;
    NSMutableDictionary *_notifyAndRemoveLockForThread;
    NSMutableDictionary *_lastFrameForSource;
    NSThread *_notificationThread;
    FPS *_fps;
}

+ (id)sharedNotifier;
+ (id)runLoopModes;
- (id)description;
- (id)initWithDelegate:(id)fp8;
- (void)dealloc;
- (BOOL)hasListeners;
- (BOOL)hasListenersForSource:(id)fp8;
- (void)addListener:(id)fp8 forSource:(id)fp12 onThread:(id)fp16;
- (void)removeListener:(id)fp8;
- (void)removeListener:(id)fp8 forSource:(id)fp12;
- (void)_setupThread;
- (void)_notificationThread;
- (int)_VCFrameNotifierMaxCount;
- (void)postFrame:(id)fp8 fromSource:(id)fp12;
- (BOOL)canPostFrameForSource:(id)fp8;
- (id)lastFrameForSource:(id)fp8;

@end

@interface GLObject : NSObject
{
    NSOpenGLContext *_context;
    struct _CGLContextObject *cgl_ctx;
}

- (id)initWithOpenGLContext:(id)fp8;
- (void)dealloc;
- (id)context;
- (void)throwOnGLError:(const char *)fp8:(int)fp12;
- (void)throwOnGLError:(id)fp8;

@end

@interface FrameReader : GLObject
{
    unsigned int _rowBytes;
    unsigned int _pixelsWide;
    unsigned int _pixelsHigh;
    unsigned int _glPixelBufferId;
    void *_frameBuffer;
    void *_flipBuffer;
    GLFBO *_fbo;
    GLSLProgram *_shader;
}

+ (unsigned int)nativePixelFormat;
+ (unsigned int)nativePixelType;
+ (BOOL)_isIntel950Graphics:(id)fp8;
- (void)_initResources;
- (void)_destroyResources;
- (id)initWithOpenGLContext:(id)fp8 pixelsWide:(unsigned int)fp12 pixelsHigh:(unsigned int)fp16;
- (void)dealloc;
- (void)handleVirtualScreenChangedNotificiation:(int)fp8;
- (void)_glReadPixels_readFrameIntoBuffer:(void *)fp8 wantYuv:(BOOL)fp12 rowBytes:(int)fp16;
- (void)_PBuffer_readFrameIntoBuffer:(void *)fp8 wantYuv:(BOOL)fp12 rowBytes:(int)fp16;
- (void)_readFrameIntoBuffer:(void *)fp8 wantYuv:(BOOL)fp12 rowBytes:(int)fp16 flipBuffer:(BOOL)fp20;
- (id)bitmap;
- (void)copyFrameTo:(struct __CVBuffer *)fp8 flipBuffer:(BOOL)fp12;
- (void)copyFrameTo:(struct __CVBuffer *)fp8;
- (NSSize)size;

@end

@interface FrameResizer : NSObject
{
    NSOpenGLContext *_context;
    FrameReader *_frameReader;
    struct __CVOpenGLBufferPool *_bufferPool;
    struct __CVBuffer *_buffer;
}

+ (BOOL)resizeBufferPool:(struct __CVOpenGLBufferPool **)fp8 width:(int)fp12 height:(int)fp16;
- (id)init;
- (void)dealloc;
- (void)handleVirtualScreenChangedNotificiation:(int)fp8;
- (void)resizeTexture:(id)fp8 intoBuffer:(struct __CVBuffer *)fp12 fromRect:(NSRect)fp16 sizeToFitCIF:(BOOL)fp32;

@end

@interface FramerateTracker : NSObject
{
    unsigned int _sampleCount;
    double *_samples;
    unsigned int _curSample;
    double _sampleSum;
    double _curTime;
    double _rounding;
}

- (id)initWithSampleCount:(unsigned int)fp8 framerate:(double)fp12 rounding:(double)fp20;
- (double)nextSample;
- (void)dealloc;

@end

@interface FullScreenQCTransitionWindow : NSWindow
{
    QCView *_qcView;
    double _transitionTime;
    id _completionDelegate;
    SEL _completionSelector;
    BOOL _transitionOnMainScreen;
}

+ (void)performTransitionWithScreen:(id)fp8 transitionPath:(id)fp12 image1:(id)fp16 fromRect:(NSRect)fp20 toRect:(NSRect)fp36 image2:(id)fp52 fromRect:(NSRect)fp56 toRect:(NSRect)fp72 bgColor:(id)fp88 completionDelegate:(id)fp92 completionSelector:(SEL)fp96 transitionTime:(double)fp100;
- (id)_initWithScreen:(id)fp8 transitionPath:(id)fp12 image1:(id)fp16 fromRect:(NSRect)fp20 toRect:(NSRect)fp36 image2:(id)fp52 fromRect:(NSRect)fp56 toRect:(NSRect)fp72 bgColor:(id)fp88 completionDelegate:(id)fp92 completionSelector:(SEL)fp96 transitionTime:(double)fp100;
- (void)_transitionDidComplete;
- (void)_startTransition;
- (void)dealloc;

@end

@interface FullScreenWindow : NSWindow
{
    NSView *_placeholderView;
}

- (id)initWithScreen:(id)fp8 backing:(unsigned int)fp12;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (void)magnifyWithEvent:(id)fp8;
- (void)acquireView:(id)fp8;
- (void)restoreView;

@end

@interface GLFBO : GLObject
{
    unsigned int _textureTarget;
    unsigned int _textureName;
    unsigned int _fboName;
    int _width;
    int _height;
}

+ (BOOL)fboIsSupportedOnContext:(id)fp8;
- (id)initWithTarget:(unsigned int)fp8 width:(int)fp12 height:(int)fp16 internalFormat:(unsigned int)fp20 format:(unsigned int)fp24 type:(unsigned int)fp28 context:(id)fp32;
- (void)dealloc;
- (void)bind;
- (void)unbind;
- (void)readBack:(int)fp8:(int)fp12:(int)fp16:(int)fp20:(unsigned int)fp24:(unsigned int)fp28:(void *)fp32;
- (void)readBack:(int)fp8:(int)fp12:(int)fp16:(int)fp20:(unsigned int)fp24:(unsigned int)fp28:(void *)fp32:(unsigned int)fp36;
- (unsigned int)name;
- (unsigned int)textureName;
- (void)setAsSource;
- (void)setAsDestination;

@end

@interface GLSLProgram : GLObject
{
    void *_prog;
    void *_frag;
    void *_vert;
}

+ (id)rgbToYCbCr601Shader:(id)fp8;
- (id)initWithVertexShader:(const char *)fp8 fragmentShader:(const char *)fp12 context:(id)fp16;
- (void)dealloc;
- (void)useProgram;
- (void)unuseProgram;
- (int)uniformLocation:(id)fp8;

@end

@interface GLTexture : GLObject
{
    unsigned int _target;
    unsigned int _name;
    unsigned int _wide;
    unsigned int _high;
}

+ (id)bgraTextureWithOpenGLContext:(id)fp8 pixelsWide:(unsigned int)fp12 pixelsHigh:(unsigned int)fp16;
+ (id)yuvTextureWithOpenGLContext:(id)fp8 pixelsWide:(unsigned int)fp12 pixelsHigh:(unsigned int)fp16;
- (id)initWithOpenGLContext:(id)fp8 target:(unsigned int)fp12 pixelsWide:(unsigned int)fp16 pixelsHigh:(unsigned int)fp20 internalFormat:(unsigned int)fp24 format:(unsigned int)fp28 type:(unsigned int)fp32 pixels:(const void *)fp36;
- (void)dealloc;
- (void)bind;
- (void)unbind;
- (unsigned int)pixelsHigh;
- (unsigned int)pixelsWide;
- (unsigned int)name;
- (unsigned int)target;

@end

@interface GoToChat : NSWindowController
{
    NSButton *_addButton;
    NSTableView *_bookmarkTable;
    ExtendedComboBox *_chatNameField;
    NSView *_sizeView;
    NSTextField *_errorField;
    NSButton *_goButton;
    NSButton *_removeButton;
    ServicePopUp *_servicePopUp;
}

+ (BOOL)canGoToChat;
+ (void)showPanel;
- (void)windowDidLoad;
- (void)dealloc;
- (void)_pruneDeadAccounts;
- (void)_updateUI;
- (void)_updateRecentKey;
- (void)_updateServicePopUp;
- (void)selectedAccountStatusChanged:(id)fp8;
- (void)selectedServiceChanged:(id)fp8;
- (void)comboBoxWillDismiss:(id)fp8;
- (void)controlTextDidChange:(id)fp8;
- (void)windowWillClose:(id)fp8;
- (void)_loadBookmarks;
- (void)_saveBookmarks;
- (void)_removeBookmarkAtIndex:(int)fp8;
- (void)_addBookmarkForRoom:(id)fp8 account:(id)fp12;
- (void)tableViewSelectionDidChange:(id)fp8;
- (void)tableView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)add:(id)fp8;
- (void)remove:(id)fp8;
- (void)go:(id)fp8;
- (void)cancel:(id)fp8;
- (void)showWindow:(id)fp8;

@end

@interface GoToChatTableCell : NSCell
{
}

- (void)drawInteriorWithFrame:(NSRect)fp8 inView:(id)fp24;

@end

@interface GoToChatTableCell (AccountPreferencesTableCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
@end

@interface GradientView : NSView
{
    NSColor *_color1;
    NSColor *_color2;
    NSImage *_gradientImage;
    NSRect _imageRect;
    BOOL _isOpaque;
    BOOL _dropHighlight;
}

- (void)dealloc;
- (void)drawRect:(NSRect)fp8;
- (BOOL)isOpaque;
- (int)_gradientSteps;
- (void)_regenerateGradientImage;
- (void)setColor1:(id)fp8;
- (void)setColor2:(id)fp8;
- (void)setColor1:(id)fp8 color2:(id)fp12;
- (id)color1;
- (id)color2;
- (void)setDropHighlight:(BOOL)fp8;
- (BOOL)dropHighlight;

@end

@interface InstantMessage : ReadOnlyInstantMessage <NSCoding, FZSecureObject>
{
    NSError *_error;
    BOOL _isInvitationMessage;
    NSMutableAttributedString *_attributedSummaryString;
    NSMutableArray *_ddResults;
    NSMutableArray *_ddResultsRemoved;
}

+ (id)instantMessageWithText:(id)fp8 flags:(unsigned int)fp12;
+ (id)fromMeIMHandle:(id)fp8 withText:(id)fp12 fileTransferGUIDs:(id)fp16 flags:(unsigned int)fp20;
- (id)initWithSender:(id)fp8 time:(id)fp12 text:(id)fp16 fileTransferGUIDs:(id)fp20 flags:(unsigned int)fp24 error:(id)fp28 guid:(id)fp32 subject:(id)fp36;
- (id)initWithSender:(id)fp8 fileTransfer:(id)fp12;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)dealloc;
- (id)description;
- (void)setSecurityLevel:(int)fp8;
- (int)securityLevel;
- (BOOL)isInteresting;
- (id)attributedSummaryString;
- (id)summaryString;
- (void)setText:(id)fp8;
- (void)setBackgroundColor:(id)fp8;
- (unsigned int)flags;
- (void)setFlags:(unsigned int)fp8;
- (void)setFileTransferGUIDs:(id)fp8;
- (BOOL)applyDDResults:(id)fp8;
- (id)DDResults;
- (id)DDResultsRemoved;
- (void)clearDDResultsRemoved;
- (void)setIsInvitationMessage:(BOOL)fp8;
- (BOOL)isInvitationMessage;
- (void)setIsAddressedToMe:(BOOL)fp8;
- (id)error;
- (void)setError:(id)fp8;

@end

@interface GroupchatMessage : InstantMessage <FZSecureObject>
{
    NSData *_groupchatHash;
}

- (void)dealloc;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)_groupchatHash;
- (BOOL)hasAnEquivalentMessageIn:(id)fp8;

@end

@interface GroupsEditorController : NSObject
{
    PeopleListController *_peopleListController;
    NSMutableArray *_deletedGroups;
    NSMutableArray *_oldGroups;
    NSMutableArray *_newGroups;
    NSString *_renamingGroup;
    NSString *_deletingGroup;
    BOOL _allowsCustomSort;
    NSWindow *_renameGroupSheet;
    NSTextField *_renameGroupField;
    NSButton *_renameGroupAcceptButton;
    NSWindow *_addGroupSheet;
    NSTextField *_renameGroupLabel;
    NSTextField *_addGroupField;
    NSButton *_addGroupButton;
    NSButton *_newGroupButton;
    NSButton *_deleteGroupButton;
    NSButton *_renameGroupButton;
}

+ (void)addGroupForPeopleListController:(id)fp8;
+ (void)renameGroup:(id)fp8 forPeopleListController:(id)fp12;
+ (void)deleteGroup:(id)fp8 forPeopleListController:(id)fp12;
- (id)initWithPeopleListController:(id)fp8 editingGroups:(BOOL)fp12 renamingGroup:(id)fp16 deletingGroup:(id)fp20;
- (void)awakeFromNib;
- (void)_sheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_beginSheet:(int)fp8;
- (void)endSheet:(id)fp8;
- (void)dealloc;
- (void)_doAddGroup;
- (id)_array:(id)fp8 equivalentString:(id)fp12;
- (void)_doRenameGroup;
- (BOOL)_nameExists:(id)fp8 atRowOtherThan:(int)fp12;
- (BOOL)control:(id)fp8 textShouldEndEditing:(id)fp12;
- (BOOL)tableView:(id)fp8 writeRowsWithIndexes:(id)fp12 toPasteboard:(id)fp16;
- (unsigned int)tableView:(id)fp8 validateDrop:(id)fp12 proposedRow:(int)fp16 proposedDropOperation:(unsigned int)fp20;
- (BOOL)tableView:(id)fp8 acceptDrop:(id)fp12 row:(int)fp16 dropOperation:(unsigned int)fp20;
- (id)_newGroupName;
- (void)_deleteGroupsSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (BOOL)_confirmDeletionOfGroups;
- (void)deleteGroups:(id)fp8 andRenameGroupsFrom:(id)fp12 to:(id)fp16;

@end

@interface HiddenButton : AccessibilityIgnoredButton
{
}

- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;

@end

@interface IMAccount (AccountAdditions)
- (id)buddyListDescription;
- (id)speechDescription;
- (id)menuItemDescription;
- (void)setCollapsedGroups:(id)fp8;
- (id)collapsedGroups;
- (id)defaultImageForID:(id)fp8;
- (id)defaultBuddyIconForIMHandle:(id)fp8;
@end

@interface IMAccount (VCAdditions)
- (void)requestVCWithBuddy:(id)fp8 properties:(id)fp12;
- (void)respondToVCRequestWithBuddy:(id)fp8 properties:(id)fp12;
- (void)declineVCRequestWithBuddy:(id)fp8 response:(int)fp12 vcProps:(id)fp16;
- (void)cancelVCRequestWithBuddy:(id)fp8;
- (void)sendVCCounterProposalToBuddy:(id)fp8 properties:(id)fp12;
- (void)sendVCUpdate:(id)fp8 toBuddy:(id)fp12;
- (void)sendAVMessageToBuddy:(id)fp8 sessionID:(unsigned int)fp12 type:(unsigned int)fp16 userInfo:(id)fp20;
@end

@interface IMAccountController (AccountCleanup)
- (void)removePreferencesForAccount:(id)fp8;
@end

@interface IMAccountController (AccountScripting)
- (id)scriptingAccounts;
- (id)accountForDescription:(id)fp8;
@end

@interface IMAccountController (BuddyListDisplayAdditions)
- (void)_activeAccountChanged:(id)fp8;
- (BOOL)isBuddyListLoadedForAccount:(id)fp8;
- (id)loadBuddyListForAccount:(id)fp8;
- (id)loadBuddyListForAccount:(id)fp8 dontShowWindow:(BOOL)fp12;
- (void)unloadBuddylistForAccount:(id)fp8;
@end

@interface IMAccountController (LoadSaveAdditions)
- (void)_saveSortedAccounts;
- (BOOL)save;
- (void)_sortAccounts;
- (BOOL)load;
@end

@interface IMAccountController (NSTableViewDataSourceMethods)
- (BOOL)tableView:(id)fp8 writeRowsWithIndexes:(id)fp12 toPasteboard:(id)fp16;
- (unsigned int)tableView:(id)fp8 validateDrop:(id)fp12 proposedRow:(int)fp16 proposedDropOperation:(unsigned int)fp20;
- (BOOL)tableView:(id)fp8 acceptDrop:(id)fp12 row:(int)fp16 dropOperation:(unsigned int)fp20;
- (int)numberOfRowsInTableView:(id)fp8;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
@end

@interface IMAccountController (NSTableViewDelegateMethods)
- (BOOL)tableView:(id)fp8 shouldShowCellExpansionForTableColumn:(id)fp12 row:(int)fp16;
- (id)tableView:(id)fp8 toolTipForCell:(id)fp12 rect:(NSRect *)fp16 tableColumn:(id)fp20 row:(int)fp24 mouseLocation:(NSPoint)fp28;
@end

@interface IMAccountController (SwitchToMenuDelegate)
- (void)toggleAccountConnection:(id)fp8;
- (int)_numberOfRealItems;
- (int)numberOfItemsInMenu:(id)fp8;
- (BOOL)menu:(id)fp8 updateItem:(id)fp12 atIndex:(int)fp16 shouldCancel:(BOOL)fp20;
@end

@interface IMFileTransferCenter (Scripting)
- (id)allTransfers;
@end

@interface IMHandle (AVChatExtensions)
- (BOOL)hasNoConferencingCaps;
@end

@interface IMHandle (IMHandle_Additions)
- (id)URLForIM;
@end

@interface IMHandle (PresentityAdditions)
+ (void)_loadStatusImages;
+ (id)invisibleImageName;
+ (id)invisibleStatusImage;
+ (id)etchedInvisibleStatusImage;
+ (id)imageForStatus:(unsigned int)fp8;
+ (id)etchedImageForStatus:(unsigned int)fp8;
+ (BOOL)usesAlternateStatusImages;
+ (void)setUsesAlternateStatusImages:(BOOL)fp8;
+ (id)anonymousPicture;
+ (id)genericPicture;
- (BOOL)supportsARDMuxing;
- (BOOL)hasConferencing;
- (BOOL)hasVideo;
- (BOOL)hasMultiwayVideo;
- (BOOL)hasAudio;
- (BOOL)hasMultiwayAudio;
- (BOOL)blockingIMHandlePictures;
- (void)setBlockingIMHandlePictures:(BOOL)fp8;
- (id)smallStatusIcon;
- (id)anonymousPicture;
- (id)image;
- (BOOL)hasPicture;
- (id)currentFontColor;
- (id)currentBackgroundColor;
- (id)mobileSiblings;
@end

@interface IMHandle (SampleIMHandleAdditions)
+ (id)sampleIMHandle;
@end

@interface IMHandle (Scripting)
- (id)uniqueId;
- (id)scriptAccountName;
- (id)scriptAccountLegacyName;
- (id)scriptName;
- (id)scriptIdleTime;
- (id)scriptStatusMessage;
- (id)scriptStatus;
- (id)scriptImage;
- (id)scriptCaps;
- (id)scriptGroups;
- (id)scriptFirstName;
- (id)scriptLastName;
- (id)scriptFullName;
- (id)scriptService;
- (id)objectSpecifier;
- (void)inviteScriptCommand:(id)fp8;
@end

@interface IMMe (BuddyPictureAdditions)
- (id)myPicture;
- (id)picture;
- (id)image;
- (void)setPicture:(id)fp8;
- (id)balloonColor;
@end

@interface IMPresence (iChatAdditions)
- (BOOL)isMobile;
- (id)mobileDeviceName;
- (BOOL)hasPicture;
- (id)picture;
- (id)smallStatusIcon;
- (id)balloonColor;
- (BOOL)hasValidCertificates;
- (BOOL)canBeSecure;
- (id)tooltipString;
@end

@interface IndexChanged : QCPlugIn
{
    unsigned int _previousIndex;
}

+ (int)executionMode;
+ (int)timeMode;
+ (id)attributes;
- (id)init;
- (BOOL)execute:(id)fp8 atTime:(double)fp12 withArguments:(id)fp20;

@end

@interface InputArea : NSView
{
    NSView *_minibar;
    AnimatingTabView *_tabView;
    NSButton *_vcInviteButton;
    NSButton *_vcAcceptFromTextButton;
    NSButton *_vcAcceptVCOnlyButton;
    float _minHeight;
    int _mode;
}

- (void)awakeFromNib;
- (void)_setTabViewStretchy:(BOOL)fp8;
- (float)setMode:(int)fp8;
- (int)mode;
- (float)minHeight;
- (id)tabView;
- (void)tabView:(id)fp8 willSwitchFromTab:(int)fp12 toTab:(int)fp16 effect:(int *)fp20 direction:(int *)fp24;
- (void)tabViewTransitionWillBegin:(id)fp8;
- (void)tabViewTransitionDidFinish:(id)fp8;

@end

@interface InstantMessage (GroupchatAdditions)
- (id)groupchatMessage;
- (BOOL)isGroupchatMessage;
@end

@interface InstantMessage (MessageAddressingAdditions)
- (void)checkMessageAddressingForChat:(id)fp8;
@end

@interface InstantPopUpSegementedControlCell : NSSegmentedCell
{
    int _segmentToToggle;
}

- (void)_commonCellInit;
- (id)init;
- (id)initWithCoder:(id)fp8;
- (void)setSegmentToAllowToggle:(int)fp8;
- (id)_segmentsDeselectedBySegment:(int)fp8;
- (double)_menuDelayTimeForSegment:(int)fp8;
- (int)interiorBackgroundStyleForSegment:(int)fp8;

@end

@interface InviteCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface JabberAuthRequest : NSWindowController
{
    NSString *_guid;
    Notifier *_notifier;
    IMHandle *_imHandle;
    NSExtendedBox *_box;
    NSView *_bannerContainer;
    AVParticipantView *_bannerView;
}

+ (id)jabberAuthNotifierWithIMHandle:(id)fp8 notifier:(id)fp12;
- (id)_initWithIMHandle:(id)fp8 notifier:(id)fp12;
- (void)awakeFromNib;
- (NSRect)windowWillUseStandardFrame:(id)fp8 defaultFrame:(NSRect)fp12;
- (void)windowDidLoad;
- (void)dealloc;
- (void)acceptButtonPressed:(id)fp8;
- (void)rejectButtonPressed:(id)fp8;
- (void)imHandleInfoUpdated:(id)fp8;
- (id)guid;
- (id)imHandle;

@end

@interface JabberAuthRequest (Scripting)
- (id)scriptID;
- (id)scriptBuddy;
- (id)scriptService;
- (void)acceptScriptCommand:(id)fp8;
- (void)declineScriptCommand:(id)fp8;
- (id)objectSpecifier;
@end

@interface KeyWindow : NSWindow
{
}

- (BOOL)canBecomeKeyWindow;

@end

@interface LinkSheetController : NSObject
{
    NSTextField *_linkTextField;
    NSButton *_okButton;
}

- (void)controlTextDidChange:(id)fp8;

@end

@interface LockButton : NSButton
{
    Animator *_animator;
    BOOL _collapsed;
    BOOL _dimmed;
}

+ (Class)cellClass;
- (id)init;
- (void)dealloc;
- (NSSize)minSize;
- (void)setFadeTitle:(BOOL)fp8;
- (void)setIsWhiteLock:(BOOL)fp8;
- (BOOL)isWhiteLock;
- (void)setDimmed:(BOOL)fp8;
- (BOOL)dimmed;
- (BOOL)isThrobbing;
- (void)setThrob:(BOOL)fp8;
- (void)setLockState:(int)fp8;
- (int)lockState;
- (void)animator:(id)fp8 doStep:(float)fp12 lastStep:(BOOL)fp16;
- (void)setCollapsed:(BOOL)fp8;
- (BOOL)collapsed;
- (void)mouseDown:(id)fp8;
- (void)frameChanged:(id)fp8;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (BOOL)mouseDownCanMoveWindow;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (id)menuForEvent:(id)fp8;

@end

@interface LockButtonCell : NSButtonCell
{
    NSImage *_blackLock;
    NSImage *_redLock;
    float _throbPhase;
    int _lockState;
    BOOL _fadeTitle;
    BOOL _isWhiteLock;
    NSTextFieldCell *_titleCell;
    NSImage *_cacheImage;
    NSButtonCell *_lockCell;
}

- (id)init;
- (void)dealloc;
- (void)setIsWhiteLock:(BOOL)fp8;
- (BOOL)isWhiteLock;
- (NSSize)minCellSize;
- (NSSize)cellSize;
- (BOOL)_isMouseInside:(id)fp8;
- (void)_drawTitleWithFrame:(NSRect)fp8 inView:(id)fp24;
- (NSRect)imageRectForBounds:(NSRect)fp8;
- (NSRect)titleRectForBounds:(NSRect)fp8;
- (void)setFadeTitle:(BOOL)fp8;
- (void)setThrobPhase:(float)fp8;
- (void)setLockState:(int)fp8;
- (int)lockState;
- (void)drawInteriorWithFrame:(NSRect)fp8 inView:(id)fp24;
- (BOOL)accessibilityIsIgnored;

@end

@interface MessageEditorController : NSObject
{
    NSWindow *_window;
    CustomMessageTableView *_availableTable;
    CustomMessageTableView *_awayTable;
    NSButton *_availableAddButton;
    NSButton *_awayAddButton;
    NSButton *_availableRemoveButton;
    NSButton *_awayRemoveButton;
    NSButton *_autoCreateCheckbox;
    NSPopUpButton *_rememberLastPopup;
    NSMutableArray *_availableMessages;
    NSMutableArray *_awayMessages;
    NSString *_messageToSet;
    BOOL _setMessage;
    unsigned int _startingStatus;
    NSArray *_accounts;
}

- (void)_statusIndicatorDidChange:(id)fp8;
- (void)awakeFromNib;
- (void)dealloc;
- (id)currentMessage;
- (void)setCurrentStatus:(unsigned int)fp8 andMessage:(id)fp12;
- (void)runAsSheetInWindow:(id)fp8 forAccounts:(id)fp12;
- (void)_trimList:(id)fp8;
- (void)sheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)endSheet:(id)fp8;
- (id)availableMessages;
- (id)awayMessages;
- (void)setAvailableMessages:(id)fp8;
- (void)setAwayMessages:(id)fp8;
- (void)_determineList:(id *)fp8 andTable:(id *)fp12 toUseForStatus:(unsigned int)fp16;
- (void)newItem:(id)fp8;
- (void)removeItems:(id)fp8;
- (void)autoCreateChecked:(id)fp8;
- (void)changeNumberOfRememberedMessages:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (BOOL)tableView:(id)fp8 canDeleteRows:(id)fp12;
- (BOOL)tableView:(id)fp8 deleteRows:(id)fp12;
- (BOOL)control:(id)fp8 textShouldEndEditing:(id)fp12;
- (BOOL)control:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;
- (void)tableViewSelectionDidChange:(id)fp8;
- (BOOL)tableView:(id)fp8 writeRowsWithIndexes:(id)fp12 toPasteboard:(id)fp16;
- (unsigned int)tableView:(id)fp8 validateDrop:(id)fp12 proposedRow:(int)fp16 proposedDropOperation:(unsigned int)fp20;
- (BOOL)tableView:(id)fp8 acceptDrop:(id)fp12 row:(int)fp16 dropOperation:(unsigned int)fp20;

@end

@interface ModifierTabView : AnimatingTabView
{
    unsigned int _modifierFlags[5];
    BOOL _disabled;
}

- (id)initWithFrame:(NSRect)fp8;
- (id)initWithCoder:(id)fp8;
- (void)dealloc;
- (void)_updateNotification;
- (void)_flagsChanged:(id)fp8;
- (void)setModifierFlags:(unsigned int [5])fp8;
- (void)setStandardFlags;
- (unsigned int *)modifierFlags;
- (void)setDisabled:(BOOL)fp8;
- (BOOL)isDisabled;
- (id)tabViewItemForFlags:(unsigned int)fp8;

@end

@interface MsgComposePrefsBox : NSBox
{
    Prefs_MsgCompose *_prefsManager;
}

- (unsigned int)validModesForFontPanel:(id)fp8;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)changeColor:(id)fp8;
- (void)changeAttributes:(id)fp8;
- (void)changeFont:(id)fp8;
- (void)setTranscriptStyleFromMenuItem:(id)fp8;
- (void)setChatShowsNames:(id)fp8;
- (void)setChatShowsNamesAndPictures:(id)fp8;
- (void)setChatShowsPictures:(id)fp8;
- (void)toggleHideSmileys:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;

@end

@interface MultiBuddyImageView : NSView
{
    NSArray *_imHandles;
    unsigned int _curImage;
    unsigned int _oldImage;
    float _opacity;
    BOOL _transitionPending;
    BOOL _animateBuddyIcon;
    Animator *_animator;
}

- (void)_commonInit;
- (id)initWithFrame:(NSRect)fp8;
- (id)initWithCoder:(id)fp8;
- (void)dealloc;
- (void)_pictureChanged:(id)fp8;
- (void)_subscribe:(BOOL)fp8;
- (void)setIMHandle:(id)fp8;
- (void)setIMHandles:(id)fp8;
- (void)setAllowsBuddyIconAnimation:(BOOL)fp8;
- (BOOL)allowsBuddyIconAnimation;
- (void)_needsDrawFromAnimate:(id)fp8;
- (void)setOpacity:(float)fp8;
- (float)opacity;
- (void)_nextImage;
- (void)_startTransition;
- (void)_delayTransition;
- (void)animator:(id)fp8 doStep:(float)fp12 lastStep:(BOOL)fp16;
- (void)startCycling;
- (void)stopCycling;
- (void)_drawPicture:(id)fp8 fraction:(float)fp12;
- (void)drawRect:(NSRect)fp8;

@end

@interface RolloverButton : NSControl
{
    NSTextFieldCell *_messageCell;
    NSPopUpButtonCell *_popUpButtonCell;
    NSPopUpButtonCell *_triangleCell;
    NSString *_message;
    BOOL _toggles;
    BOOL _state;
    unsigned int _alignment;
    unsigned int _imagePosition;
    id _target;
    SEL _action;
    BOOL _mouseOver;
    BOOL _mouseDown;
    int _trackingRectTag;
    NSRect _activeRect;
    float _cornerRadius;
    NSSize _triangleSize;
    int _leftMargin;
    int _rightMargin;
    BOOL _rollsOver;
    id _delegate;
}

+ (id)_lineBreakAttributes;
- (void)setShowsDropDownArrow:(BOOL)fp8;
- (id)initWithFrame:(NSRect)fp8;
- (void)_startNotifications;
- (void)_stopNotifications;
- (void)awakeFromNib;
- (void)dealloc;
- (id)customCell;
- (BOOL)toggles;
- (void)setToggles:(BOOL)fp8;
- (void)setState:(BOOL)fp8;
- (BOOL)state;
- (void)setImagePosition:(unsigned int)fp8;
- (unsigned int)alignment;
- (void)setAlignment:(unsigned int)fp8;
- (id)target;
- (void)setTarget:(id)fp8;
- (SEL)action;
- (void)setAction:(SEL)fp8;
- (void)clearActiveRect;
- (void)updateActiveRect;
- (id)menu;
- (void)addMenuItem:(id)fp8;
- (void)resetMenu;
- (NSRect)messageRect;
- (NSRect)triangleRect;
- (NSRect)_popupRect;
- (void)_resizeEditingIfNeeded;
- (float)bgTextColorForRollover:(BOOL)fp8;
- (float)fgTextColorForRollover:(BOOL)fp8;
- (void)drawTitleInRect:(NSRect)fp8;
- (void)drawRect:(NSRect)fp8;
- (BOOL)canBecomeKeyView;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (BOOL)mouseDownCanMoveWindow;
- (id)menuForEvent:(id)fp8;
- (void)_runPopUp:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)rightMouseDown:(id)fp8;
- (void)mouseDragged:(id)fp8;
- (void)mouseUp:(id)fp8;
- (void)setRollsOver:(BOOL)fp8;
- (BOOL)rollsOver;
- (void)_removeTrackingRect;
- (void)_updateTrackingRect;
- (void)viewWillStartLiveResize;
- (void)viewDidEndLiveResize;
- (void)setFrameSize:(NSSize)fp8;
- (void)setFrameOrigin:(NSPoint)fp8;
- (void)viewWillMoveToWindow:(id)fp8;
- (void)viewDidMoveToWindow;
- (void)refreshTracking;
- (void)viewDidMoveToSuperview;
- (void)windowDidResize:(id)fp8;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (void)setAttributedTitle:(id)fp8;
- (id)title;
- (void)setTitle:(id)fp8;
- (void)setStringValue:(id)fp8;
- (BOOL)acceptsFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)becomeFirstResponder;
- (void)windowDidResignKey:(id)fp8;
- (void)performClick:(id)fp8;

@end

@interface MyNameControl : RolloverButton
{
    float _heightOffset;
}

- (void)awakeFromNib;
- (void)setHeightOffset:(float)fp8;
- (float)heightOffset;
- (void)drawTitleInRect:(NSRect)fp8;

@end

@interface MyPictureControl : FezImageView
{
    Account *_account;
    int _trackingRectTag;
    BOOL _mouseOver;
    NSButtonCell *_imageCell;
}

+ (void)configureDefaultImagePicker;
+ (BOOL)usePictureTaker;
- (void)awakeFromNib;
- (void)setAccount:(id)fp8;
- (void)dealloc;
- (void)_updateUI;
- (void)_myPictureChanged:(id)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (void)_needsDrawFromAnimate:(id)fp8;
- (void)_ensurePickerConfigured;
- (void)_updatePickerWithPicture:(id)fp8;
- (id)videoFrameProviderForPictureTaker:(id)fp8;
- (void)pictureTakerDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_centerPickerInParentWindow:(id)fp8;
- (void)_openWidgetOn:(id)fp8 asDownload:(BOOL)fp12 centerOnScreen:(BOOL)fp16;
- (void)openPicturePickerAndCenterOnScreen:(BOOL)fp8;
- (void)openPicturePickerWithDownloadedImage:(id)fp8;
- (void)_setImageAndNotifyTarget:(id)fp8;
- (void)_updateTrackingRect;
- (void)setFrame:(NSRect)fp8;
- (void)windowDidResize:(id)fp8;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (void)drawRect:(NSRect)fp8;
- (void)mouseDown:(id)fp8;
- (void)performClick:(id)fp8;

@end

@interface MyPictureControl (MyPictureControlAccessibility)
- (id)accessibilityActionNames;
- (void)accessibilityPerformAction:(id)fp8;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(NSPoint)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityTitleAttribute;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsIgnored;
@end

@interface MyProfileTextView : NSTextView
{
}

- (void)changeDocumentBackgroundColor:(id)fp8;

@end

@interface MyProfileWindow : NSWindowController <NSTextViewDelegate>
{
    NSPanel *_linkSheet;
    ExtendedTextField *_linkTextField;
    LinkSheetController *_linkSheetController;
    NSColorWell *_backgoundColorWell;
    MyProfileTextView *_profileText;
    NSAttributedString *_originalString;
    NSColor *_originalColor;
    BOOL _isDirty;
    BOOL _isSaving;
}

+ (void)showWindow;
- (void)showWindow:(id)fp8;
- (id)init;
- (BOOL)dirty;
- (void)setDirty:(BOOL)fp8;
- (void)_updateProfile;
- (void)windowDidLoad;
- (void)awakeFromNib;
- (void)_textDidChange:(id)fp8;
- (void)_errorSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (unsigned int)validModesForFontPanel:(id)fp8;
- (BOOL)_showErrorSheetTitle:(id)fp8 text:(id)fp12 helpAnchor:(id)fp16;
- (void)confirmSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_showCloseConfirmationSheet;
- (BOOL)windowShouldClose:(id)fp8;
- (void)_handleErrorPosted:(id)fp8;
- (void)finish:(id)fp8;
- (void)_reallyFinish;
- (void)cancel:(id)fp8;
- (void)changeColor:(id)fp8;
- (void)changeBackgroundColor:(id)fp8;
- (void)changeTextFont:(id)fp8;
- (void)windowWillClose:(id)fp8;
- (void)dealloc;
- (void)insertSmiley:(id)fp8;
- (id)_selectedLink_adjustingSelection:(BOOL)fp8;
- (BOOL)_insertLinkAtSelection:(id)fp8 withText:(id)fp12;
- (void)_applyLinkToSelection:(id)fp8;
- (void)addLink:(id)fp8;
- (void)acceptLinkText:(id)fp8;
- (void)cancelLinkSheet:(id)fp8;
- (void)removeLinkSheet:(id)fp8;
- (void)_linkSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (BOOL)textView:(id)fp8 clickedOnLink:(id)fp12 atIndex:(unsigned int)fp16;
- (BOOL)isSaving;
- (void)setIsSaving:(BOOL)fp8;

@end

@interface MyScrollView : NSScrollView
{
}

- (void)awakeFromNib;
- (void)viewDidEndLiveResize;

@end

@interface MyScroller : NSScroller
{
}

- (void)drawRect:(NSRect)fp8;

@end

@interface MyStatusControl : RolloverButton
{
    id _statusDelegate;
    int _currentStatus;
    int _oldStatus;
    BOOL _isiTunesMessage;
}

+ (BOOL)stringIsStatusType:(id)fp8;
- (void)dealloc;
- (void)viewDidMoveToWindow;
- (void)awakeFromNib;
- (void)setStatus:(int)fp8 message:(id)fp12;
- (void)addMenuItemForInvisible;
- (void)addMenuItemForITunesStatus;
- (void)addMenuItemsForStatus:(int)fp8 customizable:(BOOL)fp12;
- (BOOL)validateMenuItem:(id)fp8;
- (void)setStatusAndMessage:(id)fp8;
- (void)setInvisibleStatus:(id)fp8;
- (void)_startEditingCurrentStatus;
- (void)startEditingCurrentStatus;
- (void)customStatusAndMessage:(id)fp8;
- (BOOL)textShouldBeginEditing:(id)fp8;
- (BOOL)textShouldEndEditing:(id)fp8;
- (void)textDidEndEditing:(id)fp8;
- (void)_windowResignedKey:(id)fp8;
- (NSRect)triangleRect;
- (float)_bgTextColorForRollover:(BOOL)fp8;
- (float)_fgTextColorForRollover:(BOOL)fp8;
- (void)setCurrentMessage:(id)fp8;
- (void)setTitle:(id)fp8;
- (id)currentMessage;
- (void)setCurrentStatus:(int)fp8;
- (BOOL)textView:(id)fp8 doCommandBySelector:(SEL)fp12;
- (void)textDidChange:(id)fp8;
- (void)editMessageField:(BOOL)fp8;

@end

@interface MyStatusControl (AccessibilityAdditions)
- (id)accessibilityTitleAttribute;
- (id)accessibilityDescriptionAttribute;
@end

@interface NSAlert (iChatAlertAdditions)
+ (void)beginAlertSheetWithMessage:(id)fp8 text:(id)fp12 defaultButton:(id)fp16 alternateButton:(id)fp20 otherButton:(id)fp24 helpAnchor:(id)fp28 audibleAlert:(BOOL)fp32 documentWindow:(id)fp36 alertStyle:(unsigned int)fp40 delegate:(id)fp44 didEndSelector:(SEL)fp48 didDismissSelector:(SEL)fp52 contextInfo:(void *)fp56;
+ (void)beginAlertSheetWithMessage:(id)fp8 text:(id)fp12 helpAnchor:(id)fp16;
+ (void)beginAlertSheetWithMessage:(id)fp8 text:(id)fp12;
+ (int)runAlertSheetWithMessage:(id)fp8 text:(id)fp12 defaultButton:(id)fp16 alternateButton:(id)fp20 otherButton:(id)fp24 helpAnchor:(id)fp28 audibleAlert:(BOOL)fp32 alertStyle:(unsigned int)fp36;
+ (int)runAlertSheetWithMessage:(id)fp8 text:(id)fp12 helpAnchor:(id)fp16;
+ (int)runAlertSheetWithMessage:(id)fp8 text:(id)fp12;
@end

@interface NSAppleScript (iChatAdditionsCopiedFromMessage)
+ (id)_newScriptAtPath:(id)fp8 errorInfo:(id *)fp12;
+ (id)executeHandlerWithEventClass:(unsigned long)fp8 eventID:(unsigned long)fp12 inScriptAtPath:(id)fp16 withArguments:(id)fp20 forEvent:(int)fp24 forIMHandle:(id)fp28 usingGlobalPrefs:(BOOL)fp32 error:(id *)fp36;
- (id)executeHandlerWithEventClass:(unsigned long)fp8 eventID:(unsigned long)fp12 andArguments:(id)fp16 error:(id *)fp20;
@end

@interface NSApplication (Scripting)
- (void)loginScriptCommand:(id)fp8;
- (void)logoutScriptCommand:(id)fp8;
- (void)showChatChooserCommand:(id)fp8;
- (void)storeRecentPictureCommand:(id)fp8;
- (void)inviteScriptCommand:(id)fp8;
- (void)setMyStatus:(id)fp8;
- (id)myStatus;
- (void)setMyStatusMessage:(id)fp8;
- (id)myStatusMessage;
- (id)myIdleTime;
- (void)setMyImage:(id)fp8;
- (id)myImage;
- (id)scriptActiveAVChat;
- (id)buddies;
- (id)valueInBuddiesWithName:(id)fp8;
- (id)valueInBuddiesWithUniqueID:(id)fp8;
- (id)services;
- (id)valueInServicesWithUniqueID:(id)fp8;
- (id)valueInServicesWithName:(id)fp8;
- (id)scriptFileTransfers;
- (id)objectInScriptFileTransfersAtIndex:(unsigned int)fp8;
- (id)valueInScriptFileTransfersWithUniqueID:(id)fp8;
- (id)scriptChats;
- (id)objectInScriptChatsAtIndex:(unsigned int)fp8;
- (id)valueInScriptChatsWithUniqueID:(id)fp8;
- (id)valueInScriptChatsWithName:(id)fp8;
- (id)scriptAVChats;
- (id)objectInScriptAVChatsAtIndex:(unsigned int)fp8;
- (id)valueInScriptAVChatsWithUniqueID:(id)fp8;
- (id)scriptAudioChats;
- (id)objectInScriptAudioChatsAtIndex:(unsigned int)fp8;
- (id)valueInScriptAudioChatsWithUniqueID:(id)fp8;
- (id)scriptVideoChats;
- (id)objectInScriptVideoChatsAtIndex:(unsigned int)fp8;
- (id)valueInScriptVideoChatsWithUniqueID:(id)fp8;
- (id)scriptTextChats;
- (id)objectInScriptTextChatsAtIndex:(unsigned int)fp8;
- (id)valueInScriptTextChatsWithUniqueID:(id)fp8;
- (id)valueInScriptTextChatsWithName:(id)fp8;
- (id)scriptAuthorizationRequests;
- (id)objectInScriptAuthorizationRequestsAtIndex:(unsigned int)fp8;
- (id)valueInScriptAuthorizationRequestsWithUniqueID:(id)fp8;
@end

@interface NSArray (FezSearchExtensions)
- (unsigned int)indexOfObject:(id)fp8 usingComparator:(SEL)fp12;
@end

@interface NSArray (IMHandle_Additions)
- (id)URLForChatRoom;
- (id)URLForIMOrChatRoom;
@end

@interface NSArray (StringJoiningAdditinos)
- (id)componentsJoinedIntoListWithMaxItems:(int)fp8;
@end

@interface NSAttributedString (ChatFieldAdditions)
- (id)unfixedAttributedString;
@end

@interface NSBezierPath (DebuggingAdditions)
- (void)drawControlPoint1:(NSPoint)fp8 controlPoint2:(NSPoint)fp16 color:(id)fp24;
@end

@interface NSControl (TextFieldCellAdditions)
- (void)setRomanOnly:(BOOL)fp8;
- (BOOL)isRomanOnly;
@end

@interface NSData (Scripting)
+ (id)scriptingImageWithDescriptor:(id)fp8;
+ (id)scriptingTiffPictureWithDescriptor:(id)fp8;
- (id)scriptingImageDescriptor;
- (id)scriptingTiffPictureDescriptor;
@end

@interface NSDictionary (CompositionAdditions)
- (id)identifier;
- (id)localizedName;
- (id)attributes;
- (BOOL)wantsSlider;
- (BOOL)backdropsEnabled;
- (id)backdropsForegroundPath;
- (id)backdropsBackgroundPath;
- (BOOL)allowDragAndDrop;
@end

@interface NSDictionary (TheaterAppURL)
- (int)compareAppNames:(id)fp8;
@end

@interface NSDictionary (VCChannelNegotiationAdditions)
- (id)vcChannelRequestID;
@end

@interface NSExtendedBox : NSBox
{
    BOOL _isNewAquaDivider;
    BOOL _isAudioDivider;
    BOOL _isLeopardDivider;
    BOOL _isVideoBorder;
    BOOL _isSingleLineDivider;
    BOOL _isNetworkTab;
    NSColor *_interiorColor;
    BOOL _fadeToSecondaryInteriorColor;
    BOOL _fadeToSecondaryInteriorColorVertically;
    NSColor *_secondaryInteriorColor;
    float _lengthForFadeToSecondaryInteriorColor;
    BOOL _drawGradient;
    NSString *_string;
    NSString *_shortString;
    BOOL _drawRoundedBox;
    NSColor *_roundedBoxBorderColor;
    NSColor *_roundedBoxInteriorColor;
    BOOL _isOpaque;
    float _opacity;
    float _radius;
    NSImage *_backgroundImage;
}

+ (void)initialize;
+ (id)_titleAttributes;
+ (id)_titleDisabledAttributes;
+ (id)_titleShadowAttributes;
+ (void)_setShadowStyle;
- (id)initWithFrame:(NSRect)fp8;
- (void)dealloc;
- (void)awakeFromNib;
- (void)setSingleLineDivider:(BOOL)fp8;
- (BOOL)singleLineDivider;
- (void)setIsNewAquaDivider:(BOOL)fp8;
- (BOOL)isNewAquaDivider;
- (void)setBackgroundImage:(id)fp8;
- (id)backgroundImage;
- (void)setIsNetworkTab:(BOOL)fp8;
- (BOOL)isNetworkTab;
- (void)setRadius:(float)fp8;
- (float)radius;
- (void)setOpacity:(float)fp8;
- (float)opacity;
- (void)setDrawsRoundedBox:(BOOL)fp8;
- (BOOL)drawsRoundedBox;
- (void)setRoundedBoxBorderColor:(id)fp8;
- (id)roundedBoxBorderColor;
- (void)setRoundedBoxInteriorColor:(id)fp8;
- (id)roundedBoxInteriorColor;
- (BOOL)isLeopardDivider;
- (void)setIsLeopardDivider:(BOOL)fp8;
- (void)setIsAudioDivider:(BOOL)fp8;
- (BOOL)isAudioDivider;
- (void)setIsVideoBorder:(BOOL)fp8;
- (BOOL)isVideoBorder;
- (void)setInteriorColor:(id)fp8;
- (void)setFadeToSecondaryInteriorColor:(BOOL)fp8;
- (BOOL)fadeToSecondaryInteriorColor;
- (void)setFadeToSecondaryInteriorColorVertically:(BOOL)fp8;
- (BOOL)fadeToSecondaryInteriorColorVertically;
- (void)setSecondaryInteriorColor:(id)fp8;
- (id)secondaryInteriorColor;
- (void)setLengthForFadeToSecondaryInteriorColor:(float)fp8;
- (float)lengthFoFadeToSecondaryInteriorColorLength;
- (void)setDrawGradient:(BOOL)fp8;
- (BOOL)drawGradient;
- (id)interiorColor;
- (void)setShortStringValue:(id)fp8;
- (id)shortStringValue;
- (void)setStringValue:(id)fp8;
- (id)stringValue;
- (void)setIsOpaque:(BOOL)fp8;
- (BOOL)isOpaque;
- (void)drawRect:(NSRect)fp8;

@end

@interface NSExtendedComboBoxCell : NSComboBoxCell
{
    BOOL _drawPopUpButton;
    NSTextFieldCell *_textFieldCell;
}

- (void)dealloc;
- (void)setPopUpButtonVisible:(BOOL)fp8;
- (BOOL)isPopUpButtonVisible;
- (void)drawWithFrame:(NSRect)fp8 inView:(id)fp24;
- (NSRect)boundsForTextCell:(NSRect)fp8;
- (NSRect)boundsForButtonCell:(NSRect)fp8;
- (float)_buttonWidth;

@end

@interface NSExtendedImageView : NSImageView
{
    BOOL _mouseDownCanMoveWindow;
}

- (BOOL)mouseDownCanMoveWindow;
- (void)setMouseDownCanMoveWindow:(BOOL)fp8;

@end

@interface NSFileManager (UserFolders)
+ (id)userDownloadsFolder;
+ (id)userDesktopFolder;
- (id)firstValidDirectory:(id)fp8;
@end

@interface NSImage (FadeDrawingAdditions)
+ (id)gradientOfSize:(NSSize)fp8 topBorder:(id)fp16 top:(id)fp20 bottom:(id)fp24 bottomBorder:(id)fp28;
- (void)drawFadeAtPoint:(NSPoint)fp8 fromRect:(NSRect)fp16 start:(float)fp32 end:(float)fp36;
@end

@interface NSImage (Private_Additions)
- (NSRect)bounds;
@end

@interface NSMenu (NSMenuItemReplacementAdditions)
- (void)replaceItem:(id)fp8 withItem:(id)fp12;
@end

@interface NSMutableAttributedString (FezCharAdditions)
- (void)setMaxCharacterWidth:(int)fp8;
@end

@interface NSObject (FezExtendedTableViewDataSource)
- (BOOL)tableView:(id)fp8 canPasteFromPasteboard:(id)fp12;
- (BOOL)tableView:(id)fp8 pasteFromPasteboard:(id)fp12;
- (BOOL)tableView:(id)fp8 canDeleteRows:(id)fp12;
- (BOOL)tableView:(id)fp8 deleteRows:(id)fp12;
- (void)tableView:(id)fp8 performDragOperation:(unsigned int)fp12 withPasteboard:(id)fp16;
- (BOOL)tableView:(id)fp8 groupRowAtIndex:(int)fp12;
- (unsigned int)tableView:(id)fp8 groupRowGreaterThanIndex:(unsigned int)fp12;
- (id)tableView:(id)fp8 titleForGroupRow:(int)fp12;
- (BOOL)tableView:(id)fp8 prepareTooltip:(id)fp12 row:(int)fp16;
- (id)tableView:(id)fp8 numberStringForGroupRow:(int)fp12 ignoreCollapsed:(BOOL)fp16;
- (void)tableView:(id)fp8 groupRowClicked:(int)fp12;
- (id)tableView:(id)fp8 menuForGroupRow:(int)fp12;
- (void)tableView:(id)fp8 willReturnMenu:(id)fp12 forRow:(int)fp16;
- (void)tableView:(id)fp8 mouseExited:(id)fp12;
- (void)tableView:(id)fp8 mouseEntered:(id)fp12;
- (void)tableView:(id)fp8 mouseMoved:(id)fp12;
- (BOOL)tableView:(id)fp8 shouldStartDraggingForGroupRow:(int)fp12;
- (void)tableView:(id)fp8 dragStarted:(id)fp12 originPoint:(NSPoint)fp16;
- (void)tableViewTrackingChanged:(id)fp8;
- (BOOL)tableView:(id)fp8 shouldDrawWhenMovingFrom:(NSPoint)fp12 toPoint:(NSPoint)fp20;
- (id)tableView:(id)fp8 cellTipForRow:(int)fp12;
- (id)tableView:(id)fp8 tooltipForRow:(int)fp12;
- (BOOL)tableView:(id)fp8 shouldShowTooltipForRow:(int)fp12;
@end

@interface NSObject (MainThreadKVO)
- (void)observeValueForKeyPathOnMainThread:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)_observeValueForKeyPathOnMainThread:(id)fp8;
- (void)performObserveValueForKeyPathOnMainThread:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
@end

@interface NSObject (MenuTrackingAdditions)
- (void)performSelector:(SEL)fp8 withObject:(id)fp12 afterDelay:(double)fp16 ignoreMenuTracking:(BOOL)fp24;
@end

@interface NSObject (VirtualScreenNotifications)
- (void)registerForVirtualScreenChangedNotificiations;
- (void)unregisterForVirtualScreenChangedNotificiations;
- (void)postVirtualScreenChangedNotificiation:(int)fp8;
- (void)_handleVirtualScreenChangedNotificiations:(id)fp8;
- (void)handleVirtualScreenChangedNotificiation:(int)fp8;
@end

@interface NSOpenGLContext (FezAdditions)
- (id)initWithCompatibleFormatIncluding:(int *)fp8 shareContext:(id)fp12;
@end

@interface NSOpenGLContext (QCSharedContext)
+ (id)_sharedQCCGLContext;
+ (id)sharedContext;
+ (BOOL)isCoreImageAccelerated;
+ (BOOL)supportsAcceleratedEffects;
+ (BOOL)supportsBackdrops;
@end

@interface NSOpenGLContext (VirtualScreenNotifications)
+ (int)currentPreferedVirtualScreen;
@end

@interface NSOpenGLPixelFormat (FezAdditions)
+ (id)compatiblePixelFormatIncludingAttributes:(int *)fp8 forContext:(id)fp12;
@end

@interface NSPanel (SecureWindowUtils)
- (id)lockButton;
- (void)setSecurityLevel:(int)fp8;
- (int)securityLevel;
@end

@interface NSPasteboard (FezUtilAdditions)
+ (id)pasteboardTypeFromCarbonDragFlavor:(unsigned long)fp8;
+ (id)dropDirectory;
- (id)_URLsFromiTunesDrag:(id)fp8;
- (id)filePaths;
- (id)fileURLs;
- (BOOL)hasFilenames;
- (BOOL)hasFilePathsOrImage;
- (id)filenamesForImage;
@end

@interface NSPreferences (PrivateOverrides)
- (id)currentModule;
@end

@interface NSPreferencesModule (PrivateImpls)
- (void)setMinSize:(NSSize)fp8;
@end

@interface NSRecursiveLock (PrivateAdditions)
- (BOOL)lockBeforeTimeout:(double)fp8 fromLine:(int)fp16;
- (void)unlockFromLine:(int)fp8;
@end

@interface NSSavePanel (HackToGetTheOKButton)
- (id)okButton;
@end

@interface NSScreen (CaptureAdditions)
+ (id)screenWithMenu;
+ (void)captureAllScreens;
+ (void)uncaptureAllScreens;
- (unsigned int)deviceID;
- (BOOL)capture;
- (BOOL)uncapture;
@end

@interface NSScreen (FezExtensions)
+ (id)screenForRect:(NSRect)fp8;
- (unsigned int)directDisplayID;
@end

@interface NSSegmentedControl (AccessibilityAdditions)
- (void)setAccessibilityDescription:(id)fp8 forSegment:(int)fp12;
@end

@interface NSSound (iChatSoundAdditions)
+ (id)systemLibrarySoundsDirs;
+ (id)librarySoundsDirs;
+ (id)networkLibrarySoundsDirs;
+ (id)tildeLibrarySoundsDirs;
+ (id)appendSoundsToPaths:(id)fp8;
@end

@interface NSSoundPopUpButton : NSPopUpButton <NSSoundDelegate>
{
    NSButton *addSoundButton;
    NSButton *removeSoundButton;
    NSButton *doneButton;
    NSTableView *soundTableView;
    NSMutableArray *userSounds;
    NSPanel *soundPanel;
    id delegate;
    NSMenu *soundMenu;
    NSString *_selectedItem;
    NSMenuItem *_otherItem;
    BOOL _amIAwake;
    BOOL _showSoundsFromBundle;
    BOOL _showSoundsFromDelegate;
    BOOL _showSoundsFromSystemLibrary;
    BOOL _showSoundsFromLibrary;
    BOOL _showSoundsFromNetworkLibrary;
    BOOL _showSoundsFromTildeLibrary;
    BOOL _showNone;
    BOOL _showAddRemove;
    NSSound *_currentSound;
}

+ (id)soundsAtPaths:(id)fp8;
- (void)_appendSoundsFromDirectories:(id)fp8;
- (void)_popupMenuChanged:(id)fp8;
- (void)_configureSoundMenu;
- (void)_playSound;
- (void)sound:(id)fp8 didFinishPlaying:(BOOL)fp12;
- (void)_playSoundForItemAtIndex:(int)fp8;
- (void)_invalidateSoundMenu;
- (id)otherMenuItem;
- (void)_commonInit;
- (id)initWithFrame:(NSRect)fp8;
- (id)initWithCoder:(id)fp8;
- (void)awakeFromNib;
- (id)menu;
- (id)soundPath;
- (int)selectSoundPath:(id)fp8;
- (void)openPanelDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)addRemoveMailSound:(id)fp8;
- (void)soundSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)newSoundClicked:(id)fp8;
- (void)removeSoundClicked:(id)fp8;
- (void)doneClicked:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableViewSelectionDidChange:(id)fp8;
- (BOOL)showSoundsFromBundle;
- (void)setShowSoundsFromBundle:(BOOL)fp8;
- (BOOL)showSoundsFromDelegate;
- (void)setShowSoundsFromDelegate:(BOOL)fp8;
- (BOOL)showSoundsFromSystemLibrary;
- (void)setShowSoundsFromSystemLibrary:(BOOL)fp8;
- (BOOL)showSoundsFromLibrary;
- (void)setShowSoundsFromLibrary:(BOOL)fp8;
- (BOOL)showSoundsFromNetworkLibrary;
- (void)setShowSoundsFromNetworkLibrary:(BOOL)fp8;
- (BOOL)showSoundsFromTildeLibrary;
- (void)setShowSoundsFromTildeLibrary:(BOOL)fp8;
- (BOOL)showNone;
- (void)setShowNone:(BOOL)fp8;
- (BOOL)showAddRemove;
- (void)setShowAddRemove:(BOOL)fp8;
- (void)stopCurrentSound;
- (void)dealloc;
- (void)finalize;

@end

@interface NSString (FadeDrawingAdditions)
- (void)_rebuildFadeDrawingImageIfNeeded:(NSSize)fp8;
- (void)drawAtPoint:(NSPoint)fp8 fromBounds:(NSRect)fp16 fadeLeft:(int)fp32 fadeRight:(int)fp36 withAttributes:(id)fp40;
@end

@interface NSTextField (AutoResize)
- (float)autosizeHeight;
@end

@interface NSTextField (FindPanelAdditions)
- (BOOL)isFirstResponder;
@end

@interface NSTextField (iChatAdditions)
- (float)autosizeWithStringValue:(id)fp8 resizeWindow:(BOOL)fp12 expandOnly:(BOOL)fp16;
- (BOOL)textIsNonEmpty;
- (id)rawAttributedStringValue;
@end

@interface NSTextFieldCell (TextFieldCellAdditions)
- (id)romanOnlyLocales;
- (BOOL)allowsOnlyRomanCharacters;
- (void)setAllowsOnlyRomanCharacters:(BOOL)fp8;
@end

@interface NSTextView (FezUtilAdditions)
- (BOOL)writeAttributedStringSelectionToPasteboard:(id)fp8;
- (id)attachmentForFile:(id)fp8;
- (BOOL)_pasteAttributedStringWithAttachments:(id)fp8 plainString:(id)fp12;
- (BOOL)_pasteAttributedString:(id)fp8 plainString:(id)fp12;
- (BOOL)pasteStringFromPasteboard:(id)fp8 withAttributes:(id)fp12;
- (BOOL)pasteFezIMFromPasteboard:(id)fp8;
- (BOOL)pasteRtfdFromPasteboard:(id)fp8;
- (BOOL)pasteRtfFromPasteboard:(id)fp8;
- (BOOL)pasteAttributedStringFromPasteboard:(id)fp8;
@end

@interface NSUserDefaults (BackdropsPrefs)
- (void)setBackdropsBackgroundPath:(id)fp8 forKey:(id)fp12;
- (id)backdropsBackgroundPathForKey:(id)fp8;
@end

@interface NSUserDefaults (DeferredSavingAdditions)
- (BOOL)delayedSynchronize;
- (void)applicationWillTerminate:(id)fp8;
@end

@interface NSView (BalloonDrawingAdditions)
- (void)drawBalloonInRect:(NSRect)fp8 tailAtPoint:(NSPoint)fp24 withShadow:(id)fp32 fillColor:(id)fp36 strokeColor:(id)fp40 lineWidth:(float)fp44 curve:(float)fp48;
@end

@interface NSView (CollapseView_Additions)
- (void)_setAutoresizingVerticalMask:(int)fp8;
@end

@interface NSView (FezUtilAdditions)
- (BOOL)flipContextIfNecessary;
- (void)unflipContext:(BOOL)fp8;
- (NSPoint)mouseLocationInView;
- (BOOL)mouseInRect:(NSRect)fp8;
- (BOOL)mouseInView;
- (void)_reposition:(int)fp8;
- (void)bringToFront;
- (void)sendToBack;
- (void)setMaxX:(float)fp8;
- (void)setFocusRingNeedsDisplay;
- (NSPoint)mouseLocationOutsideOfEventStream;
- (BOOL)isOrContainsFirstResponder;
- (NSSize)constrainWindowSize:(NSSize)fp8 minSize:(NSSize)fp16 maxSize:(NSSize)fp24 aspectRatio:(NSSize)fp32 outset:(BOOL)fp40;
- (id)snapshotOfRect:(NSRect)fp8;
- (id)snapshotOfRect:(NSRect)fp8 forceFullDraw:(BOOL)fp24;
@end

@interface NSView (NSViewShouldHaveAVisibleBitLikeEveryOtherFrameworkInExistance)
- (BOOL)visible;
- (void)setVisible:(BOOL)fp8;
@end

@interface NSView (QCRendererAdditions)
- (NSPoint)normalizedMouseLocationWithOptionalEvent:(id)fp8;
@end

@interface NSView (TemplateExtensions)
- (void)applyTemplateSubviews;
@end

@interface NSViewAnimation (iChatAdditions)
+ (id)animationWithDuration:(double)fp8 viewAnimations:(id)fp16;
+ (id)animationWithTarget:(id)fp8 toRect:(NSRect)fp12 effect:(id)fp28;
+ (id)animationWithTarget:(id)fp8 toRect:(NSRect)fp12;
+ (id)animationWithTarget:(id)fp8 fromRect:(NSRect)fp12 toRect:(NSRect)fp28;
+ (id)animationWithTarget:(id)fp8 fromRect:(NSRect)fp12 toRect:(NSRect)fp28 effect:(id)fp44;
+ (id)animationWithTarget:(id)fp8 effect:(id)fp12;
+ (id)animationWithTarget:(id)fp8 fromRect:(NSRect)fp12 toRect:(NSRect)fp28 effect:(id)fp44 startKey:(id)fp48 endKey:(id)fp52;
- (id)initWithDuration:(double)fp8 viewAnimations:(id)fp16;
@end

@interface NSWindow (FezAdditions)
+ (id)_snapshotView:(id)fp8;
- (void)bottomLeftAlignOnFirstScreen;
- (void)bottomAlignCenterOnFirstScreen;
- (void)centerOnFirstScreen;
- (NSPoint)_positionNextToWindow:(id)fp8 gapLeft:(float)fp12 right:(float)fp16 top:(float)fp20 bottom:(float)fp24;
- (void)positionRelativeToWindow:(id)fp8 gapLeft:(float)fp12 right:(float)fp16 top:(float)fp20 bottom:(float)fp24;
- (NSRect)frame:(NSRect)fp8 constrainedToScreen:(id)fp24;
- (void)setContentRelativeFrame:(NSRect)fp8 constrainedToScreen:(id)fp24 display:(BOOL)fp28 animate:(BOOL)fp32;
- (void)setContentRelativeFrame:(NSRect)fp8 constrainedToScreen:(id)fp24 display:(BOOL)fp28;
- (void)setContentRelativeFrame:(NSRect)fp8 constrainedToScreen:(id)fp24;
- (void)morphToFrame:(NSRect)fp8;
- (void)dragWithEvent:(id)fp8;
- (BOOL)hasVisibleDrawer;
- (float)minFrameWidthWithTitle:(id)fp8;
- (void)fixMaxWidth:(BOOL)fp8 height:(BOOL)fp12;
- (BOOL)screenHasMenubar;
- (BOOL)screenHasDock;
@end

@interface NSWindow (HiDPIAdditions)
+ (NSPoint)offsetOrigin:(NSPoint)fp8 relativeToWindow:(id)fp16 offsetAmount:(NSSize)fp20;
+ (NSPoint)originForWindow:(id)fp8 relativeToWindow:(id)fp12 afterOffset:(NSSize)fp16;
+ (NSRect)contentRelativeRectAdjustingOriginInRect:(NSRect)fp8 srcRect:(NSRect)fp24 srcWindow:(id)fp40;
- (void)positionRelativeToWindow:(id)fp8 offset:(NSSize)fp12;
- (void)offsetContentRelativeOrigin:(NSSize)fp8;
- (void)outsetContentRelativeLeft:(float)fp8 right:(float)fp12 top:(float)fp16 bottom:(float)fp20;
- (void)outsetContentRelativeLeft:(float)fp8 right:(float)fp12 top:(float)fp16 bottom:(float)fp20 display:(BOOL)fp24 animate:(BOOL)fp28;
- (NSRect)contentRelativeFrame;
- (NSSize)contentRelativeMinSize;
- (NSSize)contentRelativeMaxSize;
- (void)setContentRelativeFrame:(NSRect)fp8 display:(BOOL)fp24 animate:(BOOL)fp28;
- (void)setContentRelativeFrame:(NSRect)fp8 display:(BOOL)fp24 srcFrame:(NSRect)fp28;
- (void)setContentRelativeFrame:(NSRect)fp8 display:(BOOL)fp24;
- (void)setContentRelativeFrame:(NSRect)fp8;
- (void)setContentRelativeMinSize:(NSSize)fp8;
- (void)setContentRelativeMaxSize:(NSSize)fp8;
- (void)ensureEntirelyOnScreen;
- (NSRect)contentRelativeRectAdjustingOriginInRect:(NSRect)fp8;
- (void)setWindowBackgroundToLight;
- (void)setWindowBackgroundToDark;
- (void)makeUnresizable;
@end

@interface NSWindow (iChatFrameSavingAdditions)
- (void)saveWindowPositionUsingName:(id)fp8 saveWidth:(BOOL)fp12 saveHeight:(BOOL)fp16;
- (BOOL)hasSavedPositionUsingName:(id)fp8;
- (void)restoreWindowPositionUsingName:(id)fp8 restoreWidth:(BOOL)fp12 restoreHeight:(BOOL)fp16 defaultHeight:(int)fp20;
@end

@interface NSWindow (iChatWindowLocation)
+ (id)windowsWithOrigin:(NSPoint)fp8 screen:(id)fp16 withDelegateClass:(Class)fp20;
@end

/*@interface NSWindowGraphicsContext (CGLayerContext)
- (id)initWithCoreGraphicsContext:(struct CGContext *)fp8;
@end*/

@interface NSWorkspace (VideoConferencing)
+ (BOOL)isDockAutoHidden;
@end

@interface NSWorkspace (iChatSpaceSwitchingAdditions)
- (BOOL)shouldSwitchToiChatBoundSpace;
- (void)switchToiChatBoundSpace;
@end

@interface NameTableCell : NSActionCell
{
    PeopleList *_peopleList;
    BOOL _oneLine;
    BOOL _disabled;
    int _imageIndex;
    NSRect _trackingRect;
    NSRect _cellTrackingFrame;
    BOOL _urlMouseDown;
    BOOL _urlMouseOver;
    BOOL _showVCIcons;
    BOOL _showArrow;
    BOOL _showColorHint;
}

+ (id)_lineBreakAttributes;
- (id)initWithPeopleList:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (BOOL)_validStatusURL:(id)fp8;
- (void)_openURL;
- (BOOL)_tracking;
- (void)setShowsColorHint:(BOOL)fp8;
- (BOOL)showsColorHint;
- (void)setShowsArrow:(BOOL)fp8;
- (BOOL)showsArrow;
- (void)setShowVCIcon:(BOOL)fp8;
- (BOOL)showVCIcon;
- (void)setOneLine:(BOOL)fp8;
- (BOOL)oneLine;
- (void)setDisabled:(BOOL)fp8;
- (BOOL)isDisabled;
- (id)_currentVCImage;
- (void)_setNoImage;
- (void)_setImageIsVideo:(BOOL)fp8 multiway:(BOOL)fp12 state:(int)fp16;
- (void)_setImageState:(int)fp8;
- (void)setNoImage;
- (BOOL)hasImage;
- (void)setImageIsVideo:(BOOL)fp8 multiway:(BOOL)fp12 state:(int)fp16;
- (void)setImageState:(int)fp8;
- (BOOL)imageIsVideo;
- (BOOL)imageIsMultiway;
- (int)imageState;
- (NSSize)vcImageSizeMultiway:(BOOL)fp8;
- (NSRect)vcRectForFrame:(NSRect)fp8 multiway:(BOOL)fp24;
- (NSRect)rectOfStatusImageWithFrame:(NSRect)fp8 inView:(id)fp24 usingStatusImageReference:(id)fp28;
- (NSRect)rectOfStatusImageWithFrame:(NSRect)fp8 inView:(id)fp24 forStatus:(unsigned int)fp28;
- (id)imHandle;
- (id)peopleListItem;
- (void)_layoutInteriorWithFrame:(NSRect)fp8 inView:(id)fp24 urlRect:(NSRect *)fp28 layoutOnly:(BOOL)fp32;
- (unsigned int)hitTestForEvent:(id)fp8 inRect:(NSRect)fp12 ofView:(id)fp28;
- (NSRect)urlRectForFrame:(NSRect)fp8;
- (void)drawInteriorWithFrame:(NSRect)fp8 inView:(id)fp24;
- (void)_redisplay:(id)fp8;
- (BOOL)trackMouse:(id)fp8 inRect:(NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (BOOL)startTrackingAt:(NSPoint)fp8 inView:(id)fp16;
- (BOOL)continueTracking:(NSPoint)fp8 at:(NSPoint)fp16 inView:(id)fp24;
- (void)stopTracking:(NSPoint)fp8 at:(NSPoint)fp16 inView:(id)fp24 mouseIsUp:(BOOL)fp28;

@end

@interface NameTableCell (NameTableCellAccessibility)
- (id)accessibilityActionDescription:(id)fp8;
- (id)accessibilityActionNames;
- (void)accessibilityPerformAction:(id)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityTitleAttribute;
- (id)accessibilityValueAttribute;
@end

@interface NewChatChooser : NSWindowController
{
    ShadowView *_shadowView;
    ServicePopUp *_accountPopup;
    NSButton *_cancelButton;
    FezImageView *_imageView;
    NSTokenField *_nameField;
    NSTextField *_nameType;
    NSButton *_okButton;
    NSProgressIndicator *_progressIndicator;
    NSPopUpButton *_typePopup;
    CollapseView *_collapseView;
    NSArray *_cachedIMHandles;
    BOOL _completedString;
    BOOL _lookingUpIMHandle;
    BOOL _readFromPasteBoard;
    NSMutableSet *_imHandlesForLookup;
}

+ (void)registerNewChooser:(id)fp8;
+ (void)unregisterNewChooser:(id)fp8;
+ (void)openForIMHandles:(id)fp8;
+ (BOOL)canOpenNewChat;
- (id)init;
- (void)dealloc;
- (void)windowDidLoad;
- (void)setIMHandles:(id)fp8;
- (void)_statusGemChanged:(id)fp8;
- (void)_ensureValidMenuItemSelected;
- (BOOL)validateMenuItem:(id)fp8;
- (void)_validateChatButton;
- (void)__setBuddyPictures:(id)fp8;
- (void)_setBuddyPictures:(id)fp8;
- (void)_updateSelectedBuddyPictureWithIDs:(id)fp8;
- (void)selectedAccountStatusChanged:(id)fp8;
- (void)showWindow:(id)fp8;
- (NSPoint)getOriginForCascadeFromChooser:(id)fp8;
- (void)accountChanged:(id)fp8;
- (void)cancelPressed:(id)fp8;
- (void)nameChanged:(id)fp8;
- (void)okPressed:(id)fp8;
- (void)typeChanged:(id)fp8;
- (void)_targetIMHandleUpdated:(id)fp8;
- (void)_cancelPendingLookupsForIMHandle;
- (void)_startIMHandleLookupNow;
- (void)_startIMHandleLookupSoon;
- (BOOL)_updateBuddyPictureForExistingBuddies;
- (void)_validateButtons;
- (id)_imHandles;
- (void)_recacheIMHandleInformation;
- (void)windowWillClose:(id)fp8;
- (void)windowDidBecomeMain:(id)fp8;
- (BOOL)control:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;
- (id)tokenField:(id)fp8 readFromPasteboard:(id)fp12;
- (BOOL)tokenField:(id)fp8 writeRepresentedObjects:(id)fp12 toPasteboard:(id)fp16;
- (id)tokenField:(id)fp8 completionsForSubstring:(id)fp12 indexOfToken:(int)fp16 indexOfSelectedItem:(int *)fp20;
- (id)tokenField:(id)fp8 representedObjectForEditingString:(id)fp12;
- (id)tokenField:(id)fp8 shouldAddObjects:(id)fp12 atIndex:(unsigned int)fp16;
- (void)controlTextDidEndEditing:(id)fp8;
- (id)tokenField:(id)fp8 displayStringForRepresentedObject:(id)fp12;
- (id)tokenField:(id)fp8 setUpTokenAttachmentCell:(id)fp12 forRepresentedObject:(id)fp16;
- (id)tokenField:(id)fp8 editingStringForRepresentedObject:(id)fp12;

@end

@interface NicelyScaledImageView : NSImageView
{
}

- (void)drawRect:(NSRect)fp8;

@end

@interface NonKeyPanel : NSPanel
{
}

- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;

@end

@interface PeopleListGroup : NSObject
{
    NSMutableArray *_members;
    NSString *_name;
    PeopleListItem *_item;
    BOOL _expanded;
    int _maxMembers;
    BOOL _supportsReordering;
    BOOL _supportsMemberReordering;
    BOOL _supportsRename;
    BOOL _supportsAdding;
    BOOL _supportsRemoving;
    NSString *_localizableName;
}

- (id)init;
- (void)dealloc;
- (id)peopleListItem;
- (void)setPeopleListItem:(id)fp8;
- (BOOL)isExpanded;
- (void)setExpanded:(BOOL)fp8;
- (void)setName:(id)fp8;
- (id)name;
- (id)displayName;
- (void)addPeopleListItem:(id)fp8;
- (void)removePeopleListItem:(id)fp8;
- (int)numberOfItems;
- (int)actualNumberOfOnlineItems;
- (int)numberOfOnlineItems;
- (id)visibleMembers;
- (id)members;
- (id)description;
- (void)removeAllItems;
- (int)maxMembers;
- (BOOL)supportsReordering;
- (BOOL)supportsMemberReordering;
- (BOOL)supportsRename;
- (BOOL)supportsAdding;
- (BOOL)supportsRemoving;
- (void)setProperties:(id)fp8;

@end

@interface OfflinePeopleListGroup : PeopleListGroup
{
    NSMutableArray *_visibleMembers;
    NSMutableArray *_dontShowMembers;
    int _changes;
    BOOL _pendingClear;
}

- (id)init;
- (id)visibleMembers;
- (int)numberOfItems;
- (void)forgetIgnoredPresences;
- (void)_clearVisibleMembers;
- (BOOL)isChanging;
- (void)beginChanges;
- (void)endChanges;
- (void)dontShowPresence:(id)fp8;
- (void)addPeopleListItem:(id)fp8;
- (void)removePeopleListItem:(id)fp8;
- (void)removeAllItems;
- (void)dealloc;

@end

@interface OpenGLLayer : NSObject
{
    NSString *_name;
    NSRect _layerFrame;
    float _opacity;
    unsigned char _flags;
    BOOL _isValid;
    BOOL _isVisible;
    float _topMargin;
    unsigned int _autoresizingMask;
    NSMutableArray *_sublayers;
    unsigned int _positionInSublayers;
    OpenGLLayerModel *_layerModel;
    OpenGLLayer *_superLayer;
}

+ (id)sequentialLayerName:(id)fp8;
+ (id)masterOpenGLContext;
- (id)initWithFrame:(NSRect)fp8 layerName:(id)fp24;
- (void)dealloc;
- (id)description;
- (void)setLayerIsValid:(BOOL)fp8;
- (BOOL)isValid;
- (void)setIsVisible:(BOOL)fp8;
- (void)setIsVisible:(BOOL)fp8 recursive:(BOOL)fp12;
- (BOOL)isVisible;
- (NSRect)superLayerFrame;
- (NSRect)layerFrame;
- (void)setLayerFrame:(NSRect)fp8;
- (void)_parentMovedFrom:(NSPoint)fp8 to:(NSPoint)fp16;
- (void)setLayerOrigin:(NSPoint)fp8;
- (void)_parent:(id)fp8 resizedFrom:(NSSize)fp12 to:(NSSize)fp20;
- (void)setLayerSize:(NSSize)fp8;
- (void)setAutoresizingMask:(unsigned int)fp8;
- (unsigned int)autoresizingMask;
- (void)containerViewResizedFrom:(NSSize)fp8 to:(NSSize)fp16;
- (id)name;
- (void)setName:(id)fp8;
- (void)setOpacity:(float)fp8;
- (float)opacity;
- (float)scaleFactor;
- (float)topMargin;
- (void)setTopMargin:(float)fp8;
- (void)_setLayerModel:(id)fp8;
- (id)layerModel;
- (void)setUsesAlphaBlending:(BOOL)fp8;
- (void)updateBuffer;
- (void)compositeLayer:(struct _CGLContextObject *)fp8;
- (id)ciContext;
- (BOOL)useCoreImage;
- (id)superLayer;
- (id)sublayers;
- (int)positionInSublayers;
- (void)addedToSuperLayer:(id)fp8;
- (void)addSublayer:(id)fp8 underSelf:(BOOL)fp12 underSiblings:(BOOL)fp16;
- (void)removedFromSuperLayer:(id)fp8;
- (BOOL)removeSublayer:(id)fp8;
- (id)sublayerWithName:(id)fp8;
- (id)sublayerWithPrefix:(id)fp8;
- (void)recursiveCompositeLayer:(struct _CGLContextObject *)fp8;
- (BOOL)containsPoint:(NSPoint)fp8;

@end

@interface OpenGLTextureLayer : OpenGLLayer
{
    unsigned int _textureID;
    unsigned int _textureCapability;
    NSSize _textureSize;
    NSSize _bufferSize;
    unsigned int _pixelFormat;
    unsigned int _pixelType;
    unsigned int _internalFormat;
    BOOL _alphaIsPremultiplied;
    BOOL _textured;
    BOOL _mirrored;
    float _blackTint;
    BOOL _appWillTerminate;
}

- (id)initWithSize:(NSSize)fp8 layerName:(id)fp16;
- (void)dealloc;
- (void)generateTextureID;
- (void)deleteTextureID;
- (unsigned int)textureID;
- (void)_updateAlphaBlending;
- (void)setBlackTint:(float)fp8;
- (void)setOpacity:(float)fp8;
- (float)blackTint;
- (void)setMirrored:(BOOL)fp8;
- (BOOL)isMirrored;
- (void)setTextureID:(unsigned int)fp8;
- (void)updateBuffer;
- (CDAnonymousStruct6)_textureLayerInfo;
- (void)_cleanupAfterRetexture:(void *)fp8;
- (void)_retexture:(struct _CGLContextObject *)fp8;
- (void)renderTexture:(struct _CGLContextObject *)fp8;
- (void)compositeLayer:(struct _CGLContextObject *)fp8;
- (NSSize)textureSize;
- (NSSize)bufferSize;
- (void)handleApplicationWillTerminate:(id)fp8;

@end

@interface OpenGLCGBitmapContextLayer : OpenGLTextureLayer
{
    char *_buffer;
    struct CGContext *_cgBitmapContext;
    int _textureMappingType;
    float _borderLeft;
    float _borderRight;
    float _borderTop;
    float _borderBottom;
    BOOL _mapCenter;
}

- (id)initWithSize:(NSSize)fp8 layerName:(id)fp16;
- (void)dealloc;
- (CDAnonymousStruct6)_textureLayerInfo;
- (void)setTextureMappingType:(int)fp8;
- (void)setBorderTextureMappingInsetLeft:(float)fp8 right:(float)fp12 top:(float)fp16 bottom:(float)fp20;
- (int)textureMappingType;
- (void)setMapCenter:(BOOL)fp8;
- (void)clearContext;
- (void)updateBuffer;
- (void)draw;
- (void)_renderBorder:(struct _CGLContextObject *)fp8;
- (void)renderTexture:(struct _CGLContextObject *)fp8;

@end

@interface OpenGLColorLayer : OpenGLLayer
{
    float _bottomColor[4];
    float _topColor[4];
}

- (id)initWithFrame:(NSRect)fp8 layerName:(id)fp24;
- (id)initWithFrame:(NSRect)fp8 layerName:(id)fp24 red:(float)fp28 green:(float)fp32 blue:(float)fp36 alpha:(float)fp40;
- (void)setRed:(float)fp8 green:(float)fp12 blue:(float)fp16 alpha:(float)fp20;
- (void)setWhite:(float)fp8 alpha:(float)fp12;
- (void)setAlpha:(float)fp8;
- (void)setBottomRed:(float)fp8 green:(float)fp12 blue:(float)fp16 alpha:(float)fp20;
- (void)setTopRed:(float)fp8 green:(float)fp12 blue:(float)fp16 alpha:(float)fp20;
- (void)setBottomWhite:(float)fp8 topWhite:(float)fp12;
- (void)compositeLayer:(struct _CGLContextObject *)fp8;

@end

@interface OpenGLCoreVideoLayer : OpenGLLayer <FrameListener>
{
    BOOL _isRegisteredListener;
    NSString *_videoSourceName;
    Texture *_texture;
    BOOL _mirrored;
    float _blackTint;
    NSOpenGLContext *_frameReaderContext;
    CIContext *_frameReaderCIContext;
    FrameReader *_frameReader;
}

- (void)ensureRegisteredListener:(BOOL)fp8;
- (id)initWithFrame:(NSRect)fp8 layerName:(id)fp24 videoSource:(id)fp28;
- (void)dealloc;
- (void)frameNotifier:(id)fp8 postedNewFrame:(id)fp12 fromSource:(id)fp16;
- (void)_setLayerModel:(id)fp8;
- (void)setTexture:(id)fp8;
- (id)texture;
- (void)textureDidChange;
- (void)setBlackTint:(float)fp8;
- (float)blackTint;
- (void)setMirrored:(BOOL)fp8;
- (BOOL)isMirrored;
- (void)compositeTexture:(struct _CGLContextObject *)fp8;
- (void)compositeLayer:(struct _CGLContextObject *)fp8;
- (void)handleVirtualScreenChangedNotificiation:(int)fp8;
- (id)bitmapFromLayer;
- (float)sceneBrightness;

@end

@interface OpenGLFullScreenController : NSObject <NSWindowDelegate>
{
    FullScreenWindow *_fullScreenWindow;
    VideoConferenceLayerView *_vcLayerView;
    OpenGLLayerModel *_layerModel;
    NSView *_originalVCLayerViewContainer;
    NSRect _originalVCLayerViewFrame;
    float _originalVCLayerWidth;
    VideoChatController *_videoChatController;
    BOOL _isFullScreen;
    BOOL _conferenceEnding;
    double _totalGammaFadeTime;
}

- (id)initWithVideoChatController:(id)fp8;
- (void)dealloc;
- (id)videoChatController;
- (void)handleAppWillResignActiveApplication:(id)fp8;
- (void)windowDidResignMain:(id)fp8;
- (void)_installVCLayerView;
- (void)setupFullScreenDisplay;
- (void)shutDownFullScreenDisplay;
- (BOOL)isFullScreen;
- (id)window;
- (void)setConferenceEnding:(BOOL)fp8;
- (float)originalVCLayerWidth;
- (BOOL)fullScreenWindow:(id)fp8 magnifyWithEvent:(id)fp12;
- (void)toggleFullScreen:(id)fp8;
- (void)toggleMute:(id)fp8;
- (void)togglePause:(id)fp8;
- (void)toggleHideLocalVideo:(id)fp8;
- (void)toggleRecording:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)copy:(id)fp8;

@end

@interface OpenGLImageLayer : OpenGLTextureLayer
{
    NSBitmapImageRep *_bitmap;
    NSString *_imageName;
    BOOL _alphaBorder;
    NSMutableDictionary *_savedBitmaps;
    float _texCoords[8];
    float _borderLeft;
    float _borderRight;
    float _borderTop;
    float _borderBottom;
    BOOL _mapCenter;
}

- (void)_updateTexCoords;
- (id)_bitmapFromImage:(id)fp8;
- (void)_setBitmap:(id)fp8;
- (id)initWithImage:(id)fp8 named:(id)fp12 alphaBorder:(BOOL)fp16 layerName:(id)fp20;
- (id)initWithImageNamed:(id)fp8 alphaBorder:(BOOL)fp12 layerName:(id)fp16;
- (void)dealloc;
- (BOOL)hasAlphaBorder;
- (CDAnonymousStruct6)_textureLayerInfo;
- (void)setImageToImage:(id)fp8 named:(id)fp12;
- (void)setImageToImageNamed:(id)fp8;
- (void)setTextureBorderLeft:(float)fp8 right:(float)fp12 top:(float)fp16 bottom:(float)fp20 mapCenter:(BOOL)fp24;
- (void)setTextureBorder:(float)fp8 mapCenter:(BOOL)fp12;
- (void)clearTextureBorders;
- (void)_renderBorder:(struct _CGLContextObject *)fp8;
- (void)renderTexture:(struct _CGLContextObject *)fp8;

@end

@interface OpenGLLayerModel : NSObject
{
    NSMutableArray *_remoteLayers;
    OpenGLVideoConferenceLayer *_localLayer;
    NSMutableArray *_floatingLayers;
    OpenGLLayerView *_layerView;
    float _scaleFactor;
    BOOL _needsDisplay;
    BOOL _theatricalLayout;
    int _auxVideoMode;
    BOOL _needsToUpdateProjection;
    CDAnonymousStruct2 _projection;
    float _preferredAspectRatio;
    BOOL _needsMarginForOverlay;
    BOOL _localLayerHidden;
    int _localLayerSuppressed;
    NSSize _standardVideoSize;
    void *_layoutStart;
    void *_layoutEnd;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)setLayerView:(id)fp8;
- (id)layerView;
- (void)setNeedsDisplay;
- (BOOL)needsDisplay;
- (void)addRemoteLayer:(id)fp8 atIndex:(unsigned int)fp12;
- (void)addFloatingLayer:(id)fp8;
- (id)floatingLayerWithName:(id)fp8;
- (void)_fadeInDropView:(BOOL)fp8;
- (void)addVCDropView:(id)fp8;
- (void)setLocalLayer:(id)fp8;
- (id)remoteLayer;
- (id)remoteLayers;
- (id)remoteLayerWithVCPartyID:(id)fp8;
- (id)auxVideoLayerWithVCPartyID:(id)fp8;
- (id)auxVideoLayer;
- (id)localLayer;
- (id)vcDropView;
- (id)layers;
- (void)_positionLayerWithVCPartyID:(id)fp8 atIndex:(unsigned int)fp12 remoteLayersCount:(unsigned int)fp16;
- (void)positionRemoteParticipants:(id)fp8;
- (void)removeLocalLayer;
- (void)removeRemoteLayer:(id)fp8;
- (void)removeFloatingLayer:(id)fp8;
- (void)removeVCDropView;
- (void)_setLocalLayerHidden:(BOOL)fp8;
- (BOOL)_isLocalLayerHidden;
- (void)suppressLocalLayer:(BOOL)fp8;
- (float)scaleFactor;
- (void)_getTransforms:(CDAnonymousStruct1 *)fp8 count:(int)fp12 forLayoutForLayers:(int)fp16 extraIndex:(int)fp20 ofWidth:(float)fp24 auxVideoMode:(int)fp28;
- (void)updateTheatricalLayoutForBoundsSize:(NSSize)fp8;
- (void)_getCameraHeight:(float *)fp8 distance:(float *)fp12 forLayers:(int)fp16 ofWidth:(float)fp20 auxVideoMode:(int)fp24;
- (void)_getProjection:(CDAnonymousStruct2 *)fp8 forLayers:(int)fp12 ofSize:(NSSize)fp16 auxVideoMode:(int)fp24;
- (void)_adjustProjectionToAspectRatio:(float)fp8 clipProjection:(BOOL)fp12;
- (void)_updateProjection;
- (void)setTheatricalLayout:(BOOL)fp8;
- (BOOL)theatricalLayout;
- (void)setAuxVideoMode:(int)fp8;
- (int)auxVideoMode;
- (void)setStandardVideoSize:(NSSize)fp8;
- (NSSize)standardVideoSize;
- (float)preferredAspectRatio;
- (float)_preferredAspectRatioForLayers:(int)fp8 auxVideoMode:(int)fp12;
- (float)preferredAspectRatioForLayers:(int)fp8;
- (NSSize)boundsSizeForRemoteLayers:(int)fp8 ofWidth:(float)fp12;
- (NSSize)boundsSizeForRemoteLayers:(int)fp8 ofWidth:(float)fp12 auxVideoMode:(int)fp16;
- (NSSize)sizeForRemoteLayers:(int)fp8 inBoundsSize:(NSSize)fp12 auxVideoMode:(int)fp20;
- (NSSize)sizeForRemoteLayers:(int)fp8 inBoundsSize:(NSSize)fp12;
- (float)controlsMarginForBoundsSize:(NSSize)fp8;
- (float)controlsMarginForBoundsSize:(NSSize)fp8 remoteLayers:(int)fp16 auxVideoMode:(int)fp20;
- (void)setNeedsMarginForOverlay:(BOOL)fp8;
- (BOOL)needsMarginForOverlay;
- (void)_setupCameraTheatrical:(BOOL)fp8 ctx:(struct _CGLContextObject *)fp12;
- (void)_renderOverlayMarginFadeout:(struct _CGLContextObject *)fp8;
- (void)compositeAllLayers:(struct _CGLContextObject *)fp8;
- (void)compositeFloatingLayers:(struct _CGLContextObject *)fp8;
- (CDAnonymousStruct10 *)_saveLayoutForLayers:(int)fp8 extraIndex:(int)fp12 inBoundsSize:(NSSize)fp16 auxVideoMode:(int)fp24;
- (void)saveLayoutFor:(int)fp8 inBounds:(NSSize)fp12 transitionTo:(int)fp20 inBounds:(NSSize)fp24 extraIndex:(int)fp32 auxVideoMode:(int)fp36;
- (void)_getTweenLayout:(CDAnonymousStruct10 *)fp8 progress:(float)fp12;
- (void)tweenLayoutWithProgress:(float)fp8 resizeLayerView:(BOOL)fp12;
- (void)endLayoutTransitionAsTheatrical:(BOOL)fp8 fullScreen:(BOOL)fp12;
- (void)updateVCQuads;
- (int)layerHitAtPoint:(NSPoint)fp8 inCloseButton:(char *)fp16;
- (id)layerForHit:(int)fp8;

@end

@interface OpenGLNSViewLayer : OpenGLTextureLayer
{
    OpenGLNSViewLayerWindow *_window;
    NSView *_view;
    BOOL _alphaBorder;
    BOOL _projectsOrtho;
}

- (float)scaleFactor;
- (void)_updateLayout;
- (void)setLayerSize:(NSSize)fp8;
- (void)setProjectsOrtho:(BOOL)fp8;
- (BOOL)projectsOrtho;
- (void)recursiveCompositeLayer:(struct _CGLContextObject *)fp8;
- (id)initWithView:(id)fp8 alphaBorder:(BOOL)fp12 layerName:(id)fp16;
- (void)dealloc;
- (id)view;
- (CDAnonymousStruct6)_textureLayerInfo;
- (void)_cleanupAfterRetexture:(void *)fp8;

@end

@interface OpenGLNSViewLayer (VCLayoutControllExtensions)
- (id)_initLabelWithStringValue:(id)fp8 fontSize:(float)fp12 lineBreakMode:(unsigned int)fp16 layerName:(id)fp20;
@end

@interface OpenGLNSViewLayerWindow : NSWindow
{
    OpenGLNSViewLayer *_owner;
}

- (void)setOwner:(id)fp8;
- (void)setViewsNeedDisplay:(BOOL)fp8;

@end

@interface OpenGLVideoConferenceLayer : OpenGLCoreVideoLayer
{
    BOOL _hasFirstFrame;
    NSString *_vcPartyID;
    BOOL _isLocal;
    BOOL _isAuxVideo;
    BOOL _isReplacement;
    BOOL _hidingUntilNextFrame;
    BOOL _anamorphicScaling;
    int _videoAppearance;
    BOOL _hasDropHighlight;
    BOOL _hasReflection;
    BOOL _spotlightEffect;
    BOOL _shouldFadeOutSpotlight;
    NSDate *_spotlightFadeoutStart;
    float _endedFadeoutProgress;
    float _translationX;
    float _translationZ;
    float _rotationY;
    float _scaleXY;
    BOOL _allowsJaggies;
    float _jaggiesSmoothingBrightness;
    CDAnonymousStruct8 _layerQuad;
    CDAnonymousStruct8 _closeQuad;
    OpenGLNSViewLayer *_bannerSublayer;
    OpenGLImageLayer *_closeButtonSublayer;
}

- (id)initWithSize:(NSSize)fp8 layerName:(id)fp16 vcPartyID:(id)fp20 appearance:(int)fp24 isLocal:(BOOL)fp28 isAuxVideo:(BOOL)fp32 isReplacement:(BOOL)fp36;
- (void)dealloc;
- (void)setTexture:(id)fp8;
- (void)textureDidChange;
- (id)vcPartyID;
- (BOOL)isLocal;
- (BOOL)isAuxVideo;
- (BOOL)isReplacement;
- (void)freezeFrame;
- (void)hideUntilNextFrame;
- (void)addBannerSublayer:(id)fp8;
- (id)bannerSublayer;
- (void)addCloseButtonSublayer:(id)fp8;
- (id)closeButtonSublayer;
- (BOOL)removeSublayer:(id)fp8;
- (void)fadeToBlack:(BOOL)fp8 overTime:(double)fp12;
- (id)_createAppeanceLayer:(BOOL)fp8;
- (void)setVideoAppearance:(int)fp8;
- (int)videoAppearance;
- (void)compositeTexture:(struct _CGLContextObject *)fp8;
- (void)setTranslationX:(float)fp8 z:(float)fp12;
- (void)getTranslationX:(float *)fp8 z:(float *)fp12;
- (void)setRotationY:(float)fp8;
- (float)rotationY;
- (void)setScaleXY:(float)fp8;
- (float)scaleXY;
- (void)clearTransforms;
- (void)setHasDropHighlight:(BOOL)fp8;
- (BOOL)hasDropHighlight;
- (void)setHasReflection:(BOOL)fp8;
- (BOOL)hasReflection;
- (void)_removeSpotlight;
- (void)setSpotlightEffect:(BOOL)fp8;
- (BOOL)hasSpotlightEffect;
- (void)setShouldFadeOutSpotlight;
- (void)setAllowsJaggies:(BOOL)fp8;
- (BOOL)allowsJaggies;
- (void)_applyTransforms:(struct _CGLContextObject *)fp8;
- (CDAnonymousStruct8)_project:(double *)fp8 model:(double *)fp12 viewport:(int *)fp16 rect:(NSRect)fp20 isOrtho:(BOOL)fp36;
- (NSRect)_projectLayerFrame:(double *)fp8 ctx:(struct _CGLContextObject *)fp12;
- (void)projectVCQuads:(double *)fp8 ctx:(struct _CGLContextObject *)fp12;
- (void)isPoint:(NSPoint)fp8 inLayer:(char *)fp16 inCloseButton:(char *)fp20;
- (NSRect)frameOfLayerQuad;
- (void)_renderReflectionFadeout:(struct _CGLContextObject *)fp8;
- (void)_renderSpotlightWithFrame:(NSRect)fp8 ctx:(struct _CGLContextObject *)fp24;
- (void)_smoothJaggies:(struct _CGLContextObject *)fp8;
- (void)_renderTheaterOutline:(NSRect)fp8 ctx:(struct _CGLContextObject *)fp24;
- (void)_renderDropHighlight:(struct _CGLContextObject *)fp8;
- (void)compositeLayer:(struct _CGLContextObject *)fp8;
- (void)_projectOrtho:(NSSize)fp8 modelYTranslation:(float)fp16 ctx:(struct _CGLContextObject *)fp20;
- (void)recursiveCompositeLayer:(struct _CGLContextObject *)fp8;

@end

@interface OptionalScrollView : NSScrollView
{
}

- (void)reflectScrolledClipView:(id)fp8;
- (void)_doScroller:(id)fp8;

@end

@interface OverlayBackground : NSView
{
    float _radius;
    NSColor *_borderColor;
    NSColor *_interiorColor;
    float _borderLeft;
    float _borderTop;
    float _borderRight;
    float _borderBottom;
    float _minBorder;
    float _maxBorder;
}

- (void)setBorderWidthLeft:(float)fp8 top:(float)fp12 right:(float)fp16 bottom:(float)fp20;
- (void)getBorderWidthLeft:(float *)fp8 top:(float *)fp12 right:(float *)fp16 bottom:(float *)fp20;
- (void)drawRect:(NSRect)fp8;
- (float)radius;
- (void)setRadius:(float)fp8;
- (id)interiorColor;
- (void)setInteriorColor:(id)fp8;
- (id)borderColor;
- (void)setBorderColor:(id)fp8;

@end

@interface People : NSObject
{
}

@end

@interface People (Actions)
+ (void)_postNoCommonServicesForPeople:(id)fp8;
+ (id)bestIMHandlesForPeople:(id)fp8 commonServices:(id)fp12 requireOnline:(BOOL)fp16;
+ (id)bestIMHandlesForPeople:(id)fp8 requireOnline:(BOOL)fp12;
+ (id)bestIMHandlesForPeople:(id)fp8;
+ (BOOL)allPeopleOnline:(id)fp8;
+ (BOOL)allPeopleOffline:(id)fp8;
+ (BOOL)_allPeople:(id)fp8 haveCapability:(unsigned long long)fp12 skipUnknown:(BOOL)fp20 rejectOffline:(BOOL)fp24;
+ (BOOL)allPeopleCanReceiveIMs:(id)fp8;
+ (BOOL)allPeopleCanReceiveDirectIMs:(id)fp8;
+ (BOOL)allPeople:(id)fp8 haveCapability:(unsigned long long)fp12;
+ (BOOL)allPeopleCanReceiveFiles:(id)fp8;
+ (BOOL)allPeopleCanChat:(id)fp8;
+ (id)servicesForIMHandle:(id)fp8 requireOnline:(BOOL)fp12;
+ (id)commonServicesForPeople:(id)fp8 requireOnline:(BOOL)fp12;
+ (BOOL)allPeople:(id)fp8 canBeOnService:(id)fp12;
+ (BOOL)allPeopleCanBeSecure:(id)fp8;
+ (BOOL)allPeopleHaveEMailAddresses:(id)fp8;
+ (int)_allPeople:(id)fp8 canConferenceWithVideo:(BOOL)fp12 ardCap:(unsigned long long)fp16 minRequirement:(int)fp24;
+ (BOOL)allPeopleCanTwoWayVideoChat:(id)fp8;
+ (BOOL)allPeopleCanTwoWayAudioChat:(id)fp8;
+ (int)_allPeopleCanJoinVideoChat:(id)fp8;
+ (BOOL)allPeopleCanJoinVideoChat:(id)fp8;
+ (int)_allPeopleCanJoinAudioChat:(id)fp8;
+ (BOOL)allPeopleCanJoinAudioChat:(id)fp8;
+ (BOOL)allPeopleCanBeRecorded:(id)fp8;
+ (BOOL)allPeopleCanBeARDClient:(id)fp8;
+ (BOOL)allPeopleCanBeARDServer:(id)fp8;
+ (BOOL)personCanMultiwayAudioChat:(id)fp8;
+ (BOOL)personCanMultiwayVideoChat:(id)fp8;
+ (BOOL)validateMenuItem:(id)fp8 forPeople:(id)fp12;
+ (BOOL)_verifyAllPeopleAreOnline:(id)fp8;
+ (BOOL)doDefaultActionForPeople:(id)fp8;
+ (id)_sendMessageToPeople:(id)fp8 style:(int)fp12;
+ (BOOL)allPeopleHaveMobileNumbers:(id)fp8;
+ (id)sendSMSToIMHandle:(id)fp8;
+ (id)sendMessageToIMHandle:(id)fp8;
+ (id)sendMessageToPeople:(id)fp8;
+ (id)startChatWithPeople:(id)fp8;
+ (BOOL)allPeopleHaveCommonService:(id)fp8 postWarning:(BOOL)fp12;
+ (id)startVideoChatWithPeople:(id)fp8;
+ (id)startAudioChatWithPeople:(id)fp8;
+ (id)startARDClientChatWithPeople:(id)fp8;
+ (id)startARDServerChatWithPeople:(id)fp8;
+ (BOOL)searchInSpotlightWithPeople:(id)fp8;
+ (id)sendDirectMessageToPeople:(id)fp8;
+ (void)_blockSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
+ (BOOL)blockPersonWithIMHandles:(id)fp8 inWindow:(id)fp12;
+ (BOOL)sendFileToPeople:(id)fp8 inWindow:(id)fp12;
+ (BOOL)composeEMailToPeople:(id)fp8;
+ (BOOL)openMailtoURLWithAddresses:(id)fp8;
+ (void)setDesiredChatFrame:(NSRect)fp8;
+ (NSRect)desiredChatFrame;
+ (void)retitleAddBuddyItem:(id)fp8 forIMHandle:(id)fp12;
+ (void)retitleRemoveBuddyItem:(id)fp8 forIMHandle:(id)fp12;
@end

@interface PeopleList : NSObject <DirectlyObservableObjectObserver>
{
    NSMutableDictionary *_buddyPictureIndexLookup;
    BOOL _hideOfflinePeople;
    NSMutableArray *_peopleListItems;
    NSMutableArray *_peopleListGroups;
    OfflinePeopleListGroup *_offlineGroup;
    AnimatingTableView *_table;
    NSMenu *_contextualMenu;
    NSMenuItem *_showProfileMenuItem;
    id <PeopleListDelegate> _delegate;
    PresenceTooltip *_tooltip;
    BOOL _awokenFromNib;
    NSTableColumn *_statusColumn;
    NSTableColumn *_nameColumn;
    NSTableColumn *_pictureColumn;
    unsigned int _viewOptions;
    NSMutableSet *_savedSelection;
    BOOL _allowsIMHandleSubstitution;
    BOOL _arrangesByGroup;
    BOOL _showsUnknownStatus;
    BOOL _usesOfflineGroup;
    BOOL _allowsGroupOrdering;
    NSMutableArray *_items;
    NSString *_collapsedGroupsPrefKey;
    NSArray *_groupsOrdering;
    NSTimer *_statusTransitionTimer;
    NSMutableArray *_itemsInTransition;
    int _coalesceCount;
    int _primarySort;
    int _secondarySort;
    BOOL _sortManually;
    NSString *_sortDefaultKey;
    BOOL _pendingResort;
    BOOL _suppressingAnimation;
    NSMutableSet *_statusChangeQueue;
    NSMutableSet *_groupChangeQueue;
    NSMutableDictionary *_changeQueuePreviousStatuses;
    BOOL _willForceChangeProcessing;
    BOOL _dontAnimateStatusQueue;
    BOOL _animateWhenEnded;
    BOOL _separateServices;
    NSMutableArray *_itemsToCleanup;
}

+ (id)_notificationNames;
+ (id)_notificationSelectors;
+ (id)peoplePasteboardTypes;
+ (id)_typeFromPasteboard:(id)fp8;
+ (BOOL)pasteboardContainsPeople:(id)fp8;
- (void)_localeChangedRefresh;
- (id)init;
- (void)_configureTableColumns;
- (void)_cleanUpItemsAndGroups;
- (void)dealloc;
- (void)awakeFromNib;
- (void)detachFromTableView;
- (void)_unobservePeopleListItem:(id)fp8;
- (void)_observePeopleListItem:(id)fp8;
- (void)_peopleListItemNeedsUpdating:(id)fp8;
- (void)_peopleListItemNeedsSorting:(id)fp8;
- (void)_peopleListItemSortOrderChangedNotification:(id)fp8;
- (void)_peopleListItemNeedsGroupChange:(id)fp8;
- (void)_peopleListItemAnimationStateChanged:(id)fp8;
- (void)objectDidPostDirectNotification:(id)fp8;
- (BOOL)peopleListItem:(id)fp8 canTransitionToStatus:(unsigned int)fp12;
- (void)_customColorChangedForIMHandle:(id)fp8;
- (void)setShowIMHandleColorHint:(BOOL)fp8;
- (void)setSeparateServices:(BOOL)fp8;
- (BOOL)separateServices;
- (id)table;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (void)setAllowsIMHandleSubstitution:(BOOL)fp8;
- (BOOL)allowsIMHandleSubstitution;
- (void)setArrangesByGroup:(BOOL)fp8;
- (BOOL)arrangesByGroup;
- (void)setShowsUnknownStatus:(BOOL)fp8;
- (BOOL)showsUnknownStatus;
- (void)setShowsOfflinePeople:(BOOL)fp8;
- (BOOL)showsOfflinePeople;
- (void)setUsesOfflineGroup:(BOOL)fp8;
- (BOOL)usesOfflineGroup;
- (void)setCollapsedGroupsPrefKey:(id)fp8;
- (id)collapsedGroupsPrefKey;
- (id)contextualMenu;
- (BOOL)_isOfflineGroup:(id)fp8;
- (id)_groupsForIMHandle:(id)fp8 inItem:(id)fp12;
- (void)_updateGroupPreferences;
- (unsigned int)_indexOfGroup:(id)fp8 startingAtIndex:(int)fp12;
- (struct _NSRange)_rangeOfGroupAndItems:(id)fp8 startingAtIndex:(unsigned int)fp12;
- (BOOL)containsGroup:(id)fp8;
- (void)_addGroup:(id)fp8;
- (void)addGroup:(id)fp8;
- (void)_removeGroup:(id)fp8;
- (void)removeGroup:(id)fp8;
- (id)peopleListGroupSortOrder;
- (void)setGroups:(id)fp8;
- (id)groupForNewIMHandles;
- (unsigned int)_visibleIndexOfIMHandle:(id)fp8 startingAtIndex:(int)fp12;
- (unsigned int)_visibleIndexOfItem:(id)fp8 startingAtIndex:(int)fp12;
- (unsigned int)numberOfIMHandles;
- (BOOL)containsIMHandle:(id)fp8;
- (BOOL)isIMHandleVisible:(id)fp8;
- (id)representedPeopleInGroup:(id)fp8;
- (id)peopleInGroup:(id)fp8;
- (void)selectIMHandles:(id)fp8;
- (id)allIMHandles;
- (BOOL)peopleListItemIsInOfflineGroup:(id)fp8;
- (BOOL)_peopleListItem:(id)fp8 shouldBeInGroup:(id)fp12;
- (BOOL)_peopleListItemShouldBeShown:(id)fp8 inGroup:(id)fp12;
- (void)_refreshContents;
- (void)_rebuildItems;
- (BOOL)_addIMHandle:(id)fp8 toCollection:(id)fp12 usingOrphanItems:(id)fp16;
- (void)_pulseIMHandle:(id)fp8 inCollection:(id)fp12;
- (void)pulseIMHandle:(id)fp8;
- (void)pulseIMHandles:(id)fp8;
- (void)addIMHandle:(id)fp8;
- (void)addPeopleFromArray:(id)fp8 skipMe:(BOOL)fp12;
- (void)addPeopleFromArray:(id)fp8;
- (id)_removeIMHandle:(id)fp8 fromPeopleListItem:(id)fp12;
- (void)_removeIMHandle:(id)fp8 fromPeopleListGroup:(id)fp12;
- (void)removeIMHandle:(id)fp8 fromGroups:(id)fp12;
- (void)removeIMHandle:(id)fp8 fromGroup:(id)fp12;
- (void)removeIMHandle:(id)fp8;
- (void)removeAllIMHandles;
- (void)removeAllIMHandlesAndGroups:(BOOL)fp8;
- (void)_repopulateIMHandle:(id)fp8 filterGroups:(BOOL)fp12;
- (void)repopulateIMHandle:(id)fp8;
- (id)imHandleAtRow:(int)fp8;
- (id)selectedIMHandles;
- (id)imHandleForObjectValue:(id)fp8;
- (void)_rememberSelection;
- (void)_restoreSelection;
- (void)beginChangesNoAnimation;
- (void)beginChanges;
- (void)endChanges;
- (BOOL)makingChanges;
- (BOOL)_sortsByStatus;
- (BOOL)_sortsByName;
- (void)setAllowsGroupOrdering:(BOOL)fp8;
- (BOOL)allowsGroupOrdering;
- (void)setPreferCustomSort:(BOOL)fp8;
- (BOOL)preferCustomSort;
- (CDAnonymousStruct4)_sortParameters;
- (void)_resortNow;
- (void)_resort;
- (void)_postResortNotification;
- (void)resort;
- (void)setSortOrder:(int)fp8;
- (void)setSortOrder:(int)fp8 secondary:(int)fp12;
- (int)sortOrder;
- (int)secondarySortOrder;
- (void)setSortDefaultKey:(id)fp8;
- (id)sortDefaultKey;
- (void)setSortOrderFromDefaults;
- (void)saveSortOrderToDefaultsAndNotify:(BOOL)fp8;
- (void)_setPeopleListItemNeedsDisplay:(id)fp8;
- (void)setIMHandleNeedsDisplay:(id)fp8;
- (void)revealIMHandlesInBuddyList:(id)fp8;
- (void)_stopTransitions;
- (void)_animateTransitions:(id)fp8;
- (void)_endAnimationSuppression;
- (void)suppressAnimation;
- (void)_needsDrawFromAnimate:(id)fp8;
- (void)_processIMHandleForGroupChange:(id)fp8;
- (void)_processGroupChangeQueue;
- (void)_processStatusChangeQueue;
- (void)_processStatusChangeQueueUnforced;
- (void)_processStatusChangeQueueForced;
- (void)_buddyPropertiesDone:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (id)tableView:(id)fp8 objectValueForRow:(int)fp12;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (float)alphaForItem:(id)fp8 throbs:(unsigned int)fp12;
- (id)displayNameForItem:(id)fp8;
- (id)displayStatusForItem:(id)fp8;
- (BOOL)tableView:(id)fp8 shouldStartDraggingForGroupRow:(int)fp12;
- (void)tableView:(id)fp8 dragStarted:(id)fp12 originPoint:(NSPoint)fp16;
- (BOOL)_mouseInButtons:(id)fp8;
- (BOOL)tableView:(id)fp8 acceptsFirstMouse:(id)fp12;
- (BOOL)tableView:(id)fp8 canDeleteRows:(id)fp12;
- (void)tableView:(id)fp8 performDragOperation:(unsigned int)fp12 withPasteboard:(id)fp16;
- (BOOL)tableView:(id)fp8 deleteRows:(id)fp12;
- (id)_peopleToAddFromABPerson:(id)fp8 isOK:(char *)fp12;
- (void)_getIMHandles:(id *)fp8 andGroups:(id *)fp12 fromPasteboard:(id)fp16 allowDuplicates:(BOOL)fp20;
- (id)peopleFromPasteboard:(id)fp8 addToAB:(BOOL)fp12 notAddablePeople:(id *)fp16;
- (id)tableView:(id)fp8 typeSelectStringForTableColumn:(id)fp12 row:(int)fp16;
- (id)_propertyListForIMHandles:(id)fp8 inGroup:(id)fp12;
- (id)_imHandlePropertyListArrayForRows:(id)fp8;
- (BOOL)tableView:(id)fp8 writeRowsWithIndexes:(id)fp12 toPasteboard:(id)fp16;
- (void)_setDropGroup:(id)fp8;
- (unsigned int)tableView:(id)fp8 validateDrop:(id)fp12 proposedRow:(int)fp16 proposedDropOperation:(unsigned int)fp20;
- (void)_warnPeopleNoValidIMAddresses:(id)fp8;
- (BOOL)tableView:(id)fp8 acceptDrop:(id)fp12 row:(int)fp16 dropOperation:(unsigned int)fp20;
- (BOOL)tableView:(id)fp8 canPasteFromPasteboard:(id)fp12;
- (BOOL)tableView:(id)fp8 pasteFromPasteboard:(id)fp12;
- (id)tableView:(id)fp8 tooltipForRow:(int)fp12;
- (BOOL)tableView:(id)fp8 prepareTooltip:(id)fp12 row:(int)fp16;
- (BOOL)tableView:(id)fp8 shouldShowTooltipForRow:(int)fp12;
- (NSRect)_vcRectOfRow:(int)fp8;
- (BOOL)tableView:(id)fp8 shouldDrawWhenMovingFrom:(NSPoint)fp12 toPoint:(NSPoint)fp20;
- (void)refreshTracking;
- (void)_updateLayout;
- (void)setHides:(unsigned int)fp8;
- (void)setHides:(unsigned int)fp8 to:(BOOL)fp12;
- (void)toggleHides:(unsigned int)fp8;
- (BOOL)hides:(unsigned int)fp8;
- (float)widthToFitContent;
- (void)_statusIndicatorDidChange:(id)fp8;
- (BOOL)tableView:(id)fp8 groupRowAtIndex:(int)fp12;
- (unsigned int)tableView:(id)fp8 groupRowGreaterThanIndex:(unsigned int)fp12;
- (id)tableView:(id)fp8 titleForGroupRow:(int)fp12;
- (id)tableView:(id)fp8 numberStringForPeopleListGroup:(id)fp12 ignoreCollapsed:(BOOL)fp16;
- (id)tableView:(id)fp8 numberStringForGroupRow:(int)fp12 ignoreCollapsed:(BOOL)fp16;
- (void)groupClicked:(id)fp8;
- (id)groupWithName:(id)fp8;
- (void)showContextMenuForPeopleListItem:(id)fp8;
- (void)tableView:(id)fp8 groupRowClicked:(int)fp12;
- (id)tableView:(id)fp8 menuForGroupRow:(int)fp12;
- (BOOL)tableView:(id)fp8 shouldSelectRow:(int)fp12;
- (void)tableView:(id)fp8 returnKeyPressedAtRow:(int)fp12;
- (void)doDefaultAction:(id)fp8;
- (void)sendMessage:(id)fp8;
- (void)requestValidation:(id)fp8;
- (void)sendDirectMessage:(id)fp8;
- (void)startChat:(id)fp8;
- (void)inviteToVideoChat:(id)fp8;
- (void)inviteToAudioChat:(id)fp8;
- (void)cancelARDSession:(id)fp8;
- (void)screenShareWithBuddy:(id)fp8;
- (void)inviteToARDAsClient:(id)fp8;
- (void)inviteToARDAsServer:(id)fp8;
- (void)sendSMS:(id)fp8;
- (void)composeEMail:(id)fp8;
- (void)searchInSpotlight:(id)fp8;
- (void)sendFile:(id)fp8;
- (void)block:(id)fp8;
- (void)_showSelectedInfo:(BOOL)fp8;
- (void)showSelectedBuddyInfo:(id)fp8;
- (void)showSelectedBuddyProfile:(id)fp8;
- (void)showInAddressBook:(id)fp8;
- (void)showInBuddyList:(id)fp8;
- (void)openStatusAsURL:(id)fp8;
- (void)toggleArrangesByGroup:(id)fp8;
- (void)toggleUsesOfflineGroup:(id)fp8;
- (void)toggleShowsOfflines:(id)fp8;
- (BOOL)validateAction:(SEL)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)refreshList;

@end

@interface PeopleListController : NSWindowController <PeopleListDelegate>
{
    Account *_representedAccount;
    PeopleList *_peopleList;
    NSMutableArray *_addBuffer;
    StatusController *_myStatusController;
    BOOL _showAll;
    BOOL _windowHasLoaded;
    NSMenu *_groupContextualMenu;
    NSString *_groupForContextualMenu;
    NSString *_name;
    NSString *_prefIdentifier;
    NSView *_statusArea;
    NSView *_listContainer;
    NSSize _minContentSize;
    NSSize _maxContentSize;
    MenuButton *_addButton;
    NSSegmentedControl *_buddyListButtons;
    BOOL _ardConnectionUsesMenu;
    NSMenu *_screenSharingMenu;
    NSMenu *_screenSharingMenuInSession;
    MyPictureControl *_myPicture;
    MyNameControl *_myName;
    MyStatusControl *_myStatus;
    NSButton *_getInfoButton;
    NSButton *_myVCButton;
    BOOL _buttonIsVideo;
    int _myVCButtonTrackingRectTag;
    NSScrollView *_scrollView;
    BOOL _willRefresh;
    NSToolbar *_toolbar;
    NSToolbarItem *_statusToolbarItem;
    IMPeople *_sourcePeople;
    BOOL _supportsOfflineToggle;
    BOOL _supportsGroups;
    BOOL _supportsEditing;
    BOOL _supportsChild;
    int _defaultHeight;
}

+ (id)peopleListControllerWithRepresentedAccount:(id)fp8;
+ (id)peopleListControllers;
+ (id)_allPreferenceKeys;
+ (id)_preferenceKeysToImport;
+ (id)_tigerPrefNameForAccount:(id)fp8;
+ (id)defaultUncollapsedFrameNameForAccount:(id)fp8;
+ (BOOL)_existingPeopleListControllerFrameCollidesWithFrame:(NSRect)fp8 skipController:(id)fp24;
- (id)initWithAccount:(id)fp8;
- (id)initWithName:(id)fp8 prefIdentifier:(id)fp12;
- (void)awakeFromNib;
- (void)removeFromList;
- (void)dealloc;
- (void)_setupAddButtonTooltip;
- (void)_importPrefsFromTiger;
- (void)windowDidLoad;
- (void)clearPreferences;
- (void)_fixGradientForCollapsed;
- (void)_fixGradient;
- (void)_configureUIForAccount;
- (void)_accountCapsChanged:(id)fp8;
- (void)_accountInfoChanged:(id)fp8;
- (void)_refreshTargetedNotifications;
- (id)representedAccount;
- (id)representedAccounts;
- (void)setRepresentedAccounts:(id)fp8;
- (void)setSourcePeople:(id)fp8;
- (void)setRepresentedAccount:(id)fp8;
- (BOOL)representsService:(id)fp8;
- (BOOL)representsAccount:(id)fp8;
- (void)setName:(id)fp8;
- (id)name;
- (void)setPrefIdentifier:(id)fp8;
- (id)prefIdentifier;
- (BOOL)prefVisible;
- (void)setPrefVisible:(BOOL)fp8;
- (id)peopleList;
- (id)sourcePeople;
- (id)pictureControl;
- (void)showWindow:(id)fp8;
- (void)enableWindow:(BOOL)fp8 quietly:(BOOL)fp12;
- (void)enableWindow:(BOOL)fp8;
- (void)_layoutInteriorViews;
- (void)displayWithKey:(BOOL)fp8;
- (void)displayWithoutKey;
- (void)displayIfPrefVisible;
- (void)display;
- (void)hide;
- (BOOL)isVisible;
- (BOOL)windowShouldClose:(id)fp8;
- (void)windowDidBecomeMain:(id)fp8;
- (void)windowDidResignMain:(id)fp8;
- (BOOL)addBuddy:(id)fp8 withWindow:(id)fp12;
- (id)addBuddy;
- (void)addABuddy:(id)fp8;
- (id)propertiesForGroup:(id)fp8;
- (id)peopleList:(id)fp8 siblingsForIMHandle:(id)fp12;
- (id)peopleList:(id)fp8 addablePeople:(id)fp12;
- (void)addIMHandle:(id)fp8;
- (void)_flushBuffer;
- (void)addWhitelistedNotInBuddyListSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (BOOL)peopleList:(id)fp8 canRemoveRows:(id)fp12;
- (BOOL)_deleteBuddies:(id)fp8;
- (void)pulseIMHandle:(id)fp8;
- (void)_deleteSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_confirmDeletionOfPeople:(id)fp8 withContextInfo:(id)fp12;
- (BOOL)peopleList:(id)fp8 deletePeople:(id)fp12;
- (BOOL)deletePeople:(id)fp8;
- (void)deleteSelectedBuddies:(id)fp8;
- (BOOL)containsIMHandle:(id)fp8;
- (void)parentalSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)addAGroup:(id)fp8;
- (void)renameGroup:(id)fp8;
- (void)startIMToGroup:(id)fp8;
- (void)addBuddyToGroup:(id)fp8;
- (void)inviteGroupToChat:(id)fp8;
- (void)deleteGroup:(id)fp8;
- (void)peopleList:(id)fp8 deleteGroup:(id)fp12;
- (BOOL)wantsSortedGroups;
- (void)setGroupsSortOrder:(id)fp8;
- (void)peopleList:(id)fp8 setGroupsSortOrder:(id)fp12;
- (id)groups;
- (id)groupsWithCapability:(id)fp8;
- (id)reorderableGroups;
- (void)_serviceGroupsChanged:(id)fp8;
- (void)_arrangesByGroupChanged;
- (id)groupsToAddTo;
- (BOOL)_doAddPeople:(id)fp8 toGroups:(id)fp12;
- (BOOL)peopleList:(id)fp8 pastePeople:(id)fp12 intoGroup:(id)fp16;
- (id)_imHandlesFromPeople:(id)fp8 inGroups:(id)fp12;
- (BOOL)peopleList:(id)fp8 people:(id)fp12 draggedFromGroups:(id)fp16 toGroup:(id)fp20 atLocation:(unsigned int)fp24 copying:(BOOL)fp28;
- (void)personABPersonChanged:(id)fp8;
- (void)_accountLoaded:(id)fp8;
- (void)_multiSessionSheedDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_accountLoginStatusChanged:(id)fp8;
- (void)refreshList;
- (void)_refreshList;
- (void)buddyListChanged:(id)fp8;
- (void)showInBuddyList:(id)fp8;
- (void)showSelectedPeopleInList:(id)fp8;
- (id)_myVCImage:(int)fp8 forState:(int)fp12;
- (void)_updateVCButtonRollover;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (BOOL)_setupVCButtonAsVideo:(BOOL)fp8 force:(BOOL)fp12;
- (BOOL)_addVCButtonIsVideo:(BOOL)fp8;
- (BOOL)_setVCButtonIsVideo:(BOOL)fp8;
- (BOOL)_updateVCButton;
- (void)_adjustWidgetsToTable:(BOOL)fp8;
- (void)_adjustWidgetsToTable;
- (void)_adjustWidgetsSoon:(id)fp8;
- (void)tableDidResize:(id)fp8;
- (BOOL)windowShouldZoom:(id)fp8 toFrame:(NSRect)fp12;
- (NSRect)windowWillUseStandardFrame:(id)fp8 defaultFrame:(NSRect)fp12;
- (BOOL)isTableCollapsed;
- (void)collapseTableAnimated:(BOOL)fp8;
- (void)uncollapseTableAnimated:(BOOL)fp8;
- (void)setTableCollapsed:(BOOL)fp8 animate:(BOOL)fp12;
- (id)identifiedPref:(id)fp8 forIdentifier:(id)fp12;
- (id)identifiedPref:(id)fp8;
- (float)peopleList:(id)fp8 alphaForStatus:(unsigned int)fp12;
- (id)peopleList:(id)fp8 alternateNameTextForIMHandle:(id)fp12;
- (id)peopleList:(id)fp8 alternateStatusTextForIMHandle:(id)fp12;
- (id)peopleList:(id)fp8 filterIMHandleFromPasteboard:(id)fp12;
- (BOOL)peopleList:(id)fp8 addPersonWithoutID:(id)fp12;
- (id)peopleList:(id)fp8 menuForGroup:(id)fp12;
- (void)peopleListSelectedItemInfoChanged:(id)fp8;
- (BOOL)supportsChild;
- (BOOL)supportsEditing;
- (BOOL)supportsGroups;
- (BOOL)supportsOfflineToggle;
- (void)buddyListButtonsAction:(id)fp8;
- (void)sortManually:(id)fp8;
- (void)sortByStatus:(id)fp8;
- (void)sortByFirstName:(id)fp8;
- (void)sortByLastName:(id)fp8;
- (void)toggleHidePictures:(id)fp8;
- (void)toggleHideAudioStatus:(id)fp8;
- (void)toggleHideVideoStatus:(id)fp8;
- (void)toggleShowOfflines:(id)fp8;
- (void)toggleArrangesByGroup:(id)fp8;
- (void)toggleUsesOfflineGroup:(id)fp8;
- (void)personDoubleClicked:(id)fp8;
- (void)changeBuddyPicture:(id)fp8;
- (void)sendMessage:(id)fp8;
- (void)sendDirectMessage:(id)fp8;
- (void)startChat:(id)fp8;
- (void)inviteToAudioChat:(id)fp8;
- (void)inviteToVideoChat:(id)fp8;
- (void)cancelARDSession:(id)fp8;
- (void)inviteToARDAsClient:(id)fp8;
- (void)inviteToARDAsServer:(id)fp8;
- (void)composeEMail:(id)fp8;
- (void)searchInSpotlight:(id)fp8;
- (void)sendSMS:(id)fp8;
- (void)sendFile:(id)fp8;
- (void)block:(id)fp8;
- (void)requestValidation:(id)fp8;
- (void)showInAddressBook:(id)fp8;
- (void)openStatusAsURL:(id)fp8;
- (void)showSelectedBuddyInfo:(id)fp8;
- (void)showSelectedBuddyProfile:(id)fp8;
- (void)screenShareWithBuddy:(id)fp8;
- (void)setARDConnectionUsesMenu:(BOOL)fp8;
- (BOOL)ARDConnectionUsesMenu;
- (BOOL)anythingConnected;
- (void)logServiceInOrOut:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)tableViewSelectionDidChange:(id)fp8;
- (void)editMessageForCurrentStatus;
- (void)_savePosition;
- (void)windowDidMove:(id)fp8;
- (void)_fixBottomBorderThickness;
- (void)windowDidResize:(id)fp8;
- (void)windowWillClose:(id)fp8;

@end

@interface PeopleListControllerWindow : NSWindow
{
}

- (double)animationResizeTime:(NSRect)fp8;

@end

@interface PeopleListItem : DirectlyObservableObject <NSCopying, DirectlyObservableObjectObserver>
{
    BOOL _isGroup;
    IMBuddyListPresence *_presence;
    NSDate *_whenStatusChanged;
    PeopleListGroup *_group;
    NSAttributedString *_attributedStatusMessage;
    NSDate *_transitionStartTime;
    BOOL _inTransition;
    float _currentTransitionTime;
    unsigned int _currentStatus;
    unsigned int _previousStatus;
    NSString *_statusMessage;
    NSString *_displayName;
    int _minutesIdle;
    id _delegate;
}

+ (id)notifications;
+ (id)selectors;
+ (id)displayNameForString:(id)fp8;
+ (id)displayStatusMessageForString:(id)fp8;
- (id)initWithBuddyListPresence:(id)fp8 inGroup:(id)fp12;
- (id)initAsGroup:(id)fp8;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (BOOL)isEqual:(id)fp8;
- (id)description;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)_postNotificationNamed:(id)fp8 userInfo:(id)fp12;
- (void)_observePresence:(id)fp8;
- (void)_unobservePresence:(id)fp8;
- (void)setBuddyListPresence:(id)fp8;
- (id)buddyListPresence;
- (void)_presenceInfoChanged:(id)fp8;
- (void)_presenceSortOrderChanged:(id)fp8;
- (void)_presenceCapabilitiesChanged:(id)fp8;
- (void)_presenceStatusChanged:(id)fp8;
- (void)_presencePictureChanged:(id)fp8;
- (void)_presenceGroupsChanged:(id)fp8;
- (void)_presenceMobileChanged:(id)fp8;
- (void)_presenceCertsChanged:(id)fp8;
- (void)objectDidPostDirectNotification:(id)fp8;
- (void)_cacheCurrentState;
- (BOOL)_currentInfoDiffersFromCache;
- (BOOL)_currentStatusDiffersFromCache;
- (id)peopleListGroup;
- (void)setPeopleListGroup:(id)fp8;
- (id)group;
- (BOOL)isGroup;
- (BOOL)isIMHandle;
- (id)imHandle;
- (id)displayName;
- (id)tooltipString;
- (void)_setWhenStatusChanged:(id)fp8;
- (BOOL)_updateCurrentStatus;
- (unsigned int)previousStatus;
- (unsigned int)currentStatus;
- (unsigned int)effectiveStatus;
- (double)timeSinceStatusChanged;
- (BOOL)canTransition;
- (BOOL)inStatusTransition;
- (void)_startAnimationPusling:(BOOL)fp8;
- (void)_startStatusTransition;
- (void)_startPulse;
- (BOOL)isPulseTransition;
- (void)startPulse;
- (void)stopTransition;
- (float)transitionPhase:(float)fp8;
- (float)transitionAlphaTo:(float)fp8 from:(float)fp12 throbs:(unsigned int)fp16;
- (int)_compareIMHandlesWith:(id)fp8 withSortParameters:(CDAnonymousStruct4 *)fp12;
- (int)compare:(id)fp8 withSortParameters:(CDAnonymousStruct4 *)fp12;
- (void)clearAttributedStatusMessageCache;
- (id)displayStatusMessage;
- (unsigned int)sortOrder;

@end

@interface PeopleListItem (AccessibilityAdditions)
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityTitleAttribute;
- (id)accessibilityValueAttribute;
@end

@interface PeoplePicker : NSObject
{
    Service *_service;
    ABPeoplePickerView *_peoplePicker;
    NSView *_titleView;
    BOOL _alwaysPost;
}

- (id)init;
- (void)awakeFromNib;
- (void)dealloc;
- (void)setPeopleDoubleClickTarget:(id)fp8 andAction:(SEL)fp12;
- (void)enableMultiplePeopleSelection:(BOOL)fp8;
- (void)setAllowedServices:(id)fp8;
- (void)setAllowsAccountSelection:(BOOL)fp8;
- (void)setService:(id)fp8;
- (void)setAlwaysPosts:(BOOL)fp8;
- (void)_postChangedNotificationNamed:(id)fp8;
- (void)_postChangedNotification;
- (void)groupDidChange:(id)fp8;
- (void)nameDidChange:(id)fp8;
- (void)valueDidChange:(id)fp8;
- (void)propertyDidChange:(id)fp8;
- (id)displayedProperty;
- (id)selectedRecords;
- (id)selectedValues;
- (id)selectedPerson;
- (void)openInAddressBook:(id)fp8;
- (void)editInAddressBook:(id)fp8;
- (void)selectABPerson:(id)fp8 andIMHandle:(id)fp12;
- (void)selectABPerson:(id)fp8;
- (void)selectABPerson:(id)fp8 andValue:(id)fp12;
- (void)personSelected:(id)fp8;

@end

@interface Presentity : IMHandle <NSCoding>
{
    BuddyPicture *_customPicture;
    BuddyPicture *_picture;
    NSColor *_balloonColor;
    NSColor *_lastCustomBackgroundColor;
    NSColor *_lastCustomFontColor;
}

- (void)setBalloonColor:(id)fp8;
- (id)lastCustomBackgroundColor;
- (void)setLastCustomBackgroundColor:(id)fp8;
- (id)lastCustomFontColor;
- (void)setLastCustomFontColor:(id)fp8;
- (id)customPicture;
- (BOOL)_customPictureChecked;
- (void)_forgetCustomPicture;
- (void)abPersonChangedPictureBlocking;
- (void)sendNotificationABPersonChanged;
- (void)_setPicture:(id)fp8;
- (void)setPictureFromImage:(id)fp8;
- (void)dealloc;
- (id)balloonColor;
- (unsigned int)_trustResultForKey:(id)fp8;
- (void)setCertificates:(id)fp8;
- (id)signingCertificate;
- (unsigned int)signingTrustResult;
- (id)encryptionCertificate;
- (unsigned int)encryptionTrustResult;
- (int)certificateStatus;
- (BOOL)hasValidCertificates;
- (int)_individualSecurityLevel;
- (BOOL)canBeSecure;
- (BOOL)couldBeSecure;
- (void)propertiesChanged:(id)fp8;
- (void)setSecurityLevel:(int)fp8;
- (int)securityLevel;
- (void)disableCertificates;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)picture;
- (id)pictureKey;
- (id)genericPicture;
- (void)setCustomPictureData:(id)fp8 key:(id)fp12;
- (void)setCustomPictureData:(id)fp8;
- (void)setPicture:(id)fp8;
- (id)customPictureRegardlessOfBlocking;
- (id)statusMessageAsURL;

@end

@interface Person : Presentity
{
}

@end

@interface Prefs : NSObject
{
}

+ (void)copyPreference:(id)fp8 toKey:(id)fp12;
+ (void)clearPreferenceForKey:(id)fp8;
+ (BOOL)boolForKey:(id)fp8 defaultValue:(BOOL)fp12;
+ (int)integerForKey:(id)fp8 defaultValue:(int)fp12;
+ (float)floatForKey:(id)fp8 defaultValue:(float)fp12;
+ (double)doubleForKey:(id)fp8 defaultValue:(double)fp12;
+ (id)arrayForKey:(id)fp8;
+ (void)setArray:(id)fp8 forKey:(id)fp12;
+ (void)setInteger:(int)fp8 forKey:(id)fp12;
+ (void)setBool:(BOOL)fp8 forKey:(id)fp12;
+ (void)setString:(id)fp8 forKey:(id)fp12;
+ (id)stringForKey:(id)fp8 defaultValue:(id)fp12;
+ (int)nameStyle;
+ (void)setNameStyle:(int)fp8;
+ (BOOL)loginAtSystemLogin;
+ (void)setLoginAtSystemLogin:(BOOL)fp8;
+ (BOOL)offlineOnQuit;
+ (void)setOfflineOnQuit:(BOOL)fp8;
+ (int)fastUserSwitchAction;
+ (void)setFastUserSwitchAction:(int)fp8;
+ (BOOL)usingABPicture;
+ (void)setUsingABPicture:(BOOL)fp8;
+ (int)numberOfCustomMessagesToRemember;
+ (void)setNumberOfCustomMessagesToRemember:(int)fp8;
+ (BOOL)knockKnock;
+ (void)setKnockKnock:(BOOL)fp8;
+ (BOOL)showMyLoginIdInBuddyList;
+ (void)setShowMyLoginIdInBuddyList:(BOOL)fp8;
+ (BOOL)fileTransferManagerShouldBeVisible;
+ (void)setFileTransferManagerShouldBeVisible:(BOOL)fp8;
+ (BOOL)useSingleStatus;
+ (void)setUseSingleStatus:(BOOL)fp8;
+ (BOOL)animateBuddyIcons;
+ (void)setAnimateBuddyIcons:(BOOL)fp8;
+ (id)chatBookmarks;
+ (void)_setChatBookmarks:(id)fp8;
+ (BOOL)hasBookmarkForRoom:(id)fp8 onAccountID:(id)fp12;
+ (id)chatBookmarksForAccountID:(id)fp8;
+ (void)removeBookmarkAtIndex:(int)fp8;
+ (void)addBookmarkForRoom:(id)fp8 account:(id)fp12;
+ (void)removeBookmarkForRoom:(id)fp8 account:(id)fp12;
+ (void)setJoinAtLaunch:(BOOL)fp8 roomName:(id)fp12 accountID:(id)fp16;
+ (BOOL)shouldJoinRoomNameAtLaunch:(id)fp8 accountID:(id)fp12;
+ (BOOL)addressMeInGroupchat;
+ (void)setAddressMeInGroupchat:(BOOL)fp8;
+ (BOOL)autosaveChats;
+ (void)setAutosaveChats:(BOOL)fp8;
+ (BOOL)alwaysShowRecipientBar;
+ (void)setAlwaysShowRecipientBar:(BOOL)fp8;
+ (BOOL)useBestRecipient;
+ (id)savedChatPath;
+ (void)setSavedChatPath:(id)fp8;
+ (BOOL)autoRestoreChatContents;
+ (void)setAutoRestoreChatContents:(BOOL)fp8;
+ (int)autoRestoreChatContentsMessageCount;
+ (void)setAutoRestoreChatContentsMessageCount:(int)fp8;
+ (id)downloadPath;
+ (void)setDownloadPath:(id)fp8;
+ (id)existingDownloadPath;
+ (BOOL)menuExtraIsVisible;
+ (long)setMenuExtraIsVisible:(BOOL)fp8;
+ (id)nowPlayingFormatString;

@end

@interface Prefs_Accounts : NSPreferencesModule <IMPreferencePaneControllerProtocol>
{
    Account *_loadedAccount;
    int _nextRowToSelect;
    NSTextField *_accountText;
    NSTableView *_serviceTable;
    NSButton *addButton;
    NSButton *removeButton;
    NSMutableDictionary *_preferenceControllers;
    NSTabView *_servicesTab;
}

- (id)imageForPreferenceNamed:(id)fp8;
- (id)currentPrefController;
- (void)loadAccount:(id)fp8;
- (void)_activeAccountChanged:(id)fp8;
- (void)_serviceEnablementChanged:(id)fp8;
- (void)_windowLostFocus:(id)fp8;
- (void)_windowBecameMain:(id)fp8;
- (void)_addressBookChanged:(id)fp8;
- (void)_accountDoubleClicked:(id)fp8;
- (void)_accountChanged:(id)fp8;
- (void)loadPreferenceBundles;
- (void)awakeFromNib;
- (void)_dotMacCertifiabilityDetermined:(id)fp8;
- (id)init;
- (void)dealloc;
- (BOOL)isResizable;
- (void)updateServiceTable:(id)fp8;
- (void)accountSelectionChanged:(id)fp8;
- (void)_managedPrefsChanged:(id)fp8;
- (void)selectAccount:(id)fp8;
- (id)viewForPreferenceNamed:(id)fp8;
- (void)willBeDisplayed;
- (void)initializeFromDefaults;
- (BOOL)moduleCanBeRemoved;
- (BOOL)preferencesWindowShouldClose;
- (void)saveChanges;
- (void)selectFirstActiveAccount;
- (void)setupComplete:(id)fp8;
- (void)addAccount:(id)fp8;
- (void)removeAccount:(id)fp8;
- (void)showHelp:(id)fp8;
- (void)_deleteSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_changeLoginSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_warnRemoveAccount:(id)fp8;
- (void)updateBottomText;

@end

@interface Prefs_Actions : NSPreferencesModule
{
    ActionsController *_actionsController;
    NSImageView *_lowVolume;
    NSImageView *_highVolume;
}

- (id)imageForPreferenceNamed:(id)fp8;
- (void)awakeFromNib;
- (BOOL)isResizable;
- (id)viewForPreferenceNamed:(id)fp8;
- (BOOL)hasChangesPending;
- (void)saveChanges;
- (void)actionsControllerChanged:(id)fp8;
- (void)willBeDisplayed;
- (BOOL)preferencesWindowShouldClose;
- (void)moduleWillBeRemoved;
- (void)showHelp:(id)fp8;

@end

@interface Prefs_BuddyList : NSPreferencesModule
{
}

- (id)viewForPreferenceNamed:(id)fp8;

@end

@interface Prefs_Camera : NSPreferencesModule
{
    CollapseView *cameraCollapseView;
    NSPopUpButton *cameraPulldownMenu;
    CollapseView *micCollapseView;
    NSPopUpButton *micPulldownMenu;
    CollapseView *soundOutputDeviceCollapseView;
    NSPopUpButton *soundOutputDevicePulldownMenu;
    CollapseView *pairHeadsetCollapseView;
    NSButton *pairHeadsetButton;
    NSTabView *cameraTabView;
    CameraPreferencesView *cameraView;
    NSExtendedBox *noCameraBox;
    NSTextField *noCameraTextField;
    CollapseView *volumeCollapseView;
    VolumeIndicator *volumeIndicator;
    CollapseView *lightingCollapseView;
    NSPopUpButton *bandwidthPulldownMenu;
    NSButton *launchOnCameraCheckbox;
    NSButton *repeatedRingCheckbox;
    BOOL stayingOnVideoPrefs;
    BOOL videoPrefsWindowWasClosed;
    BOOL didCancel;
    BOOL autoselectBTMic;
    BOOL autoselectBTOutput;
}

- (void)dealloc;
- (BOOL)isResizable;
- (id)viewForPreferenceNamed:(id)fp8;
- (void)saveChanges;
- (void)willBeDisplayed;
- (void)moduleWasInstalled;
- (void)moduleWillBeRemoved;
- (void)_updateUIElement:(int)fp8 animate:(BOOL)fp12;
- (id)_noneStr;
- (int)_updateDeviceList:(id)fp8 name:(id)fp12 popUp:(id)fp16;
- (int)_updateCameraList;
- (int)_updateMicList;
- (int)_updateSoundOutputDeviceList;
- (void)_startStopAV;
- (void)_prefsChangedNotification:(id)fp8;
- (void)__prefsChangedNotification:(id)fp8;
- (void)changeCamera:(id)fp8;
- (void)changeMicrophone:(id)fp8;
- (void)changeSoundOutputDevice:(id)fp8;
- (void)_setBandwidth:(unsigned int)fp8;
- (void)changeBandwidth:(id)fp8;
- (void)changeLaunchOnCamera:(id)fp8;
- (void)changeRepeatedRing:(id)fp8;
- (void)pairHeadset:(id)fp8;
- (void)showHelp:(id)fp8;
- (void)privateResizeHack;
- (void)setStayingOnVideoPrefs:(BOOL)fp8;
- (BOOL)videoPrefsWindowWasClosed;
- (void)setVideoPrefsWindowWasClosed:(BOOL)fp8;
- (void)setDidCancel:(BOOL)fp8;

@end

@interface Prefs_General : NSPreferencesModule
{
    DefaultApplicationPopUpButton *defaultIMClientPopup;
    NSButton *showStatusMenuCheckbox;
    NSButton *offlineOnQuitCheckbox;
    NSButton *loginAtSystemLogin;
    NSButton *persistentChats;
    NSButton *useShapeForStatusCheckbox;
    NSMatrix *welcomeBackMode;
    NSButton *autoAwayCheckbox;
    NSButton *useSingleStatus;
    NSButton *autoAwayTimeField;
    NSButton *animateBuddyIcons;
    NSButton *_confirmSend;
    NSPopUpButton *downloadPathPopupButton;
    NSPopUpButton *fastUserSwitchPopup;
    CollapseView *fusCollapseView;
}

- (id)imageForPreferenceNamed:(id)fp8;
- (void)awakeFromNib;
- (void)dealloc;
- (BOOL)isResizable;
- (id)viewForPreferenceNamed:(id)fp8;
- (void)_updateStatusMenuControls:(id)fp8;
- (void)initializeFromDefaults;
- (void)saveChanges;
- (void)changeUseSingleStatus:(id)fp8;
- (void)changeLoginAtSystemLogin:(id)fp8;
- (void)changeAnimateBuddyIcons:(id)fp8;
- (void)changeOfflineOnQuit:(id)fp8;
- (void)changeShowFezStatus:(id)fp8;
- (void)changeUseShapesForStates:(id)fp8;
- (void)changeWelcomeBackMode:(id)fp8;
- (void)changeAutoAway:(id)fp8;
- (void)confirmSendSelected:(id)fp8;
- (void)changeAutoAwayTime:(id)fp8;
- (void)changeFastUserSwitchPopup:(id)fp8;
- (void)changeDownloadPath:(id)fp8;
- (void)_pathChosen:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_setupDownloadPathMenu;
- (void)showHelp:(id)fp8;

@end

@interface Prefs_MsgCompose : NSPreferencesModule <ShowMessagesDelegate>
{
    NSPopUpButton *_outBalloonColorPopUp;
    NSPopUpButton *_outFontColorPopUp;
    NSPopUpButton *_inBalloonColorPopUp;
    NSPopUpButton *_inFontColorPopUp;
    NSPopUpButton *_saveChatLocation;
    NSMenuItem *_outBalloonOtherItem;
    NSMenuItem *_outFontOtherItem;
    NSMenuItem *_inBalloonRandomItem;
    NSMenuItem *_inBalloonOtherItem;
    NSMenuItem *_inFontOtherItem;
    NSView *sampleTranscript;
    FezWebView *_sampleChatView;
    ChatViewController *_sampleChatViewController;
    NSTextField *_inBalloonColorLabel;
    NSTextField *_inFontColorLabel;
    NSButton *persistentChats;
    NSButton *_overrideIncomingStyle;
    NSButton *_autosaveChats;
    NSButton *_autoRestoreEnable;
    NSPopUpButton *_autoRestoreCount;
    NSButton *_collectChats;
    BOOL _dirty;
    NSColor *_curFgColor;
    NSColor *_curBgColor;
    NSColor *_curInFgColor;
    NSColor *_curInBgColor;
    BOOL _customOutBalloonColor;
    BOOL _customInBalloonColor;
    NSFont *_curFont;
    NSFont *_curInFont;
    BOOL _overrideSendersFormatting;
    BOOL _editingInFont;
    BOOL _editingInColor;
    BOOL _editingBgColor;
    NSButton *activateRecentShortcut;
    NSButton *_addressMeInGroupchat;
    NSComboBox *recentShortcutKeyCombo;
    NSButton *autoReplyCheckbox;
    NSMutableArray *_shortcutKeyItems;
    ConfigKeyEditor *_menuHotKeyFieldEditor;
}

+ (id)quickSharedInstance;
+ (id)_colorFromPref:(id)fp8;
+ (id)_sampleForFont:(id)fp8 fgColor:(id)fp12 bgColor:(id)fp16;
- (id)init;
- (void)dealloc;
- (void)awakeFromNib;
- (BOOL)isResizable;
- (id)messageFont;
- (id)messageFgColor;
- (id)messageBgColor;
- (BOOL)overrideSendersFormatting;
- (id)messageInFont;
- (id)messageInBgColor;
- (id)messageInFgColor;
- (void)setUpMessageTextField:(id)fp8;
- (void)_notifyChanged;
- (void)_notifyOverrideChanged;
- (void)_notifyOverrideColorsChanged;
- (void)_notifyOverrideFontChanged;
- (void)_notifyWatchMessageAddressingChanged;
- (id)viewForPreferenceNamed:(id)fp8;
- (id)_swatchForColor:(id)fp8;
- (void)setUpColorMenu:(id)fp8;
- (void)moduleWasInstalled;
- (void)willBeDisplayed;
- (void)chatView:(id)fp8 canShowMessages:(BOOL)fp12;
- (void)setTranscriptStyleFromMenuItem:(id)fp8;
- (void)setChatShowsNames:(id)fp8;
- (void)setChatShowsNamesAndPictures:(id)fp8;
- (void)setChatShowsPictures:(id)fp8;
- (void)toggleHideSmileys:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)controlTextDidCancelEditing:(id)fp8;
- (void)keyEditorFinished:(id)fp8 forTextView:(id)fp12 virtualKey:(id)fp16 modifiers:(unsigned int)fp20;
- (id)windowWillReturnFieldEditor:(id)fp8 toObject:(id)fp12;
- (void)changeActivateRecentShortcut:(id)fp8;
- (id)comboBox:(id)fp8 objectValueForItemAtIndex:(int)fp12;
- (int)numberOfItemsInComboBox:(id)fp8;
- (void)comboBoxSelectionIsChanging:(id)fp8;
- (void)comboBoxSelectionDidChange:(id)fp8;
- (unsigned int)comboBox:(id)fp8 indexOfItemWithStringValue:(id)fp12;
- (void)_setupComboBox;
- (void)_saveColor:(id)fp8 inVar:(id *)fp12 isOutgoing:(BOOL)fp16;
- (void)_setOtherColor:(id)fp8 forMenuItem:(id)fp12 inPopUp:(id)fp16;
- (void)_outBalloonColorPicked:(id)fp8;
- (void)_outFontColorPicked:(id)fp8;
- (void)_inBalloonColorPicked:(id)fp8;
- (void)_inFontColorPicked:(id)fp8;
- (id)_fontFgColor;
- (void)_setColor:(id)fp8 asFontChange:(BOOL)fp12;
- (void)overrideSelected:(id)fp8;
- (void)_updateInColorControls;
- (void)colorChanged:(id)fp8;
- (void)_selectColor:(id)fp8 inPopUp:(id)fp12;
- (void)_showSampleText;
- (void)setMessageFont:(id)fp8;
- (void)_setCurrentFont:(id)fp8;
- (id)fontBeingChanged;
- (void)_chooseAFont;
- (void)chooseOutFont:(id)fp8;
- (void)chooseInFont:(id)fp8;
- (void)addressMeInGroupChatChanged:(id)fp8;
- (void)autosaveChanged:(id)fp8;
- (void)_notifySavedChatPathChanged;
- (void)_pathChosen:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_setupChatPathMenu;
- (void)changeSaveChatLocation:(id)fp8;
- (void)openAutosaveFolder:(id)fp8;
- (void)autoRestoreEnableChanged:(id)fp8;
- (void)autoRestoreCountChanged:(id)fp8;
- (void)changePersistentChats:(id)fp8;
- (BOOL)hasChangesPending;
- (void)saveChanges;
- (void)collectChats:(id)fp8;
- (void)showHelp:(id)fp8;
- (void)changeAutoReply:(id)fp8;

@end

@interface Tooltip : NSObject
{
    NSView *_view;
    NSWindow *_window;
    BOOL _fadingIn;
    NSTimer *_animationTimer;
    NSDate *_animationStartDate;
    NSPoint _previousPosition;
}

- (void)awakeFromNib;
- (id)initWithNibNamed:(id)fp8;
- (void)dealloc;
- (void)positionAtPoint:(NSPoint)fp8 inView:(id)fp16;
- (void)_setAnimationStartDate;
- (void)_stopAnimationTimer;
- (void)_setAnimationTimer;
- (void)_animationStep:(id)fp8;
- (void)_finishAnimation;
- (BOOL)isAnimating;
- (void)_fadeIn:(BOOL)fp8;
- (void)open;
- (BOOL)isVisible;
- (void)close;
- (void)closeImmediately;
- (void)showWindowImmediately;
- (void)hideWindowImmediately;
- (void)cleanupAfterClose;

@end

@interface PresenceTooltip : Tooltip <DirectlyObservableObjectObserver>
{
    IMPresence *_presence;
    NSArray *_uniqueIMHandles;
    NSMutableArray *_tableText;
    FezImageView *_iconView;
    NSTextField *_nameField;
    NSTableView *_table;
}

- (id)_attributesForNameBold:(BOOL)fp8 disabled:(BOOL)fp12;
- (id)_attributesForStatus;
- (id)init;
- (id)_textCell;
- (void)awakeFromNib;
- (void)dealloc;
- (id)_idleStringForIMHandle:(id)fp8;
- (id)_offlineStringForIMHandle:(id)fp8;
- (id)_otherServiceStringForIMHandle:(id)fp8;
- (void)_addTextForIMHandle:(id)fp8 highlighted:(BOOL)fp12;
- (void)_updateTableText;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (float)tableView:(id)fp8 heightOfRow:(int)fp12;
- (void)_updateUIWithDisplay:(BOOL)fp8;
- (void)_updateUI;
- (void)_updateIMHandles;
- (void)objectDidPostDirectNotification:(id)fp8;
- (id)presence;
- (void)setPresence:(id)fp8;

@end

@interface ProfileContainer : NSView
{
}

- (BOOL)isFlipped;
- (void)resizeSubviewsWithOldSize:(NSSize)fp8;
- (void)drawRect:(NSRect)fp8;

@end

@interface ProfileTextField : NSTextField
{
}

- (void)drawRect:(NSRect)fp8;

@end

@interface ProfileTextView : NSTextView
{
}

- (void)_showSelectedText:(BOOL)fp8;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (BOOL)shouldDrawInsertionPoint;
- (void)scrollWheel:(id)fp8;

@end

@interface ProfileView : NSView <NSTextViewDelegate>
{
    BuddyInfo *_owner;
    IMHandle *_imHandle;
    NSView *_contentView;
    NSBox *_separator;
    NSImageView *_statusGemView;
    FezImageView *_buddyIconView;
    NSTextField *_accountNameField;
    NSImageView *_accountTypeView;
    NSTextField *_serviceNameField;
    NSImageView *_mobileIconView;
    NSView *_textContainer;
    NSTextField *_idleField;
    NSTextField *_profileLabel;
    NSTextView *_profileText;
    NSTextField *_messageLabel;
    NSTextView *_messageText;
    NSTextField *_capsLabel;
    NSTextView *_capsText;
    NSTextField *_notesLabel;
    NSTextField *_notesText;
}

- (BOOL)textView:(id)fp8 clickedOnLink:(id)fp12 atIndex:(unsigned int)fp16;
- (void)_adjustLabel:(id)fp8 toTextView:(id)fp12;
- (float)_adjustTextView:(id)fp8 dy:(float)fp12;
- (void)_hideMessage:(BOOL)fp8;
- (void)_removeProfile;
- (void)_removeNotes;
- (void)_updateLayout:(BOOL)fp8;
- (void)setFrame:(NSRect)fp8;
- (void)mouseDown:(id)fp8;
- (id)_capabilitiesText;
- (void)_updateServiceName;
- (void)_updateStatus:(id)fp8;
- (void)_updateCapabilities:(id)fp8;
- (void)_updatePicture:(id)fp8;
- (void)_hideNotes:(BOOL)fp8;
- (void)_updateNotesAndSetText:(BOOL)fp8;
- (void)_updateMobile:(id)fp8;
- (void)_updateBot:(id)fp8;
- (void)_feedUpdatedDateChanged:(id)fp8;
- (void)_infoChanged:(id)fp8;
- (void)_extraPropsChanged:(id)fp8;
- (void)_accountStatusChanged:(id)fp8;
- (id)initWithIMHandle:(id)fp8 owner:(id)fp12 saveNib:(BOOL)fp16;
- (id)imHandle;
- (void)setOwner:(id)fp8;
- (void)setShowsSeparator:(BOOL)fp8;
- (void)awakeFromNib;
- (void)dealloc;
- (void)toggleBuddy:(id)fp8;
- (void)showFullSizeBuddyIcon:(id)fp8;
- (void)setNotes:(id)fp8;

@end

@interface QCComposition (VideoPipelineAdditions)
- (id)asDictionary;
@end

@interface QLAuxVideoReceiver : AuxVideoReceiver <QLPreviewViewDelegate, QLPreviewSlideshowDelegate>
{
    QLPreviewView *_previewView;
    QLPreviewSlideshow *_slideshow;
    NSArray *_items;
    unsigned int _currentIndex;
    int _indexDelta;
    IMAuxVideoProvider *_provider;
    BOOL _slideshowNeedsAutostart;
    NSTimer *_sliderTimer;
    BOOL _needsUpdate;
}

- (void)_observeSlideshowRunning:(BOOL)fp8;
- (id)initWithAuxVideoController:(id)fp8 bundleID:(id)fp12 URLs:(id)fp16;
- (void)_qlCleanup;
- (void)dealloc;
- (void)activateProvider;
- (void)deactivateProvider;
- (oneway void)provider:(id)fp8 sentBuffer:(int)fp12 withAttachments:(id)fp16;
- (void)setURLs:(id)fp8;
- (unsigned int)_indexWithDelta:(int)fp8;
- (void)_setCurrentItemIndex:(unsigned int)fp8 delta:(int)fp12 withTransition:(int)fp16 blocking:(BOOL)fp20;
- (id)currentControlBarDictionaryRepresentation;
- (void)_configureBufferPoolAndAudioChannels;
- (void)_updateControlsForPreviewView:(id)fp8;
- (void)previewView:(id)fp8 willShowPreviewItem:(id)fp12;
- (void)previewView:(id)fp8 didShowPreviewItem:(id)fp12;
- (void)previewView:(id)fp8 didChangeDisplayStateForPreviewItem:(id)fp12;
- (void)_advanceBy:(int)fp8;
- (void)slideshowGoToNextItem:(id)fp8;
- (id)currentSlideshowItem;
- (id)nextSlideshowItem;
- (void)performActionForControlWithIdentifier:(id)fp8 control:(id)fp12;
- (void)theaterScrollWheel:(id)fp8 atRelativePoint:(NSPoint)fp12;
- (void)_deferredPerformUpdate;
- (void)scheduleUpdateTimerFired:(id)fp8;
- (void)scheduleUpdate;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;

@end

@interface QLPreviewPanel (iChatAdditions)
- (void)_imSelectQuickLookItemWithGUID:(id)fp8;
@end

@interface QLTheater : NSObject <NSOpenSavePanelDelegate>
{
    NSOpenPanel *_openPanel;
    int _canShare;
    int _fullScreenNotificationRegisterCount;
}

+ (id)sharedQLTheater;
+ (BOOL)_openExternalClient:(id)fp8 withBundleID:(id)fp12 documentURL:(id)fp16 isiPhoto:(BOOL)fp20;
+ (BOOL)_warnARDChat;
+ (BOOL)_warnCameraDisabled;
+ (BOOL)shareFilesWithiChatTheater:(id)fp8;
+ (BOOL)shareFileWithiChatTheater:(id)fp8 usingApplication:(id)fp12;
+ (BOOL)sharePasteboardContentsWithiChatTheater:(id)fp8;
+ (BOOL)canChooseDocuments;
+ (void)chooseDocuments;
+ (id)_getiPhotoURL;
+ (id)_iPhotoURL;
+ (BOOL)canChooseiPhotoAlbum;
+ (void)chooseiPhotoAlbum;
+ (BOOL)canOpenURLsIniChatTheater:(id)fp8;
+ (BOOL)canOpenContentUTIIniChatTheater:(id)fp8;
+ (BOOL)canOpenPasteboardContentsIniChatTheater:(id)fp8;
- (void)_didEndFullScreen:(id)fp8;
- (void)_registerForFullScreenNotification;
- (void)_deRegisterForFullScreenNotification;
- (BOOL)_bundleCanProvideVideoData:(id)fp8;
- (BOOL)_externalApplication:(id)fp8 canOpenURLs:(id)fp12 launch:(BOOL)fp16;
- (BOOL)_quickLookCanOpenContentUTI:(id)fp8;
- (BOOL)_quickLookCanOpenURLs:(id)fp8 launch:(BOOL)fp12;
- (BOOL)_shareFilesWithiChatTheater:(id)fp8 usingApplication:(id)fp12;
- (void)_updateStatusText;
- (void)_openPanelDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_chooseDocuments;
- (void)dealloc;
- (void)_checkURLs:(id)fp8 succeeded:(BOOL)fp12;
- (void)_checkURLsFailed:(id)fp8;
- (void)_checkURLsSucceeded:(id)fp8;
- (void)_checkURLs:(id)fp8;
- (void)panelSelectionDidChange:(id)fp8;

@end

@interface RecentChat : NSObject
{
    NSString *_GUID;
    NSString *_accountID;
    int _style;
    unsigned int _ardRole;
    NSString *_roomName;
    BOOL _useRoomName;
    NSArray *_participants;
    BOOL _isValid;
}

- (id)initWithChat:(id)fp8;
- (void)dealloc;
- (id)initWithDictionary:(id)fp8;
- (id)dictionaryRepresentation;
- (BOOL)isEqual:(id)fp8;
- (BOOL)isEqualToRecentChat:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)startChatFromMenuItem:(id)fp8;
- (void)startChat;
- (id)title;
- (int)style;
- (void)setStyle:(int)fp8;
- (unsigned int)ardRole;
- (void)setArdRole:(unsigned int)fp8;
- (id)GUID;
- (void)setGUID:(id)fp8;
- (id)participants;
- (void)setParticipants:(id)fp8;
- (void)setParticipantsFromStringArray:(id)fp8;
- (BOOL)useRoomName;
- (void)setUseRoomName:(BOOL)fp8;
- (id)roomName;
- (void)setRoomName:(id)fp8;
- (id)accountID;
- (void)setAccountID:(id)fp8;
- (BOOL)isValid;

@end

@interface RecentItemsController : NSObject
{
    NSMutableArray *_recentChats;
    NSArray *_recentDocURLs;
}

+ (id)sharedObject;
- (id)init;
- (void)retrieveRecentsFromPrefs;
- (id)recentChats;
- (void)clearMenuItem:(id)fp8;
- (void)noteRecentSavedChat:(id)fp8;
- (void)noteRecentSavedChatURL:(id)fp8;
- (void)noteRecentChat:(id)fp8;
- (int)numberOfItemsInMenu:(id)fp8;
- (BOOL)menuHasKeyEquivalent:(id)fp8 forEvent:(id)fp12 target:(id *)fp16 action:(SEL *)fp20;
- (BOOL)menu:(id)fp8 updateItem:(id)fp12 atIndex:(int)fp16 shouldCancel:(BOOL)fp20;
- (void)openFile:(id)fp8;

@end

@interface RemoteAuxVideoMuxer : NSObject <IMAuxVideoReceiver>
{
    AuxVideoController *_auxVideoController;
    IMLocalObject *_videoReceiver;
}

- (void)_createReceivePort;
- (void)_destroyReceivePort;
- (void)_receivePortDidDie:(id)fp8;
- (id)initWithController:(id)fp8;
- (void)dealloc;
- (oneway void)provider:(id)fp8 bundleID:(id)fp12 connectWithPixelFormat:(unsigned long)fp16 videoStills:(BOOL)fp20 replacement:(BOOL)fp24 audioChannels:(int)fp28 controlsDictionary:(id)fp32;
- (oneway void)provider:(id)fp8 sentBuffer:(int)fp12 withAttachments:(id)fp16;
- (oneway void)provider:(id)fp8 updateControlBarFromDictionaryRepresentation:(id)fp12;

@end

@interface RemoteAuxVideoReceiver : AuxVideoReceiver
{
    IMRemoteObject<IMAuxVideoProvider> *_videoProvider;
}

- (void)setFrameRate:(double)fp8;
- (void)activateProvider;
- (void)deactivateProvider;
- (void)_mainThreadClientDidDisconnect:(id)fp8;
- (void)_clientDidDisconnect:(id)fp8;
- (void)provider:(id)fp8 bundleID:(id)fp12 connectWithPixelFormat:(unsigned long)fp16 videoStills:(BOOL)fp20 replacement:(BOOL)fp24 audioChannels:(int)fp28 controlsDictionary:(id)fp32;
- (id)_controls:(id)fp8 withVolumeLevel:(double)fp12;
- (void)setControls:(id)fp8;
- (void)performActionForControlWithIdentifier:(id)fp8 control:(id)fp12;

@end

@interface RenewCertRequest : CertRequest
{
    BOOL _sentRequest;
}

- (void)dealloc;
- (id)initWithAccount:(id)fp8;
- (void)renewDotMacCert;
- (void)performRequest;

@end

@interface ReplaceBackgroundUILayer : OpenGLNSViewLayer
{
}

- (id)initWithLayerName:(id)fp8;
- (void)dealloc;
- (void)compositeLayer:(struct _CGLContextObject *)fp8;
- (void)_replaceBackgroundMessageChanged:(id)fp8;
- (void)_adjustLayerSize;
- (void)setTextMessage:(id)fp8;
- (void)addedToSuperLayer:(id)fp8;

@end

@interface ReplaceBackgroundUIView : NSView
{
    NSDictionary *_attributes;
    NSString *_message;
    NSCell *_cell;
}

- (id)initWithFrame:(NSRect)fp8;
- (void)dealloc;
- (BOOL)isOpaque;
- (void)drawRect:(NSRect)fp8;
- (id)textAttributes;
- (id)textMessage;
- (void)setTextMessage:(id)fp8;
- (id)cell;

@end

@interface RolloverButton (AccessibilityAdditions)
- (id)accessibilityActionNames;
- (void)accessibilityPerformAction:(id)fp8;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(NSPoint)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)fp8;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsIgnored;
@end

@interface SKDashboardButton : NSButton
{
    int _direction;
    NSMutableDictionary *_attr;
    int _trackingRectTag;
    BOOL _active;
    BOOL _displayCapsule;
    NSRect _activeRect;
    NSString *_string;
}

- (id)initWithFrame:(NSRect)fp8;
- (void)dealloc;
- (BOOL)isOpaque;
- (void)drawRect:(NSRect)fp8;
- (void)setDirection:(int)fp8;
- (void)setIndex:(unsigned int)fp8 count:(unsigned int)fp12;
- (void)mouseUp:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)viewDidMoveToWindow;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;

@end

@interface SKDashboardButton (Private)
- (id)leftArrowPathInRect:(NSRect)fp8;
- (id)rightArrowPathInRect:(NSRect)fp8;
- (id)capsulePathInRect:(NSRect)fp8;
- (NSSize)sizeForString;
- (void)updateTrackingRect;
- (void)drawHoverTarget;
- (void)drawCapsule;
- (NSRect)capsuleRectForDirection;
- (NSRect)hoverRectForDirection;
- (BOOL)checkPoint:(NSPoint)fp8;
@end

@interface SMSWindowController : NSWindowController
{
    ServicePopUp *_accountPopup;
    NSButton *_cancelButton;
    NSButton *_okButton;
    ExtendedTextField *_numberField;
    CollapseView *_collapseView;
}

+ (id)sharedSMSController;
+ (void)open;
+ (BOOL)canSendSMSNow;
+ (BOOL)systemSupportsSMSSending;
- (id)init;
- (void)dealloc;
- (void)windowDidLoad;
- (void)textFieldDidChange:(id)fp8;
- (void)_validateSendButton;
- (void)selectedAccountStatusChanged:(id)fp8;
- (void)selectedAccountChanged:(id)fp8;
- (void)showWindow:(id)fp8;
- (void)cancel:(id)fp8;
- (void)accept:(id)fp8;
- (void)_validateButtons;
- (void)windowWillClose:(id)fp8;
- (void)windowDidBecomeMain:(id)fp8;

@end

@interface SavedChat : Chat
{
    NSString *_spotlightSearchString;
}

+ (void)removeSavedChat:(id)fp8;
+ (void)addSavedChat:(id)fp8;
+ (id)savedChats;
+ (id)savedChatPathCreate:(BOOL)fp8;
- (void)_loadAppleEventSearchInfo;
- (id)init;
- (id)initWithTranscriptFile:(id)fp8;
- (void)dealloc;
- (id)initWithSavedData:(id)fp8;
- (BOOL)_loadFromArray:(id)fp8 metadata:(id)fp12;
- (BOOL)_load;
- (BOOL)_loadFromData:(id)fp8;
- (id)messages;
- (id)initialSearchPhrase;

@end

@interface SavedChat (PersistentChatAdditions)
- (id)persistentChatInfo;
@end

@interface SecureWindowTitleCell : NSTextFieldCell
{
}

- (id)initTextCell:(id)fp8;
- (void)drawInteriorWithFrame:(NSRect)fp8 inView:(id)fp24;

@end

@interface SelfPreviewController : NSWindowController
{
    NSExtendedBox *_vcBevel;
    CameraPreferencesView *_cameraView;
    NSTabView *_cameraTabView;
    NSExtendedBox *_noCameraBox;
    NSTextField *_noCameraTextField;
    VolumeIndicator *_volumeIndicator;
}

+ (void)showSelfPreview;
- (void)_updateUI;
- (void)_startStopAV;
- (void)_setWindowTitle;
- (void)_prefsChangedNotification:(id)fp8;
- (void)windowDidLoad;
- (void)windowWillClose:(id)fp8;
- (NSSize)windowWillResize:(id)fp8 toSize:(NSSize)fp12;
- (NSRect)windowWillUseStandardFrame:(id)fp8 defaultFrame:(NSRect)fp12;
- (void)copy:(id)fp8;
- (void)takeVideoSnapshot:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;

@end

@interface SendCommand : NSScriptCommand
{
}

- (id)_sendInvitation;
- (id)_sendMessage;
- (id)_sendFile;
- (id)performDefaultImplementation;

@end

@interface Service : IMServiceImpl
{
    NSArray *_defaultBuddyIcons;
    NSArray *_defaultBuddyImages;
    BOOL _defaultBuddyIconChecked;
}

+ (void)disconnectAllServices;
+ (void)initialize;
+ (void)daemonControllerWillConnect;
+ (void)daemonConnectionLost;
+ (BOOL)connectToDaemon;
+ (id)allServices;
+ (id)myPicture;
+ (void)setMyPicture:(id)fp8;
- (void)dealloc;
- (void)_loadDefaultImages;
- (id)defaultImageForID:(id)fp8;
- (id)defaultBuddyIconForID:(id)fp8;
- (int)compareNames:(id)fp8;
- (void)declineVCRequestWithBuddy:(id)fp8 response:(int)fp12 vcProps:(id)fp16 forAccount:(id)fp20;
- (oneway void)account:(id)fp8 invitedToVC:(id)fp12 properties:(id)fp16;
- (void)_postVCResponseNotification:(id)fp8 from:(id)fp12 properties:(id)fp16 forAccount:(id)fp20;
- (oneway void)account:(id)fp8 counterProposalFrom:(id)fp12 properties:(id)fp16;
- (oneway void)account:(id)fp8 responseToVCRequest:(id)fp12 properties:(id)fp16;
- (Class)accountClass;

@end

@interface ServiceController : NSObject
{
}

+ (id)sharedObject;
- (id)init;
- (void)_accountNoLongerJustLoggedIn:(id)fp8;

@end

@interface ServiceErrorDialog : NSObject
{
    NSPanel *_errorPanel;
    NSTextField *_errorMessageField;
    NSTextField *_errorInfoTextField;
    NSTextField *_errorTimestampField;
    NSImageView *_errorIcon;
    int _requestID;
    Account *_account;
    int _type;
}

+ (void)closeErrorDialogsForAccount:(id)fp8 ofType:(int)fp12;
+ (id)errorDialogsForAccount:(id)fp8 ofType:(int)fp12;
+ (id)allErrorDialogsOfType:(int)fp8;
+ (void)closeErrorDialogsForAccount:(id)fp8;
+ (id)errorDialogsForAccount:(id)fp8;
+ (id)allErrorDialogs;
+ (void)_displayAlertMessage:(id)fp8 infoText:(id)fp12 windowTitle:(id)fp16 forAccount:(id)fp20 ofType:(int)fp24;
+ (void)displayDisconnectAlertInfoText:(id)fp8 wasConnected:(BOOL)fp12 forAccount:(id)fp16;
+ (void)displayError:(id)fp8 forAccount:(id)fp12 ofType:(int)fp16;
+ (void)displayDaemonDisconnectedDialog;
- (int)type;
- (id)associatedAccount;
- (void)showPanel:(id)fp8;
- (void)closeErrorPanel:(id)fp8;
- (void)_resizePanelForField:(id)fp8 withOtherField:(id)fp12 havingYMargin:(unsigned int)fp16;
- (void)dealloc;
- (id)initWithMessage:(id)fp8 infoText:(id)fp12 windowTitle:(id)fp16 date:(id)fp20 image:(id)fp24 associatedAccount:(id)fp28 errorType:(int)fp32 closeOnDaemonReconnect:(BOOL)fp36;

@end

@interface ServicePopUp : NSPopUpButton
{
    unsigned long long _requiredCapabilities;
    Service *_requiredService;
    NSArray *_requiredServices;
    NSArray *_requiredAccounts;
    NSMutableArray *_possibleAccounts;
    BOOL _requireActiveAccounts;
    BOOL _requireConnectedAccounts;
}

- (void)dealloc;
- (BOOL)_updateMenu;
- (void)awakeFromNib;
- (void)requireConnectedAccounts:(BOOL)fp8;
- (void)requireActiveAccounts:(BOOL)fp8;
- (void)requireAccounts:(id)fp8;
- (void)requireService:(id)fp8;
- (void)requireServices:(id)fp8;
- (void)requireCapabilities:(unsigned long long)fp8;
- (void)activeAccountsChanged:(id)fp8;
- (void)accountStatusChanged:(id)fp8;
- (id)selectedAccount;
- (void)selectAccount:(id)fp8;
- (id)possibleAccounts;

@end

@interface ShadowView : NSView
{
    NSColor *_backgroundColor;
    NSColor *_contentColor;
    NSShadow *_shadow;
    BOOL _drawsShadow;
    id _eventDelegate;
}

- (void)dealloc;
- (void)setDefaultShadow;
- (void)setShadow:(id)fp8;
- (id)shadow;
- (void)setDrawsShadow:(BOOL)fp8;
- (BOOL)drawsShadow;
- (void)setContentColor:(id)fp8;
- (id)contentColor;
- (void)setBackgroundColor:(id)fp8;
- (id)backgroundColor;
- (BOOL)isOpaque;
- (void)drawRect:(NSRect)fp8;
- (void)setEventDelegate:(id)fp8;
- (id)eventDelegate;
- (void)mouseDown:(id)fp8;

@end

@interface SingleLineDivider : NSExtendedBox
{
}

- (void)awakeFromNib;
- (id)initWithFrame:(NSRect)fp8;

@end

@interface SmileyButton : NSButton
{
}

- (void)mouseDown:(id)fp8;

@end

@interface SmileyButton (MyPictureControlAccessibility)
- (id)accessibilityActionNames;
- (void)accessibilityPerformAction:(id)fp8;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(NSPoint)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityAttributeValue:(id)fp8;
@end

@interface SmileyCell : NSButtonCell
{
    NSString *_axDescription;
}

- (void)dealloc;
- (id)accessibilityAttributeNames;
- (void)accessibilitySetValue:(id)fp8 forAttribute:(id)fp12;
- (id)accessibilityAttributeValue:(id)fp8;
- (void)drawInteriorWithFrame:(NSRect)fp8 inView:(id)fp24;

@end

@interface SmileyGrid : NSMatrix
{
    int _numberOfSmileys;
}

- (void)_layoutCells:(int)fp8 cellsPerRow:(int)fp12;
- (void)setUpWithSmileys:(id)fp8 columns:(int)fp12;
- (int)numberOfSmileys;
- (void)highlightCell:(BOOL)fp8 atPosition:(int)fp12;
- (int)arrowKeyDown:(unsigned short)fp8 fromSelectedItem:(int)fp12;
- (id)accessibilityFocusedUIElement;

@end

@interface SmileyPicker : NSObject <NSWindowDelegate>
{
    NSView *_smileyView;
    SmileyGrid *_smileyGrid;
    NSTextField *_smileyNameField;
    NSTextField *_smileyTextField;
    NSWindow *_window;
    NSTimer *_timer;
    int _numFlashes;
    int _uniqueSmileyCounter;
    NSMutableArray *_smileyMenuItems;
}

+ (id)sharedInstance;
- (NSRect)windowFrameForSmileyButton:(id)fp8;
- (void)_updateTextFieldsForItem:(int)fp8;
- (int)_trackMenuSelection;
- (void)_fadeOut:(id)fp8;
- (void)_doFlash:(id)fp8;
- (void)_flashItem:(int)fp8;
- (int)pickSmileyFromButton:(id)fp8;
- (void)awakeFromNib;
- (id)smileyMenuItems;
- (int)numberOfItemsInMenu:(id)fp8;
- (BOOL)menu:(id)fp8 updateItem:(id)fp12 atIndex:(int)fp16 shouldCancel:(BOOL)fp20;
- (int)updateSelectedItem:(int)fp8 forKeyDown:(unsigned short)fp12;
- (void)highlightSelectedItem:(int)fp8;
- (int)newSelectionForMouseMoved:(id)fp8;
- (void)insertSmileyForTag:(int)fp8 intoTextView:(id)fp12;
- (id)installSmileyButtonInView:(id)fp8 margin:(NSSize)fp12;

@end

@interface SourceNotifier : NSObject
{
    NSString *_name;
    NSThread *_thread;
    FrameNotifier *_frameNotifier;
    int _postCount;
    NSMutableSet *_listeners;
}

- (id)initWithName:(id)fp8 thread:(id)fp12 frameNotifier:(id)fp16;
- (void)dealloc;
- (int)listenerCount;
- (BOOL)addListener:(id)fp8;
- (void)removeListener:(id)fp8;
- (BOOL)postFrame:(id)fp8;
- (void)_sourceNotifierPostFromDictionary:(id)fp8;
- (id)name;

@end

@interface StatusController : NSObject <NSMenuDelegate>
{
    MyStatusControl *_statusControl;
    MyNameControl *_nameControl;
    MyPictureControl *_myPicture;
    NSExtendedImageView *_statusImage;
    NSMenu *_nameControlMenu;
    NSMutableArray *_customAvailableMessages;
    NSMutableArray *_customAwayMessages;
    BOOL _finishedInitializing;
    NSArray *_accounts;
    BOOL _supportsInvisible;
    BOOL _isInvisible;
    BOOL _isEntirelyInvisible;
    BOOL _hideEmoticons;
}

- (void)awakeFromNib;
- (void)_updateStatusImage;
- (void)_statusIndicatorDidChange:(id)fp8;
- (void)finishInitializing;
- (void)dealloc;
- (void)_configureInvisibleSupport;
- (void)setAccounts:(id)fp8;
- (void)setAccount:(id)fp8;
- (id)accounts;
- (BOOL)_loadDefaultStatusMessagesIfNecessary;
- (BOOL)_importLegacyStatusMessagesIfNecessary;
- (void)_saveCustomMessages;
- (void)_readCustomMessagesFromPrefs;
- (void)_rebuildStatusControlMenu;
- (void)updateNameField;
- (void)showMyStatus;
- (void)accountUpdated:(id)fp8;
- (void)accountCapsChanged:(id)fp8;
- (void)invisibleStatusChanged:(id)fp8;
- (void)myStatusChanged:(id)fp8;
- (void)serviceStatusChanged:(id)fp8;
- (void)nowPlayingInfoChanged:(id)fp8;
- (void)trimStatusMessages;
- (void)customStatusMessagesChanged:(id)fp8;
- (void)editCustomMessages:(id)fp8;
- (void)viewAsName:(id)fp8;
- (void)viewAsHandle:(id)fp8;
- (BOOL)_timeExistsForStatusMessage:(id)fp8 forStatus:(int)fp12;
- (id)_oldestStatusMessageForStatus:(int)fp8;
- (void)_removeMessage:(id)fp8 forStatus:(int)fp12;
- (void)_touchStatusMessage:(id)fp8 forStatus:(int)fp12;
- (void)_trimStaleTimeStamps;
- (BOOL)_trimStatusMessagesForStatus:(int)fp8;
- (void)_status:(unsigned int)fp8 toCustomMessageList:(id *)fp12 andPrefsName:(id *)fp16;
- (void)myStatusControl:(id)fp8 changedStatus:(int)fp12 message:(id)fp16;
- (void)myStatusControl:(id)fp8 addedMessage:(id)fp12 forStatus:(int)fp16;
- (id)nameForStatus:(int)fp8;
- (id)imageForStatus:(int)fp8;
- (id)customMessagesForStatus:(int)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (BOOL)validateMessage:(id)fp8 forStatus:(int)fp12;
- (int)desiredStatus;
- (void)_checkInvisible;
- (BOOL)isInvisible;
- (BOOL)isEntirelyInvisible;
- (int)currentStatus;
- (int)lowestStatus;
- (id)nowPlayingString;
- (unsigned int)_myStatus;
- (id)_myStatusMessage;
- (BOOL)usingTemplateMessage;
- (id)currentRealMessage;
- (id)currentMessage;
- (id)menuForMyRolloverButton:(id)fp8;
- (void)_setMyStatusFromItem:(id)fp8;
- (int)numberOfItemsInMenu:(id)fp8;
- (BOOL)_isCurrentlyCustomStatus;
- (BOOL)supportsInvisible;
- (void)_setStatusToStatus:(unsigned int)fp8;
- (void)_setAvailableFromMenu:(id)fp8;
- (void)_setAwayFromMenu:(id)fp8;
- (void)_setOfflineFromMenu:(id)fp8;
- (void)_setInvisibleFromMenu:(id)fp8;
- (void)setInvisible:(BOOL)fp8;
- (void)setShowEmotions:(BOOL)fp8;
- (BOOL)menuHasKeyEquivalent:(id)fp8 forEvent:(id)fp12 target:(id *)fp16 action:(SEL *)fp20;
- (BOOL)menu:(id)fp8 updateItem:(id)fp12 atIndex:(int)fp16 shouldCancel:(BOOL)fp20;

@end

@interface Stopwatch : NSObject
{
    NSString *_name;
    double _startTime;
    double _elapsedTime;
    double _averageTime;
    double _averageSum;
    double _lastSampleTime;
    double _logInterval;
    double _lastLogTime;
    int _averageCount;
}

+ (id)stopwatchWithName:(id)fp8;
+ (id)stopwatchWithName:(id)fp8 logInterval:(double)fp12;
- (id)initWithName:(id)fp8 logInterval:(double)fp12;
- (void)dealloc;
- (double)totalElapsedTime;
- (void)reset;
- (void)resetElapsed;
- (void)sample;
- (id)description;
- (void)sampleAndLog;
- (void)sampleAndLogWithLabel:(id)fp8;
- (BOOL)shouldLog;
- (void)sampleAndLogIfNeeded;
- (double)averageTime;
- (double)elapsedTime;
- (double)logInterval;
- (void)setLogInterval:(double)fp8;
- (id)name;

@end

@interface StretchyImageView : NSView
{
    NSImage *_image;
    float _tileMargins[4];
    float _opacity;
}

- (id)initWithFrame:(NSRect)fp8;
- (id)initWithCoder:(id)fp8;
- (void)setImage:(id)fp8;
- (id)image;
- (void)setTileLeft:(float)fp8 right:(float)fp12 top:(float)fp16 bottom:(float)fp20;
- (void)setTile:(float)fp8;
- (void)getTileLeft:(float *)fp8 right:(float *)fp12 top:(float *)fp16 bottom:(float *)fp20;
- (void)setOpacity:(float)fp8;
- (float)opacity;
- (void)drawRect:(NSRect)fp8;
- (void)dealloc;

@end

@interface SystemSound : NSObject
{
    unsigned int _soundID;
    BOOL _createdSoundID;
}

+ (id)soundForPath:(id)fp8;
- (id)initWithSystemSoundID:(unsigned long)fp8;
- (id)initWithPath:(id)fp8;
- (void)dealloc;
- (void)play;

@end

@interface TabbedChatTableCell : NSActionCell
{
    ChatWindowController *_list;
    BOOL _oneLine;
    BOOL _disabled;
    int _imageIndex;
    int _imageState;
    NSRect _imageRect;
    BOOL _urlMouseDown;
    BOOL _urlMouseOver;
    BuddyPicture *_personImage;
    BuddyPicture *_everyoneImage;
    NSButtonCell *_imageDrawingCell;
    NSTextFieldCell *_nameDrawingCell;
}

+ (NSSize)tabCoseSize;
+ (id)_lineBreakAttributes;
+ (id)displayNameForString:(id)fp8;
+ (id)displayNameForChat:(id)fp8;
+ (id)displayNameForIMHandle:(id)fp8;
+ (void)setIconSize:(NSSize)fp8;
+ (NSSize)iconSize;
+ (NSRect)rectOfPictureWithFrame:(NSRect)fp8 inView:(id)fp24;
+ (NSRect)rectOfCloseBox:(NSRect)fp8 inView:(id)fp24 usingWidth:(float)fp28;
+ (NSRect)rectOfCloseBox:(NSRect)fp8 inView:(id)fp24;
+ (void)drawColorFadeOfColor:(id)fp8 inRect:(NSRect)fp12;
- (void)setChatWindowController:(id)fp8;
- (id)list;
- (id)initWithChatWindowController:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)dealloc;
- (unsigned int)hitTestForEvent:(id)fp8 inRect:(NSRect)fp12 ofView:(id)fp28;
- (void)_redisplay:(id)fp8;
- (void)_closeTabItem;
- (BOOL)trackMouseDown:(id)fp8 inCloseRect:(BOOL)fp12 withRect:(NSRect)fp16 cellFrame:(NSRect)fp32 ofView:(id)fp48;
- (BOOL)startTrackingAt:(NSPoint)fp8 inView:(id)fp16;
- (BOOL)continueTracking:(NSPoint)fp8 at:(NSPoint)fp16 inView:(id)fp24;
- (void)stopTracking:(NSPoint)fp8 at:(NSPoint)fp16 inView:(id)fp24 mouseIsUp:(BOOL)fp28;
- (void)setOneLine:(BOOL)fp8;
- (BOOL)oneLine;
- (void)setDisabled:(BOOL)fp8;
- (BOOL)isDisabled;
- (id)closeImageWithRollover:(BOOL)fp8;
- (id)badgeColor;
- (id)badgeTextColor;
- (void)controlTintChanged:(id)fp8;
- (id)badgeTextAttributes;
- (float)badgeWidthWithCount:(int)fp8;
- (void)drawBadgeCenteredInRect:(NSRect)fp8 withCount:(int)fp24;
- (BOOL)shouldAnimate;
- (id)highlightColorWithFrame:(NSRect)fp8 inView:(id)fp24;
- (void)_drawHighlightWithFrame:(NSRect)fp8 inView:(id)fp24;
- (void)drawWithFrame:(NSRect)fp8 inView:(id)fp24;
- (NSRect)_layoutInteriorWithFrame:(NSRect)fp8 inView:(id)fp24 draw:(BOOL)fp28;
- (void)drawInteriorWithFrame:(NSRect)fp8 inView:(id)fp24;
- (NSRect)layoutInteriorWithFrame:(NSRect)fp8 inView:(id)fp24;

@end

@interface TabbedChatTableCell (NameTableCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
@end

@interface TemplateView : NSView
{
    NSView *_actualView;
}

- (id)actualView;
- (void)apply;

@end

@interface Texture : NSObject
{
    struct __CVBuffer *_sourceBuffer;
    struct __CVBuffer *_texture;
    QCImage *_qcImage;
    CIImage *_ciImage;
    BOOL _mirrored;
    BOOL _replacementVideo;
}

+ (struct __CVOpenGLTextureCache *)sharedTextureCache;
+ (void)flushCache;
+ (BOOL)useCoreImage;
+ (id)textureWithCVImageBuffer:(struct __CVBuffer *)fp8;
- (id)initWithCVImageBuffer:(struct __CVBuffer *)fp8;
- (void)dealloc;
- (struct __CVBuffer *)sourceImage;
- (id)CVOpenGLTextureObj;
- (id)qcImage;
- (unsigned int)target;
- (unsigned int)name;
- (BOOL)_isFlipped;
- (NSRect)textureRect;
- (id)displayImage;
- (id)_userFrames;
- (id)_userFrameForId:(id)fp8;
- (id)_auxVideoUserFrame;
- (id)userIds;
- (BOOL)hasAuxVideoFrame;
- (void)setReplacementVideo:(BOOL)fp8;
- (BOOL)isReplacementVideo;
- (NSRect)userRect:(id)fp8 auxVideo:(BOOL)fp12;
- (NSRect)userRect:(id)fp8;
- (float)gamma;
- (double)time;
- (id)attachments;
- (void)drawInContext:(struct _CGLContextObject *)fp8 userId:(id)fp12 inRect:(NSRect)fp16 flags:(int)fp32;
- (void)drawInContext:(struct _CGLContextObject *)fp8 textureRect:(NSRect)fp12 inRect:(NSRect)fp28 flags:(int)fp44;
- (void)drawInCIContext:(id)fp8 userId:(id)fp12 inRect:(NSRect)fp16 flags:(int)fp32;
- (void)drawInCIContext:(id)fp8 textureRect:(NSRect)fp12 inRect:(NSRect)fp28 flags:(int)fp44;
- (BOOL)mirrored;
- (void)setMirrored:(BOOL)fp8;

@end

@interface ThreadNotifier : NSObject
{
    NSThread *_thread;
    FrameNotifier *_frameNotifier;
    NSMutableDictionary *_sourceNotifiers;
}

- (id)initWithThread:(id)fp8 frameNotifier:(id)fp12;
- (void)dealloc;
- (id)description;
- (BOOL)hasListenersForSource:(id)fp8;
- (int)sourcesCount;
- (id)notifierForSource:(id)fp8;
- (BOOL)addListener:(id)fp8 forSource:(id)fp12;
- (void)removeListener:(id)fp8 forSource:(id)fp12;
- (BOOL)postFrame:(id)fp8 fromSource:(id)fp12;

@end

@interface TranscriptStylePluginLoader : NSObject
{
    NSMutableArray *_pluginIdentifiers;
}

- (id)init;
- (void)dealloc;
- (id)identifiers;
- (id)loadedPluginWithIdentifier:(id)fp8;
- (id)pluginWithIdentifier:(id)fp8;

@end

@interface TranscriptStylePluginRegistry : NSObject
{
    TranscriptStylePluginLoader *_pluginLoader;
}

+ (id)sharedRegistry;
- (id)init;
- (void)dealloc;
- (id)plugins;
- (id)loadedPluginWithIdentifier:(id)fp8;
- (id)pluginIdentifierForClass:(Class)fp8;
- (id)menuItems;

@end

@interface TwoViewContainer : NSView
{
    NSView *_view1;
    NSView *_view2;
    float _spacerWidth;
    BOOL _vertical;
}

- (id)initWithFrame:(NSRect)fp8;
- (float)spacerWidth;
- (void)setSpacerWidth:(float)fp8;
- (BOOL)isVertical;
- (void)setVertical:(BOOL)fp8;
- (void)resizeSubviewsWithOldSize:(NSSize)fp8;

@end

@interface UTF8ByteLengthFormatter : NSFormatter
{
    int _maxBytes;
}

- (id)initWithMaxBytes:(int)fp8;
- (id)stringForObjectValue:(id)fp8;
- (BOOL)getObjectValue:(id *)fp8 forString:(id)fp12 errorDescription:(id *)fp16;
- (id)attributedStringForObjectValue:(id)fp8 withDefaultAttributes:(id)fp12;
- (BOOL)isPartialStringValid:(id *)fp8 proposedSelectedRange:(struct _NSRange *)fp12 originalString:(id)fp16 originalSelectedRange:(struct _NSRange)fp20 errorDescription:(id *)fp28;

@end

@interface UserSetupController : NSObject
{
    NSButton *_goBackButton;
    NSButton *_continueButton;
    NSPopUpButton *_accountTypeMenu;
    NSWindow *_userSetupWindow;
    NSTabView *_tabView;
    NSTextField *_currentTitle;
    NSTabView *_accountTypeTabView;
    NSTextField *_skipText;
    NSButton *_useCertCheckbox;
    NSButton *_learnMoreButton;
    NSTextField *_requestSentText;
    NSTextField *_requestSentTitle;
    NSImageView *_requestSentPic;
    NSTextField *_conclusionText;
    NSTextField *_clickDoneText;
    id _delegate;
    BOOL _disableJabber;
    BOOL _disableAIM;
    BOOL _showCertSetup;
    BOOL _showCertReqd;
    BOOL _showNeedCertPassword;
    DotMacCaps *_dotMacCaps;
    Account *_accountObject;
    NSMutableArray *_addedAccounts;
    NSWindow *_parentWindow;
    BOOL _hasRun;
    BOOL _runningAsFirstTimeUser;
    BOOL _hasSetupAtLeastOneAccount;
    NSMutableDictionary *_preferenceControllers;
}

+ (BOOL)userIsSetup;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)_setupAccount;
- (BOOL)_saveMeCard;
- (void)_sendMeCardPictureToDaemon;
- (void)accountTypeChanged:(id)fp8;
- (void)addAnotherAccount:(id)fp8;
- (id)addedAccounts;
- (void)_finishSetup;
- (void)_closeSetup;
- (void)userSetupSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)runAccountSetupAttachedToWindow:(id)fp8;
- (void)runFirstTimeUserSetup;
- (void)_forgotPassword:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_dropInvalidDotMacPassword;
- (void)_setDotmacProgressHidden:(BOOL)fp8;
- (void)_checkForDotMacCertCapabilityForIdentifier:(id)fp8;
- (void)_loadDefaults;
- (void)resetAllFields;
- (void)_updateTitle;
- (void)tabView:(id)fp8 willSelectTabViewItem:(id)fp12;
- (void)tabView:(id)fp8 didSelectTabViewItem:(id)fp12;
- (BOOL)_canMoveOffTabViewItem:(id)fp8;
- (void)_updateContinueDoneButton:(BOOL)fp8;
- (void)_goToDone;
- (void)_goToNextPane:(id)fp8;
- (void)_goToPreviousPane:(id)fp8;
- (void)goBack:(id)fp8;
- (void)done:(id)fp8;
- (void)continueDone:(id)fp8;
- (void)tellMeMore:(id)fp8;
- (void)_finishedGettingDotMacCaps:(id)fp8;
- (id)initWithDelegate:(id)fp8;
- (void)loadPreferenceBundles;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface VCChannelNegotiation : NSObject
{
    AVChatParticipant *_participant;
    IMHandle *_localIMHandle;
    unsigned int _avChatSessionID;
    BOOL _incoming;
    unsigned int _requestID;
    unsigned int _channelType;
    unsigned int _state;
    BOOL _channelPrepared;
    int _connectionError;
    VCChannel *_channel;
    NSData *_remoteData;
    unsigned int _keyExchangeMode;
    unsigned int _encryptionKeySize;
    NSData *_encryptionKey;
    NSData *_validationKey;
    struct OpaqueSecKeyRef *_keyExchangePublicKey;
    struct OpaqueSecKeyRef *_keyExchangePrivateKey;
    NSOperationQueue *_negotiationQueue;
}

- (id)_decryptDataWithLocalCert:(id)fp8;
- (id)_initWithParticipant:(id)fp8 requestID:(unsigned int)fp12 channelType:(unsigned int)fp16 incoming:(BOOL)fp20 remoteData:(id)fp24 encryptionKeySize:(unsigned long)fp28 keyExchangeMode:(unsigned int)fp32 keyExchangeData:(id)fp36;
- (id)initRequestTo:(id)fp8 channelType:(unsigned int)fp12 encryptionKeySize:(unsigned long)fp16;
- (id)initRequestFrom:(id)fp8 userInfo:(id)fp12;
- (void)dealloc;
- (id)encryptionKey;
- (unsigned int)state;
- (void)_logState;
- (void)setState:(unsigned int)fp8;
- (BOOL)ended;
- (void)_getRequestData:(id *)fp8 forKey:(id *)fp12;
- (int)_sendSharedKey;
- (int)_decryptSharedKey:(id)fp8;
- (void)_receiveSharedKey:(id)fp8;
- (id)userInfoForCompletedOperation:(id)fp8;
- (unsigned int)_messageTypeForState;
- (id)operationForNextMessage;
- (void)_enqueueNextMessage;
- (void)_finishConnection;
- (void)_finishPrepareChannel:(id)fp8;
- (void)_threadedPrepareChannel;
- (void)_prepareChannel;
- (void)_sendMessage:(id)fp8;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)beginNegotiation;
- (void)_acceptRequest:(BOOL)fp8 remoteData:(id)fp12;
- (void)acceptRequest:(BOOL)fp8;
- (void)cancelRequest;
- (void)handleMessage:(unsigned int)fp8 userInfo:(id)fp12;
- (void)endNegotiation;
- (void)disconnectParticipant;
- (id)extractChannel;
- (unsigned long)encryptionKeySize;
- (unsigned int)keyExchangeMode;
- (int)connectionError;
- (id)channel;
- (BOOL)incoming;
- (unsigned int)channelType;
- (unsigned int)requestID;
- (id)participant;

@end

@interface VCChannelNegotiation (AVChatControllerAdditions)
- (unsigned int)ardRole;
@end

@interface VCChannelNegotiationOp : ExtendedOperation
{
    unsigned int _message;
    _GetVCChannelOp *_channelOp;
    _GetCertificateOp *_certOp;
}

- (void)_createChildOpsWithIMHandle:(id)fp8 certOp:(BOOL)fp12;
- (id)initWithNegotiation:(id)fp8 message:(unsigned int)fp12;
- (id)vcChannel;
- (id)connectionData;
- (void)dealloc;
- (unsigned int)message;

@end

@interface VCDropView : NSView
{
    float _opacity;
}

- (void)createRegionsForRecipients:(id)fp8 includeTheater:(BOOL)fp12;
- (void)setOpacity:(float)fp8;
- (float)opacity;
- (id)updateHighlightingForPoint:(NSPoint)fp8;

@end

@interface VCFullScreenScalingInfoController : NSObject
{
    NSMatrix *scalingTypeMatrix;
}

+ (void)initialize;
+ (void)showInfoWindow;
+ (int)fullScreenScalingType;
- (void)awakeFromNib;
- (void)setScalingType:(id)fp8;

@end

@interface VCInfoController : NSWindowController
{
    NSPopUpButton *_tabPopUp;
    NSButton *_helpButton;
    NSTabView *_tabView;
    NSTabViewItem *_statsTab;
    VCInfoTable *_statsTable;
    NSTextField *_noConferenceField;
    NSCell *_statCell;
    NSFormatter *_statFormatter;
    NSTimer *_statsTimer;
    NSMutableArray *_statsList;
    NSTabViewItem *_capsTab;
    NSTableView *_capsTable;
    NSArrayController *_capsList;
    NSAttributedString *_capEnabledSymbol;
    NSAttributedString *_capDisabledSymbol;
    NSTabViewItem *_errorTab;
    NSTextView *_errorLogTextView;
    NSTabViewItem *_netTab;
    NSExtendedBox *_netBox;
    NSImageView *_bandwidthGem;
    NSTextField *_bandwidthText;
    NSButton *_bandwidthButton;
    NSImageView *_routerGem;
    NSTextField *_routerTitle;
    NSTextField *_routerType;
    NSTextField *_routerText;
    NSButton *_switchBandwidth;
    NSButton *_switchFirewall;
}

+ (void)_createInfoWindow;
+ (void)showInfoWindow;
+ (void)showInfoWindowCapabilities;
+ (void)addErrorLog:(id)fp8;
+ (void)clearErrorLogs;
- (void)awakeFromNib;
- (void)windowWillClose:(id)fp8;
- (float)_errorLogHeight;
- (NSRect)_bestFrameWithStats:(unsigned int)fp8;
- (NSRect)windowWillUseStandardFrame:(id)fp8 defaultFrame:(NSRect)fp12;
- (NSSize)windowWillResize:(id)fp8 toSize:(NSSize)fp12;
- (void)dealloc;
- (void)showTab:(id)fp8;
- (void)showHelp:(id)fp8;
- (void)showPrefs:(id)fp8;
- (void)_updateErrorLogUI;
- (BOOL)validateMenuItem:(id)fp8;
- (id)_descriptionForCapability:(id)fp8 enabled:(BOOL)fp12 reason:(id)fp16;
- (id)_descriptionForCap:(int)fp8 CPUCaps:(int)fp12 netCaps:(int)fp16 device:(BOOL)fp20;
- (void)_updateCaps;
- (void)_setupCapsUpdating;
- (void)_refreshNetTab;
- (void)_updateNetTab;
- (float)_updateBandwidthLimitation;
- (float)_updateRouterInformation;
- (void)_resizeWindowFromItem:(id)fp8 withSize:(float)fp12;
- (void)refreshStats:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (id)tableView:(id)fp8 statItemForRow:(int)fp12;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (BOOL)tableView:(id)fp8 shouldSelectRow:(int)fp12;

@end

@interface VCInfoTable : NSTableView
{
}

- (void)_setupColumns;
- (void)awakeFromNib;
- (NSRect)frameOfCellAtColumn:(int)fp8 row:(int)fp12;
- (void)drawRow:(int)fp8 clipRect:(NSRect)fp12;

@end

@interface VCLayoutController : NSObject
{
    VideoConferenceLayerView *_container;
    OpenGLLayerModel *_layerModel;
    BOOL _isPreview;
    BOOL _isFullScreen;
    BOOL _hasPIP;
    BOOL _theatricalLayout;
    BOOL _PIPHiddenByUser;
    BOOL _didMoveLocalLayerBelowBanner;
    NSDate *_transitionStartTime;
    NSDate *_AOLFadeOutStartTime;
    NSTimer *_timer;
    NSTimer *_AOLFadeOutTimer;
    float _PIPScale;
    struct _RectPosition _PIPPosition;
    float _windowStartWidth;
    float _windowEndWidth;
    float _transitionProgress;
    NSRect _startPIPFrame;
    NSRect _endPIPFrame;
    int _trackingRectTag;
    int _vcLayerHit;
    BOOL _mouseInCloseButton;
    BOOL _mouseIsHidden;
    OpenGLImageLayer *_recordingDot;
}

+ (void)initialize;
+ (void)_constrainWindow:(id)fp8 frame:(NSRect *)fp12 screen:(id)fp16 andContainerSize:(NSSize *)fp20;
+ (NSRect)constrainedWindow:(id)fp8 frame:(NSRect)fp12 screen:(id)fp28 withContainerSize:(NSSize)fp32;
+ (void)_createTextLabel:(id)fp8 layerName:(id)fp12 inLayer:(id)fp16;
+ (id)_badgeImage:(id)fp8 atSize:(NSSize)fp12 inImageOfSize:(NSSize)fp20 atPoint:(NSPoint)fp28;
+ (void)_showMute:(BOOL)fp8 pause:(BOOL)fp12 off:(BOOL)fp16 stalled:(BOOL)fp20 large:(BOOL)fp24 blackOpacity:(float)fp28 inLayer:(id)fp32;
+ (void)showCameraOff:(BOOL)fp8 inLayer:(id)fp12;
- (void)_syncPositionPrefsRead:(BOOL)fp8;
- (void)_syncScalePrefRead:(BOOL)fp8;
- (id)initWithContainer:(id)fp8 videoOut:(BOOL)fp12 videoIn:(BOOL)fp16;
- (id)layerModel;
- (void)setLayerModel:(id)fp8;
- (void)stopPreviewTransition;
- (void)stopAOLBadgeFadeOut;
- (void)clearContainer;
- (void)dealloc;
- (id)container;
- (float)PIPScale;
- (struct _RectPosition)PIPPosition;
- (float)currentLayerWidth;
- (float)_videoWidthToSnapWithMin:(float)fp8;
- (BOOL)isPreview;
- (float)_transitionProgressReverse:(BOOL)fp8;
- (NSSize)_windowSizeForRemoteLayers:(int)fp8 ofWidth:(float)fp12;
- (void)setPreview:(BOOL)fp8 snapToVideo:(BOOL)fp12;
- (void)setHasPIP;
- (void)_setFullScreen:(BOOL)fp8 layerWidth:(float)fp12;
- (void)setFullScreen;
- (void)setNotFullScreen:(float)fp8;
- (BOOL)isFullScreen;
- (void)freezeFrame;
- (void)fitWindowToLocalBannerHorizOnly:(BOOL)fp8;
- (NSSize)standardWindowSize;
- (void)_containerDidResize:(id)fp8;
- (NSRect)_PIPFrameForBounds:(NSRect)fp8;
- (NSRect)_theoreticalPIPFrameForLayers:(int)fp8 inBounds:(NSRect)fp12 auxVideoMode:(int)fp28;
- (NSRect)_banner:(id)fp8 frameInVCLayer:(id)fp12;
- (void)updateLayout;
- (void)containerDidEndLiveResize;
- (void)_fadeOutAOLBadge;
- (void)_getAspectTransitionForLayers:(int)fp8 ofWidth:(float)fp12 auxVideoMode:(int)fp16 containerStart:(NSSize *)fp20 end:(NSSize *)fp24 windowStart:(NSRect *)fp28 end:(NSRect *)fp32;
- (void)_updateCursorTracking;
- (void)_runTheatricalTransition:(unsigned int)fp8 snapToVideo:(BOOL)fp12 auxVideoMode:(int)fp16 fullScreenAnimationTime:(double)fp20;
- (void)animateAdditionOfRemoteLayerAtIndex:(unsigned int)fp8 resizeTime:(double)fp12;
- (void)removeRemoteVCLayer:(id)fp8 fullScreenAnimationTime:(double)fp12;
- (id)_createVCLayerNamed:(id)fp8 vcPartyID:(id)fp12 resizes:(BOOL)fp16 appearance:(int)fp20 atIndex:(unsigned int)fp24 isLocal:(BOOL)fp28 isAuxVideo:(BOOL)fp32 isReplacement:(BOOL)fp36;
- (id)createLayerForParticipant:(id)fp8 appearance:(int)fp12 atIndex:(unsigned int)fp16 isAuxVideo:(BOOL)fp20 isReplacement:(BOOL)fp24;
- (id)createBannerForParticipant:(id)fp8;
- (id)bannerForParticipant:(id)fp8;
- (void)repositionBannerForParticipant:(id)fp8;
- (void)removeBannerForParticipant:(id)fp8;
- (void)_createCloseButtonForLayer:(id)fp8;
- (void)createCloseButtonForParticipant:(id)fp8;
- (void)createCloseButtonForAuxVideo:(id)fp8;
- (void)removeCloseButtonForParticipant:(id)fp8;
- (void)createWhitePreviewLayerForLocalParticipant:(id)fp8;
- (id)createLayerWithLabel:(id)fp8 fontSize:(float)fp12 name:(id)fp16 margin:(float)fp20 bgSize:(NSSize)fp24;
- (void)_createAOLLabel;
- (void)createAOLBadge;
- (void)_changeAOLLabelSize;
- (void)showPreviewLabel:(BOOL)fp8;
- (void)removeAllBanners;
- (void)_showConnectionDoctorLabelInLayer:(id)fp8;
- (void)showLocalConnectionDoctorLabel;
- (void)showRemoteConnectionDoctorLabel:(id)fp8;
- (BOOL)canShowHidePIP;
- (void)setPIPHidden:(BOOL)fp8;
- (BOOL)isPIPHidden;
- (void)showLocalMute:(BOOL)fp8 pause:(BOOL)fp12 off:(BOOL)fp16 stalled:(BOOL)fp20;
- (void)showRemoteParty:(id)fp8 mute:(BOOL)fp12 pause:(BOOL)fp16 stalled:(BOOL)fp20;
- (unsigned int)_autoresizingMask;
- (void)_createResizeIndicatorIn:(id)fp8;
- (void)_showResizeIndicator;
- (void)_hideResizeIndicator;
- (void)_removeResizeIndicator;
- (void)_addResizeTrackingRect;
- (void)_updateResizeTrackingRect;
- (void)resetCursorRects;
- (void)_addPIPBorder;
- (void)_hideOverlay;
- (void)_hideOverlayAndCursor;
- (void)_dontHideOverlay;
- (void)_hideOverlayAndCursorAfterDelay;
- (void)_showOverlay;
- (void)_showCloseButton:(BOOL)fp8 rollover:(BOOL)fp12 inLayer:(id)fp16;
- (void)_setMouseInLayer:(int)fp8 inCloseButton:(BOOL)fp12;
- (void)_doBannerHitTest:(NSPoint)fp8;
- (void)_updateBannerHitTesting;
- (void)_resizePIPWithOriginalSize:(NSSize)fp8;
- (void)_mainThreadPerformAnimateLayerFromDictionary:(id)fp8;
- (void)_performMainThreadAnimateLayer:(id)fp8 frame:(NSRect)fp12;
- (void)_backgroundThreadAnimateLayerFromDictionary:(id)fp8;
- (void)_animateLayer:(id)fp8 from:(NSRect)fp12 to:(NSRect)fp28;
- (void)_animatePIPFrom:(NSRect)fp8 to:(NSRect)fp24;
- (void)_movePIPWithStartFrame:(NSRect)fp8 baseOffset:(NSSize)fp24 useFistCursor:(BOOL)fp32;
- (BOOL)_trackMouseDown:(id)fp8 inCloseButtonAt:(NSPoint)fp12;
- (void)mouseDown:(id)fp8 at:(NSPoint)fp12;
- (void)mouseUpAt:(NSPoint)fp8;
- (void)mouseMovedAt:(NSPoint)fp8;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (void)mouseDraggedAt:(NSPoint)fp8;
- (void)scrollWheel:(id)fp8 at:(NSPoint)fp12;
- (void)setShowsRecordingDot:(BOOL)fp8 on:(BOOL)fp12;
- (void)_didShowParticipantStatus:(id)fp8;
- (void)_didHideParticipantStatus:(id)fp8;

@end

@interface VCNotifier : Notifier
{
    NSDictionary *_vcProperties;
    AVChatController *_avChatController;
    AVParticipantView *_bannerView;
    BOOL _audioOnly;
    BOOL _oneWay;
    BOOL _ardClient;
    BOOL _ardServer;
}

+ (void)openOnIncomingVC:(id)fp8 properties:(id)fp12;
+ (void)openOnIncomingARDUpgradeRequest:(id)fp8;
+ (void)cleanUpOldNotifiersFrom:(id)fp8;
- (void)dealloc;
- (BOOL)isStale;
- (BOOL)canShowRealWindow;
- (BOOL)canHideRealWindow;
- (BOOL)isActiveNotification;
- (void)floaterBecomingVisible;
- (void)updateLockUI;
- (struct CGAffineTransform)_xformForFloaterScale:(float)fp8;
- (void)_makeVCFloaterWindow;
- (BOOL)_makeRealVCNotifierWindow;
- (id)initForPersistentVCWithIMHandle:(id)fp8 isVideo:(BOOL)fp12 isOneWay:(BOOL)fp16;
- (id)accessibilityFormat;
- (id)initForVCWith:(id)fp8 properties:(id)fp12;
- (id)_initForARDUpgradeRequest:(id)fp8;
- (void)disconnect;
- (id)menuItemFormat;
- (void)doVCTextReplyWithChat:(id)fp8;
- (id)avChatController;
- (id)bannerView;
- (void)setBannerTitle:(id)fp8;
- (void)showTimeStamp;
- (void)updateBanner;
- (id)callerProperties;

@end

@interface VCStatItem : NSObject
{
    AVChatParticipant *_participant;
    int _type;
    NSAttributedString *_labelValue;
    id _statValue;
}

+ (id)_labelAttributesForType:(int)fp8;
+ (id)statItemsForAVChat:(id)fp8 vcStats:(id)fp12 logFramerate:(BOOL)fp16;
- (id)_initWithParticipant:(id)fp8 type:(int)fp12 label:(id)fp16 stat:(id)fp20;
- (id)_initWithType:(int)fp8 label:(id)fp12 stat:(id)fp16;
- (void)dealloc;
- (id)participant;
- (int)type;
- (id)labelValue;
- (id)statValue;

@end

@interface VideoChatController : AVChatController <NSAnimationDelegate>
{
    NSExtendedBox *_vcBox;
    NSButton *_effectsButton;
    NSViewAnimation *_fadeAnimation;
    VideoControlsOverlay *_controlsOverlay;
    NSWindow *_dropOverlay;
    VideoConferenceLayerView *_vcLayerView;
    OpenGLLayerModel *_layerModel;
    OpenGLFullScreenController *_fullScreenController;
    int _restoreTab;
    BOOL _receivedAFrame;
    BOOL _hasSetupVC;
    BOOL _userHasResizedWindow;
    NSString *_participantNames;
    BOOL _recordingUnderNegotiation;
    int _flashingRecordingState;
    NSTimer *_flashingRecordingTimer;
}

- (BOOL)isVideo;
- (void)dealloc;
- (id)vcLayerView;
- (id)layerModel;
- (BOOL)isAddBuddyAllowed;
- (void)_getIsFullScreen:(char *)fp8 theaterControlsRep:(id *)fp12 hasTheaterControls:(char *)fp16;
- (void)_updateNeedsOverlayMargin;
- (void)_updateNotifierUI;
- (id)_setupBannerFor:(id)fp8 inState:(unsigned int)fp12 layoutController:(id)fp16;
- (void)_setupPreview;
- (void)_createRemoteVCLayers;
- (void)_setupVC;
- (void)endPreview;
- (void)_firstRemoteFrameForParticipantWithID:(id)fp8;
- (void)_firstRemoteFrame:(id)fp8;
- (void)_removeParticipantWithID:(id)fp8 auxVideoLayer:(BOOL)fp12;
- (void)removeParticipantWithID:(id)fp8;
- (void)showFullScreenControls:(BOOL)fp8;
- (BOOL)areFullScreenControlsVisible;
- (id)windowNibName;
- (void)_setFSButton:(id)fp8 imageTemplateSize:(float)fp12;
- (void)windowDidLoad;
- (void)windowWillClose:(id)fp8;
- (NSSize)windowWillResize:(id)fp8 toSize:(NSSize)fp12;
- (BOOL)windowShouldZoom:(id)fp8 toFrame:(NSRect)fp12;
- (float)_layerWidth;
- (void)_saveWindowFrame;
- (void)_restoreSavedWindowFrame;
- (id)shortWindowTitle;
- (id)longWindowTitle;
- (void)updateAddBuddyButton;
- (void)_updateRemoteVideoStateIndicators:(id)fp8 forcingOff:(BOOL)fp12;
- (id)controlsOverlay;
- (void)_updateOverlayMargin:(BOOL)fp8;
- (void)updateControlsOverlay;
- (void)_updateLocalUI;
- (void)toggleFullScreen:(id)fp8;
- (void)magnifyWithEvent:(id)fp8;
- (void)swipeWithEvent:(id)fp8;
- (void)startFullScreen;
- (void)stopFullScreen;
- (void)restoreLayoutAfterFullScreenWithVCLayerWidth:(float)fp8;
- (void)takeVideoSnapshot:(id)fp8;
- (void)setEffectsButtonHidden:(BOOL)fp8;
- (void)toggleShowVideoSettings:(id)fp8;
- (void)toggleHideLocalVideo:(id)fp8;
- (void)toggleMuteOrPause:(BOOL)fp8;
- (void)showEffectsPalette:(id)fp8;
- (void)theaterPrevious:(id)fp8;
- (void)theaterPlayPause:(id)fp8;
- (void)theaterNext:(id)fp8;
- (void)theaterSetVolume:(id)fp8;
- (void)theaterSetTime:(id)fp8;
- (void)theaterScrollWheel:(id)fp8 atRelativePoint:(NSPoint)fp12;
- (id)layerView;
- (BOOL)isFullScreen;
- (void)copy:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (id)_recipientForDropView:(id)fp8 dragSender:(id)fp12;
- (void)animationDidEnd:(id)fp8;
- (void)animationDidStop:(id)fp8;
- (void)_fadeInDropOverlay:(BOOL)fp8;
- (id)_updateDropView:(id)fp8 includeTheater:(BOOL)fp12;
- (unsigned int)_operationForDrag:(id)fp8 onPartyID:(id)fp12 isFiles:(char *)fp16;
- (BOOL)_performDragOperation:(id)fp8 onPartyID:(id)fp12 confirmFileSend:(BOOL)fp16;
- (void)logError:(id)fp8 forParticipant:(id)fp12;
- (void)_createCloseButtonForOtherParticipant:(id)fp8;
- (BOOL)_isParticipant:(id)fp8 theOnlyVideoSenderInAVChat:(id)fp12;
- (void)_avChat:(id)fp8 addedParticipant:(id)fp12 isAuxVideo:(BOOL)fp16;
- (void)avChat:(id)fp8 addedParticipant:(id)fp12;
- (void)avChat:(id)fp8 removedParticipant:(id)fp12;
- (void)avChatParticipantOrderFinalized:(id)fp8;
- (void)avChat:(id)fp8 participant:(id)fp12 changedFromState:(unsigned int)fp16 toState:(unsigned int)fp20;
- (void)avChatIrisStateChanged:(id)fp8;
- (void)avChat:(id)fp8 remoteParticipantMuteOrPausedChanged:(id)fp12;
- (void)avChat:(id)fp8 remoteParticipantNetworkStallChanged:(id)fp12;
- (id)avChat:(id)fp8 bitmapDataForParticipant:(id)fp12;
- (void)_setUpAuxInputUIFor:(id)fp8;
- (void)_tearDownAuxInputUIFor:(id)fp8;
- (void)_setupLocalLayerForReplacement:(BOOL)fp8;
- (void)_setUpReplacementUI;
- (void)_tearDownReplacementUI;
- (void)avChat:(id)fp8 participantBeganAuxiliaryInput:(id)fp12;
- (void)avChat:(id)fp8 participantEndedAuxiliaryInput:(id)fp12;
- (void)avChat:(id)fp8 participantBeganAuxiliaryReplacement:(id)fp12;
- (void)avChat:(id)fp8 participantEndedAuxiliaryReplacement:(id)fp12;
- (id)_windowForSecurityAlert:(id)fp8;
- (void)showRecordingIndicator:(BOOL)fp8;
- (void)_showRecordingIndicatorOn:(BOOL)fp8;
- (void)requestRecording;
- (void)avChat:(id)fp8 participantGrantedRecording:(id)fp12;
- (void)avChat:(id)fp8 participantDeniedRecording:(id)fp12;
- (void)stopRecording;
- (void)avChat:(id)fp8 participantBeginRecording:(id)fp12;
- (void)avChat:(id)fp8 participantFinishedRecording:(id)fp12;
- (void)windowDidBecomeKeyWindow;
- (void)windowDidResignKeyWindow;

@end

@interface VideoConferenceLayerView : OpenGLLayerView
{
    VideoChatController *_videoChatController;
    VCLayoutController *_layoutController;
}

- (id)initWithFrame:(NSRect)fp8 videoChatController:(id)fp24;
- (void)cleanup;
- (void)dealloc;
- (void)setLayerModel:(id)fp8;
- (id)videoChatController;
- (void)resetCursorRects;
- (BOOL)acceptsFirstResponder;
- (void)mouseDown:(id)fp8;
- (void)swipeWithEvent:(id)fp8;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)fp8;
- (void)keyDown:(id)fp8;
- (void)mouseUp:(id)fp8;
- (void)mouseMoved:(id)fp8;
- (void)mouseDragged:(id)fp8;
- (void)scrollWheel:(id)fp8;
- (void)setFrameSize:(NSSize)fp8;
- (void)viewDidEndLiveResize;
- (id)layoutController;
- (unsigned int)draggingSourceOperationMask;
- (BOOL)_isOneWayTo:(id *)fp8;
- (id)_vcPartyIDForDrag:(id)fp8;
- (void)_highlightVCPartyID:(id)fp8;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)concludeDragOperation:(id)fp8;

@end

@interface VideoControlsOverlay : NSObject <NSAnimationDelegate>
{
    id _delegate;
    NSWindow *_overlayWindow;
    NSWindow *_parentWindow;
    NSView *_parentView;
    float _horizPosition;
    NSViewAnimation *_fadeAnimation;
    BOOL _fadedOut;
    BOOL _trackingTimeSlider;
    NSView *_overlayContentView;
    OverlayBackground *_overlayContainer;
    ModifierTabView *_mutePauseTabView;
    NSTabView *_theaterPlayPauseTabView;
    NSExtendedBox *_controlsDivider;
    NSView *_fullScreenControlsContainer;
    MenuButton *_endChatButton;
    ChooseBuddyButton *_addButton;
    MenuButton *_muteChatButton;
    MenuButton *_pauseChatButton;
    MenuButton *_effectsButton;
    MenuButton *_endFullScreenButton;
    NSView *_theaterControlsContainer;
    MenuButton *_previousButton;
    MenuButton *_playButton;
    MenuButton *_pauseButton;
    MenuButton *_nextButton;
    AVVolumeSlider *_volumeControl;
    AVTimeSlider *_timeSlider;
    NSView *_fullScreenFullTemplate;
    NSView *_fullScreenNoSliderTemplate;
    NSView *_fullScreenOnlyTemplate;
    NSView *_windowedFullTemplate;
    NSView *_windowedNoVolumeTemplate;
    NSView *_windowedNoSliderTemplate;
    NSView *_windowedButtonsOnlyTemplate;
    NSView *_controlsFullTemplate;
    NSView *_controlsPrevNextTemplate;
    NSView *_currentTemplate;
}

- (id)initWithDelegate:(id)fp8;
- (void)_setButton:(id)fp8 imageTemplateSize:(NSSize)fp12;
- (void)_setButton:(id)fp8 imageTemplateDimension:(float)fp12;
- (void)awakeFromNib;
- (void)dealloc;
- (void)_repositionOverlayWindow;
- (void)_setParentView:(id)fp8 horizPosition:(float)fp12 forceReposition:(BOOL)fp16;
- (void)setParentView:(id)fp8 horizPosition:(float)fp12;
- (id)parentWindow;
- (id)overlayWindow;
- (void)_updateOpacity;
- (void)animationDidEnd:(id)fp8;
- (void)animationDidStop:(id)fp8;
- (void)_fadeOut:(BOOL)fp8 animated:(BOOL)fp12;
- (void)fadeOutIfPossible;
- (void)fadeInAnimated:(BOOL)fp8;
- (BOOL)isVisible;
- (void)_setFullScreen:(BOOL)fp8 playPause:(id)fp12 previous:(id)fp16 next:(id)fp20 volume:(id)fp24 slider:(id)fp28;
- (void)setFullScreen:(BOOL)fp8 theaterControls:(id)fp12;
- (id)addButton;
- (void)setMute:(BOOL)fp8 enabled:(BOOL)fp12 paused:(BOOL)fp16 enabled:(BOOL)fp20 effectsEnabled:(BOOL)fp24;
- (void)_performClickOnButton:(id)fp8;
- (void)performPrevious;
- (void)performNext;
- (void)swipeWithEvent:(id)fp8;
- (void)sliderWillStartTracking:(id)fp8;
- (void)_stopTracking;
- (void)sliderDidEndTracking:(id)fp8;
- (void)endConference:(id)fp8;
- (void)addParticipant:(id)fp8;
- (void)togglePause:(id)fp8;
- (void)toggleMute:(id)fp8;
- (void)showEffectsPalette:(id)fp8;
- (void)toggleFullScreen:(id)fp8;
- (void)theaterPrevious:(id)fp8;
- (void)theaterPlayPause:(id)fp8;
- (void)theaterNext:(id)fp8;
- (void)theaterSetVolume:(id)fp8;
- (void)theaterSetTime:(id)fp8;

@end

@interface VideoProcessor : NSObject <VCRenderDelegateProtocol>
{
    NSOpenGLContext *_displayContext;
    CIContext *_ciCtx;
    CIContext *_colorCorrectingCtx;
    struct __CVOpenGLBufferPool *_displayBufferPool;
    FrameResizer *_localResizer;
    FrameResizer *_remoteResizer;
    FrameReader *_localReader;
    NSOperationQueue *_startAndStopRendererQueue;
    struct OpaqueVTPixelTransferSession *_scaleAndResizeTransferSession;
    NSMutableDictionary *_inputPorts;
    QCRenderer *_renderer;
    QCRenderer *_gamma;
    NSArray *_keyPaths;
    QCPatchController *_qcController;
    NSPoint _inputXY;
    BOOL _backdropsSupported;
    BOOL _effectsSupported;
    BOOL _cameraLocked;
    unsigned int _auxVideoMode;
    BOOL _dvWorkaround;
    Texture *_spotlightFrame;
    FramerateTracker *_framerateTracker;
    NSRecursiveLock *_renderLock;
    QCComposition *_composition;
    BOOL _backdropsEnabled;
    NSMutableDictionary *_remoteTextures;
    Texture *_auxVideoFrame;
    BOOL _auxVideoNeedsRendering;
    FrameNotifier *_frameNotifier;
    BOOL _showRecordingBadge;
}

+ (id)sharedProcessor;
+ (BOOL)_realCameraConnected;
+ (BOOL)isEffectsAvailable;
+ (BOOL)isBackdropsAvailable;
- (id)init;
- (void)dealloc;
- (void)_applicationWillTerminate:(id)fp8;
- (void)_setMicronCameraAELock:(BOOL)fp8;
- (void)_lockCamera:(BOOL)fp8;
- (BOOL)_startGPURenderer;
- (void)_stopGPURenderer;
- (void)_startRenderer;
- (void)_stopRenderer;
- (void)handleVirtualScreenChangedNotificiation:(int)fp8;
- (void)frameNotifier:(id)fp8 didAddListener:(id)fp12 forSource:(id)fp16;
- (void)frameNotifier:(id)fp8 didRemoveListener:(id)fp12 forSource:(id)fp16;
- (id)backdropsMessage;
- (void)setBackdropsMessage:(id)fp8;
- (void)setCapture:(BOOL)fp8;
- (BOOL)capture;
- (void)setHasCaptured:(BOOL)fp8;
- (BOOL)hasCaptured;
- (BOOL)finishedCapture;
- (void)setShowBackgroundMotion:(BOOL)fp8;
- (void)_updateCapture;
- (void)startCapture;
- (void)_captureEnded;
- (void)_stopCapture;
- (void)_captureTimedout;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)observeValueForKeyPathOnMainThread:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)setAuxVideoFrame:(struct __CVBuffer *)fp8;
- (id)auxVideoFrame;
- (void)setBackPath:(id)fp8 forePath:(id)fp12;
- (void)setComposition:(id)fp8;
- (id)composition;
- (void)setAuxVideoMode:(unsigned int)fp8;
- (unsigned int)auxVideoMode;
- (BOOL)auxVideoModeIsReplacement;
- (struct __CVBuffer *)_normalizeDVBuffer:(struct __CVBuffer *)fp8;
- (struct __CVBuffer *)_convertToARGB:(struct __CVBuffer *)fp8;
- (int)_Software_processCVPixelBuffer:(struct __CVBuffer *)fp8 intoCVPixelBuffer:(struct __CVBuffer *)fp12 withHint:(id)fp16;
- (int)_GPU_processCVPixelBuffer:(struct __CVBuffer *)fp8 intoCVPixelBuffer:(struct __CVBuffer *)fp12 withHint:(id)fp16;
- (int)_AuxVideo_processCVPixelBufferIntoCVPixelBuffer:(struct __CVBuffer *)fp8 withHint:(id)fp12;
- (int)processCVPixelBuffer:(struct __CVBuffer *)fp8 intoCVPixelBuffer:(struct __CVBuffer *)fp12 withHint:(id)fp16;
- (void)gammaCorrectBuffer:(struct __CVBuffer *)fp8;
- (void)newRemoteCVPixelBuffer:(struct __CVBuffer *)fp8;
- (int)resizeRemoteVideoForUserID:(id)fp8 outBuffer:(struct __CVBuffer *)fp12;
- (id)frameNotifier;
- (BOOL)backdropsEnabled;
- (NSPoint)inputXY;
- (void)setInputXY:(NSPoint)fp8;

@end

@interface VideoRecordingAdapter : NSObject <FezVideoRecordingAdapter>
{
    FezAVRecorder *_avRecorder;
    NSView *_view;
    int _width;
    int _height;
    OpenGLLayerView *_layerView;
    NSOpenGLContext *_context;
    NSOpenGLPixelBuffer *_nsPixelBuffer;
    FrameReader *_frameReader;
    BOOL _skippedFirstFrame;
}

- (void)_destroyOpenGL;
- (void)_initOpenGL;
- (id)initWithWidth:(int)fp8 height:(int)fp12 layerView:(id)fp16;
- (void)handleVirtualScreenChangedNotificiation:(int)fp8;
- (void)dealloc;
- (void)setAVRecorder:(id)fp8;
- (void)askForFrame;
- (void)newVideoFrameAvailable;
- (void)prepare;
- (void)stop;
- (void)start;
- (NSSize)inputSize;
- (void)newFrameAvailable;

@end

@interface ViewTable : NSView
{
    id _delegate;
    float _rowSpacing;
    int _selectionBehavior;
    BOOL _usesAlternatingRowBackgroundColors;
    float _defaultRowHeight;
    NSColor *_bgColor;
}

- (void)_commonInit;
- (id)initWithFrame:(NSRect)fp8;
- (id)initWithCoder:(id)fp8;
- (void)dealloc;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)setRowSpacing:(float)fp8;
- (float)rowSpacing;
- (void)_setHeight:(float)fp8 inClipView:(id)fp12;
- (void)_clipViewFrameChanged:(id)fp8;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)fp8;
- (void)viewWillMoveToWindow:(id)fp8;
- (void)tile;
- (BOOL)isFlipped;
- (void)setUsesAlternatingRowBackgroundColors:(BOOL)fp8;
- (BOOL)usesAlternatingRowBackgroundColors;
- (void)setDefaultRowHeight:(float)fp8;
- (float)defaultRowHeight;
- (void)setBackgroundColor:(id)fp8;
- (id)backgroundColor;
- (BOOL)isOpaque;
- (void)drawRect:(NSRect)fp8;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)_windowKeyChanged:(id)fp8;
- (void)setSelectionBehavior:(int)fp8;
- (int)selectionBehavior;
- (void)selectionDidChange;
- (void)selectView:(id)fp8;
- (void)selectAll:(id)fp8;
- (void)mouseDown:(id)fp8;
- (id)_nextView:(BOOL)fp8;
- (void)_scrollToVisibleSelectionShowingTop:(BOOL)fp8;
- (void)keyDown:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;

@end

@interface VolumeIndicator : NSView
{
    float _floatValue;
    BOOL _isRemote;
    BOOL _isMute;
    float _opacity;
    NSImage *_onImage;
    NSImage *_offImage;
    NSImage *_muteImage;
    float _numSlices;
    BOOL _proStyle;
}

- (id)_loadScaledImage:(id)fp8;
- (void)_updateNumSlices:(float)fp8;
- (void)_recacheImages;
- (void)setProStyle:(BOOL)fp8;
- (BOOL)proStyle;
- (void)awakeFromNib;
- (void)dealloc;
- (void)setFrameSize:(NSSize)fp8;
- (BOOL)mouseDownCanMoveWindow;
- (void)setFloatValue:(float)fp8;
- (float)floatValue;
- (void)takeFloatValueFrom:(id)fp8;
- (void)setNumberValue:(id)fp8;
- (void)setSamplerLevelValue:(id)fp8;
- (void)setRemote:(BOOL)fp8;
- (BOOL)isRemote;
- (void)setMute:(BOOL)fp8;
- (BOOL)isMute;
- (void)toggleMute:(id)fp8;
- (void)setOpacity:(float)fp8;
- (float)opacity;
- (float)_splicePointFor:(float)fp8;
- (void)_invalidateValue:(float)fp8 to:(float)fp12;
- (void)drawRect:(NSRect)fp8;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (id)accessibilityValueAttribute;

@end

@interface WindowDraggingTabView : NSTabView
{
}

- (void)mouseDown:(id)fp8;

@end

@interface _GetCertificateOp : ExtendedOperation
{
    IMHandle *_imHandle;
    NSLock *_certLock;
}

- (id)initWithIMHandle:(id)fp8;
- (void)dealloc;
- (void)_lockCertRequestMainThread;
- (void)_unlockCertRequest;
- (void)start;
- (void)main;

@end

@interface _GetVCChannelOp : ExtendedOperation
{
    BOOL _findExtIP;
    VCChannel *_channel;
    NSData *_data;
    IMHandle *_imHandle;
}

- (id)initAndFindExternalIP:(BOOL)fp8 withIMHandle:(id)fp12;
- (void)main;
- (void)dealloc;
- (id)data;
- (id)channel;

@end

@interface _MoveRecordedTracksOp : ExtendedOperation
{
    NSMutableArray *_filenames;
    NSString *_trackTitle;
}

- (id)initWithFilenames:(id)fp8 trackTitle:(id)fp12;
- (void)dealloc;
- (id)filenames;
- (id)trackTitle;
- (void)main;

@end

@interface _VCDropRegion : NSView
{
    id _recipient;
    BOOL _highlighted;
    float _opacity;
    Animator *_animator;
    BOOL _needsLayout;
    AbbreviatingTextField *_titleField;
    NSBezierPath *_fillPath;
    NSColor *_fillColor;
    NSShadow *_fillGlow;
    NSBezierPath *_borderPath;
}

- (void)_updateMarquee:(float)fp8;
- (void)_updateLayout;
- (void)setFrameSize:(NSSize)fp8;
- (void)_setTitle;
- (void)setOpacity:(float)fp8;
- (void)drawRect:(NSRect)fp8;
- (void)animator:(id)fp8 doStep:(float)fp12 lastStep:(BOOL)fp16;
- (void)setHighlighted:(BOOL)fp8;
- (BOOL)isHighlighted;
- (void)setRecipient:(id)fp8;
- (id)recipient;
- (id)initWithFrame:(NSRect)fp8;
- (void)dealloc;

@end

@interface _VCInfoColumn : NSTableColumn
{
    NSLevelIndicatorCell *_levelCell;
}

- (id)initWithIdentifier:(id)fp8;
- (void)dealloc;
- (id)dataCellForRow:(int)fp8;

@end

@interface _iTunesCreatePlaylistOp : ExtendedOperation
{
    NSString *_playlistName;
}

- (id)playlistName;
- (void)main;
- (void)dealloc;

@end

/*@interface iChatResourceProtocol : FezResourceURLProtocol
{
}

+ (id)customProtocolScheme;
- (void)resourceDataRequested:(id)fp8;

@end*/

@interface iPhotoBrowser : NSWindowController
{
    ILMediaBrowserView *_browserView;
    NSButton *_okButton;
}

+ (id)sharedBrowser;
- (id)init;
- (void)dealloc;
- (id)browserView;
- (void)_prepareWindow;
- (int)runModal;
- (void)windowDidLoad;
- (void)acceptBrowser:(id)fp8;
- (void)cancelBrowser:(id)fp8;
- (void)mediaBrowserViewSelectionDidChange:(id)fp8;
- (BOOL)mediaBrowserView:(id)fp8 shouldDisplayMediaGroup:(id)fp12;
- (BOOL)mediaBrowserView:(id)fp8 shouldDisplayMediaObject:(id)fp12;
- (BOOL)mediaBrowserView:(id)fp8 shouldSelectMediaObject:(id)fp12;
- (BOOL)mediaBrowserView:(id)fp8 shouldPreviewDoubleClickedItem:(id)fp12;

@end

@interface iTunesAdditionOp : ExtendedOperation
{
    BOOL _didStart;
    ExtendedOperation *_moveOperation;
    ExtendedOperation *_playlistOperation;
}

- (id)initWithFilenames:(id)fp8 trackTitle:(id)fp12;
- (void)dealloc;
- (void)start;
- (void)didChangeValueForKey:(id)fp8;
- (void)main;

@end

@interface iTunesBridge : NSObject
{
    iTunesApplication *_application;
    BOOL _didPause;
}

+ (id)sharedInstance;
- (id)init;
- (void)dealloc;
- (void)resume;
- (void)pause;

@end

